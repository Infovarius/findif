(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    269168,       5575]
NotebookOptionsPosition[    261923,       5349]
NotebookOutlinePosition[    262350,       5367]
CellTagsIndexPosition[    262307,       5364]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 StyleBox[
  RowBox[{"<<", "ACPackages`"}],
  FormatType->StandardForm,
  FontFamily->"Courier New"]], "Input",
 CellChangeTimes->{{3.451890346859375*^9, 3.45189038765625*^9}, {
  3.451891666515625*^9, 3.451891674609375*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetWorkDir", "[", "\"\<2009.08.07\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.425022585908347*^9, 3.4250225895234313`*^9}, {
   3.425025031477498*^9, 3.4250250363109818`*^9}, {3.4250277038437085`*^9, 
   3.4250277050288267`*^9}, {3.425029015628874*^9, 3.425029016514962*^9}, {
   3.425030304910789*^9, 3.4250303050448027`*^9}, {3.4250313613344207`*^9, 
   3.4250313620504923`*^9}, {3.4420398183125*^9, 3.44203982325*^9}, 
   3.442506519962*^9, 3.442564709166*^9, 3.442594016047*^9, {
   3.4426694912300205`*^9, 3.44266949152602*^9}, 3.442824651773*^9, 
   3.4428255890299997`*^9, 3.442831065973*^9, {3.442835587885*^9, 
   3.442835588315*^9}, 3.442835656168*^9, {3.442848703743*^9, 
   3.44284870419*^9}, 3.442849214472*^9, {3.442859968318*^9, 
   3.442859968428*^9}, 3.442915380913*^9, {3.446634531875*^9, 
   3.44663453215625*^9}, {3.44696711775*^9, 3.446967117875*^9}, {
   3.446968573703125*^9, 3.446968573796875*^9}, 3.44696864253125*^9, {
   3.4469691808125*^9, 3.44696918096875*^9}, {3.446969563421875*^9, 
   3.44696956384375*^9}, {3.44696969184375*^9, 3.446969692140625*^9}, {
   3.4469697940625*^9, 3.446969794296875*^9}, {3.44697401996875*^9, 
   3.4469740200625*^9}, {3.44697484865625*^9, 3.446974848765625*^9}, {
   3.4469767365625*^9, 3.44697673815625*^9}, 3.4469799763125*^9, {
   3.446981812375*^9, 3.446981812890625*^9}, 3.44698417646875*^9, {
   3.448693834828125*^9, 3.448693838359375*^9}, {3.448698358140625*^9, 
   3.4486983609375*^9}, {3.44869955790625*^9, 3.448699574375*^9}, {
   3.448705441703125*^9, 3.448705442296875*^9}, {3.44870835909375*^9, 
   3.448708359515625*^9}, 3.44870866940625*^9, 3.448775585671875*^9, 
   3.448778599484375*^9, 3.448953495796875*^9, 3.4489589375*^9, {
   3.44895995690625*^9, 3.448959971578125*^9}, {3.44930914078125*^9, 
   3.449309140828125*^9}, {3.449387206453125*^9, 3.449387206734375*^9}, {
   3.449389728875*^9, 3.449389728921875*^9}, {3.449466991828125*^9, 
   3.449466992015625*^9}, {3.44965180134375*^9, 3.4496518014375*^9}, {
   3.45023580075*^9, 3.45023580203125*^9}, {3.45041602590625*^9, 
   3.450416025953125*^9}, {3.45896822878125*^9, 3.4589682305*^9}}],

Cell[BoxData["\<\"d:\\\\home\\\\Anton\\\\programs\\\\tor2d\\\\2009.08.07\"\>"]\
, "Output",
 CellChangeTimes->{{3.449651788171875*^9, 3.449651802140625*^9}, 
   3.449823442375*^9, {3.44990086465625*^9, 3.449900866421875*^9}, 
   3.449907877734375*^9, 3.44998994740625*^9, 3.450071364625*^9, 
   3.450235802546875*^9, 3.450236046375*^9, 3.450413883375*^9, 
   3.450413942484375*^9, 3.450416026296875*^9, 3.45896823103125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetWorkDir", "[", "\"\<2009.11.12\\\\Re1\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.44965058809375*^9, 3.449650594859375*^9}, {
  3.451890120796875*^9, 3.45189012115625*^9}, {3.46700837461875*^9, 
  3.46700837930625*^9}}],

Cell[BoxData["\<\"D:\\\\Home\\\\Anton\\\\programs\\\\tor2d\\\\2009.11.12\\\\\
Re1\"\>"], "Output",
 CellChangeTimes->{{3.449650590078125*^9, 3.44965059515625*^9}, 
   3.45189012159375*^9, 3.451890628703125*^9, 3.45189141465625*^9, 
   3.45189167665625*^9, 3.451892178015625*^9, 3.4518935506875*^9, 
   3.45189372025*^9, 3.46700837968125*^9, 3.4670266075875*^9, 
   3.467089590290625*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetWorkDir", "[", "\"\<Run\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.424418194841*^9, 3.424418195785*^9}, {
   3.4244930876432*^9, 3.4244930897804003`*^9}, {3.424578351766*^9, 
   3.424578366297*^9}, {3.424579414424*^9, 3.424579414869*^9}, 
   3.4245824862320004`*^9, {3.424583779939*^9, 3.4245837800480003`*^9}, {
   3.4245873321610003`*^9, 3.424587332262*^9}, {3.424684568447*^9, 
   3.424684570375*^9}, {3.445842940640625*^9, 3.445842942703125*^9}, {
   3.44921668853125*^9, 3.449216693265625*^9}, {3.450423280015625*^9, 
   3.450423280171875*^9}, {3.4504234279375*^9, 3.450423429296875*^9}, {
   3.45188498025*^9, 3.451884982125*^9}, {3.459053516859375*^9, 
   3.4590535230625*^9}, {3.4590544165*^9, 3.459054420875*^9}, {
   3.459063352078125*^9, 3.459063352140625*^9}, {3.500797781265625*^9, 
   3.50079778178125*^9}}],

Cell[BoxData["\<\"d:\\\\home\\\\Anton\\\\programs\\\\tor2D\\\\Run\"\>"], \
"Output",
 CellChangeTimes->{
  3.449216693546875*^9, 3.449217789125*^9, 3.44929209590625*^9, 
   3.450423280453125*^9, 3.451884985234375*^9, 3.459053523375*^9, 
   3.45905442121875*^9, 3.459055450859375*^9, 3.4590557870625*^9, 
   3.45905602396875*^9, 3.45906013234375*^9, 3.45906241534375*^9, 
   3.4590633523125*^9, {3.500797783953125*^9, 3.500797787359375*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetDirectory", "[", 
  "\"\<d:\\\\home\\\\anton\\\\programs\\\\tor2d\\\\tor\\\\Debug\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.44920362571875*^9, 3.4492036365625*^9}}],

Cell[BoxData["\<\"d:\\\\home\\\\anton\\\\programs\\\\tor2d\\\\tor\\\\Debug\"\>\
"], "Output",
 CellChangeTimes->{3.4492036370625*^9, 3.449471272265625*^9, 
  3.44965241034375*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetWorkDir", "[", "\"\<tor2d/Debug\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.448272186084875*^9, 3.448272197834875*^9}, 
   3.448953489046875*^9, {3.4670212952125*^9, 3.467021304009375*^9}, {
   3.4723776795907*^9, 3.4723776829307003`*^9}}],

Cell[BoxData["\<\"D:\\\\programs\\\\icmm\\\\tor2D\\\\tor2d\\\\Debug\"\>"], \
"Output",
 CellChangeTimes->{
  3.4482721981005*^9, 3.448353260866125*^9, 3.4489534895625*^9, {
   3.467021296540625*^9, 3.467021304259375*^9}, 3.4723778059807*^9, 
   3.4724577245507*^9, 3.4725415790952234`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"AverageTimeProfil", "[", 
    RowBox[{"l_List", ",", "t_", ",", 
     RowBox[{"dt_:", "1"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"Apply", "[", 
       RowBox[{"Plus", ",", "#"}], "]"}], 
      RowBox[{"Length", "[", "#", "]"}]], "&"}], "[", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "&"}], ",", 
      RowBox[{"Select", "[", 
       RowBox[{"lv", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"t", "\[LessEqual]", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "<", 
           RowBox[{"t", "+", "dt"}]}], ")"}], "&"}]}], "]"}]}], "]"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"UnsortedUnion", "[", 
     RowBox[{"x_", ",", 
      RowBox[{"ndig_:", "4"}]}], "]"}], ":=", 
    RowBox[{"N", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Reap", "[", 
        RowBox[{
         RowBox[{"Sow", "[", 
          RowBox[{"1", ",", 
           RowBox[{"Round", "[", 
            RowBox[{
             SuperscriptBox["10", "ndig"], "x"}], "]"}]}], "]"}], ",", "_", 
         ",", 
         RowBox[{"#1", "&"}]}], "]"}], "\[LeftDoubleBracket]", "2", 
       "\[RightDoubleBracket]"}], 
      SuperscriptBox["10", 
       RowBox[{"-", "ndig"}]]}], "]"}]}], ";"}],
  FontSize->10]}], "Input"],

Cell[CellGroupData[{

Cell["\:041e\:0431\:0449\:0438\:0435 \:0442\:0435\:043d\:0434\:0435\:043d\
\:0446\:0438\:0438", "Section",
 CellChangeTimes->{{3.4421345988125*^9, 3.44213460196875*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"Thread", "::", "tdlen"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"lv", "=", 
   RowBox[{"ReadList", "[", "\"\<vv.dat\>\"", "]"}]}], ";", 
  RowBox[{"lv", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"#", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}],
        "}"}], "&"}], ",", "lv"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ltm", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"First", "/@", "lv"}], "]"}]}], ";"}], "\n", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Length", "[", "ltm", "]"}], ",", 
   RowBox[{"Last", "[", "ltm", "]"}]}], "}"}]}], "Input",
 CellChangeTimes->{3.424685820527*^9, 3.4250326312483997`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2517", ",", "2.60616119`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.42468550095*^9, 3.4246858318570004`*^9, {3.425032632065481*^9, 
   3.425032639594234*^9}, 3.442047061*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Scan", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"PrintRange", "[", 
      RowBox[{"#", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0.007"}], "}"}]}], "]"}], "]"}], "&"}], ",", 
   RowBox[{"CutList", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"WithoutFict", "[", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", "3"}], "]"}], "&"}], "/@", 
      "lv"}], ",", "20"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.424685520293*^9, 3.424685532217*^9}, {3.424685585785*^9,
   3.4246856460480003`*^9}, {3.424685690402*^9, 3.4246857302209997`*^9}, {
  3.44204713596875*^9, 3.442047240421875*^9}, {3.442047332234375*^9, 
  3.4420473501875*^9}, {3.44204805*^9, 3.4420480749375*^9}, {
  3.44204842021875*^9, 3.442048441234375*^9}}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"First", "[", "#", "]"}], ",", 
      RowBox[{"Max", "[", 
       RowBox[{"WithoutFict", "@", 
        RowBox[{"Last", "[", "#", "]"}]}], "]"}]}], "}"}], "&"}], "/@", 
   "lv"}], "]"}]], "Input",
 CellChangeTimes->{
  3.4246855081949997`*^9, {3.4246857692860003`*^9, 3.424685799579*^9}}],

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<energy0.dat\>\"", ",", 
   RowBox[{"Transpose", "@", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", "ltm", "}"}], ",", 
      RowBox[{"len", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
      RowBox[{"Map", "[", 
       RowBox[{"Last", ",", 
        RowBox[{"{", 
         RowBox[{
         "mp", ",", "mdp", ",", "mvx", ",", "mdvx", ",", "mvy", ",", "mdvy", 
          ",", "mvz", ",", "mdvz", ",", "qp", ",", "qvx", ",", "qvy", ",", 
          "qvz"}], "}"}], ",", 
        RowBox[{"{", "2", "}"}]}], "]"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4119212950629997`*^9, 3.4119213045950003`*^9}, {
   3.411921341668*^9, 3.411921369223*^9}, {3.4244960395376*^9, 
   3.4244960401186*^9}, 3.4244961868966*^9, {3.4244965067005997`*^9, 
   3.4244965268866*^9}, {3.450004467625*^9, 3.4500044705*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<energy0.dat\>\"", ",", 
   SuperscriptBox["len", "\[Transpose]"]}], "]"}]], "Input",
 CellChangeTimes->{{3.4500045368125*^9, 3.45000453934375*^9}}],

Cell[BoxData["\<\"energy0.dat\"\>"], "Output",
 CellChangeTimes->{3.45000455709375*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "/@", 
  RowBox[{"{", 
   RowBox[{"ltm", ",", "len", ",", "mp"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.450004485828125*^9, 3.450004492078125*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "78394", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "78394"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"78394", ",", "2"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.450004492421875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FileNames", "[", "\"\<en*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.442312569578125*^9, 3.44231258234375*^9}}],

Cell[BoxData[
 RowBox[{"{", "\<\"energy.dat\"\>", "}"}]], "Output",
 CellChangeTimes->{{3.4423125789375*^9, 3.442312582578125*^9}, 
   3.442647078409*^9, 3.44584063021875*^9, 3.44696712225*^9, 
   3.44696857740625*^9, 3.446968647890625*^9, 3.446984202828125*^9, 
   3.448693841703125*^9, 3.448699577296875*^9, 3.44921669709375*^9, 
   3.449292176484375*^9, 3.44929855578125*^9, 3.449387220734375*^9, 
   3.449387480640625*^9, 3.449389731609375*^9, 3.449823452984375*^9, {
   3.4499008575*^9, 3.4499008684375*^9}, 3.44991081671875*^9, 
   3.44998994978125*^9, 3.45007136721875*^9, 3.450235810421875*^9, 
   3.500797798015625*^9}]
}, Open  ]],

Cell["\<\
Import[\"en.zip\", \"energy.dat\", \"Elements\" -> \"Table\"]
Import[\"energy.dat\", \"Table\"]\
\>", "Text",
 CellChangeTimes->{{3.44835226634375*^9, 3.448352275*^9}, {
   3.450071380640625*^9, 3.450071394734375*^9}, 3.45905445121875*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"len", "=", 
   SuperscriptBox[
    RowBox[{"Fold", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
          "#2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ">", 
          RowBox[{"#1", "\[LeftDoubleBracket]", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1"}], "\[RightDoubleBracket]"}]}], ",", 
         RowBox[{"Append", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], ",", "#1"}], "]"}], "&"}], ",", 
      RowBox[{"{", 
       RowBox[{"First", "[", 
        SuperscriptBox["len", "\[Transpose]"], "]"}], "}"}], ",", 
      SuperscriptBox["len", "\[Transpose]"]}], "]"}], "\[Transpose]"]}], 
  ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dynamic", "[", 
  RowBox[{"Refresh", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"len", "=", 
        RowBox[{"Transpose", "[", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"Import", "[", 
            RowBox[{"\"\<energy.dat\>\"", ",", "\"\<Table\>\""}], "]"}], ",", 
           RowBox[{
            RowBox[{"0", "<", 
             RowBox[{"First", "[", "#", "]"}]}], "&"}]}], "]"}], "]"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"ltm", "=", 
        RowBox[{"First", "[", "len", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"PrintRange", "[", 
        RowBox[{
         RowBox[{"dif", "[", 
          RowBox[{"Union", "[", "ltm", "]"}], "]"}], ",", "All", ",", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"20", 
             RowBox[{"Length", "[", "ltm", "]"}]}], ",", 
            RowBox[{"Last", "[", "ltm", "]"}]}], "}"}]}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "mp", ",", "mdp", ",", "mvx", ",", "mdvx", ",", "mvy", ",", "mdvy", 
          ",", "mvz", ",", "mdvz", ",", "qp", ",", "qvx", ",", "qvy", ",", 
          "qvz"}], "}"}], "=", 
        RowBox[{
         RowBox[{
          RowBox[{"Union", "[", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{"ltm", ",", "#"}], "}"}], "]"}], "]"}], "&"}], "/@", 
         RowBox[{"Drop", "[", 
          RowBox[{"len", ",", "2"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"PrintRange", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
              "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              "/", "3"}], ",", 
             RowBox[{"Log", "[", 
              RowBox[{"10", ",", 
               RowBox[{
               "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
              "]"}]}], "}"}], "&"}], "/@", 
          RowBox[{"(", 
           RowBox[{"qvx", "+", "qvy", "+", "qvz"}], ")"}]}], ",", "Automatic",
          ",", 
         RowBox[{"PlotLabel", "\[Rule]", 
          SqrtBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{"qvx", "+", "qvy", "+", "qvz"}], ")"}], 
            "\[LeftDoubleBracket]", 
            RowBox[{
             RowBox[{"-", "1"}], ",", 
             RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}]]}]}], "]"}]}]}], 
     "}"}], "\[IndentingNewLine]", ",", 
    RowBox[{"UpdateInterval", "\[Rule]", "1"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.44827221725675*^9, 3.448272274866125*^9}, {
   3.448272421647375*^9, 3.448272518772375*^9}, {3.449823458359375*^9, 
   3.449823459125*^9}, {3.449900906796875*^9, 3.44990092125*^9}, {
   3.449910772203125*^9, 3.449910774609375*^9}, 3.500803305859375*^9}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   Refresh[{$CellContext`len = Transpose[
        Select[
         Import["energy.dat", "Table"], 0 < First[#]& ]]; $CellContext`ltm = 
      First[$CellContext`len]; ACPackages`ACGraphics`PrintRange[
       ACPackages`ACListNumerics`dif[
        Union[$CellContext`ltm]], All, 
       PlotLabel -> {20 Length[$CellContext`ltm], 
         Last[$CellContext`ltm]}], {$CellContext`mp, $CellContext`mdp, \
$CellContext`mvx, $CellContext`mdvx, $CellContext`mvy, $CellContext`mdvy, \
$CellContext`mvz, $CellContext`mdvz, $CellContext`qp, $CellContext`qvx, \
$CellContext`qvy, $CellContext`qvz} = Map[Union[
         Transpose[{$CellContext`ltm, #}]]& , 
        Drop[$CellContext`len, 2]]; ACPackages`ACGraphics`PrintRange[
       Map[{Part[#, 1]/3, 
         Log[10, 
          
          Part[#, 2]]}& , $CellContext`qvx + $CellContext`qvy + \
$CellContext`qvz], Automatic, PlotLabel -> 
       Part[$CellContext`qvx + $CellContext`qvy + $CellContext`qvz, -1, -1]^
        Rational[1, 2]]}, UpdateInterval -> 1], StandardForm],
  ImageSizeCache->{425., {68., 72.}}]], "Output",
 CellChangeTimes->{{3.500803302734375*^9, 3.50080330640625*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"len", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"Import", "[", 
       RowBox[{"\"\<energy.dat\>\"", ",", "\"\<Table\>\""}], "]"}], ",", 
      RowBox[{
       RowBox[{"0", "<", 
        RowBox[{"First", "[", "#", "]"}], "<", "100"}], "&"}]}], "]"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ltm", "=", 
   RowBox[{"First", "[", "len", "]"}]}], ";", 
  RowBox[{"PrintRange", "[", 
   RowBox[{
    RowBox[{"dif", "[", 
     RowBox[{"Union", "[", "ltm", "]"}], "]"}], ",", "All", ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"100", 
        RowBox[{"Length", "[", "ltm", "]"}]}], ",", 
       RowBox[{"Last", "[", "ltm", "]"}]}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "mp", ",", "mdp", ",", "mvx", ",", "mdvx", ",", "mvy", ",", "mdvy", ",", 
     "mvz", ",", "mdvz", ",", "qp", ",", "qvx", ",", "qvy", ",", "qvz"}], 
    "}"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Union", "[", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"ltm", ",", "#"}], "}"}], "]"}], "]"}], "&"}], "/@", 
    RowBox[{"Drop", "[", 
     RowBox[{"len", ",", "2"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"PrintRange", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        "/", "3"}], ",", 
       RowBox[{"Log", "[", 
        RowBox[{"10", ",", 
         RowBox[{
         "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
        "]"}]}], "}"}], "&"}], "/@", 
    RowBox[{"(", 
     RowBox[{"qvx", "+", "qvy", "+", "qvz"}], ")"}]}], ",", "Automatic", ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    SqrtBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"qvx", "+", "qvy", "+", "qvz"}], ")"}], "\[LeftDoubleBracket]", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}]]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.424420539773*^9, 3.424420547672*^9}, {3.424420707809*^9,
    3.424420713389*^9}, {3.424420759052*^9, 3.4244207703389997`*^9}, 
   3.4244964698046*^9, {3.4244965404196*^9, 3.4244965907646*^9}, {
   3.424672039992*^9, 3.424672040644*^9}, {3.424685877091*^9, 
   3.424685898726*^9}, {3.4246860599700003`*^9, 3.424686089901*^9}, {
   3.4250226403256674`*^9, 3.4250226474017897`*^9}, {3.4250279418905106`*^9, 
   3.4250279748438053`*^9}, {3.425028351671485*^9, 3.4250283528966074`*^9}, {
   3.4420462538125*^9, 3.442046254796875*^9}, {3.442048608265625*^9, 
   3.44204860865625*^9}, {3.44205356553125*^9, 3.44205356628125*^9}, {
   3.4423126648125*^9, 3.442312680359375*^9}, {3.442318168484375*^9, 
   3.442318170390625*^9}, {3.4425015690810003`*^9, 3.4425015717539997`*^9}, 
   3.44250279999*^9, {3.442504533707*^9, 3.4425045570290003`*^9}, {
   3.442505197054*^9, 3.442505219318*^9}, {3.4425054209849997`*^9, 
   3.4425054225360003`*^9}, {3.442505601201*^9, 3.442505603276*^9}, {
   3.442505798258*^9, 3.442505800084*^9}, 3.4425065238059998`*^9, 
   3.4425065953199997`*^9, 3.442506774941*^9, {3.442507420257*^9, 
   3.442507436237*^9}, {3.4425080223050003`*^9, 3.442508042734*^9}, {
   3.442508112755*^9, 3.442508123516*^9}, {3.442508278344*^9, 
   3.442508279571*^9}, 3.442508681082*^9, {3.442508714898*^9, 
   3.4425087159779997`*^9}, {3.442509097354*^9, 3.442509115538*^9}, 
   3.4425091561*^9, 3.442509252835*^9, 3.442509310083*^9, 3.442509938058*^9, {
   3.442509980337*^9, 3.442509981443*^9}, {3.442510199034*^9, 
   3.442510247355*^9}, 3.4425110774*^9, {3.4425112942530003`*^9, 
   3.442511307491*^9}, {3.442511348616*^9, 3.442511349451*^9}, 
   3.4425115583310003`*^9, {3.4425116599820004`*^9, 3.442511660921*^9}, 
   3.442511717558*^9, {3.442512200615*^9, 3.4425122011619997`*^9}, {
   3.44251223701*^9, 3.442512238117*^9}, 3.442512555877*^9, 
   3.4425128875220003`*^9, 3.442514001566*^9, 3.44256471477*^9, 
   3.4426384774110003`*^9, 3.442639268377*^9, {3.442641432568*^9, 
   3.442641433236*^9}, {3.442641835356*^9, 3.4426418372720003`*^9}, 
   3.442642205058*^9, {3.442646594682*^9, 3.4426465954*^9}, {
   3.442647040994*^9, 3.4426470828789997`*^9}, {3.44264793402*^9, 
   3.442647934867*^9}, {3.4426488865690002`*^9, 3.442648886749*^9}, 
   3.442649348238*^9, {3.4426493890179996`*^9, 3.4426493899700003`*^9}, 
   3.44265027317*^9, {3.44265044346*^9, 3.4426504742539997`*^9}, {
   3.442650764574*^9, 3.4426507817720003`*^9}, {3.4428246783129997`*^9, 
   3.442824679712*^9}, {3.442825593979*^9, 3.442825611593*^9}, {
   3.442826304251*^9, 3.4428263061*^9}, 3.442826507415*^9, {
   3.4428307511610003`*^9, 3.442830752031*^9}, {3.44283107015*^9, 
   3.442831070665*^9}, {3.442831619543*^9, 3.442831620138*^9}, 
   3.4428346265030003`*^9, {3.4428351738570004`*^9, 3.4428351744309998`*^9}, {
   3.4428365579779997`*^9, 3.4428365583129997`*^9}, {3.442853403668*^9, 
   3.4428534040480003`*^9}, 3.44285369695*^9, {3.44584066375*^9, 
   3.445840664125*^9}, {3.4458407186875*^9, 3.4458407191875*^9}, {
   3.445840853984375*^9, 3.44584085521875*^9}, 3.445843044375*^9, {
   3.445843246828125*^9, 3.445843247234375*^9}, {3.445844257*^9, 
   3.445844257140625*^9}, {3.448352972538*^9, 3.4483529916005*^9}, {
   3.448694549109375*^9, 3.448694560546875*^9}, {3.448696574015625*^9, 
   3.448696575890625*^9}, {3.4486981549375*^9, 3.44869815709375*^9}, {
   3.448708845234375*^9, 3.44870884571875*^9}, {3.448709462359375*^9, 
   3.4487094626875*^9}, {3.44877703125*^9, 3.44877703184375*^9}, {
   3.4487774285625*^9, 3.44877742890625*^9}, {3.44878377809375*^9, 
   3.448783779171875*^9}, {3.448955335828125*^9, 3.448955336546875*^9}, {
   3.448955796*^9, 3.4489557978125*^9}, {3.448958334796875*^9, 
   3.448958337421875*^9}, {3.448958455515625*^9, 3.448958458015625*^9}, {
   3.44895854878125*^9, 3.448958552203125*^9}, 3.448958941453125*^9, {
   3.44895905065625*^9, 3.44895905071875*^9}, {3.4489591439375*^9, 
   3.448959146078125*^9}, {3.44895923565625*^9, 3.448959238578125*^9}, {
   3.448959301125*^9, 3.448959305109375*^9}, {3.448959353078125*^9, 
   3.448959355578125*^9}, {3.44895940759375*^9, 3.4489594100625*^9}, {
   3.448959975265625*^9, 3.448959979765625*^9}, {3.44896093871875*^9, 
   3.44896093884375*^9}, {3.44896115240625*^9, 3.448961156625*^9}, {
   3.44896353146875*^9, 3.44896353165625*^9}, {3.44896374259375*^9, 
   3.448963743015625*^9}, 3.449203645671875*^9, {3.4492118018125*^9, 
   3.4492118168125*^9}, {3.4492122759375*^9, 3.44921228315625*^9}, {
   3.44921680759375*^9, 3.449216843125*^9}, 3.449217611546875*^9, 
   3.44929218046875*^9, {3.449295434734375*^9, 3.44929546225*^9}, {
   3.449296950953125*^9, 3.4492969510625*^9}, {3.449297002046875*^9, 
   3.44929700490625*^9}, {3.449297185453125*^9, 3.449297187703125*^9}, {
   3.44929729690625*^9, 3.449297300375*^9}, {3.449297468234375*^9, 
   3.449297471046875*^9}, {3.449297553953125*^9, 3.4492975564375*^9}, {
   3.449297641921875*^9, 3.449297645671875*^9}, {3.449299009359375*^9, 
   3.449299014265625*^9}, {3.44982346515625*^9, 3.449823465421875*^9}, {
   3.449907878453125*^9, 3.449907888359375*^9}, {3.4499107680625*^9, 
   3.44991076996875*^9}, {3.4499959683125*^9, 3.4499959696875*^9}, {
   3.449996211296875*^9, 3.44999621390625*^9}, {3.449998746234375*^9, 
   3.449998750296875*^9}, {3.45007137253125*^9, 3.450071375453125*^9}, 
   3.45023583675*^9, 3.450236135609375*^9, {3.45023622740625*^9, 
   3.450236227453125*^9}, {3.45023656240625*^9, 3.4502365649375*^9}, {
   3.45041388878125*^9, 3.45041389415625*^9}, {3.45041413715625*^9, 
   3.450414137734375*^9}, {3.45041417090625*^9, 3.450414181234375*^9}, {
   3.450415025359375*^9, 3.4504150275625*^9}, {3.45041540059375*^9, 
   3.450415403328125*^9}, {3.450416030171875*^9, 3.45041603640625*^9}, {
   3.450416279515625*^9, 3.45041628184375*^9}, {3.450416388359375*^9, 
   3.450416390578125*^9}, {3.45042328396875*^9, 3.450423290859375*^9}, 
   3.458968236234375*^9, 3.4590535314375*^9, {3.459054455*^9, 
   3.45905450815625*^9}, {3.459061562640625*^9, 3.459061565078125*^9}, {
   3.4590616566875*^9, 3.459061658890625*^9}, {3.45906337284375*^9, 
   3.45906340934375*^9}, {3.4590637503125*^9, 3.459063758140625*^9}, {
   3.4590638070625*^9, 3.459063810453125*^9}, {3.45906389884375*^9, 
   3.45906390946875*^9}, {3.467008391978125*^9, 3.467008420759375*^9}, {
   3.467008476165625*^9, 3.467008476478125*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MapThread", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"PrintRange", "[", 
     RowBox[{"#1", ",", "Automatic", ",", 
      RowBox[{"PlotLabel", "\[Rule]", "#2"}]}], "]"}], "&"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
           ",", 
          RowBox[{"10", "^", 
           RowBox[{"Log", "[", 
            RowBox[{"10", ",", 
             RowBox[{
             "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
            "]"}]}]}], "}"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{"mvx", ",", "mvy", ",", "mvz", ",", "mp"}], "}"}], ",", 
       RowBox[{"{", "2", "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Maximum of vr\>\"", ",", "\"\<Maximum of v\[Phi]\>\"", ",", 
       "\"\<Maximum of vz\>\"", ",", "\"\<Maximum of p\>\""}], "}"}]}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.424420723317*^9, 3.424420739101*^9}, {3.424420996659*^9,
    3.4244209978710003`*^9}, {3.424426291634*^9, 3.4244262919700003`*^9}, {
   3.424577710207*^9, 3.4245777378780003`*^9}, {3.425025161381488*^9, 
   3.425025161765526*^9}, {3.4250284506653833`*^9, 3.425028451626479*^9}, {
   3.442648353038*^9, 3.4426483535950003`*^9}, {3.446967508484375*^9, 
   3.446967534515625*^9}, {3.448694013390625*^9, 3.44869401484375*^9}, 
   3.449212267578125*^9, 3.449212319390625*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
TzVEaEUP8FNyFCDBUG7oiPMQcWeWUbBIqgBRZ9xbLmYMEcQ9xdDbbgWgPi+5
bMwxTDBo+TXvLihAPUNH/qHKYWLOUI9cZakAv6veUD/THyG0Xt7z0eV6j6DR
LRelfyNE3L63egv27+G2Om9x6t0okaJz8z+u/Pfws0qhStMdI8qMrhZcWn0P
FxtrBwvGcWLh1Yhcm1ghqhwKN3Q6xwlrHeu/bI8L8UlI4NREwgTBUdmwn7Wh
EEYlqm/vOk8Sqa/WOr8yfQBH5VSOhsoUQcZ+rZDC+AOikxlWPwlNE8L9mb+/
537AYe1I4Tr2GSJCmInZkqwIR+sO+9mdniW07ebkklWKcP4V+xj/uTniB4VN
YUJKEfZMC2VWiMwTfmcsjzxdL4K6dY7XUe0FYlKNLPa+cjHKgpyHWHwWiZR5
JVXBt8V4VU/MGegsEZyzOdbia8VQq/pWZji7RBwefXKTT/o/ZGvGXRxz/UH0
MS5Z9/n/B1HRPvL2jR/ELfP0sulv/yHNjWTD4rpMPHV7/4Rpdwkiltt+VE4u
E7adXR5nxUogcrNDtOHGCmFrPJU6almCuoRfek7pK0SmZ1DIoZcl+B3ts/Jj
fYWQ/Mv9JaCgBJkvRKkCxH8SF8adj9E0lUDrV0dkxJ2fRGKNnL3hcAmYubx0
bKN+EvWPrvzenCvBYSd90bacn8T+8zu3ppdKEKO7r7m06Cfx1d4n7ezvEihd
FTqr8/Un8fZ7qSbNrlIw/2q3dxz6SUjdMiqiPVwKplf3bMkofxEtYu+7H/CU
Yrcmd1K96C9iRoidLFClFBc+3Fc1vv+LGO69e0LGvRT8SQ9FDjT8IlRIgjGZ
b0pRI7fMzHFhlbiYXhlX31OKwxTJjTSRq0RPBOmVN2MZbp78Rt3KsEbsTbMm
b9Eow8O3U9Hf49aIOS7/lOy4MvAnrmxf138Ts6eK1Ydny9DJJUiL0d/EwMsD
xjclP4Jp2lWSMX6dWM/3Py4Y+xErM5c2D1ptEKSRVxZefz9CK7x/WUfuD3G7
1Znqjkk5LuQ8oT4l+pfQZTlherS5HOStP+wvC20SXuxeDF9EPiFEQ1vrk8gW
4dFXdOp+yidEJLSKfL78jzAczdNOpazA0PAvmXx2Mhj9uKZ5VqICcu4/bpjn
kcG07W5QmWMFcm41xE9L7MCudbMbFmkV6FZa1GVr3IEePmZ99sEKdO15yLHH
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
CZsObYtpVNqPbqnkWEJ49xUd5nvTmKdTZb7ea4lrV+Op1UKmUX/9+OYNGiuQ
bn1JMUubhp68Wqy7lBUitAR9dldOo9RbV9jknhU8H4jics80XFpWS6MKrPAr
io5qbWka1vwL6rUzVqD6YBrJSjUDhZt7OUdPWQOyCbs/n5jBY+E/LUMa1vi9
M661g38Gkm6mZUX+1qj/6/5WU34GH2v2ddwqs4bGFZUuKYOZ7f+6I/pN89YY
IFk7RTjNQKNMOf83sw1o1yIYrz+dgVp0wsVmRRucaMkrN46ZwU+J3Uxyd21w
9dE1/c7MGVw4JMGo+dYGdqt+oUnl2/H+dpottdig8xtbXXXzDD7oK4ZTbdhg
SvS5tcDQDAJMPvKHsNiCy7u/enlxBq1HjufOX7VFDc0/29WtGcx+OSSfbGsL
ayuvGnGaWbAdz1wJCrGF5mtmisqjswjeQx2XVGALD9q53Z7sszirElfd2m4L
u38sDnf4ZsHdkOhNvWyL7Ii+ijBiFhL1U1pXaO3QOVGRNiY3ixiyf68dz9lh
rfSPhr7qLEKSbjz0lrTDQvz372u6sxiQYP9uqWmH3F+phflGszCc1Bw4amWH
P6xih55azsIz3izT554dkvZqx9jbz2K4L1oz6pkdBuwUv5o5z2JOX/nulUg7
rAjvfWXqPguanupf9xLtcEVrTcLo3iwGmWSjTryzw/7ZmywKD2YhE9VbSZZt
B1ojfaedD2cxvg9lvTnbev96G9F6zsLJ5/SGd74dOC5oicw8msXdCBNjmSI7
VCRoNSQ8noXCwZh/AuV28KdmW+V/OgtbrfAKgxo7NKVaBKUGzCIibzP8c5sd
qB/UO/0OngVr++PdpkN2uH7x7MrZyO11GiZ3ySU7WAU88uWNn0VY7nYPye2x
t3hE8ujbWVRUU1inMdmjONx8qi97FpR/dCm4L9nj8vB9b5fiWdwZVLswK2uP
wk8578artv3PsDHtvm2P3M/WWceaZiGgq5Tb9MAeQ3/LZ2S7ZkH3jmaXT7g9
yqaofcL6ZnHbl78+PcEev4LmQ3q/z0Lcmny4LMMevAyDH5MnZ/EwIK1n9pM9
Vo/f4xpdnkVo60Eq5gF70OtuUP8hm0PEO4b472QOmKny6TtBN4cXEbwCEYwO
UHy/cHTPqTlUJoRo6Jx3AKNbEd0H7jmIT4fPs8EB06lHz7JKzWHgfUfthoYD
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

       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    PlotLabel->FormBox["\"Maximum of vr\"", TraditionalForm],
    PlotRange->{{0., 3.998644572}, {0., 0.05318231233000002}},
    PlotRangeClipping->True,
    PlotRangePadding->{
      Scaled[0.02], 
      Scaled[0.02]}], ",", 
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
dbU1
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    PlotLabel->FormBox["\"Maximum of v\[Phi]\"", TraditionalForm],
    PlotRange->{{0., 3.998644572}, {0., 0.898497309}},
    PlotRangeClipping->True,
    PlotRangePadding->{
      Scaled[0.02], 
      Scaled[0.02]}], ",", 
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
4x6c2YaHXpW6CvyRUMMityV/eRvKJj9m+UpEwqs+fiO269sQVyRn1KwUCarS
9w6NPd0GFjNdwX06kfCk76zcf/7bQDW3GTK7HgmLknvtIpK24YDezErK40iw
G7a3v5+7DawFc+49Hrv5WD8J5S/bkNXs1rY/IhLMOGXUODu2ITTrloN+eiTg
vI/fmJnchj+q518G5EcCpjjZvmZzG1b60vaUVUbCehZZ/+WeHfj1b+XQ3x+R
cFjuxLDrkR3wCJGKOjAYCdjJzZKrcjuQ0p3CofEvEtyI5DtSWjswcfFQjw0m
CpbaOkgsN3cgwpmhJmJPFHAUC4dO2+9A2M9iscLDUUAWmOeuC9yBhiL58R9S
UfBQoZb1VcoOBJpnZ0+iKND8k1Tgl78DvvGxW3T6UfBlwKbhzrcdKJlSCua5
FQX+J5eKznfuwKq9AqPY0yj4x0xtPjSzAw+FMgelvaOApffMHYadHVjCXbmp
GBUFw6qiNt7MGDSSmUO8Rtnl97RX3Y4Tg3i+ez4xK4gCPa4HMXf4MUiZeLLg
2pcocBAMfWp4FIN+Y58lGrZGweuP55kvSO/GH6xdtIeiAL/HPkDuHAYdKA88
rLIQBQkDX6fF1TGIO+H5WUm6aFgoKAMBXQxqcb8+sZ8jGpi1Ky5zmGLQ1cvp
XXSC0WCxuCyEu4NBa1a3QiekoiFGVDt9xQaD7IRPidSiaJjQlDow44BBZzTo
aGS9aAhPSIoe8MKgQ41lMi43o+G6BrvOrxAMolpmftZ+Eg3oRIt4QywGmSh3
RR/0ioYhg3yW/9IwKGNzqXAsIhrqU52ZC7MwiCxum5qbHg0zbTKuWR8wiFPI
Ou5pfjSMud2zSq3AoFAW+3rJymj4bmuoGVOLQUfbDoVPtURDfJlLXfBPDNL2
z05P64+GueMCW15/dv2w0Q3Qm4uGpNEjfx1GMejhb9zLza1o0DTwqnk0h0Gt
ft/aXxJjIHSPaP/dVQwq+Hvm+wX+GOiz+HfanJ4OrSbFDE6ciIGeInKCIYEO
BavXHfFTjIHiVPYdTW46NGWpT+HVioFWiau8aofp0Ih47bUssxjw2XDtUBSn
Q5o/6Umy1jFQt3wjWPY0HcLcsiT95xIDT0tx6xLKdGjO1tsShcSA/qOfsaIX
6RAl4Z/B56QYqOF9dlDQgA7t880Lks+OgQatpdd85nQooJiskfcxBr6/72Dj
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
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    PlotLabel->FormBox["\"Maximum of vz\"", TraditionalForm],
    PlotRange->{{0., 3.998644572}, {0., 0.03479777485000001}},
    PlotRangeClipping->True,
    PlotRangePadding->{
      Scaled[0.02], 
      Scaled[0.02]}], ",", 
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwUV3c8Fe4bFb5GIcqIiuyKSEmEexRCKhVSRmWUkBFZobJH9nbtkb1HRJGk
lL2zufZeRaX08/vrfs7ned/nOec8997Pe7gNLG/cJycjI3tHRUb2/8+V7duy
GSqs6GR7GtD+TF82UWnvRgkdL5q3gnXvxobKNqjmPAoWP44/LlRiPNGFstLD
vwWfWYnhzknVOePJL7KnJEfPxvyTALEoy5ndbFw2se5uy2V5AoRrc2R/Vf6R
feH22/bErDx4GgueurCyEHZLeaeqMqngm/wTHoOWY4Qp2V1Vt+5dRaM3Z/EB
WmlC8uno80sfruPIEe2EQRdlwsMLhynvumhg1X7SSHhcg/BZWO/s7TAtJN8T
aCqz0ydcNnQIvXNcG1dYjh7xeWBCOP37Dq0jSReP2RL9Ag5YE+icGObvUt1F
qPv0fh9FewLz/MOEAp97OED34yE3tQuhwmfONNHAAGtRcodYWz0Ivg4TXNeu
GmFMbv+Vnkl/Quw16qJHBx+gIpcqQGBXGOFb6kXx+58fYvNu/zFV8VhC7dV0
5SI9M/S/8Qm9aJNCqFBSDSaaPoLeEU5B8/w0gkWlwaeNfRawfZe/tOWVSTAO
ZOjJd7EEWacfrStfLuHkhnYBjbAVCGZfOLUd8glhg9zk0resYEBqfbn2uIDw
17C/ji/MCqGZutN8hoWE0uau/OwfVuh04WAO9y0ieOcNsBk7PQZJUkiecKKE
0D/AK6J40BobcY6HE86XEU6qLa2lNVjjnF6Vzr2scsIUI1NVga0Nntorz+pJ
VhKWVX/OhbA8gQevm03/m7eEZFdpF2XiE6xH1ykyzlYTWk2FUqo2nuA4T1uO
N+E9QdzoV+rIEVuQ1JYMIuLeE3qZj0zG37SFQ4bQ3ZustYR7xyt9d5fb4kSs
nufoj1oCxfEcge9KdpjwcDSVuFFH2Pry64fDXns8erZVa36pnjBddmefCLMD
yPmJl2lpGwh8yW73THQdUVBqbvK9vpHgElr/u2DxKU7XbHJ7GLURulQZwo43
OyPZoXmwvLyTMNY88KJs13Nslg+THT/0jTArzvBxu+EFHr00cqoYHyJUJpVU
/aJzg9Kq04ebQiTCvQ3G38ZH3XE6TIvpwtVJQkPOXic5Fg9spsSUhR2dIUzc
rKWpaPGA+3WN9H6/OcKmZr4IUc0TL/T8PzAqLRDkhnZ1MXt6IvmkCbkS5SJh
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
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    PlotLabel->FormBox["\"Maximum of p\"", TraditionalForm],
    PlotRange->{{0., 3.998644572}, {0., 1.939269647}},
    PlotRangeClipping->True,
    PlotRangePadding->{
      Scaled[0.02], 
      Scaled[0.02]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.4723778256457*^9, 3.4723823845247*^9, 3.4723830813057003`*^9, 
   3.4723833854716997`*^9, 3.4724457906387*^9, 3.472542943988223*^9, 
   3.472543034884223*^9, 3.4725440671372232`*^9, 3.472545452146223*^9, 
   3.472546740221223*^9, 3.472547423174223*^9, 3.472548409908223*^9, 
   3.472549413578223*^9, 3.4725522035382233`*^9, 3.5007986616875*^9, 
   3.500803336515625*^9, 3.500803550609375*^9, {3.500803610453125*^9, 
   3.500803620546875*^9}, 3.50080373053125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLimit", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Take", "[", 
     RowBox[{"mvy", ",", 
      RowBox[{"-", "2000"}]}], "]"}], "//", "Smooth"}], ",", 
   RowBox[{"CutValues", "\[Rule]", "False"}], ",", 
   RowBox[{"UseShift", "\[Rule]", "True"}], ",", 
   RowBox[{"ApproximationReport", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "MaxError", ",", "HoelderError", ",", "LimitPlot", ",", 
      "PolynomDegree"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.442501631958*^9, 3.442501632968*^9}, {3.442502709413*^9,
    3.442502720659*^9}, {3.442834475132*^9, 3.442834519616*^9}, {
   3.4428345632349997`*^9, 3.442834564111*^9}, 3.4428348505030003`*^9, {
   3.446971773046875*^9, 3.446971874171875*^9}, {3.44697203896875*^9, 
   3.446972086359375*^9}, {3.446972184140625*^9, 3.4469721848125*^9}, {
   3.446972363578125*^9, 3.446972380515625*^9}, 3.44697245571875*^9, {
   3.4469779320625*^9, 3.446977932390625*^9}, 3.4486962916875*^9, {
   3.44895594859375*^9, 3.4489559641875*^9}, {3.45905459359375*^9, 
   3.4590546091875*^9}, {3.459063444609375*^9, 3.459063456671875*^9}, {
   3.45906392153125*^9, 3.45906392159375*^9}, {3.467008438853125*^9, 
   3.467008439525*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"HoelderError=\"\>", "\[InvisibleSpace]", 
   "0.00025477209257318556`"}],
  SequenceForm["HoelderError=", 0.00025477209257318556`],
  Editable->False]], "Print",
 CellChangeTimes->{3.467008452103125*^9, 3.472548482533223*^9, 
  3.4725494191872234`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"degree of hyperbole=\"\>", "\[InvisibleSpace]", "1"}],
  SequenceForm["degree of hyperbole=", 1],
  Editable->False]], "Print",
 CellChangeTimes->{3.467008452103125*^9, 3.472548482533223*^9, 
  3.472549419252223*^9}]
}, Open  ]],

Cell[BoxData["0.7878968233043621`"], "Output",
 CellChangeTimes->{{3.459063440265625*^9, 3.459063457140625*^9}, {
   3.459063917125*^9, 3.459063922375*^9}, 3.467008452103125*^9, 
   3.472548482686223*^9, 3.472549419332223*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"First", "[", "#", "]"}], "-", "685"}], ")"}]}], ",", 
       RowBox[{"Last", "[", "#", "]"}]}], "}"}], "&"}], "/@", 
    RowBox[{"Take", "[", 
     RowBox[{"mvy", ",", 
      RowBox[{"-", "1000"}]}], "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "Automatic"}], "}"}], ",", "All"}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.44697209478125*^9, 3.446972114828125*^9}, {
   3.446972152671875*^9, 3.4469721665*^9}, {3.446972204453125*^9, 
   3.446972207640625*^9}, {3.446972258390625*^9, 3.446972357421875*^9}, {
   3.446977869765625*^9, 3.446977922921875*^9}, 3.459054566484375*^9, {
   3.459054612328125*^9, 3.459054642234375*^9}, {3.459063480390625*^9, 
   3.459063510640625*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Smooth", "[", 
   RowBox[{"l_", ",", 
    RowBox[{"part_:", "0.02"}]}], "]"}], ":=", 
  RowBox[{"MovingAverage", "[", 
   RowBox[{"l", ",", 
    RowBox[{"\[LeftFloor]", 
     RowBox[{"part", " ", 
      RowBox[{"Length", "[", "l", "]"}]}], "\[RightFloor]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.4489575875*^9, 3.448957651578125*^9}, {
  3.448958285125*^9, 3.44895830053125*^9}}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Take", "[", 
    RowBox[{"mvy", ",", 
     RowBox[{"-", "2000"}]}], "]"}], "//", "Smooth"}], "]"}]], "Input",
 CellChangeTimes->{{3.442830716266*^9, 3.442830725141*^9}, {
   3.44697443878125*^9, 3.446974501203125*^9}, {3.446977860671875*^9, 
   3.446977860765625*^9}, {3.448957024375*^9, 3.4489570964375*^9}, {
   3.448957157796875*^9, 3.44895715875*^9}, 3.448957254078125*^9, {
   3.448957370109375*^9, 3.448957415953125*^9}, {3.44895747140625*^9, 
   3.448957575890625*^9}, {3.448957660296875*^9, 3.44895767321875*^9}, {
   3.448959095765625*^9, 3.448959110453125*^9}, {3.448959151953125*^9, 
   3.44895915215625*^9}, {3.448960041140625*^9, 3.448960041703125*^9}, {
   3.450414861859375*^9, 3.450414862203125*^9}, {3.450415107984375*^9, 
   3.450415121921875*^9}, {3.450416295*^9, 3.450416318078125*^9}, {
   3.4590546643125*^9, 3.4590546729375*^9}, {3.459063429140625*^9, 
   3.459063432546875*^9}, {3.4590639306875*^9, 3.459063930796875*^9}, {
   3.46700843486875*^9, 3.46700844686875*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
   "maxvx", ",", "maxvy", ",", "maxvz", ",", "mqvx", ",", "mqvy", ",", 
    "mqvz"}], "}"}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{"ListLimit", "[", 
     RowBox[{
      RowBox[{"Take", "[", 
       RowBox[{
        RowBox[{"Smooth", "[", "#", "]"}], ",", 
        RowBox[{"-", "2000"}]}], "]"}], ",", 
      RowBox[{"CutValues", "\[Rule]", "False"}], ",", 
      RowBox[{"UseShift", "\[Rule]", "True"}], ",", 
      RowBox[{"ApproximationReport", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"MaxError", ",", "HoelderError"}], "}"}]}]}], "]"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{
    "mvx", ",", "mvy", ",", "mvz", ",", "qvx", ",", "qvy", ",", "qvz"}], 
    "}"}]}]}]], "Input",
 CellChangeTimes->{{3.442318046296875*^9, 3.44231809453125*^9}, {
   3.4423181498125*^9, 3.442318179265625*^9}, {3.4423182468125*^9, 
   3.44231825875*^9}, {3.4425027355360003`*^9, 3.442502735976*^9}, {
   3.442563299468*^9, 3.442563308208*^9}, {3.442566385407*^9, 
   3.442566385947*^9}, {3.442641895844*^9, 3.4426419178050003`*^9}, {
   3.442648089902*^9, 3.442648095428*^9}, {3.442648218829*^9, 
   3.442648227783*^9}, {3.442648638975*^9, 3.442648652491*^9}, {
   3.442830769189*^9, 3.44283077337*^9}, 3.4428344173050003`*^9, 
   3.442834586291*^9, {3.446972464453125*^9, 3.446972465*^9}, 
   3.44697445871875*^9, 3.446974505328125*^9, 3.44697493328125*^9, 
   3.446977087578125*^9, 3.446977243890625*^9, {3.4469788211875*^9, 
   3.446978845328125*^9}, {3.44698052759375*^9, 3.44698055203125*^9}, {
   3.446980912171875*^9, 3.44698091271875*^9}, {3.44698229596875*^9, 
   3.44698229759375*^9}, {3.44698312771875*^9, 3.446983127890625*^9}, 
   3.446984221*^9, 3.44869927284375*^9, 3.4486997926875*^9, 
   3.448708859265625*^9, {3.448957680109375*^9, 3.44895768246875*^9}, {
   3.448959106859375*^9, 3.448959107078125*^9}, {3.448959155375*^9, 
   3.44895915553125*^9}, {3.449297045515625*^9, 3.44929705890625*^9}, {
   3.449297199375*^9, 3.449297205875*^9}, 3.4504148736875*^9, 
   3.45041516590625*^9, {3.450416124359375*^9, 3.45041612475*^9}, {
   3.4504163040625*^9, 3.450416310171875*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"HoelderError=\"\>", "\[InvisibleSpace]", 
   "5.283835778482904`*^-6"}],
  SequenceForm["HoelderError=", 5.283835778482904*^-6],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.446980527859375*^9, 3.44698092378125*^9, 3.446981640203125*^9, 
   3.446982303875*^9, 3.44698313775*^9, 3.446984221359375*^9, 
   3.448696303953125*^9, {3.44869926071875*^9, 3.448699274921875*^9}, 
   3.44869979365625*^9, 3.448708861703125*^9, 3.44870947503125*^9, 
   3.44877704784375*^9, 3.44877744025*^9, 3.44877953075*^9, 
   3.448783787859375*^9, 3.448955814828125*^9, 3.44895768578125*^9, {
   3.44895828875*^9, 3.44895830421875*^9}, 3.44895835409375*^9, 
   3.448958480046875*^9, 3.4489585663125*^9, 3.44895906615625*^9, 
   3.448959107421875*^9, 3.44895916315625*^9, 3.4489592565625*^9, 
   3.448959323375*^9, 3.4489593736875*^9, 3.448959427671875*^9, 
   3.448960046359375*^9, 3.44896095096875*^9, {3.44929704725*^9, 
   3.449297059421875*^9}, 3.449297207109375*^9, 3.449297308515625*^9, 
   3.449297477796875*^9, 3.449297563171875*^9, 3.4492976525625*^9, 
   3.45023626815625*^9, 3.450414878703125*^9, 3.45041516671875*^9, 
   3.450416125265625*^9, 3.450416311609375*^9, 3.459054686171875*^9, {
   3.459061522921875*^9, 3.45906153171875*^9}, 3.459061581265625*^9, {
   3.45906166584375*^9, 3.459061674640625*^9}, 3.4590626578125*^9, 
   3.45906393428125*^9, 3.4724578027607*^9, {3.4724578819937*^9, 
   3.4724578895827*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"HoelderError=\"\>", "\[InvisibleSpace]", 
   "9.344723328474913`*^-9"}],
  SequenceForm["HoelderError=", 9.344723328474913*^-9],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.446980527859375*^9, 3.44698092378125*^9, 3.446981640203125*^9, 
   3.446982303875*^9, 3.44698313775*^9, 3.446984221359375*^9, 
   3.448696303953125*^9, {3.44869926071875*^9, 3.448699274921875*^9}, 
   3.44869979365625*^9, 3.448708861703125*^9, 3.44870947503125*^9, 
   3.44877704784375*^9, 3.44877744025*^9, 3.44877953075*^9, 
   3.448783787859375*^9, 3.448955814828125*^9, 3.44895768578125*^9, {
   3.44895828875*^9, 3.44895830421875*^9}, 3.44895835409375*^9, 
   3.448958480046875*^9, 3.4489585663125*^9, 3.44895906615625*^9, 
   3.448959107421875*^9, 3.44895916315625*^9, 3.4489592565625*^9, 
   3.448959323375*^9, 3.4489593736875*^9, 3.448959427671875*^9, 
   3.448960046359375*^9, 3.44896095096875*^9, {3.44929704725*^9, 
   3.449297059421875*^9}, 3.449297207109375*^9, 3.449297308515625*^9, 
   3.449297477796875*^9, 3.449297563171875*^9, 3.4492976525625*^9, 
   3.45023626815625*^9, 3.450414878703125*^9, 3.45041516671875*^9, 
   3.450416125265625*^9, 3.450416311609375*^9, 3.459054686171875*^9, {
   3.459061522921875*^9, 3.45906153171875*^9}, 3.459061581265625*^9, {
   3.45906166584375*^9, 3.459061674640625*^9}, 3.4590626578125*^9, 
   3.45906393428125*^9, 3.4724578027607*^9, {3.4724578819937*^9, 
   3.4724578905467*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"HoelderError=\"\>", "\[InvisibleSpace]", 
   "6.074581210546715`*^-7"}],
  SequenceForm["HoelderError=", 6.074581210546715*^-7],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.446980527859375*^9, 3.44698092378125*^9, 3.446981640203125*^9, 
   3.446982303875*^9, 3.44698313775*^9, 3.446984221359375*^9, 
   3.448696303953125*^9, {3.44869926071875*^9, 3.448699274921875*^9}, 
   3.44869979365625*^9, 3.448708861703125*^9, 3.44870947503125*^9, 
   3.44877704784375*^9, 3.44877744025*^9, 3.44877953075*^9, 
   3.448783787859375*^9, 3.448955814828125*^9, 3.44895768578125*^9, {
   3.44895828875*^9, 3.44895830421875*^9}, 3.44895835409375*^9, 
   3.448958480046875*^9, 3.4489585663125*^9, 3.44895906615625*^9, 
   3.448959107421875*^9, 3.44895916315625*^9, 3.4489592565625*^9, 
   3.448959323375*^9, 3.4489593736875*^9, 3.448959427671875*^9, 
   3.448960046359375*^9, 3.44896095096875*^9, {3.44929704725*^9, 
   3.449297059421875*^9}, 3.449297207109375*^9, 3.449297308515625*^9, 
   3.449297477796875*^9, 3.449297563171875*^9, 3.4492976525625*^9, 
   3.45023626815625*^9, 3.450414878703125*^9, 3.45041516671875*^9, 
   3.450416125265625*^9, 3.450416311609375*^9, 3.459054686171875*^9, {
   3.459061522921875*^9, 3.45906153171875*^9}, 3.459061581265625*^9, {
   3.45906166584375*^9, 3.459061674640625*^9}, 3.4590626578125*^9, 
   3.45906393428125*^9, 3.4724578027607*^9, {3.4724578819937*^9, 
   3.4724578916197*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"HoelderError=\"\>", "\[InvisibleSpace]", 
   "2.7437496813399395`*^-9"}],
  SequenceForm["HoelderError=", 2.7437496813399395`*^-9],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.446980527859375*^9, 3.44698092378125*^9, 3.446981640203125*^9, 
   3.446982303875*^9, 3.44698313775*^9, 3.446984221359375*^9, 
   3.448696303953125*^9, {3.44869926071875*^9, 3.448699274921875*^9}, 
   3.44869979365625*^9, 3.448708861703125*^9, 3.44870947503125*^9, 
   3.44877704784375*^9, 3.44877744025*^9, 3.44877953075*^9, 
   3.448783787859375*^9, 3.448955814828125*^9, 3.44895768578125*^9, {
   3.44895828875*^9, 3.44895830421875*^9}, 3.44895835409375*^9, 
   3.448958480046875*^9, 3.4489585663125*^9, 3.44895906615625*^9, 
   3.448959107421875*^9, 3.44895916315625*^9, 3.4489592565625*^9, 
   3.448959323375*^9, 3.4489593736875*^9, 3.448959427671875*^9, 
   3.448960046359375*^9, 3.44896095096875*^9, {3.44929704725*^9, 
   3.449297059421875*^9}, 3.449297207109375*^9, 3.449297308515625*^9, 
   3.449297477796875*^9, 3.449297563171875*^9, 3.4492976525625*^9, 
   3.45023626815625*^9, 3.450414878703125*^9, 3.45041516671875*^9, 
   3.450416125265625*^9, 3.450416311609375*^9, 3.459054686171875*^9, {
   3.459061522921875*^9, 3.45906153171875*^9}, 3.459061581265625*^9, {
   3.45906166584375*^9, 3.459061674640625*^9}, 3.4590626578125*^9, 
   3.45906393428125*^9, 3.4724578027607*^9, {3.4724578819937*^9, 
   3.4724578925367002`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"HoelderError=\"\>", "\[InvisibleSpace]", 
   "4.492046429271923`*^-9"}],
  SequenceForm["HoelderError=", 4.492046429271923*^-9],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.446980527859375*^9, 3.44698092378125*^9, 3.446981640203125*^9, 
   3.446982303875*^9, 3.44698313775*^9, 3.446984221359375*^9, 
   3.448696303953125*^9, {3.44869926071875*^9, 3.448699274921875*^9}, 
   3.44869979365625*^9, 3.448708861703125*^9, 3.44870947503125*^9, 
   3.44877704784375*^9, 3.44877744025*^9, 3.44877953075*^9, 
   3.448783787859375*^9, 3.448955814828125*^9, 3.44895768578125*^9, {
   3.44895828875*^9, 3.44895830421875*^9}, 3.44895835409375*^9, 
   3.448958480046875*^9, 3.4489585663125*^9, 3.44895906615625*^9, 
   3.448959107421875*^9, 3.44895916315625*^9, 3.4489592565625*^9, 
   3.448959323375*^9, 3.4489593736875*^9, 3.448959427671875*^9, 
   3.448960046359375*^9, 3.44896095096875*^9, {3.44929704725*^9, 
   3.449297059421875*^9}, 3.449297207109375*^9, 3.449297308515625*^9, 
   3.449297477796875*^9, 3.449297563171875*^9, 3.4492976525625*^9, 
   3.45023626815625*^9, 3.450414878703125*^9, 3.45041516671875*^9, 
   3.450416125265625*^9, 3.450416311609375*^9, 3.459054686171875*^9, {
   3.459061522921875*^9, 3.45906153171875*^9}, 3.459061581265625*^9, {
   3.45906166584375*^9, 3.459061674640625*^9}, 3.4590626578125*^9, 
   3.45906393428125*^9, 3.4724578027607*^9, {3.4724578819937*^9, 
   3.4724578934237003`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"HoelderError=\"\>", "\[InvisibleSpace]", 
   "2.5922006381955565`*^-9"}],
  SequenceForm["HoelderError=", 2.5922006381955565`*^-9],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.446980527859375*^9, 3.44698092378125*^9, 3.446981640203125*^9, 
   3.446982303875*^9, 3.44698313775*^9, 3.446984221359375*^9, 
   3.448696303953125*^9, {3.44869926071875*^9, 3.448699274921875*^9}, 
   3.44869979365625*^9, 3.448708861703125*^9, 3.44870947503125*^9, 
   3.44877704784375*^9, 3.44877744025*^9, 3.44877953075*^9, 
   3.448783787859375*^9, 3.448955814828125*^9, 3.44895768578125*^9, {
   3.44895828875*^9, 3.44895830421875*^9}, 3.44895835409375*^9, 
   3.448958480046875*^9, 3.4489585663125*^9, 3.44895906615625*^9, 
   3.448959107421875*^9, 3.44895916315625*^9, 3.4489592565625*^9, 
   3.448959323375*^9, 3.4489593736875*^9, 3.448959427671875*^9, 
   3.448960046359375*^9, 3.44896095096875*^9, {3.44929704725*^9, 
   3.449297059421875*^9}, 3.449297207109375*^9, 3.449297308515625*^9, 
   3.449297477796875*^9, 3.449297563171875*^9, 3.4492976525625*^9, 
   3.45023626815625*^9, 3.450414878703125*^9, 3.45041516671875*^9, 
   3.450416125265625*^9, 3.450416311609375*^9, 3.459054686171875*^9, {
   3.459061522921875*^9, 3.45906153171875*^9}, 3.459061581265625*^9, {
   3.45906166584375*^9, 3.459061674640625*^9}, 3.4590626578125*^9, 
   3.45906393428125*^9, 3.4724578027607*^9, {3.4724578819937*^9, 
   3.4724578943587*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.06795745809105394`", ",", "0.9790211100154612`", ",", 
   "0.043017128575658856`", ",", "0.0006104661380527778`", ",", 
   "0.24495154816498063`", ",", "0.00021323193049960375`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.44895910753125*^9, 3.448959173546875*^9, 3.4489592683125*^9, 
   3.44895933478125*^9, 3.4489593848125*^9, 3.44895943790625*^9, 
   3.448960056953125*^9, 3.44896095921875*^9, {3.449297047578125*^9, 
   3.4492970595625*^9}, 3.4492972119375*^9, 3.44929731396875*^9, 
   3.4492974835625*^9, 3.449297569328125*^9, 3.449297658546875*^9, 
   3.450236274203125*^9, 3.4504148965625*^9, 3.4504151684375*^9, 
   3.45041612609375*^9, 3.4504163155625*^9, 3.459054690046875*^9, {
   3.4590615250625*^9, 3.45906153521875*^9}, 3.459061585578125*^9, {
   3.459061669890625*^9, 3.45906167865625*^9}, 3.45906266134375*^9, 
   3.459063937859375*^9, 3.4724578031816998`*^9, {3.4724578831797*^9, 
   3.4724578943627*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"MapThread", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"PrintRange", "[", 
     RowBox[{"#1", ",", "Automatic", ",", 
      RowBox[{"PlotLabel", "\[Rule]", "#2"}]}], "]"}], "&"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
           ",", 
          RowBox[{"10", "^", 
           RowBox[{"Log", "[", 
            RowBox[{"10", ",", 
             RowBox[{
             "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
            "]"}]}]}], "}"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{"qvx", ",", "qvy", ",", "qvz", ",", "qp"}], "}"}], ",", 
       RowBox[{"{", "2", "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Mean quadratic of vr\>\"", ",", 
       "\"\<Mean quadratic of v\[Phi]\>\"", ",", 
       "\"\<Mean quadratic of vz\>\"", ",", "\"\<Mean quadratic of p\>\""}], 
      "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.424420725921*^9, {3.442055958375*^9, 3.442055959515625*^9}, {
   3.4425027881870003`*^9, 3.442502792352*^9}, {3.442506746451*^9, 
   3.4425067589779997`*^9}, {3.442509995309*^9, 3.442509996223*^9}, {
   3.4504152634375*^9, 3.450415263875*^9}}],

Cell[BoxData[
 RowBox[{"MapThread", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"PrintRange", "[", 
     RowBox[{"#1", ",", "All", ",", 
      RowBox[{"PlotLabel", "\[Rule]", "#2"}]}], "]"}], "&"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
           ",", 
          RowBox[{"Log", "[", 
           RowBox[{"10", ",", 
            RowBox[{
            "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
           "]"}]}], "}"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{"mdvx", ",", "mdvy", ",", "mdvz", ",", "mdp"}], "}"}], ",", 
       RowBox[{"{", "2", "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Max difference of vr\>\"", ",", "\"\<Max difference v\[Phi]\>\"", 
       ",", "\"\<Max difference of vz\>\"", ",", 
       "\"\<Max difference of p\>\""}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.4244207284119997`*^9, {3.424420791988*^9, 3.424420807352*^9}, {
   3.4244259126400003`*^9, 3.424425913632*^9}, {3.424583126039*^9, 
   3.424583126329*^9}, 3.442509450123*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:041e\:0431\:0440\:0430\:0431\:043e\:0442\:043a\:0430 \:043c\:0430\
\:0441\:0441\:0438\:0432\:043e\:0432", "Section",
 CellChangeTimes->{{3.424668984773*^9, 3.424668985385*^9}, {
  3.442134571921875*^9, 3.442134583390625*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dump", "=", 
   RowBox[{"Release", "[", 
    RowBox[{
     RowBox[{"ReadList", "[", 
      RowBox[{"\"\<pumpflow.dmp\>\"", ",", 
       RowBox[{"Hold", "[", "Expression", "]"}]}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a_", "+", 
        RowBox[{"E", "*", "b_"}]}], "\[Rule]", 
       RowBox[{"b", "*", 
        RowBox[{"10", "^", "a"}]}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"coor", ",", "bounds"}], "}"}], "=", 
   RowBox[{"ReadAuxFiles2D", "[", 
    RowBox[{
     RowBox[{"{", "\"\<coord\>\"", "}"}], ",", 
     RowBox[{"ShiftVector", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"ProcDistrib", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"2", ",", "2"}], "}"}]}], ",", 
     RowBox[{"NumberOfRefs", "\[Rule]", "2"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.425028164534773*^9, 3.425028175680887*^9}, 
   3.442044893640625*^9, {3.442134642421875*^9, 3.442134642578125*^9}, {
   3.4421347645*^9, 3.44213476484375*^9}, {3.4723778718587*^9, 
   3.4723778746997004`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Set", "::", "\<\"write\"\>"}], 
  RowBox[{
  ":", " "}], "\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"Tag \\\\\\\"\\\", \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\!\\(Times\\), \\\"MT\\\"]\\)\
\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\" in \\\\\\\"\\\", \\\"MT\\\"]\\)\
\[NoBreak]\\!\\(\\*StyleBox[\\!\\(current\\\\ time\\), \\\"MT\\\"]\\)\
\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\" is Protected.\\\\\\\"\\\", \
\\\"MT\\\"]\\) \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/write\\\", ButtonNote -> \
\\\"Set::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.425028167191038*^9, 3.4250281761539345`*^9}, 
   3.4420448945*^9, 3.4723778760947*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Set", "::", "\<\"write\"\>"}], 
  RowBox[{
  ":", " "}], "\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"Tag \\\\\\\"\\\", \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\!\\(Times\\), \\\"MT\\\"]\\)\
\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\" in \\\\\\\"\\\", \\\"MT\\\"]\\)\
\[NoBreak]\\!\\(\\*StyleBox[\\!\\(current\\\\ iteration\\), \\\"MT\\\"]\\)\
\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\" is Protected.\\\\\\\"\\\", \
\\\"MT\\\"]\\) \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/write\\\", ButtonNote -> \
\\\"Set::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.425028167191038*^9, 3.4250281761539345`*^9}, 
   3.4420448945*^9, 3.4723778761007*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Set", "::", "\<\"write\"\>"}], 
  RowBox[{
  ":", " "}], "\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"Tag \\\\\\\"\\\", \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\!\\(Times\\), \\\"MT\\\"]\\)\
\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\" in \\\\\\\"\\\", \\\"MT\\\"]\\)\
\[NoBreak]\\!\\(\\*StyleBox[\\!\\(along\\\\ axes\\\\ number\\\\ of\\\\ \
processors\\), \\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\" is \
Protected.\\\\\\\"\\\", \\\"MT\\\"]\\) \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/write\\\", \
ButtonNote -> \\\"Set::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.425028167191038*^9, 3.4250281761539345`*^9}, 
   3.4420448945*^9, 3.4723778761047*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"General", "::", "\<\"stop\"\>"}], 
  RowBox[{
  ":", " "}], "\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"Further output of \\\\\\\"\\\
\", \\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\!\\(Set :: \\\"write\\\"\\), \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\" will be suppressed \
during this calculation.\\\\\\\"\\\", \\\"MT\\\"]\\) \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.425028167191038*^9, 3.4250281761539345`*^9}, 
   3.4420448945*^9, 3.4723778761327*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "/@", 
  RowBox[{"Drop", "[", 
   RowBox[{"dump", ",", "6"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.4250281803723564`*^9, 3.425028205899909*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "242410.`", ",", "1.3967`*^14", ",", "8.4788`*^11", ",", "1.0497`*^13", ",",
    "0.01`", ",", "3322.2`", ",", "56.909`", ",", "0.35899`", ",", "57.579`", 
   ",", "0.01`"}], "}"}]], "Output",
 CellChangeTimes->{3.4723778818847*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"GetInner", "[", 
   RowBox[{"ar_", "?", "ArrayQ"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "b", "}"}], ",", 
    RowBox[{"Switch", "[", 
     RowBox[{
      RowBox[{"Length", "[", 
       RowBox[{"Dimensions", "[", "ar", "]"}], "]"}], ",", "3", ",", 
      RowBox[{"Transpose", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{"node", "/.", 
            RowBox[{"b_", "\[RuleDelayed]", 
             RowBox[{"BitAnd", "[", 
              RowBox[{"b", ",", "8"}], "]"}]}]}], "8"], "#"}], "&"}], "/@", 
        RowBox[{"Transpose", "[", "ar", "]"}]}], "]"}], ",", "2", ",", 
      RowBox[{
       FractionBox[
        RowBox[{"node", "/.", 
         RowBox[{"b_", "\[RuleDelayed]", 
          RowBox[{"BitAnd", "[", 
           RowBox[{"b", ",", "8"}], "]"}]}]}], "8"], "ar"}], ",", "_", ",", 
      "$Failed"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.419769262608*^9, 3.419769293922*^9}, {
   3.4265550571877866`*^9, 3.4265550579287863`*^9}, {3.4265560798137865`*^9, 
   3.4265560801037865`*^9}, {3.4265568567807865`*^9, 
   3.4265568637687864`*^9}, {3.4265569337687864`*^9, 3.426557018967787*^9}, {
   3.4280849051549997`*^9, 3.428084912672*^9}, {3.4280849476940002`*^9, 
   3.4280849504890003`*^9}, {3.432286145515625*^9, 3.432286146359375*^9}, {
   3.437985038765625*^9, 3.43798509209375*^9}, 3.437985326796875*^9}],

Cell[BoxData[
 RowBox[{"ReadDrawSection", "[", 
  RowBox[{"\"\<pumpflow(0.5).snp\>\"", ",", "Text2D", ",", "5"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.451891855515625*^9, 3.451891887125*^9}, {
  3.451892991171875*^9, 3.451892991859375*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"p", ",", "vx", ",", "vy", ",", "vz", ",", "nut"}], "}"}], "=", 
   RowBox[{"ReadTextSnapFile2D", "[", 
    RowBox[{"\"\<pumpflow_2_963993.snp\>\"", ",", "5", ",", 
     RowBox[{"PrintInfo", "\[Rule]", "Automatic"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"coor", ",", "bounds", ",", "node"}], "}"}], "=", 
   RowBox[{"ReadAuxFiles2D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<coord\>\"", ",", "\"\<node\>\""}], "}"}], ",", 
     RowBox[{"ShiftVector", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"ProcDistrib", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}]}], ",", 
     RowBox[{"NumberOfRefs", "\[Rule]", "2"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "bounds", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.424418695078*^9, 3.4244187240959997`*^9}, {
   3.424419660116*^9, 3.424419665225*^9}, {3.424493612942*^9, 
   3.4244936193068*^9}, {3.424580818773*^9, 3.424580818946*^9}, 
   3.44213433559375*^9, {3.442134421296875*^9, 3.4421344241875*^9}, {
   3.442134471703125*^9, 3.442134472671875*^9}, 3.442134881875*^9, 
   3.442504183276*^9, 3.442504913849*^9, 3.442505291291*^9, 3.442505510612*^9,
    3.442505716909*^9, 3.442505852385*^9, 3.442506923057*^9, {
   3.442508870972*^9, 3.442508874237*^9}, 3.44250955248*^9, {
   3.442511190578*^9, 3.442511191803*^9}, 3.442512409474*^9, 
   3.4425125310039997`*^9, {3.442563228016*^9, 3.442563231115*^9}, 
   3.442566459144*^9, 3.442567081775*^9, {3.442594359159*^9, 
   3.442594372922*^9}, 3.442641759525*^9, 3.4426419737460003`*^9, 
   3.442646940034*^9, {3.442648778374*^9, 3.442648779255*^9}, 
   3.442650696347*^9, {3.442825036867*^9, 3.442825044059*^9}, {
   3.442830529894*^9, 3.442830535775*^9}, {3.442835217834*^9, 
   3.442835217988*^9}, {3.442835642795*^9, 3.4428356617530003`*^9}, {
   3.442849254848*^9, 3.442849257453*^9}, {3.4428534862460003`*^9, 
   3.442853489358*^9}, {3.445843179140625*^9, 3.445843183703125*^9}, {
   3.44584346378125*^9, 3.44584346396875*^9}, {3.445844400140625*^9, 
   3.44584440328125*^9}, {3.44584454275*^9, 3.445844543328125*^9}, {
   3.446969339890625*^9, 3.446969349703125*^9}, {3.446971361515625*^9, 
   3.44697138153125*^9}, {3.446973034828125*^9, 3.446973036234375*^9}, {
   3.4469746928125*^9, 3.44697469346875*^9}, 3.446975045234375*^9, {
   3.44697719725*^9, 3.446977198921875*^9}, {3.446977481625*^9, 
   3.446977481796875*^9}, 3.446978934515625*^9, {3.446980605625*^9, 
   3.44698060578125*^9}, {3.446981366609375*^9, 3.446981366703125*^9}, {
   3.44698163396875*^9, 3.44698163465625*^9}, {3.446982077625*^9, 
   3.4469820863125*^9}, {3.44698320446875*^9, 3.446983204578125*^9}, {
   3.446984292578125*^9, 3.44698429896875*^9}, {3.4486967230625*^9, 
   3.448696734890625*^9}, 3.44869723303125*^9, 3.448697361671875*^9, {
   3.448705230203125*^9, 3.448705231078125*^9}, 3.448708981671875*^9, {
   3.44870954021875*^9, 3.44870954071875*^9}, 3.448777150484375*^9, 
   3.44877744425*^9, {3.448783836421875*^9, 3.448783858890625*^9}, 
   3.448958347609375*^9, 3.448958482625*^9, 3.44895856371875*^9, {
   3.448959064921875*^9, 3.448959065078125*^9}, {3.448959158765625*^9, 
   3.448959158828125*^9}, 3.44895925146875*^9, {3.448959312859375*^9, 
   3.4489593129375*^9}, 3.448959362609375*^9, 3.448959415421875*^9, 
   3.448960978046875*^9, {3.448963783625*^9, 3.448963791203125*^9}, {
   3.449203667984375*^9, 3.449203689890625*^9}, {3.4492114675625*^9, 
   3.44921148284375*^9}, {3.44921152928125*^9, 3.44921153040625*^9}, {
   3.449216874859375*^9, 3.44921691771875*^9}, 3.44921722115625*^9, {
   3.44929710546875*^9, 3.449297109625*^9}, {3.44929723584375*^9, 
   3.44929723590625*^9}, {3.449297353125*^9, 3.4492973531875*^9}, {
   3.4492975224375*^9, 3.449297522515625*^9}, {3.449297611703125*^9, 
   3.449297611796875*^9}, {3.449297685421875*^9, 3.449297685546875*^9}, {
   3.449387553*^9, 3.44938755353125*^9}, 3.4496493291875*^9, {
   3.449650605421875*^9, 3.449650606296875*^9}, {3.449650650609375*^9, 
   3.44965065834375*^9}, {3.449651741078125*^9, 3.449651785265625*^9}, {
   3.44965275759375*^9, 3.449652761953125*^9}, {3.45023633725*^9, 
   3.450236341640625*^9}, 3.45041473775*^9, {3.45041512815625*^9, 
   3.450415131125*^9}, {3.45041542375*^9, 3.45041542396875*^9}, {
   3.4504161705625*^9, 3.45041618971875*^9}, {3.45041632321875*^9, 
   3.4504163238125*^9}, {3.451884994484375*^9, 3.451884998171875*^9}, {
   3.451887537390625*^9, 3.45188754675*^9}, {3.451890183375*^9, 
   3.451890189015625*^9}, {3.45896967403125*^9, 3.45896967696875*^9}, {
   3.458969718421875*^9, 3.458969720234375*^9}, 3.45896975709375*^9, {
   3.458969844171875*^9, 3.458969845484375*^9}, {3.45896993934375*^9, 
   3.4589699454375*^9}, {3.459054696703125*^9, 3.459054725703125*^9}, {
   3.4590547655*^9, 3.459054786125*^9}, {3.459061620140625*^9, 
   3.459061620421875*^9}, 3.459061682015625*^9, {3.45906393965625*^9, 
   3.4590639595625*^9}, {3.4670085048375*^9, 3.46700851136875*^9}, {
   3.467021315071875*^9, 3.467021320196875*^9}, {3.467021411009375*^9, 
   3.4670214110875*^9}, {3.46702333549375*^9, 3.467023336353125*^9}, {
   3.46708960965*^9, 3.4670896147125*^9}, {3.4723779106087*^9, 
   3.4723779173917*^9}, 3.4724579962047*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2"}], "}"}]], "Print",
 CellChangeTimes->{
  3.451891424*^9, 3.451892390109375*^9, 3.45189634790625*^9, 
   3.4589696775625*^9, 3.45896972146875*^9, 3.458969757671875*^9, 
   3.458969846375*^9, 3.45896994609375*^9, 3.45905472671875*^9, {
   3.45905476634375*^9, 3.459054788546875*^9}, 3.45905483946875*^9, 
   3.45905546246875*^9, 3.459055791703125*^9, 3.459056027171875*^9, 
   3.459060135640625*^9, 3.459061621265625*^9, 3.459061682953125*^9, 
   3.459062420640625*^9, {3.459063951703125*^9, 3.459063960265625*^9}, 
   3.4670085134625*^9, 3.46702132324375*^9, {3.467021358196875*^9, 
   3.46702137305625*^9}, 3.46702141136875*^9, 3.46702333724375*^9, 
   3.467023449165625*^9, 3.467023628728125*^9, {3.467089611196875*^9, 
   3.467089615821875*^9}, 3.4723779179097*^9, 3.4724579981907*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "340.5002049536`", ",", "963993", ",", "64", ",", "64", ",", "10.`"}], 
  "}"}]], "Print",
 CellChangeTimes->{
  3.451891424*^9, 3.451892390109375*^9, 3.45189634790625*^9, 
   3.4589696775625*^9, 3.45896972146875*^9, 3.458969757671875*^9, 
   3.458969846375*^9, 3.45896994609375*^9, 3.45905472671875*^9, {
   3.45905476634375*^9, 3.459054788546875*^9}, 3.45905483946875*^9, 
   3.45905546246875*^9, 3.459055791703125*^9, 3.459056027171875*^9, 
   3.459060135640625*^9, 3.459061621265625*^9, 3.459061682953125*^9, 
   3.459062420640625*^9, {3.459063951703125*^9, 3.459063960265625*^9}, 
   3.4670085134625*^9, 3.46702132324375*^9, {3.467021358196875*^9, 
   3.46702137305625*^9}, 3.46702141136875*^9, 3.46702333724375*^9, 
   3.467023449165625*^9, 3.467023628728125*^9, {3.467089611196875*^9, 
   3.467089615821875*^9}, 3.4723779179097*^9, 3.4724579981927*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"ghost=\"\>", "\[InvisibleSpace]", "6"}],
  SequenceForm["ghost=", 6],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.451891424*^9, 3.451892390109375*^9, 3.45189634790625*^9, 
   3.4589696775625*^9, 3.45896972146875*^9, 3.458969757671875*^9, 
   3.458969846375*^9, 3.45896994609375*^9, 3.45905472671875*^9, {
   3.45905476634375*^9, 3.459054788546875*^9}, 3.45905483946875*^9, 
   3.45905546246875*^9, 3.459055791703125*^9, 3.459056027171875*^9, 
   3.459060135640625*^9, 3.459061621265625*^9, 3.459061682953125*^9, 
   3.459062420640625*^9, {3.459063951703125*^9, 3.459063960265625*^9}, 
   3.4670085134625*^9, 3.46702132324375*^9, {3.467021358196875*^9, 
   3.46702137305625*^9}, 3.46702141136875*^9, 3.46702333724375*^9, 
   3.467023449165625*^9, 3.467023628728125*^9, {3.467089611196875*^9, 
   3.467089615821875*^9}, 3.4723779179097*^9, 3.4724579982167*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.`"}], ",", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.`"}], ",", "1.`"}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{
  3.451891424*^9, 3.451892390109375*^9, 3.45189634790625*^9, 
   3.4589696775625*^9, 3.45896972146875*^9, 3.458969757671875*^9, 
   3.458969846375*^9, 3.45896994609375*^9, 3.45905472671875*^9, {
   3.45905476634375*^9, 3.459054788546875*^9}, 3.45905483946875*^9, 
   3.45905546246875*^9, 3.459055791703125*^9, 3.459056027171875*^9, 
   3.459060135640625*^9, 3.459061621265625*^9, 3.459061682953125*^9, 
   3.459062420640625*^9, {3.459063951703125*^9, 3.459063960265625*^9}, 
   3.4670085134625*^9, 3.46702132324375*^9, {3.467021358196875*^9, 
   3.46702137305625*^9}, 3.46702141136875*^9, 3.46702333724375*^9, 
   3.467023449165625*^9, 3.467023628728125*^9, {3.467089611196875*^9, 
   3.467089615821875*^9}, 3.4723779179097*^9, 3.4724579983557*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
     RowBox[{"Last", "[", "#", "]"}]}], "}"}], "&"}], "@", 
  RowBox[{"Union", "[", 
   RowBox[{"Flatten", "[", "p", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.449650793390625*^9, 3.44965083728125*^9, {3.449651328234375*^9, 
   3.44965132953125*^9}, {3.44965184140625*^9, 3.449651871546875*^9}, {
   3.459054735609375*^9, 3.4590547499375*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"229.38`", ",", "229.5`"}], "}"}]], "Output",
 CellChangeTimes->{{3.45905474196875*^9, 3.459054750375*^9}, 
   3.45905484078125*^9, 3.459061684921875*^9, 3.4590639621875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "/@", 
  RowBox[{"{", 
   RowBox[{"p", ",", "vx", ",", "vy", ",", "vz", ",", "nut"}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.4246851323380003`*^9, 3.4246851493640003`*^9}, {
  3.424700644524*^9, 3.424700644696*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "242410.`", ",", "1.3967`*^14", ",", "8.4788`*^11", ",", "1.0497`*^13", ",",
    "0.01`"}], "}"}]], "Output",
 CellChangeTimes->{3.459054791890625*^9, 3.4590548431875*^9, 
  3.45906162309375*^9, 3.459061686640625*^9, 3.4590639633125*^9, 
  3.467008516509375*^9, 3.467021376165625*^9, 3.467021413540625*^9, 
  3.4723779206457*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Show2x", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ListPlot3D", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", "#", "]"}], ",", 
      RowBox[{"PlotRange", "->", "All"}], ",", 
      RowBox[{"DisplayFunction", "->", "Identity"}]}], "]"}], "&"}], ",", 
   RowBox[{"{", 
    RowBox[{"p", ",", "vx", ",", "vy", ",", "nut"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.424419756348*^9, 3.424419764804*^9}, 
   3.4428355284709997`*^9, {3.44584373340625*^9, 3.44584373659375*^9}, {
   3.4458439104375*^9, 3.445843912421875*^9}, {3.4493896410625*^9, 
   3.449389665953125*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Union", "[", 
  RowBox[{"Flatten", "[", "nut", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.4428492721540003`*^9, 3.442849275051*^9}}],

Cell[BoxData[
 RowBox[{"{", "0.01`", "}"}]], "Output",
 CellChangeTimes->{
  3.448963796859375*^9, {3.449203679765625*^9, 3.449203692703125*^9}, {
   3.4492114739375*^9, 3.4492114853125*^9}, 3.449211533234375*^9, {
   3.449216896375*^9, 3.44921692246875*^9}, 3.449217224078125*^9, 
   3.449297121359375*^9, 3.44929724053125*^9, 3.449297526921875*^9, 
   3.44929761659375*^9, 3.449297689828125*^9, 3.449387621203125*^9, 
   3.44965078678125*^9, 3.449652072625*^9, 3.45023637778125*^9, 
   3.45041476640625*^9, 3.450415135328125*^9, 3.45041542784375*^9, 
   3.450416194984375*^9, 3.458969684484375*^9, 3.458969769609375*^9, 
   3.458969853640625*^9, 3.4589699525*^9, {3.459054761890625*^9, 
   3.459054775140625*^9}, 3.459054846234375*^9, 3.45906150603125*^9, 
   3.45906162490625*^9, 3.459061688578125*^9, 3.459063966015625*^9, 
   3.467008518759375*^9, 3.467021378665625*^9, 3.467089696915625*^9, 
   3.4723780359867*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ListPlot3D", "[", 
  RowBox[{
   SuperscriptBox["nut", "\[Transpose]"], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.442835599918*^9, 3.4428356213780003`*^9}}],

Cell[BoxData[
 RowBox[{"PrintRange", "[", 
  RowBox[{"dif", "@", 
   RowBox[{"Transpose", "[", 
    RowBox[{"WithoutFict", "/@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"coor", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
        ",", 
       RowBox[{"vy", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"\[LeftFloor]", 
           FractionBox[
            RowBox[{"Length", "[", 
             SuperscriptBox["vy", "\[Transpose]"], "]"}], "2"], 
           "\[RightFloor]"}]}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.4245807353459997`*^9, 3.424580789983*^9}, {
  3.4245808963710003`*^9, 3.424580925399*^9}, {3.424700729896*^9, 
  3.424700753091*^9}, {3.4425665535620003`*^9, 3.442566568705*^9}, {
  3.4469694055*^9, 3.4469694675*^9}, {3.448777507984375*^9, 
  3.44877752190625*^9}, {3.448958591078125*^9, 3.4489585976875*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"shift", "=", 
  RowBox[{"Chop", "[", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"fi", "=", 
        RowBox[{"Interpolation", "[", 
         RowBox[{"dif", "@", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
             "coor", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             ",", 
             RowBox[{"vy", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", 
                RowBox[{"\[LeftFloor]", 
                 FractionBox[
                  RowBox[{"Length", "[", 
                   SuperscriptBox["vy", "\[Transpose]"], "]"}], "2"], 
                 "\[RightFloor]"}]}], "]"}], "]"}]}], "}"}], "]"}]}], "]"}]}],
        ",", "t$"}], "}"}], ",", 
     RowBox[{"t$", "/.", 
      RowBox[{"FindRoot", "[", 
       RowBox[{
        RowBox[{"fi", "[", "t$", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t$", ",", 
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.42458210179*^9, 3.424582188977*^9}, 3.424700771134*^9, {
   3.442504244968*^9, 3.4425042544379997`*^9}, {3.45896969665625*^9, 
   3.45896969728125*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.15484593957308104`"}]], "Output",
 CellChangeTimes->{
  3.424700772317*^9, 3.42502271919232*^9, 3.442134524*^9, 
   3.4421348913125*^9, {3.442504246326*^9, 3.442504254782*^9}, 
   3.442505076821*^9, 3.442505299991*^9, 3.442505518783*^9, 
   3.4425057241870003`*^9, 3.442505860384*^9, 3.442506980424*^9, 
   3.442508901105*^9, 3.4425095591870003`*^9, 3.442511199981*^9, 
   3.442512421646*^9, 3.442512541193*^9, 3.442563240943*^9, 3.442566474455*^9,
    3.442594592663*^9, 3.442641772071*^9, 3.442641980731*^9, 3.44264694984*^9,
    3.442648785979*^9, 3.442650701301*^9, 3.442825143027*^9, 
   3.442830540321*^9, 3.442835287373*^9, 3.442849279928*^9, 
   3.4428534984449997`*^9, 3.445843189453125*^9, 3.445843468328125*^9, 
   3.44584442903125*^9, 3.445844548765625*^9, 3.446969394875*^9, {
   3.44697139353125*^9, 3.4469713993125*^9}, 3.446973044890625*^9, 
   3.44697470009375*^9, 3.446975054046875*^9, 3.446977204546875*^9, 
   3.44697748834375*^9, 3.446978941015625*^9, 3.446980768125*^9, 
   3.446981371453125*^9, 3.4469816600625*^9, 3.446982318515625*^9, 
   3.446983040203125*^9, 3.44698308653125*^9, 3.446983210328125*^9, 
   3.446984303046875*^9, 3.446984368125*^9, 3.448696776234375*^9, 
   3.44870524684375*^9, 3.448705873140625*^9, 3.448708993171875*^9, 
   3.4487095450625*^9, 3.448777179015625*^9, 3.448777454234375*^9, 
   3.448783845328125*^9, 3.44895587075*^9, 3.448958366078125*^9, 
   3.44895849240625*^9, 3.448958578234375*^9, 3.448959071359375*^9, 
   3.4489591745*^9, 3.4489592691875*^9, 3.448959335671875*^9, 
   3.44895938578125*^9, 3.44895943878125*^9, 3.4489609871875*^9, {
   3.449217215671875*^9, 3.44921722775*^9}, 3.44929712459375*^9, 
   3.449297243375*^9, 3.4492973568125*^9, 3.4492975295625*^9, 
   3.4492976188125*^9, 3.449297692609375*^9, 3.449387625765625*^9, 
   3.450236377859375*^9, 3.450414766625*^9, 3.450415136609375*^9, 
   3.450415452484375*^9, 3.450416196203125*^9, 3.450416326765625*^9, 
   3.458969697625*^9, 3.45896995759375*^9, {3.459054778390625*^9, 
   3.459054803546875*^9}, 3.45905484821875*^9, 3.459055464953125*^9, 
   3.45905602915625*^9, 3.459061507203125*^9, 3.4590616265625*^9, 
   3.459061689796875*^9, 3.459062673859375*^9, 3.4590639706875*^9, 
   3.467008527259375*^9, 3.467021381853125*^9, 3.46708970005625*^9, 
   3.4723780640647*^9, 3.4724579644737*^9, 3.4724580013437*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ListContourPlot", "[", 
  RowBox[{
   RowBox[{"GetInner", "[", 
    SuperscriptBox["vy", "\[Transpose]"], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Contours", "\[Rule]", "40"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.424578117769*^9, 3.424578134112*^9}, 
   3.424579196841*^9, {3.424580679883*^9, 3.424580687009*^9}, {
   3.442134659203125*^9, 3.442134667015625*^9}, {3.442505869939*^9, 
   3.442505871035*^9}, {3.445843992203125*^9, 3.44584401803125*^9}, {
   3.445844433875*^9, 3.44584443903125*^9}, {3.445844586953125*^9, 
   3.445844593453125*^9}, 3.4469814108125*^9, {3.44877746171875*^9, 
   3.448777486109375*^9}, {3.459055804125*^9, 3.459055804203125*^9}, {
   3.4590560203125*^9, 3.45905602040625*^9}}],

Cell[BoxData[
 RowBox[{"ListStreamPlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{
     RowBox[{"GetInner", "/@", 
      RowBox[{"{", 
       RowBox[{"vx", ",", "vz"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", 
   RowBox[{"StreamPoints", "\[Rule]", "Fine"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.445844613203125*^9, 3.445844667625*^9}, {
  3.449222562359375*^9, 3.449222573875*^9}, {3.451886391203125*^9, 
  3.45188639509375*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<vRe=10rc=4.gif\>\"", ",", 
    RowBox[{"PrintRange", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"coor", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         FractionBox[
          RowBox[{"Cut3D", "[", 
           RowBox[{
            RowBox[{"Cut3D", "[", 
             RowBox[{"vy", ",", "2"}], "]"}], ",", "2", ",", "35"}], "]"}], 
          RowBox[{
           RowBox[{
            RowBox[{"coor", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "0"}], "+", "1"}]]}], "}"}], 
       "]"}], ",", "All", ",", 
      RowBox[{"PlotLabel", "->", "\"\<Angular velocity\>\""}]}], "]"}], ",", 
    RowBox[{"ImageResolution", "\[Rule]", "80"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "900"}]}], "]"}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell["\:0421\:0440\:0430\:0432\:043d\:0435\:043d\:0438\:044f", "Subsection",
 CellChangeTimes->{{3.442134679046875*^9, 3.44213468496875*^9}, {
  3.46708977580625*^9, 3.46708977855625*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"p1", ",", "vx1", ",", "vy1", ",", "vz1", ",", "nut1"}], "}"}], 
   "=", 
   RowBox[{"ReadTextSnapFile2D", "[", 
    RowBox[{"\"\<pumpflow_1_0.snp\>\"", ",", "5", ",", 
     RowBox[{"PrintInfo", "\[Rule]", "None"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.4670214012125*^9, 3.4670214074*^9}, {
  3.467023324728125*^9, 3.467023333696875*^9}, {3.467089760884375*^9, 
  3.46708976124375*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"p", ",", "vx", ",", "vy", ",", "vz", ",", "nut"}], "}"}], "=", 
   RowBox[{"ReadTextSnapFile2D", "[", 
    RowBox[{"\"\<pumpflow_1_1.snp\>\"", ",", "5", ",", 
     RowBox[{"PrintInfo", "\[Rule]", "None"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.4670214012125*^9, 3.4670214074*^9}, {
  3.467023324728125*^9, 3.467023333696875*^9}, {3.467089760884375*^9, 
  3.46708977343125*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "/@", 
  RowBox[{"Abs", "/@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p1", ",", "vx1", ",", "vy1", ",", "vz1", ",", "nut1"}], "}"}], 
     "-", 
     RowBox[{"{", 
      RowBox[{"p", ",", "vx", ",", "vy", ",", "vz", ",", "nut"}], "}"}]}], 
    ")"}]}]}]], "Input",
 CellChangeTimes->{{3.467021568571875*^9, 3.4670215710875*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.0000000000027348`*^-7", ",", "1.8099999999999878`*^-9", ",", "0.`", ",", 
   "1.500000000000748`*^-9", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.467021571446875*^9, 3.467023340571875*^9, 
  3.46702345130625*^9, 3.467023630603125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "/@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"p1", ",", "vx1", ",", "vy1", ",", "vz1", ",", "nut1"}], "}"}], 
    "-", 
    RowBox[{"{", 
     RowBox[{"p", ",", "vx", ",", "vy", ",", "vz", ",", "nut"}], "}"}]}], 
   ")"}]}]], "Input",
 CellChangeTimes->{{3.4670214189*^9, 3.467021445259375*^9}, {
   3.467022761228125*^9, 3.467022763009375*^9}, 3.4670233450875*^9, {
   3.46702360336875*^9, 3.46702361043125*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[RasterBox[CompressedData["
1:eJzt1y0KAkEYgOFBsHsAi81g2Cyyh7ALIpgMguDvISw276Js9gJWMRo9gfh3
BWfcfT4YnvoyTJivNZr2x7UQQudzQjjs7+dNTpIkSZIkSZIkSZIkSfIffE7W
i99BMl2/E7uDJPmyuNUHp1n8jtK7PBbtVQIdJXfYnHR3CXRUxcvCu/7pfWfX
7Xqev//SDXs3SZKsvA98fAdS
     "], {{0, 0}, {44, 44}}, {0, 1.0000000000027348`*^-7}],
    Frame->Automatic,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}}], ",", 
   GraphicsBox[RasterBox[CompressedData["
1:eJzt0LEJgEAUA9CPU9iI2Fk4gJVDOIEI1nbOdAMprmPjzXCCLxBeG9Kt+7xV
ETG8jXSdR91OJEmSJEmSJEmSJEmSJEmSJEmS/Ij9eKelKb/jL+a/c0rvIUmS
LOwDPR10rA==
     "], {{0, 0}, {44, 44}}, {0, 1.8099999999999878`*^-9}],
    Frame->Automatic,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}}], ",", 
   GraphicsBox[RasterBox[CompressedData["
1:eJztxUEJACAABMHDJv7tYAcjCL6tbgQfGmMWlqlzj1WStP/rdJIkSZIkSZIk
SZIkSZIkSZIkSZIkSZK8Kb717A==
     "], {{0, 0}, {44, 44}}, {0, 1}],
    Frame->Automatic,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}}], ",", 
   GraphicsBox[RasterBox[CompressedData["
1:eJztzrENQFAYhdE/NqBT6k2gMIOYQCRqSz5DSLRvDw0zvJBzk5vTft26z1sV
Ef3zmIarPtqRJEmSJEmSJEmSJEmS5Ad8V7qDJEmSJMk/uqR85qZ8B0mSZGFv
7I15wg==
     "], {{0, 0}, {44, 44}}, {0, 1.500000000000748*^-9}],
    Frame->Automatic,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}}], ",", 
   GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmJiYGDQgWLGUTAKRsEoGAWjYBQMOAAA4N4JkQ==
     "], {{0, 0}, {44, 44}}, {0, 1}],
    Frame->Automatic,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}}]}], "}"}]], "Output",
 CellChangeTimes->{{3.467021429509375*^9, 3.467021445696875*^9}, 
   3.46702276336875*^9, {3.4670233424625*^9, 3.467023345446875*^9}, 
   3.467023452571875*^9, {3.46702360565*^9, 3.467023632353125*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\:0422\:0440\:0451\:0445\:043c\:0435\:0440\:043d\:043e\:0435 \:043f\
\:043e\:043a\:0430 \:043d\:0435 \:0440\:0430\:0431\:043e\:0442\:0430\:044e\
\:0449\:0435\:0435", "Subsection",
 CellChangeTimes->{{3.442134679046875*^9, 3.44213468496875*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Show2x", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"DensityPlot", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"z", "-", 
              RowBox[{"Mean", "[", 
               RowBox[{
               "bounds", "\[LeftDoubleBracket]", "3", 
                "\[RightDoubleBracket]"}], "]"}]}], ")"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"r", "-", 
              RowBox[{"Mean", "[", 
               RowBox[{
               "bounds", "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}], "]"}]}], ")"}], "2"]}], 
          "\[LessEqual]", 
          FractionBox[
           RowBox[{
            RowBox[{"bounds", "\[LeftDoubleBracket]", 
             RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "-", 
            RowBox[{"bounds", "\[LeftDoubleBracket]", 
             RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], "2"]}], 
         ",", "#", ",", "0"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", 
         RowBox[{"bounds", "\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
         RowBox[{"bounds", "\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"z", ",", 
         RowBox[{"bounds", "\[LeftDoubleBracket]", 
          RowBox[{"3", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
         RowBox[{"bounds", "\[LeftDoubleBracket]", 
          RowBox[{"3", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}], ",", 
       RowBox[{"DisplayFunction", "\[Rule]", "Identity"}]}], "]"}], "&"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"vri", "[", 
       RowBox[{"r", ",", "0", ",", "z"}], "]"}], ",", 
      RowBox[{"v\[Phi]i", "[", 
       RowBox[{"r", ",", "0", ",", "z"}], "]"}], ",", 
      RowBox[{"vzi", "[", 
       RowBox[{"r", ",", "0", ",", "z"}], "]"}], ",", 
      RowBox[{"pi", "[", 
       RowBox[{"r", ",", "0", ",", "z"}], "]"}]}], "}"}]}], "]"}], 
  ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Show2x", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ContourPlot", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"z", "-", 
              RowBox[{"Mean", "[", 
               RowBox[{
               "bounds", "\[LeftDoubleBracket]", "3", 
                "\[RightDoubleBracket]"}], "]"}]}], ")"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"r", "-", 
              RowBox[{"Mean", "[", 
               RowBox[{
               "bounds", "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}], "]"}]}], ")"}], "2"]}], 
          "\[LessEqual]", 
          FractionBox[
           RowBox[{
            RowBox[{"bounds", "\[LeftDoubleBracket]", 
             RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "-", 
            RowBox[{"bounds", "\[LeftDoubleBracket]", 
             RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], "2"]}], 
         ",", "#", ",", "0"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", 
         RowBox[{"bounds", "\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
         RowBox[{"bounds", "\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"z", ",", 
         RowBox[{"bounds", "\[LeftDoubleBracket]", 
          RowBox[{"3", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
         RowBox[{"bounds", "\[LeftDoubleBracket]", 
          RowBox[{"3", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"\"\<Max=\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"Max", "[", "#", "]"}], "]"}], "<>", "\"\<; Min=\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"Min", "[", "#", "]"}], "]"}]}]}], ",", 
       RowBox[{"Contours", "\[Rule]", "20"}], ",", 
       RowBox[{"DisplayFunction", "->", "Identity"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"CutList", "[", 
           RowBox[{
            RowBox[{"Transpose", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Range", "[", 
                RowBox[{"Length", "[", 
                 RowBox[{
                 "coor", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}], "]"}], "]"}], ",", 
               RowBox[{
               "coor", "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}]}], "}"}], "]"}], ",", "10"}], "]"}],
           ",", 
          RowBox[{"CutList", "[", 
           RowBox[{
            RowBox[{"Transpose", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Range", "[", 
                RowBox[{"Length", "[", 
                 RowBox[{
                 "coor", "\[LeftDoubleBracket]", "3", 
                  "\[RightDoubleBracket]"}], "]"}], "]"}], ",", 
               RowBox[{
               "coor", "\[LeftDoubleBracket]", "3", 
                "\[RightDoubleBracket]"}]}], "}"}], "]"}], ",", "10"}], "]"}],
           ",", "None", ",", "None"}], "}"}]}], ",", 
       RowBox[{"Axes", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"AxesOrigin", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}]}]}], "]"}], "&"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"vri", "[", 
       RowBox[{"r", ",", "0", ",", "z"}], "]"}], ",", 
      RowBox[{"v\[Phi]i", "[", 
       RowBox[{"r", ",", "0", ",", "z"}], "]"}], ",", 
      RowBox[{"vzi", "[", 
       RowBox[{"r", ",", "0", ",", "z"}], "]"}], ",", 
      RowBox[{"pi", "[", 
       RowBox[{"r", ",", "0", ",", "z"}], "]"}]}], "}"}]}], "]"}], 
  ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Show2x", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Plot3D", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"z", "-", 
              RowBox[{"Mean", "[", 
               RowBox[{
               "bounds", "\[LeftDoubleBracket]", "3", 
                "\[RightDoubleBracket]"}], "]"}]}], ")"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"r", "-", 
              RowBox[{"Mean", "[", 
               RowBox[{
               "bounds", "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}], "]"}]}], ")"}], "2"]}], 
          "\[LessEqual]", 
          FractionBox[
           RowBox[{
            RowBox[{"bounds", "\[LeftDoubleBracket]", 
             RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "-", 
            RowBox[{"bounds", "\[LeftDoubleBracket]", 
             RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], "2"]}], 
         ",", "#", ",", "0"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", 
         RowBox[{"bounds", "\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
         RowBox[{"bounds", "\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"z", ",", 
         RowBox[{"bounds", "\[LeftDoubleBracket]", 
          RowBox[{"3", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
         RowBox[{"bounds", "\[LeftDoubleBracket]", 
          RowBox[{"3", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"DisplayFunction", "\[Rule]", "Identity"}]}], "]"}], "&"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"vri", "[", 
       RowBox[{"r", ",", "0", ",", "z"}], "]"}], ",", 
      RowBox[{"v\[Phi]i", "[", 
       RowBox[{"r", ",", "0", ",", "z"}], "]"}], ",", 
      RowBox[{"vzi", "[", 
       RowBox[{"r", ",", "0", ",", "z"}], "]"}], ",", 
      RowBox[{"pi", "[", 
       RowBox[{"r", ",", "0", ",", "z"}], "]"}]}], "}"}]}], "]"}], 
  ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"vxi", ",", "vyi", ",", "vzi", ",", "pi", ",", "nuti"}], "}"}], 
   "=", 
   RowBox[{
    RowBox[{
     RowBox[{"ListInterpolation", "[", 
      RowBox[{"#", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Min", "[", 
            RowBox[{
            "coor", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            "]"}], ",", 
           RowBox[{"Max", "[", 
            RowBox[{
            "coor", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Min", "[", 
            RowBox[{
            "coor", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
            "]"}], ",", 
           RowBox[{"Max", "[", 
            RowBox[{
            "coor", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
            "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Min", "[", 
            RowBox[{
            "coor", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
            "]"}], ",", 
           RowBox[{"Max", "[", 
            RowBox[{
            "coor", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
            "]"}]}], "}"}]}], "}"}], ",", 
       StyleBox[
        RowBox[{"InterpolationOrder", "->", "1"}], "MR"]}], "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{"vxs", ",", "vys", ",", "vzs", ",", "p", ",", "nut"}], "}"}]}]}],
   ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<fieldRe=1rc=4.gif\>\"", ",", "gds", ",", 
    RowBox[{"ImageResolution", "\[Rule]", "80"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "900"}]}], "]"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"gds", "=", 
   RowBox[{"DisplayTogetherArray", "[", 
    RowBox[{
     RowBox[{"SectionRZ", "[", 
      RowBox[{"vxi", ",", "vyi", ",", "vzi", ",", 
       RowBox[{"0.2`", " ", "\[Pi]"}]}], "]"}], ",", 
     RowBox[{"SectionR\[CapitalPhi]", "[", 
      RowBox[{"vxi", ",", "vyi", ",", "vzi", ",", 
       RowBox[{"Mean", "[", 
        RowBox[{
        "bounds", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
        "]"}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ",", 
     RowBox[{"Section\[CapitalPhi]Z", "[", 
      RowBox[{"vxi", ",", "vyi", ",", "vzi", ",", 
       RowBox[{"Mean", "[", 
        RowBox[{
        "bounds", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        "]"}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ",", 
     RowBox[{"Spacings", "\[Rule]", 
      RowBox[{"Scaled", "[", "0.`", "]"}]}]}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"gds", "=", 
    RowBox[{"DrawSection", "[", 
     RowBox[{"\"\<pumpflow64x64x64Re=10rc=4.snp\>\"", ",", "5"}], "]"}]}], 
   ",", 
   RowBox[{"DisplayFunction", "\[Rule]", "$DisplayFunction"}]}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"vxs", ",", "vys", ",", "vzs", ",", "ps", ",", "nuts"}], "}"}], 
   "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{"node", "/.", 
            RowBox[{"b_", ":>", 
             RowBox[{"0", "/;", 
              RowBox[{"b", "\[NotEqual]", "8"}]}]}]}], "8"], "#"}], "&"}], "/@", 
        RowBox[{"Transpose", "[", "#", "]"}]}], ")"}], "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{"vx", ",", "vy", ",", "vz", ",", "p", ",", "nut"}], "}"}]}]}], 
  ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ps", "=", 
   RowBox[{
    FractionBox[
     RowBox[{"node", "/.", 
      RowBox[{"b_", ":>", 
       RowBox[{"0", "/;", 
        RowBox[{"b", "\[NotEqual]", "8"}]}]}]}], "8"], 
    RowBox[{"(", 
     RowBox[{"ps", "-", 
      RowBox[{"Mean", "[", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", "ps", "]"}], ",", 
         RowBox[{
          RowBox[{"#", "\[NotEqual]", "0"}], "&"}]}], "]"}], "]"}]}], 
     ")"}]}]}], ";"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"vys", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"node", "/.", 
        RowBox[{"b_", ":>", 
         RowBox[{"0", "/;", 
          RowBox[{"b", "\[NotEqual]", "8"}]}]}]}], "8"], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "&"}], "/@", "vy"}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"ghost", "+", "1"}], ",", 
       RowBox[{"n2", "+", "ghost"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PrintRange", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Mean", "[", 
      RowBox[{"Mean", "[", "#", "]"}], "]"}], "&"}], "/@", "vys"}], "]"}], 
  ";"}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"SectionRZ", "[", 
     RowBox[{"\[Pi]", " ", 
      FractionBox["i", "100"]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "10", ",", "200"}], "}"}]}], "]"}], ";"}]], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
\:041f\:043e\:0441\:0442\:0440\:043e\:0435\:043d\:0438\:0435 \:0433\:0440\
\:0430\:0444\:0438\:043a\:043e\:0432 \:0438 \:0430\:043d\:0438\:043c\:0430\
\:0446\:0438\:0438 \:0434\:0430\:0432\:043b\:0435\:043d\:0438\:044f\
\>", "Subsection",
 CellChangeTimes->{{3.442134701625*^9, 3.442134702421875*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dr", "=", 
   RowBox[{"ReadList", "[", "\"\<debug\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"nm", ",", "refr", ",", "refz"}], "}"}], "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Partition", "[", 
     RowBox[{"dr", ",", "3"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"node", "=", 
   RowBox[{"Clue", "[", 
    RowBox[{"nm", ",", "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"Set", "::", "write"}], "]"}], ";", 
  RowBox[{"Off", "[", 
   RowBox[{"General", "::", "spell1"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ReadPressure", "[", "iter_", "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "i", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Clear", "[", 
       RowBox[{"dumpRead", ",", "pm", ",", "p", ",", "ps"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"dumpRead", "=", 
       RowBox[{"ReadList", "[", 
        RowBox[{"\"\<runtest1_\>\"", "<>", 
         RowBox[{"ToString", "[", "iter", "]"}], "<>", "\"\<.snp\>\""}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "t", ",", "count", ",", "np", ",", "n1", ",", "n2", ",", "n3", ",", 
         "Rey"}], "}"}], "=", 
       RowBox[{"Take", "[", 
        RowBox[{"dumpRead", ",", "7"}], "]"}]}], ";", 
      RowBox[{"dumpRead", "=", 
       RowBox[{"Drop", "[", 
        RowBox[{"dumpRead", ",", "7"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"vxm", ",", "vym", ",", "vzm", ",", "pm", ",", "nutm"}], 
        "}"}], "=", 
       RowBox[{"Transpose", "[", 
        RowBox[{"Partition", "[", 
         RowBox[{"dumpRead", ",", "5"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p", "=", 
       RowBox[{"First", "[", 
        RowBox[{"Fold", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{"Function", "[", 
              RowBox[{"m", ",", 
               RowBox[{"Clue", "[", 
                RowBox[{"m", ",", "#2"}], "]"}]}], "]"}], ",", 
             RowBox[{"Partition", "[", 
              RowBox[{"#1", ",", 
               RowBox[{
               "np", "\[LeftDoubleBracket]", "#2", 
                "\[RightDoubleBracket]"}]}], "]"}], ",", 
             RowBox[{"{", "1", "}"}]}], "]"}], "&"}], ",", "pm", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ps", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{"node", "/.", 
            RowBox[{"b_", ":>", 
             RowBox[{"0", "/;", 
              RowBox[{"b", "\[NotEqual]", "8"}]}]}]}], "8"], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "&"}], "/@", "p"}], ")"}]}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"ghost", "+", "1"}], ",", 
           RowBox[{"n2", "+", "ghost"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{
        RowBox[{
         SqrtBox[
          RowBox[{"Mean", "[", 
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"Flatten", "[", "#", "]"}], ",", "Positive"}], "]"}], 
           "]"}]], "&"}], "/@", 
        SuperscriptBox["ps", "2"]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"lpres", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"PrintRange", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"#", "-", 
           RowBox[{"Mean", "[", "#", "]"}]}], ")"}], "&"}], "@", 
        RowBox[{"ReadPressure", "[", "niter", "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.5"}], ",", "0.7"}], "}"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "niter"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"niter", ",", "100", ",", "300", ",", "100"}], "}"}]}], "]"}]}],
   ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ldifpres", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"PrintRange", "[", 
      RowBox[{
       RowBox[{"dif", "[", 
        RowBox[{"ReadPressure", "[", "niter", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.5"}], ",", "0.5"}], "}"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "niter"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"niter", ",", "100", ",", "14200", ",", "100"}], "}"}]}], 
    "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<pressure.gif\>\"", ",", "lpres"}], "]"}], ";"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dr", "=", 
   RowBox[{"ReadList", "[", "\"\<node\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"nm", ",", "refr", ",", "refz"}], "}"}], "=", 
    RowBox[{"Transpose", "[", 
     RowBox[{"Partition", "[", 
      RowBox[{"dr", ",", "3"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"node", "=", 
     RowBox[{"Clue", "[", 
      RowBox[{"nm", ",", "2"}], "]"}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"node", "=", 
   RowBox[{"First", "[", "nm", "]"}]}], ";"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ps", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"node", "/.", 
        RowBox[{"b_", ":>", 
         RowBox[{"0", "/;", 
          RowBox[{"b", "\[NotEqual]", "8"}]}]}]}], "8"], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "&"}], "/@", "p"}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"ghost", "+", "1"}], ",", 
       RowBox[{"n2", "+", "ghost"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PrintRange", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Mean", "[", 
      RowBox[{"Mean", "[", "#", "]"}], "]"}], "&"}], "/@", "ps"}], "]"}], 
  ";"}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"SectionRZ", "[", 
     RowBox[{"\[Pi]", " ", 
      FractionBox["i", "100"]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "10", ",", "200"}], "}"}]}], "]"}], ";"}]], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
\:041f\:043e\:0441\:0442\:0440\:043e\:0435\:043d\:0438\:0435 \:0433\:0440\
\:0430\:0444\:0438\:043a\:043e\:0432 \:0432\:0434\:043e\:043b\:044c \:0441\
\:043d\:044d\:043f\:043e\:0432\
\>", "Subsection",
 CellChangeTimes->{{3.4469741275*^9, 3.446974133875*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"GetShift", "[", 
   RowBox[{"iter_Integer", ",", 
    RowBox[{"nproc_Integer:", "1"}]}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "vy", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"vy", "=", 
      RowBox[{
       RowBox[{"ReadTextSnapFile2D", "[", 
        RowBox[{
         RowBox[{"\"\<pumpflow_\>\"", "<>", 
          RowBox[{"ToString", "[", "nproc", "]"}], "<>", "\"\<_\>\"", "<>", 
          RowBox[{"ToString", "[", "iter", "]"}], "<>", "\"\<.snp\>\""}], ",",
          "5", ",", 
         RowBox[{"PrintInfo", "\[Rule]", "None"}]}], "]"}], "[", 
       RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Chop", "[", 
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"fi", "=", 
           RowBox[{"Interpolation", "[", 
            RowBox[{"dif", "@", 
             RowBox[{"Transpose", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                "coor", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}], ",", 
                RowBox[{"vy", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", 
                   RowBox[{"\[LeftFloor]", 
                    FractionBox[
                    RowBox[{"Length", "[", 
                    SuperscriptBox["vy", "\[Transpose]"], "]"}], "2"], 
                    "\[RightFloor]"}]}], "]"}], "]"}]}], "}"}], "]"}]}], 
            "]"}]}], ",", "t$"}], "}"}], ",", 
        RowBox[{"t$", "/.", 
         RowBox[{"FindRoot", "[", 
          RowBox[{
           RowBox[{"fi", "[", "t$", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"t$", ",", 
             RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}]}], "]"}], 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.446973618984375*^9, 3.44697365671875*^9}, {
  3.446973941*^9, 3.446973966375*^9}, {3.4469740456875*^9, 
  3.44697407940625*^9}, {3.446974167375*^9, 3.4469741905625*^9}, {
  3.46709012568125*^9, 3.46709017630625*^9}, {3.46709023593125*^9, 
  3.46709023674375*^9}, {3.467090579353125*^9, 3.467090589446875*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"GetShift", "[", 
   RowBox[{"res_", "?", "ArrayQ"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "vy", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"vy", "=", 
      RowBox[{"res", "[", 
       RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Chop", "[", 
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"fi", "=", 
           RowBox[{"Interpolation", "[", 
            RowBox[{"dif", "@", 
             RowBox[{"Transpose", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                "coor", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}], ",", 
                RowBox[{"vy", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", 
                   RowBox[{"\[LeftFloor]", 
                    FractionBox[
                    RowBox[{"Length", "[", 
                    SuperscriptBox["vy", "\[Transpose]"], "]"}], "2"], 
                    "\[RightFloor]"}]}], "]"}], "]"}]}], "}"}], "]"}]}], 
            "]"}]}], ",", "t$"}], "}"}], ",", 
        RowBox[{"t$", "/.", 
         RowBox[{"FindRoot", "[", 
          RowBox[{
           RowBox[{"fi", "[", "t$", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"t$", ",", 
             RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}]}], "]"}], 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.446973618984375*^9, 3.44697365671875*^9}, {
  3.446973941*^9, 3.446973966375*^9}, {3.4469740456875*^9, 
  3.44697407940625*^9}, {3.446974167375*^9, 3.4469741905625*^9}, {
  3.46709012568125*^9, 3.46709017630625*^9}, {3.46709023593125*^9, 
  3.46709023674375*^9}, {3.467090303978125*^9, 3.46709030415*^9}, {
  3.467090413040625*^9, 3.467090435634375*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ReadSection", "[", 
   RowBox[{"iter_", ",", 
    RowBox[{"nproc_:", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"ReadTextSnapFile2D", "[", 
   RowBox[{
    RowBox[{"\"\<pumpflow_\>\"", "<>", 
     RowBox[{"ToString", "[", "nproc", "]"}], "<>", "\"\<_\>\"", "<>", 
     RowBox[{"ToString", "[", "iter", "]"}], "<>", "\"\<.snp\>\""}], ",", "5",
     ",", 
    RowBox[{"PrintInfo", "\[Rule]", "None"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.449217835171875*^9, 3.44921786803125*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"nums", "=", 
  RowBox[{"Union", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ToExpression", "[", 
      RowBox[{"First", "[", 
       RowBox[{"StringCases", "[", 
        RowBox[{"#", ",", 
         RowBox[{
          RowBox[{
          "RegularExpression", "[", 
           "\"\<([^_]+?)_([^_]+?)_([^\\\\.]+?)\\\\.(.*?)\>\"", "]"}], 
          "\[Rule]", "\"\<$3\>\""}]}], "]"}], "]"}], "]"}], "&"}], "/@", 
    RowBox[{"FileNames", "[", "\"\<*.snp\>\"", "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", "nproc", "}"}], "=", 
  RowBox[{"Union", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ToExpression", "[", 
      RowBox[{"First", "[", 
       RowBox[{"StringCases", "[", 
        RowBox[{"#", ",", 
         RowBox[{
          RowBox[{
          "RegularExpression", "[", 
           "\"\<([^_]+?)_([^_]+?)_([^\\\\.]+?)\\\\.(.*?)\>\"", "]"}], 
          "\[Rule]", "\"\<$2\>\""}]}], "]"}], "]"}], "]"}], "&"}], "/@", 
    RowBox[{"FileNames", "[", "\"\<*.snp\>\"", "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.3960318271870003`*^9, 3.396032011225*^9}, {
  3.4095162687869997`*^9, 3.40951627287*^9}, {3.4325260897019997`*^9, 
  3.4325260898738747`*^9}, {3.446982362640625*^9, 3.446982411453125*^9}, {
  3.44698283146875*^9, 3.44698283471875*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "66284", ",", "217710", ",", "331566", ",", "430156", ",", "518303", ",", 
   "602893", ",", "681592", ",", "725225"}], "}"}]], "Output",
 CellChangeTimes->{
  3.446982411984375*^9, 3.446982834984375*^9, {3.448705433765625*^9, 
   3.4487054469375*^9}, {3.449217797359375*^9, 3.449217815609375*^9}, 
   3.449297757203125*^9, {3.449656447265625*^9, 3.44965645915625*^9}, 
   3.45023653646875*^9, 3.467089537571875*^9, 3.4670897883375*^9, 
   3.46709158136875*^9}],

Cell[BoxData[
 RowBox[{"{", "16", "}"}]], "Output",
 CellChangeTimes->{
  3.446982411984375*^9, 3.446982834984375*^9, {3.448705433765625*^9, 
   3.4487054469375*^9}, {3.449217797359375*^9, 3.449217815609375*^9}, 
   3.449297757203125*^9, {3.449656447265625*^9, 3.44965645915625*^9}, 
   3.45023653646875*^9, 3.467089537571875*^9, 3.4670897883375*^9, 
   3.46709158136875*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"res", "=", 
   RowBox[{"Most", "[", "res", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.4469805855625*^9, 3.446980587703125*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"res", "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{"Monitor", "[", 
   RowBox[{
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{"AppendTo", "[", 
       RowBox[{"res", ",", 
        RowBox[{"GetShift", "[", 
         RowBox[{
          RowBox[{
          "nums", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], ",",
           "nproc"}], "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "[", "nums", "]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"ListPlot", "[", 
     RowBox[{"res", ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{
       "nums", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}]}], 
     "]"}]}], "]"}], ";", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"res", ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"Last", "[", "res", "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.428221763703125*^9, 3.428221767546875*^9}, {
   3.428221849*^9, 3.4282219504375*^9}, {3.43200628800287*^9, 
   3.43200632558327*^9}, {3.4320063812908697`*^9, 3.43200642035327*^9}, {
   3.43200668839327*^9, 3.4320066920436697`*^9}, 3.4320068530356703`*^9, {
   3.4322761868780003`*^9, 3.4322761873459997`*^9}, {3.4325278069363747`*^9, 
   3.4325278116707497`*^9}, {3.4331415057945004`*^9, 
   3.4331415071851254`*^9}, {3.434096889484375*^9, 3.434096908203125*^9}, 
   3.434097010875*^9, {3.434097069171875*^9, 3.434097069234375*^9}, 
   3.434097673359375*^9, 3.434109339859375*^9, 3.4341094461875*^9, 
   3.434109503421875*^9, {3.43411058984375*^9, 3.43411059396875*^9}, {
   3.44697422465625*^9, 3.44697427128125*^9}, {3.446982060265625*^9, 
   3.446982061140625*^9}, {3.446983047859375*^9, 3.4469830545625*^9}, {
   3.448705516109375*^9, 3.4487055309375*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"res", "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{"Monitor", "[", 
   RowBox[{
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{"AppendTo", "[", 
       RowBox[{"res", ",", 
        RowBox[{"ReadSection", "[", 
         RowBox[{
          RowBox[{
          "nums", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], ",",
           "nproc"}], "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "[", "nums", "]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"nums", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.428221763703125*^9, 3.428221767546875*^9}, {
   3.428221849*^9, 3.4282219504375*^9}, {3.43200628800287*^9, 
   3.43200632558327*^9}, {3.4320063812908697`*^9, 3.43200642035327*^9}, {
   3.43200668839327*^9, 3.4320066920436697`*^9}, 3.4320068530356703`*^9, {
   3.4322761868780003`*^9, 3.4322761873459997`*^9}, {3.4325278069363747`*^9, 
   3.4325278116707497`*^9}, {3.4331415057945004`*^9, 
   3.4331415071851254`*^9}, {3.434096889484375*^9, 3.434096908203125*^9}, 
   3.434097010875*^9, {3.434097069171875*^9, 3.434097069234375*^9}, 
   3.434097673359375*^9, 3.434109339859375*^9, 3.4341094461875*^9, 
   3.434109503421875*^9, {3.43411058984375*^9, 3.43411059396875*^9}, {
   3.44697422465625*^9, 3.44697427128125*^9}, {3.446982060265625*^9, 
   3.446982061140625*^9}, {3.446983047859375*^9, 3.4469830545625*^9}, {
   3.448705516109375*^9, 3.4487055309375*^9}, {3.449217877796875*^9, 
   3.449217916671875*^9}}],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ListContourPlot", "[", 
    SuperscriptBox[
     RowBox[{"res", "\[LeftDoubleBracket]", 
      RowBox[{"i", ",", "3"}], "\[RightDoubleBracket]"}], "\[Transpose]"], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", 
     RowBox[{"Length", "[", "res", "]"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4492222844375*^9, 3.44922233209375*^9}, {
  3.4496564793125*^9, 3.449656495609375*^9}}],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ListStreamPlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"res", "\[LeftDoubleBracket]", 
          RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
         RowBox[{"res", "\[LeftDoubleBracket]", 
          RowBox[{"i", ",", "4"}], "\[RightDoubleBracket]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{"Max", "/@", 
        RowBox[{
        "res", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
       ")"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", 
     RowBox[{"Length", "[", "res", "]"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4492220525625*^9, 3.44922215978125*^9}, 
   3.44922224765625*^9, {3.449222641671875*^9, 3.449222672390625*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"Map", "[", 
    RowBox[{"Max", ",", 
     RowBox[{"Rest", "/@", "res"}], ",", 
     RowBox[{"{", "2", "}"}]}], "]"}], "\[Transpose]"], "//", 
  "ListPlot"}]], "Input",
 CellChangeTimes->{{3.44922173221875*^9, 3.44922183125*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"infos", "=", "ScanSnaps"}], ";"}]], "Input",
 CellChangeTimes->{{3.448707313078125*^9, 3.448707322734375*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\:0421\:0435\:0442\:043a\:0430 \:043e\:0434\:0438\:043d\:0430\
\:043a\:043e\:0432\:0430\:044f: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"128", ",", "128", ",", "1.`"}], "}"}]}],
  SequenceForm[
  "\:0421\:0435\:0442\:043a\:0430 \:043e\:0434\:0438\:043d\:0430\:043a\:043e\
\:0432\:0430\:044f: ", {128, 128, 1.}],
  Editable->False]], "Print",
 CellChangeTimes->{3.449217953125*^9, 3.467090047665625*^9, 
  3.467091590446875*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\:0414\:0435\:043b\:0435\:043d\:0438\:0435 \:043d\:0430 \:043f\
\:0440\:043e\:0446\:0435\:0441\:0441\:044b \:043e\:0434\:0438\:043d\:0430\
\:043a\:043e\:0432\:043e\:0435: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"4", ",", "4"}], "}"}]}],
  SequenceForm[
  "\:0414\:0435\:043b\:0435\:043d\:0438\:0435 \:043d\:0430 \:043f\:0440\:043e\
\:0446\:0435\:0441\:0441\:044b \:043e\:0434\:0438\:043d\:0430\:043a\:043e\
\:0432\:043e\:0435: ", {4, 4}],
  Editable->False]], "Print",
 CellChangeTimes->{3.449217953125*^9, 3.467090047665625*^9, 
  3.467091590446875*^9}],

Cell[BoxData["\<\"\:0421\:0442\:0440\:0443\:043a\:0442\:0443\:0440\:0430 \
\:0443 \:0432\:0441\:0435\:0445 \:043e\:0434\:0438\:043d\:0430\:043a\:043e\
\:0432\:0430\:044f\"\>"], "Print",
 CellChangeTimes->{3.449217953125*^9, 3.467090047665625*^9, 
  3.4670915904625*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  SuperscriptBox[
   RowBox[{"{", 
    RowBox[{
     RowBox[{"First", "/@", 
      RowBox[{"SortBy", "[", 
       RowBox[{
        RowBox[{"Most", "/@", "infos"}], ",", "Last"}], "]"}]}], ",", 
     RowBox[{"GetShift", "/@", "res"}]}], "}"}], "\[Transpose]"], 
  "]"}]], "Input",
 CellChangeTimes->{{3.4487073404375*^9, 3.448707440203125*^9}, {
  3.44870815765625*^9, 3.44870817340625*^9}, {3.467091197665625*^9, 
  3.46709119999375*^9}}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"GetShift", "/@", "res"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.27", ",", "0.29"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.448706945078125*^9, 3.44870696240625*^9}, 
   3.467091641196875*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLimit", "[", 
  RowBox[{
   RowBox[{"Take", "[", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"{", 
       RowBox[{
        RowBox[{"First", "/@", 
         RowBox[{"SortBy", "[", 
          RowBox[{
           RowBox[{"Most", "/@", "infos"}], ",", "Last"}], "]"}]}], ",", 
        RowBox[{"GetShift", "/@", "res"}]}], "}"}], "\[Transpose]"], ",", 
     RowBox[{"{", 
      RowBox[{"150", ",", "270"}], "}"}]}], "]"}], ",", 
   RowBox[{"CutValues", "\[Rule]", "False"}], ",", 
   RowBox[{"Shift", "\[Rule]", "False"}], ",", 
   RowBox[{"ApproximationReport", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"LimitPlot", ",", "PolynomDegree"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.448706609703125*^9, 3.448706629359375*^9}, {
   3.448706754078125*^9, 3.448706906828125*^9}, {3.44870775665625*^9, 
   3.448707797875*^9}, 3.46709164518125*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"degree of hyperbole=\"\>", "\[InvisibleSpace]", "1"}],
  SequenceForm["degree of hyperbole=", 1],
  Editable->False]], "Print",
 CellChangeTimes->{{3.448706794921875*^9, 3.44870690725*^9}, {
  3.44870775765625*^9, 3.448707799546875*^9}}],

Cell[BoxData["0.25197598905658086`"], "Output",
 CellChangeTimes->{{3.448706614375*^9, 3.448706630015625*^9}, {
  3.448706765078125*^9, 3.448706907265625*^9}, {3.448707757671875*^9, 
  3.448707799546875*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:041f\:0440\:043e\:0432\:0435\:0440\:043a\:0430 \:0442\:0438\:043f\
\:043e\:0432 \:044f\:0447\:0435\:0435\:043a", "Subsection",
 CellChangeTimes->{{3.44213471275*^9, 3.44213471553125*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ghost", "=", "3"}], ";"}]], "Input",
 CellChangeTimes->{{3.442135780828125*^9, 3.4421357823125*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"node", ",", 
     RowBox[{"{", 
      RowBox[{"rr", ",", "rz"}], "}"}]}], "}"}], "=", 
   RowBox[{"ReadAuxFiles2D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<node\>\"", ",", "\"\<ref\>\""}], "}"}], ",", 
     RowBox[{"NumberOfRefs", "\[Rule]", "2"}], ",", 
     RowBox[{"ProcDistrib", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"2", ",", "2"}], "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.442134755296875*^9, 3.44213475790625*^9}, {
  3.44213538165625*^9, 3.442135392734375*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Union", "[", 
  RowBox[{"Flatten", "[", "node", "]"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "8", ",", "12", ",", "20"}], "}"}]], "Output",
 CellChangeTimes->{3.442134774765625*^9, 3.442134908984375*^9, 
  3.442135867109375*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ListDensityPlot", "[", "node", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"ListDensityPlot", "[", 
  RowBox[{"Transpose", "[", 
   RowBox[{"BitAnd", "[", 
    RowBox[{"node", ",", "8"}], "]"}], "]"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"gc", "=", 
  RowBox[{"Graphics", "[", 
   RowBox[{"Circle", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        FractionBox["n1", "2"], "+", "ghost"}], ",", 
       RowBox[{
        FractionBox["n1", "2"], "+", "ghost"}]}], "}"}], ",", 
     FractionBox["n1", "2"]}], "]"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DisplayTogether", "[", 
   RowBox[{
    RowBox[{"ListDensityPlot", "[", "node", "]"}], ",", "gc"}], "]"}], 
  ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ListDensityPlot", "/@", 
   RowBox[{"{", 
    RowBox[{"node", ",", "rr", ",", "rz"}], "}"}]}], ";"}]], "Input"],

Cell[BoxData[{
 RowBox[{"ListContourPlot", "[", "node", "]"}], "\n", 
 RowBox[{"ListContourPlot", "[", "rr", "]"}], "\n", 
 RowBox[{"ListContourPlot", "[", "rz", "]"}]}], "Input"]
}, Closed]]
}, Open  ]]
},
AutoGeneratedPackage->None,
WindowSize->{810, 619},
WindowMargins->{{Automatic, 57}, {Automatic, 0}},
ShowSelection->True,
Magnification->1.100000023841858,
FrontEndVersion->"7.0 for Microsoft Windows (32-bit) (November 10, 2008)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[545, 20, 239, 6, 32, "Input"],
Cell[CellGroupData[{
Cell[809, 30, 2149, 31, 32, "Input"],
Cell[2961, 63, 424, 6, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3422, 74, 247, 4, 32, "Input"],
Cell[3672, 80, 387, 6, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4096, 91, 850, 13, 32, "Input"],
Cell[4949, 106, 440, 7, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5426, 118, 197, 4, 32, "Input"],
Cell[5626, 124, 179, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5842, 132, 267, 4, 32, "Input"],
Cell[6112, 138, 289, 5, 32, "Output"]
}, Open  ]],
Cell[6416, 146, 1518, 49, 93, "Input"],
Cell[CellGroupData[{
Cell[7959, 199, 169, 2, 77, "Section"],
Cell[CellGroupData[{
Cell[8153, 205, 870, 25, 93, "Input"],
Cell[9026, 232, 217, 5, 32, "Output"]
}, Open  ]],
Cell[9258, 240, 850, 22, 32, "Input"],
Cell[10111, 264, 397, 12, 32, "Input"],
Cell[10511, 278, 921, 20, 73, "Input"],
Cell[CellGroupData[{
Cell[11457, 302, 201, 4, 36, "Input"],
Cell[11661, 308, 87, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11785, 314, 187, 4, 32, "Input"],
Cell[11975, 320, 260, 8, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12272, 333, 137, 2, 32, "Input"],
Cell[12412, 337, 628, 10, 32, "Output"]
}, Open  ]],
Cell[13055, 350, 249, 5, 49, "Text"],
Cell[13307, 357, 747, 21, 38, "Input"],
Cell[CellGroupData[{
Cell[14079, 382, 3001, 77, 224, "Input"],
Cell[17083, 461, 1174, 23, 158, "Output"]
}, Open  ]],
Cell[18272, 487, 8489, 156, 168, "Input"],
Cell[CellGroupData[{
Cell[26786, 647, 1509, 36, 73, "Input"],
Cell[28298, 685, 144760, 2397, 338, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[173095, 3087, 1207, 24, 53, "Input"],
Cell[CellGroupData[{
Cell[174327, 3115, 301, 7, 24, "Print"],
Cell[174631, 3124, 265, 6, 24, "Print"]
}, Open  ]],
Cell[174911, 3133, 226, 3, 32, "Output"]
}, Open  ]],
Cell[175152, 3139, 968, 26, 53, "Input"],
Cell[176123, 3167, 424, 12, 32, "Input"],
Cell[176550, 3181, 1058, 18, 32, "Input"],
Cell[CellGroupData[{
Cell[177633, 3203, 2142, 43, 73, "Input"],
Cell[CellGroupData[{
Cell[179800, 3250, 1466, 25, 24, "Print"],
Cell[181269, 3277, 1466, 25, 24, "Print"],
Cell[182738, 3304, 1466, 25, 24, "Print"],
Cell[184207, 3331, 1473, 25, 24, "Print"],
Cell[185683, 3358, 1470, 25, 24, "Print"],
Cell[187156, 3385, 1469, 25, 24, "Print"]
}, Open  ]],
Cell[188640, 3413, 967, 17, 32, "Output"]
}, Open  ]],
Cell[189622, 3433, 1322, 35, 93, "Input"],
Cell[190947, 3470, 1204, 32, 93, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[192188, 3507, 233, 3, 77, "Section"],
Cell[CellGroupData[{
Cell[192446, 3514, 1160, 32, 73, "Input"],
Cell[193609, 3548, 774, 14, 22, "Message"],
Cell[194386, 3564, 779, 14, 22, "Message"],
Cell[195168, 3580, 805, 14, 22, "Message"],
Cell[195976, 3596, 693, 12, 22, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[196706, 3613, 178, 4, 32, "Input"],
Cell[196887, 3619, 274, 6, 56, "Output"]
}, Open  ]],
Cell[197176, 3628, 1442, 34, 134, "Input"],
Cell[198621, 3664, 245, 5, 32, "Input"],
Cell[CellGroupData[{
Cell[198891, 3673, 5371, 91, 113, "Input"],
Cell[CellGroupData[{
Cell[204287, 3768, 841, 14, 24, "Print"],
Cell[205131, 3784, 901, 16, 24, "Print"],
Cell[206035, 3802, 917, 16, 24, "Print"],
Cell[206955, 3820, 989, 20, 24, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[207993, 3846, 495, 12, 32, "Input"],
Cell[208491, 3860, 213, 4, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[208741, 3869, 251, 6, 32, "Input"],
Cell[208995, 3877, 371, 8, 34, "Output"]
}, Open  ]],
Cell[209381, 3888, 604, 14, 53, "Input"],
Cell[CellGroupData[{
Cell[210010, 3906, 159, 3, 32, "Input"],
Cell[210172, 3911, 921, 15, 32, "Output"]
}, Open  ]],
Cell[211108, 3929, 229, 5, 36, "Input"],
Cell[211340, 3936, 913, 22, 57, "Input"],
Cell[CellGroupData[{
Cell[212278, 3962, 1264, 35, 109, "Input"],
Cell[213545, 3999, 2368, 36, 32, "Output"]
}, Open  ]],
Cell[215928, 4038, 770, 14, 36, "Input"],
Cell[216701, 4054, 507, 13, 32, "Input"],
Cell[217211, 4069, 860, 23, 106, "Input"],
Cell[CellGroupData[{
Cell[218096, 4096, 188, 2, 40, "Subsection"],
Cell[218287, 4100, 463, 11, 32, "Input"],
Cell[218753, 4113, 454, 10, 32, "Input"],
Cell[CellGroupData[{
Cell[219232, 4127, 383, 11, 32, "Input"],
Cell[219618, 4140, 287, 6, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[219942, 4151, 470, 12, 32, "Input"],
Cell[220415, 4165, 1868, 43, 446, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[222332, 4214, 250, 3, 30, "Subsection"],
Cell[222585, 4219, 2190, 57, 160, "Input"],
Cell[224778, 4278, 3941, 99, 260, "Input"],
Cell[228722, 4379, 2239, 58, 160, "Input"],
Cell[230964, 4439, 1572, 46, 93, "Input"],
Cell[232539, 4487, 234, 5, 32, "Input"],
Cell[232776, 4494, 963, 23, 93, "Input"],
Cell[233742, 4519, 274, 8, 53, "Input"],
Cell[234019, 4529, 660, 21, 69, "Input"],
Cell[234682, 4552, 505, 17, 48, "Input"],
Cell[235190, 4571, 789, 27, 69, "Input"],
Cell[235982, 4600, 256, 8, 47, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[236275, 4613, 311, 5, 30, "Subsection"],
Cell[236589, 4620, 3711, 104, 333, "Input"],
Cell[240303, 4726, 626, 19, 53, "Input"],
Cell[240932, 4747, 515, 15, 53, "Input"],
Cell[241450, 4764, 124, 3, 32, "Input"],
Cell[241577, 4769, 646, 21, 93, "Input"],
Cell[242226, 4792, 786, 27, 69, "Input"],
Cell[243015, 4821, 256, 8, 47, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[243308, 4834, 269, 5, 30, "Subsection"],
Cell[243580, 4841, 2215, 54, 205, "Input"],
Cell[245798, 4897, 1888, 47, 193, "Input"],
Cell[247689, 4946, 533, 12, 73, "Input"],
Cell[CellGroupData[{
Cell[248247, 4962, 1303, 34, 253, "Input"],
Cell[249553, 4998, 503, 10, 32, "Output"],
Cell[250059, 5010, 375, 7, 32, "Output"]
}, Open  ]],
Cell[250449, 5020, 167, 4, 32, "Input"],
Cell[250619, 5026, 1773, 40, 73, "Input"],
Cell[252395, 5068, 1566, 33, 53, "Input"],
Cell[253964, 5103, 487, 12, 36, "Input"],
Cell[254454, 5117, 988, 25, 53, "Input"],
Cell[255445, 5144, 282, 8, 34, "Input"],
Cell[CellGroupData[{
Cell[255752, 5156, 145, 3, 32, "Input"],
Cell[CellGroupData[{
Cell[255922, 5163, 493, 11, 24, "Print"],
Cell[256418, 5176, 621, 13, 24, "Print"],
Cell[257042, 5191, 269, 4, 24, "Print"]
}, Open  ]]
}, Open  ]],
Cell[257338, 5199, 479, 13, 36, "Input"],
Cell[257820, 5214, 304, 8, 32, "Input"],
Cell[CellGroupData[{
Cell[258149, 5226, 881, 22, 58, "Input"],
Cell[259033, 5250, 286, 6, 24, "Print"],
Cell[259322, 5258, 208, 3, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[259579, 5267, 195, 2, 40, "Subsection"],
Cell[259777, 5271, 135, 3, 32, "Input"],
Cell[259915, 5276, 578, 16, 53, "Input"],
Cell[CellGroupData[{
Cell[260518, 5296, 95, 2, 32, "Input"],
Cell[260616, 5300, 184, 4, 32, "Output"]
}, Open  ]],
Cell[260815, 5307, 71, 1, 32, "Input"],
Cell[260889, 5310, 166, 4, 32, "Input"],
Cell[261058, 5316, 342, 11, 47, "Input"],
Cell[261403, 5329, 161, 5, 32, "Input"],
Cell[261567, 5336, 146, 4, 32, "Input"],
Cell[261716, 5342, 179, 3, 73, "Input"]
}, Closed]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
