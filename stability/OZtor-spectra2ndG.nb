(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[   1404768,      29306]
NotebookOptionsPosition[   1387098,      28739]
NotebookOutlinePosition[   1387558,      28759]
CellTagsIndexPosition[   1387515,      28756]
WindowFrame->Normal
ContainsDynamic->True *)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"<<", "ACPackages`"}]], "Input",
 InitializationCell->True],

Cell[CellGroupData[{

Cell["\:041f\:043e\:0441\:0442\:0440\:043e\:0435\:043d\:0438\:0435 \:0441\
\:0438\:0441\:0442\:0435\:043c\:044b \:0438 \:043c\:0430\:0442\:0440\:0438\
\:0446", "Section"],

Cell[CellGroupData[{

Cell["\<\
(\:041f\:043e\:043b\:0443\:0447\:0435\:043d\:0438\:0435 \:0443\:0440\:0430\
\:0432\:043d\:0435\:043d\:0438\:0439 \:0441\:043c.CurvSystCoor-pseudotor.nb)
\:041e\:043f\:0440\:0435\:0434\:0435\:043b\:0435\:043d\:0438\:0435 \:0441\
\:0438\:0441\:0442\:0435\:043c\:044b \
eqs\[Phi]r[\[Lambda]_,\[Omega]_,\[Kappa]_,m_,Re_]\
\>", "Subsection",
 CellChangeTimes->{3.406009753566*^9}],

Cell[CellGroupData[{

Cell["\<\
\:0440\:0430\:0437\:043b\:043e\:0436\:0435\:043d\:043d\:043e\:0435 \:043f\
\:043e \:043c\:043e\:0434\:0430\:043c (\:0441 1-\:0439 \:043d\:0435\:0432\
\:0435\:0440\:043d\:043e, \:0442.\:043a. \:043d\:0435\:0442 \
\:0437\:0430\:0446\:0435\:043f\:043b\:0435\:043d\:0438\:044f \:043c\:043e\
\:0434)\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"eqs\[Phi]r", "[", 
    RowBox[{
    "\[Lambda]_", ",", "\[Omega]_", ",", "\[Kappa]_", ",", "m_", ",", "Re_"}],
     "]"}], ":=", 
   RowBox[{"Which", "[", 
    RowBox[{
     RowBox[{"m", "\[Equal]", "0"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Re", " ", "\[Lambda]", " ", "\[Rho]", " ", 
         RowBox[{"v\[Zeta]", "[", "\[Rho]", "]"}]}], "-", 
        RowBox[{
         SuperscriptBox["v\[Zeta]", "\[Prime]",
          MultilineFunction->None], "[", "\[Rho]", "]"}], "-", 
        RowBox[{"\[Rho]", " ", 
         RowBox[{
          SuperscriptBox["v\[Zeta]", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "\[Rho]", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"Re", " ", "\[Lambda]", " ", 
            SuperscriptBox["\[Rho]", "2"]}]}], ")"}], " ", 
         RowBox[{
          SuperscriptBox["\[Psi]", "\[Prime]",
           MultilineFunction->None], "[", "\[Rho]", "]"}]}], "+", 
        RowBox[{"\[Rho]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"Re", " ", "\[Lambda]", " ", 
               SuperscriptBox["\[Rho]", "2"]}]}], ")"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", "\[Prime]\[Prime]",
              MultilineFunction->None], "[", "\[Rho]", "]"}]}], "-", 
           RowBox[{"\[Rho]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", 
               RowBox[{
                SuperscriptBox["\[Psi]", 
                 TagBox[
                  RowBox[{"(", "3", ")"}],
                  Derivative],
                 MultilineFunction->None], "[", "\[Rho]", "]"}]}], "+", 
              RowBox[{"\[Rho]", " ", 
               RowBox[{
                SuperscriptBox["\[Psi]", 
                 TagBox[
                  RowBox[{"(", "4", ")"}],
                  Derivative],
                 MultilineFunction->None], "[", "\[Rho]", "]"}]}]}], 
             ")"}]}]}], ")"}]}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"m", "\[Equal]", "1"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"Re", " ", "\[Lambda]", " ", 
            SuperscriptBox["\[Rho]", "2"]}]}], ")"}], " ", 
         RowBox[{"v\[Zeta]", "[", "\[Rho]", "]"}]}], "+", 
        RowBox[{"\[Rho]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", "G", " ", "Re", " ", "\[Rho]", " ", 
            RowBox[{
             RowBox[{"\[Psi]", "[", "\[Rho]", "]"}], "/", "2"}]}], "-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox["v\[Zeta]", "\[Prime]",
               MultilineFunction->None], "[", "\[Rho]", "]"}], "+", 
             RowBox[{"\[Rho]", " ", 
              RowBox[{
               SuperscriptBox["v\[Zeta]", "\[Prime]\[Prime]",
                MultilineFunction->None], "[", "\[Rho]", "]"}]}]}], ")"}]}], 
          ")"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "3"}], "+", 
           RowBox[{"Re", " ", "\[Lambda]", " ", 
            SuperscriptBox["\[Rho]", "2"]}]}], ")"}], " ", 
         RowBox[{"\[Psi]", "[", "\[Rho]", "]"}]}], "+", 
        RowBox[{"\[Rho]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"3", "-", 
              RowBox[{"Re", " ", "\[Lambda]", " ", 
               SuperscriptBox["\[Rho]", "2"]}]}], ")"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", "\[Prime]",
              MultilineFunction->None], "[", "\[Rho]", "]"}]}], "+", 
           RowBox[{"\[Rho]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{"3", "+", 
                  RowBox[{"Re", " ", "\[Lambda]", " ", 
                   SuperscriptBox["\[Rho]", "2"]}]}], ")"}]}], " ", 
               RowBox[{
                SuperscriptBox["\[Psi]", "\[Prime]\[Prime]",
                 MultilineFunction->None], "[", "\[Rho]", "]"}]}], "+", 
              RowBox[{"\[Rho]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", 
                  RowBox[{
                   SuperscriptBox["\[Psi]", 
                    TagBox[
                    RowBox[{"(", "3", ")"}],
                    Derivative],
                    MultilineFunction->None], "[", "\[Rho]", "]"}]}], "+", 
                 RowBox[{"\[Rho]", " ", 
                  RowBox[{
                   SuperscriptBox["\[Psi]", 
                    TagBox[
                    RowBox[{"(", "4", ")"}],
                    Derivative],
                    MultilineFunction->None], "[", "\[Rho]", "]"}]}]}], 
                ")"}]}]}], ")"}]}]}], ")"}]}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", "True", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["m", "2"], "+", 
           RowBox[{"Re", " ", "\[Lambda]", " ", 
            SuperscriptBox["\[Rho]", "2"]}]}], ")"}], " ", 
         RowBox[{"v\[Zeta]", "[", "\[Rho]", "]"}]}], "+", 
        RowBox[{"\[Rho]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
           "\[ImaginaryI]", " ", "G", " ", "m", " ", "Re", " ", "\[Rho]", " ",
             
            RowBox[{
             RowBox[{"\[Psi]", "[", "\[Rho]", "]"}], "/", "2"}]}], "-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox["v\[Zeta]", "\[Prime]",
               MultilineFunction->None], "[", "\[Rho]", "]"}], "+", 
             RowBox[{"\[Rho]", " ", 
              RowBox[{
               SuperscriptBox["v\[Zeta]", "\[Prime]\[Prime]",
                MultilineFunction->None], "[", "\[Rho]", "]"}]}]}], ")"}]}], 
          ")"}]}]}], ",", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["m", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "4"}], "+", 
            SuperscriptBox["m", "2"], "+", 
            RowBox[{"Re", " ", "\[Lambda]", " ", 
             SuperscriptBox["\[Rho]", "2"]}]}], ")"}], " ", 
          RowBox[{"\[Psi]", "[", "\[Rho]", "]"}]}], "+", 
         RowBox[{"\[Rho]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"2", " ", 
                SuperscriptBox["m", "2"]}], "-", 
               RowBox[{"Re", " ", "\[Lambda]", " ", 
                SuperscriptBox["\[Rho]", "2"]}]}], ")"}], " ", 
             RowBox[{
              SuperscriptBox["\[Psi]", "\[Prime]",
               MultilineFunction->None], "[", "\[Rho]", "]"}]}], "-", 
            RowBox[{"\[Rho]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"2", " ", 
                   SuperscriptBox["m", "2"]}], "+", 
                  RowBox[{"Re", " ", "\[Lambda]", " ", 
                   SuperscriptBox["\[Rho]", "2"]}]}], ")"}], " ", 
                RowBox[{
                 SuperscriptBox["\[Psi]", "\[Prime]\[Prime]",
                  MultilineFunction->None], "[", "\[Rho]", "]"}]}], "-", 
               RowBox[{"\[Rho]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", 
                   RowBox[{
                    SuperscriptBox["\[Psi]", 
                    TagBox[
                    RowBox[{"(", "3", ")"}],
                    Derivative],
                    MultilineFunction->None], "[", "\[Rho]", "]"}]}], "+", 
                  RowBox[{"\[Rho]", " ", 
                   RowBox[{
                    SuperscriptBox["\[Psi]", 
                    TagBox[
                    RowBox[{"(", "4", ")"}],
                    Derivative],
                    MultilineFunction->None], "[", "\[Rho]", "]"}]}]}], 
                 ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.406009758071*^9, 3.406009772843*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\:0442\:0435\:043a\:0443\:0449\:0435\:0435", ":", " ", 
   RowBox[{
   "\:0441\:0438\:0441\:0442\:0435\:043c\:0430", " ", "\:0434\:043b\:044f", 
    " ", "\[Psi]", " ", "\:0438", " ", "v\[Zeta]"}]}], ",", " ", 
  RowBox[{
  "\:043e\:0431\:0440\:0435\:0437\:0430\:043d\:043d\:0430\:044f", " ", 
   "\:0434\:043e", " ", 
   SuperscriptBox["\[Kappa]", "1"]}]}], "\[IndentingNewLine]", 
 RowBox[{"(", 
  RowBox[{"eqs\[Phi]r", "[", 
   RowBox[{
   "\[Lambda]", ",", "\[Omega]", ",", "\[Kappa]", ",", "G", ",", "Re"}], 
   "]"}], ")"}]}], "Text",
 CellChangeTimes->{{3.4060095139709997`*^9, 3.406009514164*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nd2", "=", "1"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.407891618955*^9, 3.407891623153*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"eqs\[Phi]r", "[", 
    RowBox[{
    "\[Lambda]_", ",", "\[Omega]_", ",", "\[Kappa]_", ",", "G_", ",", "Rn_"}],
     "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox["1", 
        RowBox[{"Re", " ", "\[Rho]"}]], "\[Kappa]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          FractionBox["1", "2"], " ", "G", " ", "Re", " ", 
          SuperscriptBox["\[Rho]", "2"], " ", 
          RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
          RowBox[{"\[Psi]", "[", 
           RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
         RowBox[{
          RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
          RowBox[{
           SuperscriptBox["v\[Zeta]", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
         FractionBox[
          RowBox[{"G", " ", "Re", " ", "Rn", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["\[Rho]", "2"]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"G", " ", 
              RowBox[{"(", 
               RowBox[{"4", "-", 
                RowBox[{"23", " ", 
                 SuperscriptBox["\[Rho]", "2"]}], "+", 
                RowBox[{"7", " ", 
                 SuperscriptBox["\[Rho]", "4"]}]}], ")"}]}], "+", 
             RowBox[{"24", " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"5", " ", 
                 SuperscriptBox["\[Rho]", "2"]}]}], ")"}], " ", 
              "\[Omega]"}]}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
           RowBox[{
            SuperscriptBox["v\[Zeta]", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "4608"], "-", 
         RowBox[{
          FractionBox["1", "4"], " ", "G", " ", "Re", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["\[Rho]", "2"]}], ")"}], " ", 
          RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[Psi]", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
         RowBox[{"2", " ", "Re", " ", "\[Omega]", " ", 
          RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[Psi]", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
         RowBox[{
          FractionBox["1", "737280"], "G", " ", "Re", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"138240", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"3", " ", 
                SuperscriptBox["\[Rho]", "2"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox["G", "2"], " ", 
             SuperscriptBox["Rn", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"19", "-", 
               RowBox[{"120", " ", 
                SuperscriptBox["\[Rho]", "2"]}], "+", 
               RowBox[{"150", " ", 
                SuperscriptBox["\[Rho]", "4"]}], "-", 
               RowBox[{"70", " ", 
                SuperscriptBox["\[Rho]", "6"]}], "+", 
               RowBox[{"9", " ", 
                SuperscriptBox["\[Rho]", "8"]}]}], ")"}]}], "-", 
            RowBox[{"40", " ", "G", " ", 
             SuperscriptBox["Rn", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "3"}], "+", 
               RowBox[{"18", " ", 
                SuperscriptBox["\[Rho]", "2"]}], "-", 
               RowBox[{"20", " ", 
                SuperscriptBox["\[Rho]", "4"]}], "+", 
               RowBox[{"7", " ", 
                SuperscriptBox["\[Rho]", "6"]}]}], ")"}], " ", "\[Omega]"}]}],
            ")"}], " ", 
          RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[Psi]", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
         RowBox[{"\[Rho]", " ", 
          RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
          RowBox[{
           SuperscriptBox["v\[Zeta]", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
         FractionBox[
          RowBox[{"G", " ", "Re", " ", "Rn", " ", "\[Rho]", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["\[Rho]", "2"]}], ")"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"G", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "4"}], "+", 
                SuperscriptBox["\[Rho]", "2"]}], ")"}]}], "-", 
             RowBox[{"24", " ", "\[Omega]"}]}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
           RowBox[{
            SuperscriptBox["v\[Zeta]", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "4608"], "-", 
         RowBox[{
          FractionBox["1", "4"], " ", "G", " ", "Re", " ", "\[Rho]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["\[Rho]", "2"]}], ")"}], " ", 
          RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[Psi]", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
         RowBox[{"2", " ", "Re", " ", "\[Rho]", " ", "\[Omega]", " ", 
          RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[Psi]", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
         RowBox[{
          FractionBox["1", "737280"], "G", " ", "Re", " ", "\[Rho]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["\[Rho]", "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"138240", "+", 
            RowBox[{
             SuperscriptBox["G", "2"], " ", 
             SuperscriptBox["Rn", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "19"}], "+", 
               RowBox[{"21", " ", 
                SuperscriptBox["\[Rho]", "2"]}], "-", 
               RowBox[{"9", " ", 
                SuperscriptBox["\[Rho]", "4"]}], "+", 
               SuperscriptBox["\[Rho]", "6"]}], ")"}]}], "-", 
            RowBox[{"40", " ", "G", " ", 
             SuperscriptBox["Rn", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"3", "-", 
               RowBox[{"3", " ", 
                SuperscriptBox["\[Rho]", "2"]}], "+", 
               SuperscriptBox["\[Rho]", "4"]}], ")"}], " ", "\[Omega]"}]}], 
           ")"}], " ", 
          RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[Psi]", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox["\[Kappa]", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
           RowBox[{"v\[Zeta]", "[", 
            RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "Re"], "+", 
         FractionBox[
          RowBox[{"G", " ", "Rn", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["\[Rho]", "2"]}], ")"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"G", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "4"}], "+", 
                SuperscriptBox["\[Rho]", "2"]}], ")"}]}], "-", 
             RowBox[{"24", " ", "\[Omega]"}]}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
           RowBox[{"v\[Zeta]", "[", 
            RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "4608"], "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"], " ", 
           RowBox[{"v\[Zeta]", "[", 
            RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "Re"], "+", 
         FractionBox[
          RowBox[{"G", " ", "Rn", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["\[Rho]", "2"]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"G", " ", 
              RowBox[{"(", 
               RowBox[{"4", "-", 
                RowBox[{"23", " ", 
                 SuperscriptBox["\[Rho]", "2"]}], "+", 
                RowBox[{"7", " ", 
                 SuperscriptBox["\[Rho]", "4"]}]}], ")"}]}], "+", 
             RowBox[{"24", " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"5", " ", 
                 SuperscriptBox["\[Rho]", "2"]}]}], ")"}], " ", 
              "\[Omega]"}]}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"], " ", 
           RowBox[{"v\[Zeta]", "[", 
            RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "4608"], "+", 
         RowBox[{
          FractionBox["1", "2"], " ", "G", " ", 
          SuperscriptBox["\[Rho]", "2"], " ", 
          RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
          RowBox[{"\[Psi]", "[", 
           RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
         RowBox[{
          FractionBox["1", "737280"], "G", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["\[Rho]", "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"138240", "+", 
            RowBox[{
             SuperscriptBox["G", "2"], " ", 
             SuperscriptBox["Rn", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "19"}], "+", 
               RowBox[{"21", " ", 
                SuperscriptBox["\[Rho]", "2"]}], "-", 
               RowBox[{"9", " ", 
                SuperscriptBox["\[Rho]", "4"]}], "+", 
               SuperscriptBox["\[Rho]", "6"]}], ")"}]}], "-", 
            RowBox[{"40", " ", "G", " ", 
             SuperscriptBox["Rn", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"3", "-", 
               RowBox[{"3", " ", 
                SuperscriptBox["\[Rho]", "2"]}], "+", 
               SuperscriptBox["\[Rho]", "4"]}], ")"}], " ", "\[Omega]"}]}], 
           ")"}], " ", 
          RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
          RowBox[{"\[Psi]", "[", 
           RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
         RowBox[{
          FractionBox["1", "737280"], "G", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"138240", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"3", " ", 
                SuperscriptBox["\[Rho]", "2"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox["G", "2"], " ", 
             SuperscriptBox["Rn", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"19", "-", 
               RowBox[{"120", " ", 
                SuperscriptBox["\[Rho]", "2"]}], "+", 
               RowBox[{"150", " ", 
                SuperscriptBox["\[Rho]", "4"]}], "-", 
               RowBox[{"70", " ", 
                SuperscriptBox["\[Rho]", "6"]}], "+", 
               RowBox[{"9", " ", 
                SuperscriptBox["\[Rho]", "8"]}]}], ")"}]}], "-", 
            RowBox[{"40", " ", "G", " ", 
             SuperscriptBox["Rn", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "3"}], "+", 
               RowBox[{"18", " ", 
                SuperscriptBox["\[Rho]", "2"]}], "-", 
               RowBox[{"20", " ", 
                SuperscriptBox["\[Rho]", "4"]}], "+", 
               RowBox[{"7", " ", 
                SuperscriptBox["\[Rho]", "6"]}]}], ")"}], " ", "\[Omega]"}]}],
            ")"}], " ", 
          RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
          RowBox[{"\[Psi]", "[", 
           RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
         FractionBox[
          RowBox[{
           RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
           RowBox[{
            SuperscriptBox["v\[Zeta]", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "Re"], "-", 
         FractionBox[
          RowBox[{"G", " ", "Rn", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["\[Rho]", "2"]}], ")"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"G", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "4"}], "+", 
                SuperscriptBox["\[Rho]", "2"]}], ")"}]}], "-", 
             RowBox[{"24", " ", "\[Omega]"}]}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
           RowBox[{
            SuperscriptBox["v\[Zeta]", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "4608"], "+", 
         RowBox[{
          FractionBox["1", "59454259200"], "G", " ", "nd2", " ", "Rn", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["\[Rho]", "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["G", "3"], " ", 
             SuperscriptBox["Rn", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "4979"}], "+", 
               RowBox[{"20521", " ", 
                SuperscriptBox["\[Rho]", "2"]}], "-", 
               RowBox[{"13499", " ", 
                SuperscriptBox["\[Rho]", "4"]}], "+", 
               RowBox[{"4421", " ", 
                SuperscriptBox["\[Rho]", "6"]}], "-", 
               RowBox[{"829", " ", 
                SuperscriptBox["\[Rho]", "8"]}], "+", 
               RowBox[{"35", " ", 
                SuperscriptBox["\[Rho]", "10"]}]}], ")"}]}], "-", 
            RowBox[{"193536000", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"3", " ", 
                SuperscriptBox["\[Rho]", "2"]}]}], ")"}], " ", "\[Omega]"}], 
            "-", 
            RowBox[{"16", " ", 
             SuperscriptBox["G", "2"], " ", 
             SuperscriptBox["Rn", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"3111", "-", 
               RowBox[{"11789", " ", 
                SuperscriptBox["\[Rho]", "2"]}], "+", 
               RowBox[{"5536", " ", 
                SuperscriptBox["\[Rho]", "4"]}], "-", 
               RowBox[{"1184", " ", 
                SuperscriptBox["\[Rho]", "6"]}], "+", 
               RowBox[{"216", " ", 
                SuperscriptBox["\[Rho]", "8"]}]}], ")"}], " ", "\[Omega]"}], 
            "-", 
            RowBox[{"6720", " ", "G", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "10752"}], "+", 
               RowBox[{"17", " ", 
                SuperscriptBox["Rn", "2"], " ", 
                SuperscriptBox["\[Omega]", "2"]}], "+", 
               RowBox[{"5", " ", 
                SuperscriptBox["Rn", "2"], " ", 
                SuperscriptBox["\[Rho]", "6"], " ", 
                SuperscriptBox["\[Omega]", "2"]}], "+", 
               RowBox[{
                SuperscriptBox["\[Rho]", "2"], " ", 
                RowBox[{"(", 
                 RowBox[{"38784", "-", 
                  RowBox[{"55", " ", 
                   SuperscriptBox["Rn", "2"], " ", 
                   SuperscriptBox["\[Omega]", "2"]}]}], ")"}]}], "+", 
               RowBox[{
                SuperscriptBox["\[Rho]", "4"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "13056"}], "+", 
                  RowBox[{"5", " ", 
                   SuperscriptBox["Rn", "2"], " ", 
                   SuperscriptBox["\[Omega]", "2"]}]}], ")"}]}]}], ")"}]}]}], 
           ")"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
          RowBox[{
           SuperscriptBox["v\[Zeta]", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
         RowBox[{
          FractionBox["1", "4"], " ", "G", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["\[Rho]", "2"]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
          RowBox[{
           SuperscriptBox["\[Psi]", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
         RowBox[{
          FractionBox["1", "737280"], "G", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["\[Rho]", "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"138240", "+", 
            RowBox[{
             SuperscriptBox["G", "2"], " ", 
             SuperscriptBox["Rn", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "19"}], "+", 
               RowBox[{"21", " ", 
                SuperscriptBox["\[Rho]", "2"]}], "-", 
               RowBox[{"9", " ", 
                SuperscriptBox["\[Rho]", "4"]}], "+", 
               SuperscriptBox["\[Rho]", "6"]}], ")"}]}], "-", 
            RowBox[{"40", " ", "G", " ", 
             SuperscriptBox["Rn", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"3", "-", 
               RowBox[{"3", " ", 
                SuperscriptBox["\[Rho]", "2"]}], "+", 
               SuperscriptBox["\[Rho]", "4"]}], ")"}], " ", "\[Omega]"}]}], 
           ")"}], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
          RowBox[{
           SuperscriptBox["\[Psi]", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
         RowBox[{
          FractionBox["1", "59929893273600"], "G", " ", "nd2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"8820", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox["G", "4"], " ", 
                SuperscriptBox["Rn", "4"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   SuperscriptBox["\[Rho]", "2"]}], ")"}], "3"], " ", 
                RowBox[{"(", 
                 RowBox[{"76", "-", 
                  RowBox[{"103", " ", 
                   SuperscriptBox["\[Rho]", "2"]}], "+", 
                  RowBox[{"57", " ", 
                   SuperscriptBox["\[Rho]", "4"]}], "-", 
                  RowBox[{"13", " ", 
                   SuperscriptBox["\[Rho]", "6"]}], "+", 
                  SuperscriptBox["\[Rho]", "8"]}], ")"}]}], "+", 
               RowBox[{"184320", " ", "G", " ", 
                SuperscriptBox["Rn", "2"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "35"}], "+", 
                  RowBox[{"60", " ", 
                   SuperscriptBox["\[Rho]", "2"]}], "-", 
                  RowBox[{"30", " ", 
                   SuperscriptBox["\[Rho]", "4"]}], "+", 
                  SuperscriptBox["\[Rho]", "6"]}], ")"}], " ", "\[Omega]"}], 
               "-", 
               RowBox[{"8", " ", 
                SuperscriptBox["G", "3"], " ", 
                SuperscriptBox["Rn", "4"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   SuperscriptBox["\[Rho]", "2"]}], ")"}], "3"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "117"}], "+", 
                  RowBox[{"138", " ", 
                   SuperscriptBox["\[Rho]", "2"]}], "-", 
                  RowBox[{"62", " ", 
                   SuperscriptBox["\[Rho]", "4"]}], "+", 
                  RowBox[{"8", " ", 
                   SuperscriptBox["\[Rho]", "6"]}]}], ")"}], " ", 
                "\[Omega]"}], "-", 
               RowBox[{"35389440", " ", 
                RowBox[{"(", 
                 RowBox[{"42", "+", 
                  RowBox[{
                   SuperscriptBox["Rn", "2"], " ", 
                   SuperscriptBox["\[Omega]", "2"]}], "+", 
                  RowBox[{
                   SuperscriptBox["Rn", "2"], " ", 
                   SuperscriptBox["\[Rho]", "4"], " ", 
                   SuperscriptBox["\[Omega]", "2"]}], "-", 
                  RowBox[{"2", " ", 
                   SuperscriptBox["\[Rho]", "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{"33", "+", 
                    RowBox[{
                    SuperscriptBox["Rn", "2"], " ", 
                    SuperscriptBox["\[Omega]", "2"]}]}], ")"}]}]}], ")"}]}], 
               "+", 
               RowBox[{"192", " ", 
                SuperscriptBox["G", "2"], " ", 
                SuperscriptBox["Rn", "2"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"5", " ", 
                   SuperscriptBox["Rn", "2"], " ", 
                   SuperscriptBox["\[Rho]", "10"], " ", 
                   SuperscriptBox["\[Omega]", "2"]}], "+", 
                  RowBox[{
                   SuperscriptBox["\[Rho]", "4"], " ", 
                   RowBox[{"(", 
                    RowBox[{"2880", "-", 
                    RowBox[{"95", " ", 
                    SuperscriptBox["Rn", "2"], " ", 
                    SuperscriptBox["\[Omega]", "2"]}]}], ")"}]}], "+", 
                  RowBox[{"60", " ", 
                   SuperscriptBox["\[Rho]", "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "28"}], "+", 
                    RowBox[{
                    SuperscriptBox["Rn", "2"], " ", 
                    SuperscriptBox["\[Omega]", "2"]}]}], ")"}]}], "+", 
                  RowBox[{"15", " ", 
                   SuperscriptBox["\[Rho]", "6"], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "96"}], "+", 
                    RowBox[{"5", " ", 
                    SuperscriptBox["Rn", "2"], " ", 
                    SuperscriptBox["\[Omega]", "2"]}]}], ")"}]}], "-", 
                  RowBox[{"6", " ", 
                   SuperscriptBox["\[Rho]", "8"], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "28"}], "+", 
                    RowBox[{"5", " ", 
                    SuperscriptBox["Rn", "2"], " ", 
                    SuperscriptBox["\[Omega]", "2"]}]}], ")"}]}], "-", 
                  RowBox[{"3", " ", 
                   RowBox[{"(", 
                    RowBox[{"168", "+", 
                    RowBox[{"5", " ", 
                    SuperscriptBox["Rn", "2"], " ", 
                    SuperscriptBox["\[Omega]", "2"]}]}], ")"}]}]}], ")"}]}]}],
               ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox["G", "4"], " ", 
                SuperscriptBox["Rn", "4"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "145690"}], "+", 
                  RowBox[{"771792", " ", 
                   SuperscriptBox["\[Rho]", "2"]}], "-", 
                  RowBox[{"1244565", " ", 
                   SuperscriptBox["\[Rho]", "4"]}], "+", 
                  RowBox[{"980784", " ", 
                   SuperscriptBox["\[Rho]", "6"]}], "-", 
                  RowBox[{"448350", " ", 
                   SuperscriptBox["\[Rho]", "8"]}], "+", 
                  RowBox[{"131544", " ", 
                   SuperscriptBox["\[Rho]", "10"]}], "-", 
                  RowBox[{"20727", " ", 
                   SuperscriptBox["\[Rho]", "12"]}], "+", 
                  RowBox[{"1280", " ", 
                   SuperscriptBox["\[Rho]", "14"]}]}], ")"}]}], "-", 
               RowBox[{"325140480", " ", "G", " ", 
                SuperscriptBox["Rn", "2"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "101"}], "+", 
                  RowBox[{"380", " ", 
                   SuperscriptBox["\[Rho]", "2"]}], "-", 
                  RowBox[{"330", " ", 
                   SuperscriptBox["\[Rho]", "4"]}], "+", 
                  RowBox[{"84", " ", 
                   SuperscriptBox["\[Rho]", "6"]}]}], ")"}], " ", 
                "\[Omega]"}], "-", 
               RowBox[{"252", " ", 
                SuperscriptBox["G", "3"], " ", 
                SuperscriptBox["Rn", "4"], " ", 
                RowBox[{"(", 
                 RowBox[{"6017", "-", 
                  RowBox[{"31504", " ", 
                   SuperscriptBox["\[Rho]", "2"]}], "+", 
                  RowBox[{"49530", " ", 
                   SuperscriptBox["\[Rho]", "4"]}], "-", 
                  RowBox[{"36960", " ", 
                   SuperscriptBox["\[Rho]", "6"]}], "+", 
                  RowBox[{"15050", " ", 
                   SuperscriptBox["\[Rho]", "8"]}], "-", 
                  RowBox[{"3552", " ", 
                   SuperscriptBox["\[Rho]", "10"]}], "+", 
                  RowBox[{"329", " ", 
                   SuperscriptBox["\[Rho]", "12"]}]}], ")"}], " ", 
                "\[Omega]"}], "+", 
               RowBox[{"26011238400", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"9", " ", 
                   SuperscriptBox["Rn", "2"], " ", 
                   SuperscriptBox["\[Rho]", "4"], " ", 
                   SuperscriptBox["\[Omega]", "2"]}], "+", 
                  RowBox[{"5", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "72"}], "+", 
                    RowBox[{
                    SuperscriptBox["Rn", "2"], " ", 
                    SuperscriptBox["\[Omega]", "2"]}]}], ")"}]}], "-", 
                  RowBox[{"16", " ", 
                   SuperscriptBox["\[Rho]", "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "45"}], "+", 
                    RowBox[{
                    SuperscriptBox["Rn", "2"], " ", 
                    SuperscriptBox["\[Omega]", "2"]}]}], ")"}]}]}], ")"}]}], 
               "+", 
               RowBox[{"4032", " ", 
                SuperscriptBox["G", "2"], " ", 
                SuperscriptBox["Rn", "2"], " ", 
                RowBox[{"(", 
                 RowBox[{"777840", "-", 
                  RowBox[{"923", " ", 
                   SuperscriptBox["Rn", "2"], " ", 
                   SuperscriptBox["\[Omega]", "2"]}], "+", 
                  RowBox[{"288", " ", 
                   SuperscriptBox["Rn", "2"], " ", 
                   SuperscriptBox["\[Rho]", "10"], " ", 
                   SuperscriptBox["\[Omega]", "2"]}], "+", 
                  RowBox[{"5040", " ", 
                   SuperscriptBox["\[Rho]", "6"], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "448"}], "+", 
                    RowBox[{
                    SuperscriptBox["Rn", "2"], " ", 
                    SuperscriptBox["\[Omega]", "2"]}]}], ")"}]}], "-", 
                  RowBox[{"1750", " ", 
                   SuperscriptBox["\[Rho]", "8"], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "192"}], "+", 
                    RowBox[{
                    SuperscriptBox["Rn", "2"], " ", 
                    SuperscriptBox["\[Omega]", "2"]}]}], ")"}]}], "+", 
                  RowBox[{"280", " ", 
                   SuperscriptBox["\[Rho]", "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "12912"}], "+", 
                    RowBox[{"17", " ", 
                    SuperscriptBox["Rn", "2"], " ", 
                    SuperscriptBox["\[Omega]", "2"]}]}], ")"}]}], "-", 
                  RowBox[{"315", " ", 
                   SuperscriptBox["\[Rho]", "4"], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "14544"}], "+", 
                    RowBox[{"23", " ", 
                    SuperscriptBox["Rn", "2"], " ", 
                    SuperscriptBox["\[Omega]", "2"]}]}], ")"}]}]}], ")"}]}]}],
               ")"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}], " ", 
          RowBox[{
           SuperscriptBox["\[Psi]", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
         FractionBox[
          RowBox[{"\[Rho]", " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
           RowBox[{
            SuperscriptBox["v\[Zeta]", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "Re"], "-", 
         RowBox[{
          FractionBox["1", "59454259200"], "G", " ", "nd2", " ", "Rn", " ", 
          "\[Rho]", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["\[Rho]", "2"]}], ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["G", "3"], " ", 
             SuperscriptBox["Rn", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"4979", "-", 
               RowBox[{"2792", " ", 
                SuperscriptBox["\[Rho]", "2"]}], "+", 
               RowBox[{"777", " ", 
                SuperscriptBox["\[Rho]", "4"]}], "-", 
               RowBox[{"134", " ", 
                SuperscriptBox["\[Rho]", "6"]}], "+", 
               RowBox[{"5", " ", 
                SuperscriptBox["\[Rho]", "8"]}]}], ")"}]}], "-", 
            RowBox[{"193536000", " ", "\[Omega]"}], "-", 
            RowBox[{"16", " ", 
             SuperscriptBox["G", "2"], " ", 
             SuperscriptBox["Rn", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "3111"}], "+", 
               RowBox[{"1228", " ", 
                SuperscriptBox["\[Rho]", "2"]}], "-", 
               RowBox[{"208", " ", 
                SuperscriptBox["\[Rho]", "4"]}], "+", 
               RowBox[{"36", " ", 
                SuperscriptBox["\[Rho]", "6"]}]}], ")"}], " ", "\[Omega]"}], 
            "-", 
            RowBox[{"6720", " ", "G", " ", 
             RowBox[{"(", 
              RowBox[{"10752", "-", 
               RowBox[{"17", " ", 
                SuperscriptBox["Rn", "2"], " ", 
                SuperscriptBox["\[Omega]", "2"]}], "+", 
               RowBox[{
                SuperscriptBox["Rn", "2"], " ", 
                SuperscriptBox["\[Rho]", "4"], " ", 
                SuperscriptBox["\[Omega]", "2"]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox["\[Rho]", "2"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1632"}], "+", 
                  RowBox[{
                   SuperscriptBox["Rn", "2"], " ", 
                   SuperscriptBox["\[Omega]", "2"]}]}], ")"}]}]}], ")"}]}]}], 
           ")"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
          RowBox[{
           SuperscriptBox["v\[Zeta]", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
         FractionBox[
          RowBox[{"G", " ", "Rn", " ", "\[Rho]", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["\[Rho]", "2"]}], ")"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"G", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "4"}], "+", 
                SuperscriptBox["\[Rho]", "2"]}], ")"}]}], "-", 
             RowBox[{"24", " ", "\[Omega]"}]}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"], " ", 
           RowBox[{
            SuperscriptBox["v\[Zeta]", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "4608"], "-", 
         RowBox[{
          FractionBox["1", "737280"], "G", " ", "\[Rho]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["\[Rho]", "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"138240", "+", 
            RowBox[{
             SuperscriptBox["G", "2"], " ", 
             SuperscriptBox["Rn", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "19"}], "+", 
               RowBox[{"21", " ", 
                SuperscriptBox["\[Rho]", "2"]}], "-", 
               RowBox[{"9", " ", 
                SuperscriptBox["\[Rho]", "4"]}], "+", 
               SuperscriptBox["\[Rho]", "6"]}], ")"}]}], "-", 
            RowBox[{"40", " ", "G", " ", 
             SuperscriptBox["Rn", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"3", "-", 
               RowBox[{"3", " ", 
                SuperscriptBox["\[Rho]", "2"]}], "+", 
               SuperscriptBox["\[Rho]", "4"]}], ")"}], " ", "\[Omega]"}]}], 
           ")"}], " ", 
          RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[Psi]", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
         RowBox[{
          FractionBox["1", "8"], " ", "G", " ", "\[Rho]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["\[Rho]", "2"]}], ")"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[Psi]", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
         RowBox[{
          FractionBox["1", "59929893273600"], "G", " ", "nd2", " ", "\[Rho]", 
          " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["\[Rho]", "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["G", "4"], " ", 
             SuperscriptBox["Rn", "4"], " ", 
             RowBox[{"(", 
              RowBox[{"145690", "-", 
               RowBox[{"240206", " ", 
                SuperscriptBox["\[Rho]", "2"]}], "+", 
               RowBox[{"174649", " ", 
                SuperscriptBox["\[Rho]", "4"]}], "-", 
               RowBox[{"70547", " ", 
                SuperscriptBox["\[Rho]", "6"]}], "+", 
               RowBox[{"19123", " ", 
                SuperscriptBox["\[Rho]", "8"]}], "-", 
               RowBox[{"2801", " ", 
                SuperscriptBox["\[Rho]", "10"]}], "+", 
               RowBox[{"160", " ", 
                SuperscriptBox["\[Rho]", "12"]}]}], ")"}]}], "-", 
            RowBox[{"325140480", " ", "G", " ", 
             SuperscriptBox["Rn", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"101", "-", 
               RowBox[{"89", " ", 
                SuperscriptBox["\[Rho]", "2"]}], "+", 
               RowBox[{"21", " ", 
                SuperscriptBox["\[Rho]", "4"]}]}], ")"}], " ", "\[Omega]"}], 
            "-", 
            RowBox[{"252", " ", 
             SuperscriptBox["G", "3"], " ", 
             SuperscriptBox["Rn", "4"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "6017"}], "+", 
               RowBox[{"9735", " ", 
                SuperscriptBox["\[Rho]", "2"]}], "-", 
               RowBox[{"6775", " ", 
                SuperscriptBox["\[Rho]", "4"]}], "+", 
               RowBox[{"2465", " ", 
                SuperscriptBox["\[Rho]", "6"]}], "-", 
               RowBox[{"545", " ", 
                SuperscriptBox["\[Rho]", "8"]}], "+", 
               RowBox[{"47", " ", 
                SuperscriptBox["\[Rho]", "10"]}]}], ")"}], " ", "\[Omega]"}], 
            "+", 
            RowBox[{"26011238400", " ", 
             RowBox[{"(", 
              RowBox[{"360", "+", 
               RowBox[{
                SuperscriptBox["Rn", "2"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "5"}], "+", 
                  RowBox[{"3", " ", 
                   SuperscriptBox["\[Rho]", "2"]}]}], ")"}], " ", 
                SuperscriptBox["\[Omega]", "2"]}]}], ")"}]}], "+", 
            RowBox[{"4032", " ", 
             SuperscriptBox["G", "2"], " ", 
             SuperscriptBox["Rn", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "777840"}], "+", 
               RowBox[{"923", " ", 
                SuperscriptBox["Rn", "2"], " ", 
                SuperscriptBox["\[Omega]", "2"]}], "+", 
               RowBox[{"48", " ", 
                SuperscriptBox["Rn", "2"], " ", 
                SuperscriptBox["\[Rho]", "8"], " ", 
                SuperscriptBox["\[Omega]", "2"]}], "+", 
               RowBox[{
                SuperscriptBox["\[Rho]", "2"], " ", 
                RowBox[{"(", 
                 RowBox[{"1029840", "-", 
                  RowBox[{"1457", " ", 
                   SuperscriptBox["Rn", "2"], " ", 
                   SuperscriptBox["\[Omega]", "2"]}]}], ")"}]}], "+", 
               RowBox[{
                SuperscriptBox["\[Rho]", "6"], " ", 
                RowBox[{"(", 
                 RowBox[{"67200", "-", 
                  RowBox[{"302", " ", 
                   SuperscriptBox["Rn", "2"], " ", 
                   SuperscriptBox["\[Omega]", "2"]}]}], ")"}]}], "+", 
               RowBox[{
                SuperscriptBox["\[Rho]", "4"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "497280"}], "+", 
                  RowBox[{"958", " ", 
                   SuperscriptBox["Rn", "2"], " ", 
                   SuperscriptBox["\[Omega]", "2"]}]}], ")"}]}]}], ")"}]}]}], 
           ")"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[Psi]", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}]}], ")"}]}], "+", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"2", " ", "Re", " ", 
         SuperscriptBox["\[Rho]", "2"]}]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "Re", " ", "\[Lambda]", " ", 
          SuperscriptBox["\[Rho]", "2"], " ", 
          RowBox[{"v\[Zeta]", "[", 
           RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
         RowBox[{"G", " ", "Re", " ", 
          SuperscriptBox["\[Rho]", "2"], " ", 
          RowBox[{
           SuperscriptBox["\[Psi]", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["v\[Zeta]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}], "+", 
            RowBox[{"\[Rho]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox["v\[Zeta]", 
                 TagBox[
                  RowBox[{"(", 
                   RowBox[{"1", ",", "0"}], ")"}],
                  Derivative],
                 MultilineFunction->None], "[", 
                RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}], "+", 
               RowBox[{"\[Rho]", " ", 
                RowBox[{
                 SuperscriptBox["v\[Zeta]", 
                  TagBox[
                   RowBox[{"(", 
                    RowBox[{"2", ",", "0"}], ")"}],
                   Derivative],
                  MultilineFunction->None], "[", 
                 RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}]}], ")"}]}]}], ",", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"Re", " ", 
        SuperscriptBox["\[Rho]", "4"]}]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"4", " ", 
         RowBox[{
          SuperscriptBox["\[Psi]", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "2"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
        RowBox[{"Re", " ", "\[Lambda]", " ", 
         SuperscriptBox["\[Rho]", "2"], " ", 
         RowBox[{
          SuperscriptBox["\[Psi]", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "2"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[Psi]", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "4"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}], "+", 
        RowBox[{"\[Rho]", " ", 
         RowBox[{
          SuperscriptBox["\[Psi]", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
        RowBox[{"Re", " ", "\[Lambda]", " ", 
         SuperscriptBox["\[Rho]", "3"], " ", 
         RowBox[{
          SuperscriptBox["\[Psi]", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
        RowBox[{"2", " ", "\[Rho]", " ", 
         RowBox[{
          SuperscriptBox["\[Psi]", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "2"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
        RowBox[{
         SuperscriptBox["\[Rho]", "2"], " ", 
         RowBox[{
          SuperscriptBox["\[Psi]", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"2", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
        RowBox[{"Re", " ", "\[Lambda]", " ", 
         SuperscriptBox["\[Rho]", "4"], " ", 
         RowBox[{
          SuperscriptBox["\[Psi]", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"2", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Rho]", "2"], " ", 
         RowBox[{
          SuperscriptBox["\[Psi]", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"2", ",", "2"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Rho]", "3"], " ", 
         RowBox[{
          SuperscriptBox["\[Psi]", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"3", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
        RowBox[{
         FractionBox["1", "4608"], "\[Kappa]", " ", "\[Rho]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "4608"}], " ", "G", " ", "Re", " ", 
            SuperscriptBox["\[Rho]", "4"], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"v\[Zeta]", "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"2304", " ", "Re", " ", 
            SuperscriptBox["\[Rho]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"G", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SuperscriptBox["\[Rho]", "2"]}], ")"}]}], "+", 
              RowBox[{"4", " ", "\[Omega]"}]}], ")"}], " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["v\[Zeta]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"72", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "2"], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"4608", " ", "Re", " ", "\[Lambda]", " ", 
            SuperscriptBox["\[Rho]", "2"], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"432", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "4"], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"240", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "6"], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"384", " ", "G", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "2"], " ", "\[Omega]", " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"1728", " ", "G", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "4"], " ", "\[Omega]", " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"18432", " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"8", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"18", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "2"], " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"12", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "4"], " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "6"], " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{
           "48", " ", "G", " ", "Re", " ", "Rn", " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"96", " ", "G", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "2"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"48", " ", "G", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "4"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"9216", " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "3"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "3"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"27", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "2"], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "3"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"30", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "4"], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "3"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"7", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "6"], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "3"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{
           "24", " ", "G", " ", "Re", " ", "Rn", " ", "\[Omega]", " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "3"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"144", " ", "G", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "2"], " ", "\[Omega]", " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "3"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"120", " ", "G", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "4"], " ", "\[Omega]", " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "3"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"2304", " ", "G", " ", "Re", " ", 
            SuperscriptBox["\[Rho]", "3"], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["v\[Zeta]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"2304", " ", "G", " ", "Re", " ", 
            SuperscriptBox["\[Rho]", "5"], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["v\[Zeta]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"9216", " ", "Re", " ", 
            SuperscriptBox["\[Rho]", "3"], " ", "\[Omega]", " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["v\[Zeta]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"9216", " ", "\[Rho]", " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", "\[Rho]", 
            " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"81", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "3"], " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"4608", " ", "Re", " ", "\[Lambda]", " ", 
            SuperscriptBox["\[Rho]", "3"], " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"150", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "5"], " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"49", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "7"], " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{
           "24", " ", "G", " ", "Re", " ", "Rn", " ", "\[Rho]", " ", 
            "\[Omega]", " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"432", " ", "G", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "3"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"600", " ", "G", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "5"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"9216", " ", "\[Rho]", " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", "\[Rho]", 
            " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"27", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "3"], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"30", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "5"], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"7", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "7"], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{
           "24", " ", "G", " ", "Re", " ", "Rn", " ", "\[Rho]", " ", 
            "\[Omega]", " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"144", " ", "G", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "3"], " ", "\[Omega]", " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"120", " ", "G", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "5"], " ", "\[Omega]", " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"9216", " ", "\[Rho]", " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"4", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", "\[Rho]", 
            " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"9", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "3"], " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"6", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "5"], " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "7"], " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{
           "24", " ", "G", " ", "Re", " ", "Rn", " ", "\[Rho]", " ", 
            "\[Omega]", " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"48", " ", "G", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "3"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"24", " ", "G", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "5"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"9216", " ", 
            SuperscriptBox["\[Rho]", "2"], " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"4", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "2"], " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"9", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "4"], " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"6", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "6"], " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "8"], " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"24", " ", "G", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "2"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"48", " ", "G", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "4"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"24", " ", "G", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "6"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"9216", " ", 
            SuperscriptBox["\[Rho]", "2"], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "2"], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"27", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "4"], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"30", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "6"], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"7", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "8"], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"24", " ", "G", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "2"], " ", "\[Omega]", " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"144", " ", "G", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "4"], " ", "\[Omega]", " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"120", " ", "G", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "6"], " ", "\[Omega]", " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"9216", " ", 
            SuperscriptBox["\[Rho]", "3"], " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"3", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"4", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "3"], " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"3", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"9", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "5"], " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"3", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"6", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "7"], " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"3", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "9"], " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"3", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"24", " ", "G", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "3"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"3", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"48", " ", "G", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "5"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"3", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"24", " ", "G", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "7"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"3", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}]}], ")"}]}], "+", 
        RowBox[{
         FractionBox["1", "59454259200"], 
         SuperscriptBox["\[Kappa]", "2"], " ", 
         SuperscriptBox["\[Rho]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "322560"}], " ", "G", " ", "Re", " ", 
            SuperscriptBox["\[Rho]", "4"], " ", 
            RowBox[{"(", 
             RowBox[{"161280", "+", 
              RowBox[{
               SuperscriptBox["G", "2"], " ", 
               SuperscriptBox["Rn", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "20"}], "+", 
                 RowBox[{"30", " ", 
                  SuperscriptBox["\[Rho]", "2"]}], "-", 
                 RowBox[{"15", " ", 
                  SuperscriptBox["\[Rho]", "4"]}], "+", 
                 RowBox[{"2", " ", 
                  SuperscriptBox["\[Rho]", "6"]}]}], ")"}]}], "-", 
              RowBox[{"20", " ", "G", " ", 
               SuperscriptBox["Rn", "2"], " ", 
               RowBox[{"(", 
                RowBox[{"6", "-", 
                 RowBox[{"8", " ", 
                  SuperscriptBox["\[Rho]", "2"]}], "+", 
                 RowBox[{"3", " ", 
                  SuperscriptBox["\[Rho]", "4"]}]}], ")"}], " ", 
               "\[Omega]"}]}], ")"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{"v\[Zeta]", "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"309657600", " ", "Re", " ", 
            SuperscriptBox["\[Rho]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "192"}], " ", "\[Lambda]"}], "-", 
              RowBox[{"3", " ", 
               SuperscriptBox["G", "2"], " ", "Rn", " ", 
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["\[Rho]", "2"]}], "+", 
                 RowBox[{"2", " ", 
                  SuperscriptBox["\[Rho]", "4"]}]}], ")"}]}], "+", 
              RowBox[{"16", " ", "G", " ", "Rn", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"3", " ", 
                  SuperscriptBox["\[Rho]", "2"]}]}], ")"}], " ", "\[Omega]"}],
               "+", 
              RowBox[{"2", " ", "G", " ", "Rn", " ", 
               SuperscriptBox["\[Rho]", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"G", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "3"}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[Rho]", "2"]}]}], ")"}]}], "-", 
                 RowBox[{"12", " ", "\[Omega]"}]}], ")"}], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}], " ", 
            RowBox[{"\[Psi]", "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"52022476800", " ", "G", " ", "Re", " ", 
            SuperscriptBox["\[Rho]", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["v\[Zeta]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"3064320", " ", 
            SuperscriptBox["G", "3"], " ", "Re", " ", 
            SuperscriptBox["Rn", "2"], " ", 
            SuperscriptBox["\[Rho]", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["v\[Zeta]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"52022476800", " ", "G", " ", "Re", " ", 
            SuperscriptBox["\[Rho]", "4"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["v\[Zeta]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"6451200", " ", 
            SuperscriptBox["G", "3"], " ", "Re", " ", 
            SuperscriptBox["Rn", "2"], " ", 
            SuperscriptBox["\[Rho]", "4"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["v\[Zeta]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"4838400", " ", 
            SuperscriptBox["G", "3"], " ", "Re", " ", 
            SuperscriptBox["Rn", "2"], " ", 
            SuperscriptBox["\[Rho]", "6"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["v\[Zeta]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"1612800", " ", 
            SuperscriptBox["G", "3"], " ", "Re", " ", 
            SuperscriptBox["Rn", "2"], " ", 
            SuperscriptBox["\[Rho]", "8"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["v\[Zeta]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"161280", " ", 
            SuperscriptBox["G", "3"], " ", "Re", " ", 
            SuperscriptBox["Rn", "2"], " ", 
            SuperscriptBox["\[Rho]", "10"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["v\[Zeta]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"19353600", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", 
            SuperscriptBox["Rn", "2"], " ", 
            SuperscriptBox["\[Rho]", "2"], " ", "\[Omega]", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["v\[Zeta]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"38707200", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", 
            SuperscriptBox["Rn", "2"], " ", 
            SuperscriptBox["\[Rho]", "4"], " ", "\[Omega]", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["v\[Zeta]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"25804800", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", 
            SuperscriptBox["Rn", "2"], " ", 
            SuperscriptBox["\[Rho]", "6"], " ", "\[Omega]", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["v\[Zeta]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"6451200", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", 
            SuperscriptBox["Rn", "2"], " ", 
            SuperscriptBox["\[Rho]", "8"], " ", "\[Omega]", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["v\[Zeta]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"59454259200", " ", "Re", " ", "\[Lambda]", " ", 
            SuperscriptBox["\[Rho]", "2"], " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"51609600", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "6"], " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{
           "619315200", " ", "G", " ", "Re", " ", "Rn", " ", "\[Omega]", " ", 
            
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"619315200", " ", "G", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "4"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"59454259200", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"51609600", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"1997291520", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"153000", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"77414400", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "4"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"7431782400", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "4"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"725760", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "4"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"3948134400", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "6"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"806400", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "6"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"403200", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "8"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"100800", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "10"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"5760", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "12"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{
           "4644864000", " ", "G", " ", "nd2", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "2"], " ", "\[Omega]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"1430400", " ", 
            SuperscriptBox["G", "3"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "2"], " ", "\[Omega]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{
           "12386304000", " ", "G", " ", "nd2", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "4"], " ", "\[Omega]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"5913600", " ", 
            SuperscriptBox["G", "3"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "4"], " ", "\[Omega]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"4838400", " ", 
            SuperscriptBox["G", "3"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "6"], " ", "\[Omega]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"1720320", " ", 
            SuperscriptBox["G", "3"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "8"], " ", "\[Omega]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"403200", " ", 
            SuperscriptBox["G", "3"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "10"], " ", "\[Omega]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"2903040", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "2"], " ", 
            SuperscriptBox["\[Omega]", "2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"8601600", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "4"], " ", 
            SuperscriptBox["\[Omega]", "2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"2580480", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "8"], " ", 
            SuperscriptBox["\[Omega]", "2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"118908518400", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"51609600", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"116121600", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"77414400", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "4"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"12902400", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "6"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{
           "309657600", " ", "G", " ", "Re", " ", "Rn", " ", "\[Omega]", " ", 
            
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"619315200", " ", "G", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "2"], " ", "\[Omega]", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"309657600", " ", "G", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "4"], " ", "\[Omega]", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"144506880", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", "Rn", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"9958", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"332881920", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"25500", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"232243200", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "4"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"22680", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "4"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"43868160", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "6"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"8960", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "6"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"2100", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "8"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"288", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "10"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"10", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "12"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{
           "387072000", " ", "G", " ", "nd2", " ", "Re", " ", "Rn", " ", 
            "\[Omega]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"99552", " ", 
            SuperscriptBox["G", "3"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{
           "774144000", " ", "G", " ", "nd2", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "2"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"238400", " ", 
            SuperscriptBox["G", "3"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "2"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{
           "387072000", " ", "G", " ", "nd2", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "4"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"184800", " ", 
            SuperscriptBox["G", "3"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "4"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"53760", " ", 
            SuperscriptBox["G", "3"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "6"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"8960", " ", 
            SuperscriptBox["G", "3"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "8"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"1152", " ", 
            SuperscriptBox["G", "3"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "10"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"228480", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Omega]", "2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"483840", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "2"], " ", 
            SuperscriptBox["\[Omega]", "2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"268800", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "4"], " ", 
            SuperscriptBox["\[Omega]", "2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"13440", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "8"], " ", 
            SuperscriptBox["\[Omega]", "2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"178362777600", " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"103219200", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"232243200", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"154828800", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "4"], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"25804800", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "6"], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{
           "619315200", " ", "G", " ", "Re", " ", "Rn", " ", "\[Omega]", " ", 
            
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"1238630400", " ", "G", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "2"], " ", "\[Omega]", " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"619315200", " ", "G", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "4"], " ", "\[Omega]", " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"51609600", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "3"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"77414400", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "4"], " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "3"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{
           "309657600", " ", "G", " ", "Re", " ", "Rn", " ", "\[Omega]", " ", 
            
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "3"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"619315200", " ", "G", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "2"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "3"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"309657600", " ", "G", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "4"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "3"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"59454259200", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "3"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"72253440", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", "Rn", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "3"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"4979", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "3"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"58060800", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "3"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"332881920", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "3"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"25500", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "3"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"348364800", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "4"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "3"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"34020", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "4"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "3"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"6451200", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "6"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "3"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"87736320", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "6"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "3"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"17920", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "6"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "3"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"5250", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "8"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "3"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"864", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "10"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "3"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"35", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "12"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "3"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{
           "193536000", " ", "G", " ", "nd2", " ", "Re", " ", "Rn", " ", 
            "\[Omega]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "3"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"49776", " ", 
            SuperscriptBox["G", "3"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", "\[Omega]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "3"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{
           "774144000", " ", "G", " ", "nd2", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "2"], " ", "\[Omega]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "3"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"238400", " ", 
            SuperscriptBox["G", "3"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "2"], " ", "\[Omega]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "3"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{
           "580608000", " ", "G", " ", "nd2", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "4"], " ", "\[Omega]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "3"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"277200", " ", 
            SuperscriptBox["G", "3"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "4"], " ", "\[Omega]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "3"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"107520", " ", 
            SuperscriptBox["G", "3"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "6"], " ", "\[Omega]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "3"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"22400", " ", 
            SuperscriptBox["G", "3"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "8"], " ", "\[Omega]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "3"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"3456", " ", 
            SuperscriptBox["G", "3"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "10"], " ", "\[Omega]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "3"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"114240", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Omega]", "2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "3"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"483840", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "2"], " ", 
            SuperscriptBox["\[Omega]", "2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "3"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"403200", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "4"], " ", 
            SuperscriptBox["\[Omega]", "2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "3"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"33600", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "8"], " ", 
            SuperscriptBox["\[Omega]", "2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "3"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"52022476800", " ", "G", " ", "Re", " ", 
            SuperscriptBox["\[Rho]", "3"], " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["v\[Zeta]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"3064320", " ", 
            SuperscriptBox["G", "3"], " ", "Re", " ", 
            SuperscriptBox["Rn", "2"], " ", 
            SuperscriptBox["\[Rho]", "3"], " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["v\[Zeta]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"52022476800", " ", "G", " ", "Re", " ", 
            SuperscriptBox["\[Rho]", "5"], " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["v\[Zeta]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"6451200", " ", 
            SuperscriptBox["G", "3"], " ", "Re", " ", 
            SuperscriptBox["Rn", "2"], " ", 
            SuperscriptBox["\[Rho]", "5"], " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["v\[Zeta]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"4838400", " ", 
            SuperscriptBox["G", "3"], " ", "Re", " ", 
            SuperscriptBox["Rn", "2"], " ", 
            SuperscriptBox["\[Rho]", "7"], " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["v\[Zeta]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"38707200", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", 
            SuperscriptBox["Rn", "2"], " ", 
            SuperscriptBox["\[Rho]", "5"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["v\[Zeta]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"25804800", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", 
            SuperscriptBox["Rn", "2"], " ", 
            SuperscriptBox["\[Rho]", "7"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["v\[Zeta]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"6451200", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", 
            SuperscriptBox["Rn", "2"], " ", 
            SuperscriptBox["\[Rho]", "9"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["v\[Zeta]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"806400", " ", 
            SuperscriptBox["G", "3"], " ", "Re", " ", 
            SuperscriptBox["Rn", "2"], " ", 
            SuperscriptBox["\[Rho]", "9"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["v\[Zeta]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"80640", " ", 
            SuperscriptBox["G", "3"], " ", "Re", " ", 
            SuperscriptBox["Rn", "2"], " ", 
            SuperscriptBox["\[Rho]", "11"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["v\[Zeta]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"9676800", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", 
            SuperscriptBox["Rn", "2"], " ", 
            SuperscriptBox["\[Rho]", "3"], " ", "\[Omega]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["v\[Zeta]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"51609600", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", "\[Rho]", 
            " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"348364800", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "3"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"59454259200", " ", "Re", " ", "\[Lambda]", " ", 
            SuperscriptBox["\[Rho]", "3"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"387072000", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "5"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"90316800", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "7"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{
           "309657600", " ", "G", " ", "Re", " ", "Rn", " ", "\[Rho]", " ", 
            "\[Omega]", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"1857945600", " ", "G", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "3"], " ", "\[Omega]", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"1548288000", " ", "G", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "5"], " ", "\[Omega]", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"72253440", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", "Rn", " ", 
            "\[Rho]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"4979", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", "\[Rho]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"2163732480", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "3"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"165750", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "3"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"3832012800", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "5"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"374220", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "5"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"1337978880", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "7"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"273280", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "7"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"101850", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "9"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"20304", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "11"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"965", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "13"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{
           "193536000", " ", "G", " ", "nd2", " ", "Re", " ", "Rn", " ", 
            "\[Rho]", " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"49776", " ", 
            SuperscriptBox["G", "3"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", "\[Rho]", " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{
           "5031936000", " ", "G", " ", "nd2", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "3"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"1549600", " ", 
            SuperscriptBox["G", "3"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "3"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{
           "6386688000", " ", "G", " ", "nd2", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "5"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"3049200", " ", 
            SuperscriptBox["G", "3"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "5"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"1639680", " ", 
            SuperscriptBox["G", "3"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "7"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"434560", " ", 
            SuperscriptBox["G", "3"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "9"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"81216", " ", 
            SuperscriptBox["G", "3"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "11"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"114240", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", "\[Rho]", " ", 
            SuperscriptBox["\[Omega]", "2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"3144960", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "3"], " ", 
            SuperscriptBox["\[Omega]", "2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"4435200", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "5"], " ", 
            SuperscriptBox["\[Omega]", "2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"651840", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "9"], " ", 
            SuperscriptBox["\[Omega]", "2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"178362777600", " ", "\[Rho]", " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"51609600", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", "\[Rho]", 
            " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"580608000", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "3"], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"1470873600", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "5"], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"528998400", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "7"], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{
           "309657600", " ", "G", " ", "Re", " ", "Rn", " ", "\[Rho]", " ", 
            "\[Omega]", " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"3096576000", " ", "G", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "3"], " ", "\[Omega]", " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"5883494400", " ", "G", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "5"], " ", "\[Omega]", " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"237817036800", " ", "\[Rho]", " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"580608000", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "3"], " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"541900800", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "5"], " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{
           "928972800", " ", "G", " ", "Re", " ", "Rn", " ", "\[Rho]", " ", 
            "\[Omega]", " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"3096576000", " ", "G", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "3"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"2167603200", " ", "G", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "5"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"77414400", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", "\[Rho]", 
            " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"72253440", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", "Rn", " ", 
            "\[Rho]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"4979", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", "\[Rho]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"332881920", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "3"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"25500", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "3"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"348364800", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "5"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"34020", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "5"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"58060800", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "7"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"87736320", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "7"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"17920", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "7"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"5250", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "9"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"864", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "11"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"35", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "13"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{
           "193536000", " ", "G", " ", "nd2", " ", "Re", " ", "Rn", " ", 
            "\[Rho]", " ", "\[Omega]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"49776", " ", 
            SuperscriptBox["G", "3"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", "\[Rho]", " ", "\[Omega]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{
           "774144000", " ", "G", " ", "nd2", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "3"], " ", "\[Omega]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"238400", " ", 
            SuperscriptBox["G", "3"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "3"], " ", "\[Omega]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{
           "580608000", " ", "G", " ", "nd2", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "5"], " ", "\[Omega]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"277200", " ", 
            SuperscriptBox["G", "3"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "5"], " ", "\[Omega]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"107520", " ", 
            SuperscriptBox["G", "3"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "7"], " ", "\[Omega]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"22400", " ", 
            SuperscriptBox["G", "3"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "9"], " ", "\[Omega]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"3456", " ", 
            SuperscriptBox["G", "3"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "11"], " ", "\[Omega]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"114240", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", "\[Rho]", " ", 
            SuperscriptBox["\[Omega]", "2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"483840", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "3"], " ", 
            SuperscriptBox["\[Omega]", "2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"403200", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "5"], " ", 
            SuperscriptBox["\[Omega]", "2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"33600", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "9"], " ", 
            SuperscriptBox["\[Omega]", "2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"118908518400", " ", "\[Rho]", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"72253440", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", "Rn", " ", 
            "\[Rho]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"4979", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", "\[Rho]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"166440960", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "3"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"12750", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "3"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"116121600", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "5"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"11340", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "5"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"21934080", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "7"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"4480", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "7"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"1050", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "9"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"144", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "11"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"5", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "13"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{
           "193536000", " ", "G", " ", "nd2", " ", "Re", " ", "Rn", " ", 
            "\[Rho]", " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"49776", " ", 
            SuperscriptBox["G", "3"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", "\[Rho]", " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{
           "387072000", " ", "G", " ", "nd2", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "3"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"119200", " ", 
            SuperscriptBox["G", "3"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "3"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{
           "193536000", " ", "G", " ", "nd2", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "5"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"92400", " ", 
            SuperscriptBox["G", "3"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "5"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"26880", " ", 
            SuperscriptBox["G", "3"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "7"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"4480", " ", 
            SuperscriptBox["G", "3"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "9"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"576", " ", 
            SuperscriptBox["G", "3"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "11"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"114240", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", "\[Rho]", " ", 
            SuperscriptBox["\[Omega]", "2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"241920", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "3"], " ", 
            SuperscriptBox["\[Omega]", "2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"134400", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "5"], " ", 
            SuperscriptBox["\[Omega]", "2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"6720", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "9"], " ", 
            SuperscriptBox["\[Omega]", "2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"51609600", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", "\[Rho]", 
            " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"116121600", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "3"], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"77414400", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "5"], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"12902400", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "7"], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{
           "309657600", " ", "G", " ", "Re", " ", "Rn", " ", "\[Rho]", " ", 
            "\[Omega]", " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"619315200", " ", "G", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "3"], " ", "\[Omega]", " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"309657600", " ", "G", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "5"], " ", "\[Omega]", " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"297271296000", " ", 
            SuperscriptBox["\[Rho]", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"72253440", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"4979", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"166440960", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "4"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"12750", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "4"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"116121600", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "6"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"11340", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "6"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"21934080", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "8"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"4480", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "8"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"1050", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "10"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"144", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "12"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"5", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "14"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{
           "193536000", " ", "G", " ", "nd2", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "2"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"49776", " ", 
            SuperscriptBox["G", "3"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "2"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{
           "387072000", " ", "G", " ", "nd2", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "4"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"119200", " ", 
            SuperscriptBox["G", "3"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "4"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{
           "193536000", " ", "G", " ", "nd2", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "6"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"92400", " ", 
            SuperscriptBox["G", "3"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "6"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"26880", " ", 
            SuperscriptBox["G", "3"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "8"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"4480", " ", 
            SuperscriptBox["G", "3"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "10"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"576", " ", 
            SuperscriptBox["G", "3"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "12"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"114240", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "2"], " ", 
            SuperscriptBox["\[Omega]", "2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"241920", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "4"], " ", 
            SuperscriptBox["\[Omega]", "2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"134400", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "6"], " ", 
            SuperscriptBox["\[Omega]", "2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"6720", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "10"], " ", 
            SuperscriptBox["\[Omega]", "2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"118908518400", " ", 
            SuperscriptBox["\[Rho]", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"103219200", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"464486400", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "4"], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"464486400", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "6"], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"103219200", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "8"], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"619315200", " ", "G", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "2"], " ", "\[Omega]", " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"2477260800", " ", "G", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "4"], " ", "\[Omega]", " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"1857945600", " ", "G", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "6"], " ", "\[Omega]", " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"51609600", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "2"], " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"77414400", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "6"], " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"309657600", " ", "G", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "2"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"619315200", " ", "G", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "4"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"309657600", " ", "G", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "6"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"59454259200", " ", 
            SuperscriptBox["\[Rho]", "2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"72253440", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"4979", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"58060800", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "4"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"332881920", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "4"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"25500", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "4"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"348364800", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "6"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"34020", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "6"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"6451200", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "8"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"87736320", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "8"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"17920", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "8"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"5250", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "10"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"864", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "12"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"35", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "14"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{
           "193536000", " ", "G", " ", "nd2", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "2"], " ", "\[Omega]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"49776", " ", 
            SuperscriptBox["G", "3"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "2"], " ", "\[Omega]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{
           "774144000", " ", "G", " ", "nd2", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "4"], " ", "\[Omega]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"238400", " ", 
            SuperscriptBox["G", "3"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "4"], " ", "\[Omega]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{
           "580608000", " ", "G", " ", "nd2", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "6"], " ", "\[Omega]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"277200", " ", 
            SuperscriptBox["G", "3"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "6"], " ", "\[Omega]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"107520", " ", 
            SuperscriptBox["G", "3"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "8"], " ", "\[Omega]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"22400", " ", 
            SuperscriptBox["G", "3"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "10"], " ", "\[Omega]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"3456", " ", 
            SuperscriptBox["G", "3"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "12"], " ", "\[Omega]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"114240", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "2"], " ", 
            SuperscriptBox["\[Omega]", "2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"483840", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "4"], " ", 
            SuperscriptBox["\[Omega]", "2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"403200", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "6"], " ", 
            SuperscriptBox["\[Omega]", "2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"33600", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "10"], " ", 
            SuperscriptBox["\[Omega]", "2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"118908518400", " ", 
            SuperscriptBox["\[Rho]", "3"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"3", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"72253440", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "3"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"3", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"4979", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "3"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"3", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"166440960", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "5"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"3", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"12750", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "5"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"3", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"116121600", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "7"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"3", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"11340", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "7"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"3", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"21934080", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "9"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"3", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"4480", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "9"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"3", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"1050", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "11"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"3", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"144", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "13"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"3", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"5", " ", 
            SuperscriptBox["G", "4"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "15"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"3", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{
           "193536000", " ", "G", " ", "nd2", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "3"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"3", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"49776", " ", 
            SuperscriptBox["G", "3"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "3"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"3", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{
           "387072000", " ", "G", " ", "nd2", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "5"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"3", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"119200", " ", 
            SuperscriptBox["G", "3"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "5"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"3", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{
           "193536000", " ", "G", " ", "nd2", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "7"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"3", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"92400", " ", 
            SuperscriptBox["G", "3"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "7"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"3", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"26880", " ", 
            SuperscriptBox["G", "3"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "9"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"3", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"4480", " ", 
            SuperscriptBox["G", "3"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "11"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"3", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"576", " ", 
            SuperscriptBox["G", "3"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "13"], " ", "\[Omega]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"3", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"114240", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "3"], " ", 
            SuperscriptBox["\[Omega]", "2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"3", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"241920", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "5"], " ", 
            SuperscriptBox["\[Omega]", "2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"3", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"134400", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "7"], " ", 
            SuperscriptBox["\[Omega]", "2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"3", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"6720", " ", 
            SuperscriptBox["G", "2"], " ", "nd2", " ", "Re", " ", 
            SuperscriptBox["Rn", "3"], " ", 
            SuperscriptBox["\[Rho]", "11"], " ", 
            SuperscriptBox["\[Omega]", "2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"3", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"51609600", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "3"], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"3", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"116121600", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "5"], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"3", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"77414400", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "7"], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"3", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"12902400", " ", 
            SuperscriptBox["G", "2"], " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "9"], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"3", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"309657600", " ", "G", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "3"], " ", "\[Omega]", " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"3", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"619315200", " ", "G", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "5"], " ", "\[Omega]", " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"3", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
           RowBox[{"309657600", " ", "G", " ", "Re", " ", "Rn", " ", 
            SuperscriptBox["\[Rho]", "7"], " ", "\[Omega]", " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"3", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}]}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[Rho]", "4"], " ", 
         RowBox[{
          SuperscriptBox["\[Psi]", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"4", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}]}], ")"}]}]}], "}"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.40600951088*^9, 3.406009511509*^9}, 3.406010201291*^9, 
   3.4062117680950003`*^9, {3.407051208809*^9, 3.4070512091400003`*^9}, {
   3.407891605707*^9, 3.407891606929*^9}, 3.407998074485613*^9}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqs\[Phi]r", "[", 
  RowBox[{"\[Lambda]", ",", "0", ",", "0", ",", "G", ",", "R"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.406009670355*^9, 3.4060096705150003`*^9}, 
   3.407051234369*^9, 3.4078916335299997`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"2", " ", "Re", " ", "\[Lambda]", " ", 
      SuperscriptBox["\[Rho]", "2"], " ", 
      RowBox[{"v\[Zeta]", "[", 
       RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
     RowBox[{"G", " ", "Re", " ", 
      SuperscriptBox["\[Rho]", "2"], " ", 
      RowBox[{
       SuperscriptBox["\[Psi]", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["v\[Zeta]", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "2"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}], "+", 
        RowBox[{"\[Rho]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["v\[Zeta]", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}], "+", 
           RowBox[{"\[Rho]", " ", 
            RowBox[{
             SuperscriptBox["v\[Zeta]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}]}], ")"}]}]}], 
       ")"}]}]}], 
    RowBox[{"2", " ", "Re", " ", 
     SuperscriptBox["\[Rho]", "2"]}]], ",", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"Re", " ", 
      SuperscriptBox["\[Rho]", "4"]}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"4", " ", 
       RowBox[{
        SuperscriptBox["\[Psi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
      RowBox[{"Re", " ", "\[Lambda]", " ", 
       SuperscriptBox["\[Rho]", "2"], " ", 
       RowBox[{
        SuperscriptBox["\[Psi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["\[Psi]", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "4"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}], "+", 
      RowBox[{"\[Rho]", " ", 
       RowBox[{
        SuperscriptBox["\[Psi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
      RowBox[{"Re", " ", "\[Lambda]", " ", 
       SuperscriptBox["\[Rho]", "3"], " ", 
       RowBox[{
        SuperscriptBox["\[Psi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
      RowBox[{"2", " ", "\[Rho]", " ", 
       RowBox[{
        SuperscriptBox["\[Psi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
      RowBox[{
       SuperscriptBox["\[Rho]", "2"], " ", 
       RowBox[{
        SuperscriptBox["\[Psi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "-", 
      RowBox[{"Re", " ", "\[Lambda]", " ", 
       SuperscriptBox["\[Rho]", "4"], " ", 
       RowBox[{
        SuperscriptBox["\[Psi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[Rho]", "2"], " ", 
       RowBox[{
        SuperscriptBox["\[Psi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[Rho]", "3"], " ", 
       RowBox[{
        SuperscriptBox["\[Psi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"3", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["\[Rho]", "4"], " ", 
       RowBox[{
        SuperscriptBox["\[Psi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"4", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Rho]", ",", "\[Phi]"}], "]"}]}]}], ")"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.407891587322*^9, {3.407891628966*^9, 3.4078916339049997`*^9}, 
   3.4079980953326125`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
\:041f\:043e\:043b\:0443\:0447\:0435\:043d\:0438\:0435 \:0441\:0438\:0441\
\:0442\:0435\:043c\:044b \:0434\:043b\:044f \:043d\:0430\:0445\:043e\:0436\
\:0434\:0435\:043d\:0438\:044f \:0438\:043d\:043a\:0440\:0435\:043c\:0435\
\:043d\:0442\:043e\:0432\
\>", "Subsection"],

Cell[CellGroupData[{

Cell["\<\
\:041f\:043e\:043b\:0443\:0447\:0435\:043d\:0438\:0435 \:0431\:0430\:0437\
\:0438\:0441\:043d\:044b\:0445 \:0444\:0443\:043d\:043a\:0446\:0438\:0439 (\
\:043d\:0443\:043b\:0438 \:0411\:0435\:0441\:0441\:0435\:043b\:044f)\
\>", "Subsubsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bz", "[", 
   RowBox[{"i\[Phi]_", ",", "ir_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"bz", "[", 
    RowBox[{"i\[Phi]", ",", "ir"}], "]"}], "=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"ir", "\[Equal]", "0"}], ",", 
     RowBox[{"0", 
      RowBox[{"KroneckerDelta", "[", 
       RowBox[{"ir", ",", "i\[Phi]"}], "]"}]}], ",", 
     RowBox[{"N", "[", 
      RowBox[{"BesselJZero", "[", 
       RowBox[{"i\[Phi]", ",", "ir"}], "]"}], "]"}]}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.3913430526968*^9, 3.3913430654818*^9}, {
  3.3913432385418*^9, 3.3913432426398*^9}}],

Cell[CellGroupData[{

Cell["\:041f\:0440\:043e\:0432\:0435\:0440\:043a\:0438", "Text"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"bz", "[", 
      RowBox[{"i", ",", "j"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "5"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "0", ",", "5", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.3913423990288*^9, 3.3913424760748*^9}, {
  3.3913432470198*^9, 3.3913432532108*^9}}],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"N", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"BesselJZero", "[", 
       RowBox[{"i", ",", "j"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "5"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "0", ",", "5", ",", "1"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"BesselJ", "[", 
      RowBox[{"i\[Phi]", ",", 
       RowBox[{
        RowBox[{"bz", "[", 
         RowBox[{"i\[Phi]", ",", "ir"}], "]"}], "r"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i\[Phi]", ",", "0", ",", "5", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"ir", ",", "1", ",", "5", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.3913425974958*^9, 3.3913426684238*^9}, {
  3.3913427041478*^9, 3.3913427416798*^9}, {3.3913429504938*^9, 
  3.3913429524538*^9}, {3.3913430755558*^9, 3.3913430756598*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\:0412\:044b\:0434\:0435\:043b\:0435\:043d\:0438\:0435 \:043a\:043e\
\:044d\:0444\:0444\:0438\:0446\:0438\:0435\:043d\:0442\:043e\:0432", \
"Subsubsection"],

Cell[CellGroupData[{

Cell["\:0423\:0441\:0442\:0430\:0440\:0435\:0432\:0448\:0438\:0435 \:0432\
\:0435\:0440\:0441\:0438\:0438 \:0444\:0443\:043d\:043a\:0446\:0438\:0439", \
"Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"BesselNorm", "[", 
   RowBox[{"i\[Phi]_", ",", "ir_"}], "]"}], ":=", 
  RowBox[{
   UnderoverscriptBox["\[Integral]", "0", "1"], 
   RowBox[{"r", " ", 
    SuperscriptBox[
     RowBox[{"BesselJ", "[", 
      RowBox[{"i\[Phi]", ",", 
       RowBox[{
        RowBox[{"bz", "[", 
         RowBox[{"i\[Phi]", ",", "ir"}], "]"}], "r"}]}], "]"}], "2"], 
    RowBox[{"\[DifferentialD]", "r"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
      "\:043d\:0435", " ", 
       "\:043f\:0440\:0438\:043c\:0435\:043d\:044f\:0442\:044c", " ", 
       "\:0432", " ", 
       "\:0441\:0438\:043c\:0432\:043e\:043b\:044c\:043d\:043e\:043c", " ", 
       RowBox[{"\:0432\:0438\:0434\:0435", "!"}], "bz", " ", 
       "\:0433\:043b\:044e\:0447\:0438\:0442"}], ")"}], " ", "-", " ", 
     RowBox[{
     "\:0442\:043e", " ", "\:0436\:0435", " ", 
      "\:0441\:0430\:043c\:043e\:0435"}]}], ",", " ", 
    RowBox[{"\:043d\:043e", " ", "\:0434\:043e\:043b\:044c\:0448\:0435"}]}], 
   "*)"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"BesselScalar", "[", 
    RowBox[{"if1_", ",", "ir1_", ",", "if2_", ",", "ir2_"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"if1", "\[Equal]", "if2"}], ",", 
     RowBox[{
      RowBox[{"KroneckerDelta", "[", 
       RowBox[{"ir1", ",", "ir2"}], "]"}], 
      RowBox[{"BesselNorm", "[", 
       RowBox[{"if1", ",", "ir1"}], "]"}]}], ",", 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{"\[Rho]", " ", 
        RowBox[{"BesselJ", "[", 
         RowBox[{"if1", ",", 
          RowBox[{
           RowBox[{"bz", "[", 
            RowBox[{"if1", ",", "ir1"}], "]"}], "\[Rho]"}]}], "]"}], 
        RowBox[{"BesselJ", "[", 
         RowBox[{"if2", ",", 
          RowBox[{
           RowBox[{"bz", "[", 
            RowBox[{"if2", ",", "ir2"}], "]"}], "\[Rho]"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Rho]", ",", "0", ",", "1"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"n", "=", "i\[Phi]"}], ",", 
    RowBox[{"mun", "=", 
     RowBox[{
      SubscriptBox["\[Mu]", "n"], "=", "ir"}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"GetHarmCoef", "[", 
    RowBox[{"expr_", ",", "i\[Phi]_", ",", "ir_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Rho]", ",", "\[Phi]"}], "}"}], ",", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"2", "\[Pi]", " ", 
        RowBox[{"BesselNorm", "[", 
         RowBox[{"i\[Phi]", ",", "ir"}], "]"}]}]], 
      RowBox[{
       UnderoverscriptBox["\[Integral]", "0", "1"], 
       RowBox[{
        UnderoverscriptBox["\[Integral]", "0", 
         RowBox[{"2", "\[Pi]"}]], 
        RowBox[{"\[Rho]", " ", "expr", " ", 
         RowBox[{"BesselJ", "[", 
          RowBox[{"i\[Phi]", ",", 
           RowBox[{
            RowBox[{"bz", "[", 
             RowBox[{"i\[Phi]", ",", "ir"}], "]"}], " ", "\[Rho]"}]}], "]"}], 
         " ", 
         SuperscriptBox["E", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "i\[Phi]", " ", "\[Phi]"}]], 
         RowBox[{"\[DifferentialD]", "\[Phi]"}], 
         RowBox[{"\[DifferentialD]", "\[Rho]"}]}]}]}]}]}], "]"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GetHarmCoef", "[", 
   RowBox[{"expr_", ",", "i\[Phi]_", ",", "ir_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Rho]", ",", "\[Phi]"}], "}"}], ",", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", "\[Pi]", " ", 
       RowBox[{"BesselNorm", "[", 
        RowBox[{"i\[Phi]", ",", "ir"}], "]"}]}]], 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{"\[Rho]", " ", "expr", " ", 
        RowBox[{"BesselJ", "[", 
         RowBox[{"i\[Phi]", ",", 
          RowBox[{
           RowBox[{"bz", "[", 
            RowBox[{"i\[Phi]", ",", "ir"}], "]"}], " ", "\[Rho]"}]}], "]"}], 
        " ", 
        SuperscriptBox["E", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "i\[Phi]", " ", "\[Phi]"}]]}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]", ",", "0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Rho]", ",", "0", ",", "1"}], "}"}]}], "]"}]}]}], 
   "]"}]}]], "Input"]
}, Closed]],

Cell[BoxData[
 RowBox[{
  RowBox[{"BesselNorm", "[", 
   RowBox[{"i\[Phi]_", ",", "ir_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"ir", "\[Equal]", "0"}], ",", 
    FractionBox[
     RowBox[{"KroneckerDelta", "[", 
      RowBox[{"ir", ",", "i\[Phi]"}], "]"}], "2"], ",", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"BesselJ", "[", 
       RowBox[{
        RowBox[{"i\[Phi]", "+", "1"}], ",", 
        RowBox[{"bz", "[", 
         RowBox[{"i\[Phi]", ",", "ir"}], "]"}]}], "]"}], "2"], "2"]}], 
   "]"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"BesselScalar", "[", 
    RowBox[{
    "weight_", ",", "if1_", ",", "ir1_", ",", "if2_", ",", "ir2_", ",", 
     "rvar_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"BesselScalar", "[", 
     RowBox[{
     "weight", ",", "if1", ",", "ir1", ",", "if2", ",", "ir2", ",", "rvar"}], 
     "]"}], "=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"funcs", "=", 
         RowBox[{
          RowBox[{"BesselJ", "[", 
           RowBox[{"if1", ",", 
            RowBox[{
             RowBox[{"bz", "[", 
              RowBox[{"if1", ",", "ir1"}], "]"}], "rvar"}]}], "]"}], 
          RowBox[{"BesselJ", "[", 
           RowBox[{"if2", ",", 
            RowBox[{
             RowBox[{"bz", "[", 
              RowBox[{"if2", ",", "ir2"}], "]"}], "rvar"}]}], "]"}]}]}], ",", 
        "zerord"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<bs\>\"", ",", 
          RowBox[{"{", 
           RowBox[{"weight", ",", "if1", ",", "ir1", ",", "if2", ",", "ir2"}],
            "}"}]}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"zerord", "=", 
        RowBox[{
         RowBox[{"Position", "[", 
          RowBox[{
           RowBox[{"CoefficientList", "[", 
            RowBox[{
             RowBox[{"Series", "[", 
              RowBox[{"funcs", ",", 
               RowBox[{"{", 
                RowBox[{"\[Rho]", ",", "0", ",", 
                 RowBox[{
                  RowBox[{"Exponent", "[", 
                   RowBox[{"weight", ",", 
                    SuperscriptBox["rvar", 
                    RowBox[{"-", "1"}]]}], "]"}], "-", "1"}]}], "}"}]}], 
              "]"}], ",", "\[Rho]"}], "]"}], ",", 
           RowBox[{"_", "?", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"#", "\[NotEqual]", "0"}], "&"}], ")"}]}]}], "]"}], "-",
          "1"}]}], ";", 
       RowBox[{"Return", "[", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Depth", "[", "zerord", "]"}], "==", "3"}], ",", "$Failed",
           ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"if1", "==", "if2"}], "\[And]", 
             RowBox[{"FreeQ", "[", 
              RowBox[{
               FractionBox["weight", "\[Rho]"], ",", "\[Rho]"}], "]"}]}], ",",
             
            RowBox[{
             FractionBox["weight", "\[Rho]"], 
             RowBox[{"KroneckerDelta", "[", 
              RowBox[{"ir1", ",", "ir2"}], "]"}], 
             RowBox[{"BesselNorm", "[", 
              RowBox[{"if1", ",", "ir1"}], "]"}]}], ",", 
            RowBox[{"NIntegrate", "[", 
             RowBox[{
              RowBox[{"Evaluate", "[", 
               RowBox[{"weight", " ", "funcs"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"rvar", ",", "0", ",", "1"}], "}"}]}], "]"}]}], 
           "]"}]}], "]"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BesselScalar", "[", 
    RowBox[{
    "weight_", ",", "if1_", ",", "if1a_", ",", "ir1_", ",", "if2_", ",", 
     "if2a_", ",", "ir2_", ",", "rvar_"}], "]"}], ":=", "\[IndentingNewLine]",
    
   RowBox[{
    RowBox[{"BesselScalar", "[", 
     RowBox[{
     "weight", ",", "if1", ",", "if1a", ",", "ir1", ",", "if2", ",", "if2a", 
      ",", "ir2", ",", "rvar"}], "]"}], "=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"funcs", "=", 
         RowBox[{
          RowBox[{"BesselJ", "[", 
           RowBox[{"if1", ",", 
            RowBox[{
             RowBox[{"bz", "[", 
              RowBox[{"if1a", ",", "ir1"}], "]"}], "rvar"}]}], "]"}], 
          RowBox[{"BesselJ", "[", 
           RowBox[{"if2", ",", 
            RowBox[{
             RowBox[{"bz", "[", 
              RowBox[{"if2a", ",", "ir2"}], "]"}], "rvar"}]}], "]"}]}]}], ",",
         "zerord"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<bs\>\"", ",", 
          RowBox[{"{", 
           RowBox[{
           "weight", ",", "if1", ",", "if1a", ",", "ir1", ",", "if2", ",", 
            "if2a", ",", "ir2"}], "}"}]}], "]"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"zerord", "=", 
        RowBox[{
         RowBox[{"Position", "[", 
          RowBox[{
           RowBox[{"CoefficientList", "[", 
            RowBox[{
             RowBox[{"Series", "[", 
              RowBox[{"funcs", ",", 
               RowBox[{"{", 
                RowBox[{"\[Rho]", ",", "0", ",", 
                 RowBox[{
                  RowBox[{"Exponent", "[", 
                   RowBox[{"weight", ",", 
                    SuperscriptBox["rvar", 
                    RowBox[{"-", "1"}]]}], "]"}], "-", "1"}]}], "}"}]}], 
              "]"}], ",", "\[Rho]"}], "]"}], ",", 
           RowBox[{"_", "?", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"#", "\[NotEqual]", "0"}], "&"}], ")"}]}]}], "]"}], "-",
          "1"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Depth", "[", "zerord", "]"}], "\[Equal]", "3"}], ",", 
          "$Failed", ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
             "if1", "\[Equal]", "if2", "\[Equal]", "if1a", "\[Equal]", 
              "if2a"}], "\[And]", 
             RowBox[{"FreeQ", "[", 
              RowBox[{
               FractionBox["weight", "\[Rho]"], ",", "\[Rho]"}], "]"}]}], ",",
             
            RowBox[{
             FractionBox["weight", "\[Rho]"], 
             RowBox[{"KroneckerDelta", "[", 
              RowBox[{"ir1", ",", "ir2"}], "]"}], 
             RowBox[{"BesselNorm", "[", 
              RowBox[{"if1", ",", "ir1"}], "]"}]}], ",", 
            RowBox[{"NIntegrate", "[", 
             RowBox[{
              RowBox[{"Evaluate", "[", 
               RowBox[{"weight", " ", "funcs"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"rvar", ",", "0", ",", "1"}], "}"}]}], "]"}]}], 
           "]"}]}], "]"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}]}], 
  ";"}]}], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"n", "=", "i\[Phi]"}], ",", 
  RowBox[{"mun", "=", 
   RowBox[{
    SubscriptBox["\[Mu]", "n"], "=", "ir"}]}]}]], "Text"],

Cell[CellGroupData[{

Cell[TextData[{
 "\:041f\:043e\:0434\:0441\:0442\:0430\:043d\:043e\:0432\:043a\:0438 \:0434\
\:043b\:044f \:0432\:044b\:043f\:043e\:043b\:043d\:0435\:043d\:0438\:044f \
\:0440\:0443\:0447\:043d\:043e\:0433\:043e \:0438\:043d\:0442\:0435\:0433\
\:0440\:0438\:0440\:043e\:0432\:0430\:043d\:0438\:044f \:043f\:043e \[Phi] (\
\:0438\:0441\:043f\:043e\:043b\:044c\:0437\:0443\:044e\:0442\:0441\:044f \
\:0432 \:0444\:0443\:043d\:043a\:0446\:0438\:044f\:0445 GetCoef/Symb).\n\
\:041e\:0441\:0442\:043e\:0440\:043e\:0436\:043d\:043e! \:041d\:0435 \:0440\
\:0430\:0431\:043e\:0442\:0430\:0435\:0442 \:0441 \:0432\:044b\:0440\:0430\
\:0436\:0435\:043d\:0438\:044f\:043c\:0438 \:0442\:0438\:043f\:0430 ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["E", 
     RowBox[{
      RowBox[{"-", "2"}], "\[ImaginaryI]", "  ", "\[Phi]"}]], 
    RowBox[{"Sin", "[", "\[Phi]", "]"}], 
    RowBox[{"Cos", "[", "\[Phi]", "]"}]}], TraditionalForm]]]
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Phi]integr", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"a_.", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[Phi]", " ", 
          RowBox[{"Complex", "[", 
           RowBox[{"0", ",", "m_"}], "]"}]}]], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Phi]", " ", "n_."}], "]"}]}], "/;", 
       RowBox[{
        SuperscriptBox["n", "2"], "\[NotEqual]", 
        SuperscriptBox["m", "2"]}]}], "\[RuleDelayed]", 
      RowBox[{"a", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "n"}], "+", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "m", " ", "\[Pi]"}]], " ", 
          
          RowBox[{"(", 
           RowBox[{
            RowBox[{"n", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "n", " ", "\[Pi]"}], "]"}]}], "-", 
            RowBox[{"\[ImaginaryI]", " ", "m", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", "n", " ", "\[Pi]"}], "]"}]}]}], ")"}]}]}], 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"m", "-", "n"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"m", "+", "n"}], ")"}], " ", "\[Pi]"}]]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"a_.", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[Phi]", " ", 
          RowBox[{"Complex", "[", 
           RowBox[{"0", ",", "m_"}], "]"}]}]], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Phi]", " ", "n_."}], "]"}]}], "/;", 
       RowBox[{
        SuperscriptBox["n", "2"], "\[NotEqual]", 
        SuperscriptBox["m", "2"]}]}], "\[RuleDelayed]", 
      RowBox[{"a", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{"m", "+", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", " ", "\[ImaginaryI]", " ", "m", " ", "\[Pi]"}]], 
            " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "m"}], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "n", " ", "\[Pi]"}], "]"}]}], "+", 
              RowBox[{"\[ImaginaryI]", " ", "n", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"2", " ", "n", " ", "\[Pi]"}], "]"}]}]}], ")"}]}]}], 
          ")"}]}], 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"m", "-", "n"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"m", "+", "n"}], ")"}], " ", "\[Pi]"}]]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"a_.", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[Phi]", " ", 
          RowBox[{"Complex", "[", 
           RowBox[{"0", ",", "m_"}], "]"}]}]], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Phi]", " ", "n_."}], "]"}]}], "/;", 
       RowBox[{
        RowBox[{"n", "\[Equal]", "m"}], "&&", 
        RowBox[{"n", "\[NotEqual]", "0"}]}]}], "\[RuleDelayed]", 
      RowBox[{"a", 
       FractionBox[
        RowBox[{"1", "-", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", "n", " ", "\[Pi]"}]], "+", 
         RowBox[{"4", " ", "\[ImaginaryI]", " ", "n", " ", "\[Pi]"}]}], 
        RowBox[{"8", " ", "n", " ", "\[Pi]"}]]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"a_.", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[Phi]", " ", 
          RowBox[{"Complex", "[", 
           RowBox[{"0", ",", "m_"}], "]"}]}]], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Phi]", " ", "n_."}], "]"}]}], "/;", 
       RowBox[{
        RowBox[{"n", "\[Equal]", "m"}], "&&", 
        RowBox[{"n", "\[NotEqual]", "0"}]}]}], "\[RuleDelayed]", 
      RowBox[{"a", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", "-", 
         RowBox[{"\[ImaginaryI]", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", "n", " ", "\[Pi]"}]]}], 
         "+", 
         RowBox[{"4", " ", "n", " ", "\[Pi]"}]}], 
        RowBox[{"8", " ", "n", " ", "\[Pi]"}]]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"a_.", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[Phi]", " ", 
          RowBox[{"Complex", "[", 
           RowBox[{"0", ",", "m_"}], "]"}]}]], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Phi]", " ", "n_."}], "]"}]}], "/;", 
       RowBox[{
        RowBox[{"n", "\[Equal]", 
         RowBox[{"-", "m"}]}], "&&", 
        RowBox[{"n", "\[NotEqual]", "0"}]}]}], "\[RuleDelayed]", 
      RowBox[{"a", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", "m", " ", "\[Pi]"}]], "-", 
         RowBox[{"4", " ", "\[ImaginaryI]", " ", "m", " ", "\[Pi]"}]}], 
        RowBox[{"8", " ", "m", " ", "\[Pi]"}]]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"a_.", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[Phi]", " ", 
          RowBox[{"Complex", "[", 
           RowBox[{"0", ",", "m_"}], "]"}]}]], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Phi]", " ", "n_."}], "]"}]}], "/;", 
       RowBox[{
        RowBox[{"n", "\[Equal]", 
         RowBox[{"-", "m"}]}], "&&", 
        RowBox[{"n", "\[NotEqual]", "0"}]}]}], "\[RuleDelayed]", 
      RowBox[{"a", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", "-", 
         RowBox[{"\[ImaginaryI]", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", "m", " ", "\[Pi]"}]]}], 
         "+", 
         RowBox[{"4", " ", "m", " ", "\[Pi]"}]}], 
        RowBox[{"8", " ", "m", " ", "\[Pi]"}]]}]}], ",", 
     RowBox[{
      RowBox[{"a_.", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[Phi]", " ", 
         RowBox[{"Complex", "[", 
          RowBox[{"0", ",", "m_"}], "]"}]}]]}], "\[RuleDelayed]", 
      RowBox[{"a", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{"m", "-", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", " ", "\[ImaginaryI]", " ", "m", " ", "\[Pi]"}]], 
            " ", "m"}]}], ")"}]}], 
        RowBox[{"2", " ", 
         SuperscriptBox["m", "2"], " ", "\[Pi]"}]]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"a_.", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Phi]", " ", "n_."}], "]"}]}], "/;", 
       RowBox[{"n", "\[NotEqual]", "0"}]}], "\[RuleDelayed]", 
      RowBox[{
       RowBox[{"-", "a"}], 
       FractionBox[
        RowBox[{
         RowBox[{"-", "n"}], "+", 
         RowBox[{"n", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "n", " ", "\[Pi]"}], "]"}]}]}], 
        RowBox[{"2", " ", 
         SuperscriptBox["n", "2"], " ", "\[Pi]"}]]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"a_.", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Phi]", " ", "n_."}], "]"}]}], "/;", 
       RowBox[{"n", "\[NotEqual]", "0"}]}], "\[RuleDelayed]", 
      RowBox[{"a", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "n", " ", "\[Pi]"}], "]"}], 
        RowBox[{"2", " ", "n", " ", "\[Pi]"}]]}]}]}], "}"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Phi]integrdebug", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"a_.", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[Phi]", " ", 
          RowBox[{"Complex", "[", 
           RowBox[{"0", ",", "m_"}], "]"}]}]], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Phi]", " ", "n_."}], "]"}]}], "/;", 
       RowBox[{
        SuperscriptBox["n", "2"], "\[NotEqual]", 
        SuperscriptBox["m", "2"]}]}], "\[RuleDelayed]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"{", 
          RowBox[{"1", ",", "n", ",", "m"}], "}"}], "]"}], ";", 
        RowBox[{"a", 
         FractionBox[
          RowBox[{
           RowBox[{"-", "n"}], "+", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", " ", "\[ImaginaryI]", " ", "m", " ", "\[Pi]"}]], 
            " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"n", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "n", " ", "\[Pi]"}], "]"}]}], "-", 
              RowBox[{"\[ImaginaryI]", " ", "m", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"2", " ", "n", " ", "\[Pi]"}], "]"}]}]}], ")"}]}]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"m", "-", "n"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"m", "+", "n"}], ")"}], " ", "\[Pi]"}]]}]}], ")"}]}], ",",
      
     RowBox[{
      RowBox[{
       RowBox[{"a_.", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[Phi]", " ", 
          RowBox[{"Complex", "[", 
           RowBox[{"0", ",", "m_"}], "]"}]}]], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Phi]", " ", "n_."}], "]"}]}], "/;", 
       RowBox[{
        SuperscriptBox["n", "2"], "\[NotEqual]", 
        SuperscriptBox["m", "2"]}]}], "\[RuleDelayed]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"{", 
          RowBox[{"2", ",", "n", ",", "m"}], "}"}], "]"}], ";", 
        RowBox[{"a", 
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"m", "+", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"2", " ", "\[ImaginaryI]", " ", "m", " ", "\[Pi]"}]], 
              " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "m"}], " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "n", " ", "\[Pi]"}], "]"}]}], "+", 
                RowBox[{"\[ImaginaryI]", " ", "n", " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"2", " ", "n", " ", "\[Pi]"}], "]"}]}]}], ")"}]}]}],
             ")"}]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"m", "-", "n"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"m", "+", "n"}], ")"}], " ", "\[Pi]"}]]}]}], ")"}]}], ",",
      
     RowBox[{
      RowBox[{
       RowBox[{"a_.", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[Phi]", " ", 
          RowBox[{"Complex", "[", 
           RowBox[{"0", ",", "m_"}], "]"}]}]], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Phi]", " ", "n_."}], "]"}]}], "/;", 
       RowBox[{
        RowBox[{"n", "\[Equal]", "m"}], "&&", 
        RowBox[{"n", "\[NotEqual]", "0"}]}]}], "\[RuleDelayed]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"{", 
          RowBox[{"3", ",", "n", ",", "m"}], "}"}], "]"}], ";", 
        RowBox[{"a", 
         FractionBox[
          RowBox[{"1", "-", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", "n", " ", "\[Pi]"}]], "+",
            
           RowBox[{"4", " ", "\[ImaginaryI]", " ", "n", " ", "\[Pi]"}]}], 
          RowBox[{"8", " ", "n", " ", "\[Pi]"}]]}]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"a_.", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[Phi]", " ", 
          RowBox[{"Complex", "[", 
           RowBox[{"0", ",", "m_"}], "]"}]}]], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Phi]", " ", "n_."}], "]"}]}], "/;", 
       RowBox[{
        RowBox[{"n", "\[Equal]", "m"}], "&&", 
        RowBox[{"n", "\[NotEqual]", "0"}]}]}], "\[RuleDelayed]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"{", 
          RowBox[{"4", ",", "n", ",", "m"}], "}"}], "]"}], ";", 
        RowBox[{"a", 
         FractionBox[
          RowBox[{"\[ImaginaryI]", "-", 
           RowBox[{"\[ImaginaryI]", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", "n", " ", "\[Pi]"}]]}], 
           "+", 
           RowBox[{"4", " ", "n", " ", "\[Pi]"}]}], 
          RowBox[{"8", " ", "n", " ", "\[Pi]"}]]}]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"a_.", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[Phi]", " ", 
          RowBox[{"Complex", "[", 
           RowBox[{"0", ",", "m_"}], "]"}]}]], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Phi]", " ", "n_."}], "]"}]}], "/;", 
       RowBox[{
        RowBox[{"n", "\[Equal]", 
         RowBox[{"-", "m"}]}], "&&", 
        RowBox[{"n", "\[NotEqual]", "0"}]}]}], "\[RuleDelayed]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"{", 
          RowBox[{"5", ",", "n", ",", "m"}], "}"}], "]"}], ";", 
        RowBox[{"a", 
         FractionBox[
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", "m", " ", "\[Pi]"}]], "-",
            
           RowBox[{"4", " ", "\[ImaginaryI]", " ", "m", " ", "\[Pi]"}]}], 
          RowBox[{"8", " ", "m", " ", "\[Pi]"}]]}]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"a_.", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[Phi]", " ", 
          RowBox[{"Complex", "[", 
           RowBox[{"0", ",", "m_"}], "]"}]}]], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Phi]", " ", "n_."}], "]"}]}], "/;", 
       RowBox[{
        RowBox[{"n", "\[Equal]", 
         RowBox[{"-", "m"}]}], "&&", 
        RowBox[{"n", "\[NotEqual]", "0"}]}]}], "\[RuleDelayed]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"{", 
          RowBox[{"6", ",", "n", ",", "m"}], "}"}], "]"}], ";", 
        RowBox[{"a", 
         FractionBox[
          RowBox[{"\[ImaginaryI]", "-", 
           RowBox[{"\[ImaginaryI]", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", "m", " ", "\[Pi]"}]]}], 
           "+", 
           RowBox[{"4", " ", "m", " ", "\[Pi]"}]}], 
          RowBox[{"8", " ", "m", " ", "\[Pi]"}]]}]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{"a_.", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[Phi]", " ", 
         RowBox[{"Complex", "[", 
          RowBox[{"0", ",", "m_"}], "]"}]}]]}], "\[RuleDelayed]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"{", 
          RowBox[{"7", ",", "n", ",", "m"}], "}"}], "]"}], ";", 
        RowBox[{"a", 
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"m", "-", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"2", " ", "\[ImaginaryI]", " ", "m", " ", "\[Pi]"}]], 
              " ", "m"}]}], ")"}]}], 
          RowBox[{"2", " ", 
           SuperscriptBox["m", "2"], " ", "\[Pi]"}]]}]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"a_.", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Phi]", " ", "n_."}], "]"}]}], "/;", 
       RowBox[{"n", "\[NotEqual]", "0"}]}], "\[RuleDelayed]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"{", 
          RowBox[{"8", ",", "n", ",", "m"}], "}"}], "]"}], ";", 
        RowBox[{
         RowBox[{"-", "a"}], 
         FractionBox[
          RowBox[{
           RowBox[{"-", "n"}], "+", 
           RowBox[{"n", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "n", " ", "\[Pi]"}], "]"}]}]}], 
          RowBox[{"2", " ", 
           SuperscriptBox["n", "2"], " ", "\[Pi]"}]]}]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"a_.", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Phi]", " ", "n_."}], "]"}]}], "/;", 
       RowBox[{"n", "\[NotEqual]", "0"}]}], "\[RuleDelayed]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"{", 
          RowBox[{"9", ",", "n", ",", "m"}], "}"}], "]"}], ";", 
        RowBox[{"a", 
         FractionBox[
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "n", " ", "\[Pi]"}], "]"}], 
          RowBox[{"2", " ", "n", " ", "\[Pi]"}]]}]}], ")"}]}]}], "}"}]}], 
  ";"}]], "Input"]
}, Closed]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GetHarmCoef", "[", 
    RowBox[{"expr_", ",", "i\[Phi]_", ",", "ir_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Rho]", ",", "\[Phi]", ",", "vir", ",", "opts", ",", 
       RowBox[{"eps", "=", 
        RowBox[{"0", " ", 
         SuperscriptBox["10", 
          RowBox[{"-", "6"}]]}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Off", "[", 
       RowBox[{"NIntegrate", "::", "\"\<ploss\>\""}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"vir", "=", 
       RowBox[{"Chop", "[", 
        RowBox[{
         FractionBox["1", 
          RowBox[{"2", "\[Pi]"}]], 
         RowBox[{
          UnderoverscriptBox["\[Integral]", "0", 
           RowBox[{"2", "\[Pi]"}]], 
          RowBox[{
           RowBox[{"Expand", "[", "expr", "]"}], " ", 
           SuperscriptBox["E", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "i\[Phi]", " ", "\[Phi]"}]],
            
           RowBox[{"\[DifferentialD]", "\[Phi]"}]}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Phi]integr", "=."}], ".."}], ";", 
        RowBox[{"vir", "=", 
         RowBox[{"Chop", "[", 
          RowBox[{
           RowBox[{"Expand", "[", 
            RowBox[{"expr", " ", 
             SuperscriptBox["E", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "i\[Phi]", " ", 
               "\[Phi]"}]]}], "]"}], "/.", "\[Phi]integr"}], "]"}]}], ";"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"opts", "=", 
       RowBox[{"Sequence", "[", 
        RowBox[{"MaxRecursion", "\[Rule]", "20"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{
        RowBox[{"Expand", "[", 
         RowBox[{
          FractionBox["1", 
           RowBox[{"BesselNorm", "[", 
            RowBox[{"i\[Phi]", ",", "ir"}], "]"}]], "vir", " ", 
          RowBox[{"BesselJ", "[", 
           RowBox[{"i\[Phi]", ",", 
            RowBox[{
             RowBox[{"bz", "[", 
              RowBox[{"i\[Phi]", ",", "ir"}], "]"}], "\[Rho]"}]}], "]"}], 
          "\[Rho]"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"BesselJ", "[", 
             RowBox[{"i1_", ",", 
              RowBox[{"k1_", " ", "\[Rho]"}]}], "]"}], 
            RowBox[{"BesselJ", "[", 
             RowBox[{"i2_", ",", 
              RowBox[{"k2_", " ", "\[Rho]"}]}], "]"}], 
            SuperscriptBox["\[Rho]", "por_."]}], "\[RuleDelayed]", 
           RowBox[{"NIntegrate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"BesselJ", "[", 
               RowBox[{"i1", ",", 
                RowBox[{"k1", " ", "\[Rho]"}]}], "]"}], 
              RowBox[{"BesselJ", "[", 
               RowBox[{"i2", ",", 
                RowBox[{"k2", " ", "\[Rho]"}]}], "]"}], 
              SuperscriptBox["\[Rho]", "por"]}], ",", 
             RowBox[{"{", 
              RowBox[{"\[Rho]", ",", "eps", ",", "1"}], "}"}], ",", 
             RowBox[{"Evaluate", "[", "opts", "]"}]}], "]"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"BesselJ", "[", 
             RowBox[{"i1_", ",", 
              RowBox[{"k1_", " ", "\[Rho]"}]}], "]"}], 
            RowBox[{"BesselJ", "[", 
             RowBox[{"i2_", ",", 
              RowBox[{"k2_", " ", "\[Rho]"}]}], "]"}]}], "\[RuleDelayed]", 
           RowBox[{"NIntegrate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"BesselJ", "[", 
               RowBox[{"i1", ",", 
                RowBox[{"k1", " ", "\[Rho]"}]}], "]"}], 
              RowBox[{"BesselJ", "[", 
               RowBox[{"i2", ",", 
                RowBox[{"k2", " ", "\[Rho]"}]}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"\[Rho]", ",", "eps", ",", "1"}], "}"}], ",", 
             RowBox[{"Evaluate", "[", "opts", "]"}]}], "]"}]}], ",", 
          RowBox[{
           RowBox[{
            SuperscriptBox[
             RowBox[{"BesselJ", "[", 
              RowBox[{"i1_", ",", 
               RowBox[{"k1_", " ", "\[Rho]"}]}], "]"}], "2"], 
            SuperscriptBox["\[Rho]", "por_."]}], "\[RuleDelayed]", 
           RowBox[{"NIntegrate", "[", 
            RowBox[{
             RowBox[{
              SuperscriptBox[
               RowBox[{"BesselJ", "[", 
                RowBox[{"i1", ",", 
                 RowBox[{"k1", " ", "\[Rho]"}]}], "]"}], "2"], 
              SuperscriptBox["\[Rho]", "por"]}], ",", 
             RowBox[{"{", 
              RowBox[{"\[Rho]", ",", "eps", ",", "1"}], "}"}], ",", 
             RowBox[{"Evaluate", "[", "opts", "]"}]}], "]"}]}], ",", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"BesselJ", "[", 
             RowBox[{"i1_", ",", 
              RowBox[{"k1_", " ", "\[Rho]"}]}], "]"}], "2"], "\[RuleDelayed]",
            
           RowBox[{"NIntegrate", "[", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"BesselJ", "[", 
               RowBox[{"i1", ",", 
                RowBox[{"k1", " ", "\[Rho]"}]}], "]"}], "2"], ",", 
             RowBox[{"{", 
              RowBox[{"\[Rho]", ",", "eps", ",", "1"}], "}"}], ",", 
             RowBox[{"Evaluate", "[", "opts", "]"}]}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"a_.", 
            RowBox[{"BesselJ", "[", 
             RowBox[{"i1_", ",", 
              RowBox[{"k1_", " ", "\[Rho]"}]}], "]"}]}], "\[RuleDelayed]", 
           RowBox[{"NIntegrate", "[", 
            RowBox[{
             RowBox[{"a", " ", 
              RowBox[{"BesselJ", "[", 
               RowBox[{"i1", ",", 
                RowBox[{"k1", " ", "\[Rho]"}]}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"\[Rho]", ",", "eps", ",", "1"}], "}"}], ",", 
             RowBox[{"Evaluate", "[", "opts", "]"}]}], "]"}]}]}], "}"}]}], 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"On", "[", 
       RowBox[{"NIntegrate", "::", "\"\<ploss\>\""}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ts\[Phi]", ",", "ts1", ",", "ts2", ",", "tsoth", ",", "tslast"}],
     "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], 
  ";"}]], "Input",
 InitializationCell->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"ts\[Phi]", ",", "ts1", ",", "ts2", ",", "tsoth", ",", "tslast"}], 
  "}"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"6.296999999999969`", " ", "Second"}], ",", 
   RowBox[{"1.7039999999994393`", " ", "Second"}], ",", 
   RowBox[{"7.02800000000002`", " ", "Second"}], ",", 
   RowBox[{"0.36000000000001364`", " ", "Second"}], ",", 
   RowBox[{"0.03099999999994907`", " ", "Second"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GetHarmCoefSymb", "[", 
    RowBox[{"expr_", ",", "i\[Phi]_", ",", "ir_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[Rho]", ",", "\[Phi]", ",", "vir", ",", "opts", ",", "temp", ",", "a",
        ",", "b", ",", "\[Phi]integr"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Off", "[", 
       RowBox[{"NIntegrate", "::", "\"\<ploss\>\""}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Phi]integr", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"a_.", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[Phi]", " ", 
              RowBox[{"Complex", "[", 
               RowBox[{"0", ",", "m_"}], "]"}]}]], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Phi]", " ", "n_."}], "]"}]}], "/;", 
           RowBox[{
            SuperscriptBox["n", "2"], "\[NotEqual]", 
            SuperscriptBox["m", "2"]}]}], "\[RuleDelayed]", 
          RowBox[{"a", 
           FractionBox[
            RowBox[{
             RowBox[{"-", "n"}], "+", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"2", " ", "\[ImaginaryI]", " ", "m", " ", "\[Pi]"}]], 
              " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"n", " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "n", " ", "\[Pi]"}], "]"}]}], "-", 
                RowBox[{"\[ImaginaryI]", " ", "m", " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"2", " ", "n", " ", "\[Pi]"}], "]"}]}]}], ")"}]}]}],
             
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"m", "-", "n"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"m", "+", "n"}], ")"}], " ", "\[Pi]"}]]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"a_.", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[Phi]", " ", 
              RowBox[{"Complex", "[", 
               RowBox[{"0", ",", "m_"}], "]"}]}]], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Phi]", " ", "n_."}], "]"}]}], "/;", 
           RowBox[{
            SuperscriptBox["n", "2"], "\[NotEqual]", 
            SuperscriptBox["m", "2"]}]}], "\[RuleDelayed]", 
          RowBox[{"a", 
           FractionBox[
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"(", 
              RowBox[{"m", "+", 
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"2", " ", "\[ImaginaryI]", " ", "m", " ", "\[Pi]"}]],
                 " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "m"}], " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "n", " ", "\[Pi]"}], "]"}]}], "+", 
                  RowBox[{"\[ImaginaryI]", " ", "n", " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "n", " ", "\[Pi]"}], "]"}]}]}], 
                 ")"}]}]}], ")"}]}], 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"m", "-", "n"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"m", "+", "n"}], ")"}], " ", "\[Pi]"}]]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"a_.", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[Phi]", " ", 
              RowBox[{"Complex", "[", 
               RowBox[{"0", ",", "m_"}], "]"}]}]], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Phi]", " ", "n_."}], "]"}]}], "/;", 
           RowBox[{
            RowBox[{"n", "\[Equal]", "m"}], "&&", 
            RowBox[{"n", "\[NotEqual]", "0"}]}]}], "\[RuleDelayed]", 
          RowBox[{"a", 
           FractionBox[
            RowBox[{"1", "-", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"4", " ", "\[ImaginaryI]", " ", "n", " ", "\[Pi]"}]], 
             "+", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", "n", " ", "\[Pi]"}]}], 
            RowBox[{"8", " ", "n", " ", "\[Pi]"}]]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"a_.", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[Phi]", " ", 
              RowBox[{"Complex", "[", 
               RowBox[{"0", ",", "m_"}], "]"}]}]], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Phi]", " ", "n_."}], "]"}]}], "/;", 
           RowBox[{
            RowBox[{"n", "\[Equal]", "m"}], "&&", 
            RowBox[{"n", "\[NotEqual]", "0"}]}]}], "\[RuleDelayed]", 
          RowBox[{"a", 
           FractionBox[
            RowBox[{"\[ImaginaryI]", "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"4", " ", "\[ImaginaryI]", " ", "n", " ", "\[Pi]"}]]}],
              "+", 
             RowBox[{"4", " ", "n", " ", "\[Pi]"}]}], 
            RowBox[{"8", " ", "n", " ", "\[Pi]"}]]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"a_.", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[Phi]", " ", 
              RowBox[{"Complex", "[", 
               RowBox[{"0", ",", "m_"}], "]"}]}]], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Phi]", " ", "n_."}], "]"}]}], "/;", 
           RowBox[{
            RowBox[{"n", "\[Equal]", 
             RowBox[{"-", "m"}]}], "&&", 
            RowBox[{"n", "\[NotEqual]", "0"}]}]}], "\[RuleDelayed]", 
          RowBox[{"a", 
           FractionBox[
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"4", " ", "\[ImaginaryI]", " ", "m", " ", "\[Pi]"}]], 
             "-", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", "m", " ", "\[Pi]"}]}], 
            RowBox[{"8", " ", "m", " ", "\[Pi]"}]]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"a_.", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[Phi]", " ", 
              RowBox[{"Complex", "[", 
               RowBox[{"0", ",", "m_"}], "]"}]}]], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Phi]", " ", "n_."}], "]"}]}], "/;", 
           RowBox[{
            RowBox[{"n", "\[Equal]", 
             RowBox[{"-", "m"}]}], "&&", 
            RowBox[{"n", "\[NotEqual]", "0"}]}]}], "\[RuleDelayed]", 
          RowBox[{"a", 
           FractionBox[
            RowBox[{"\[ImaginaryI]", "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"4", " ", "\[ImaginaryI]", " ", "m", " ", "\[Pi]"}]]}],
              "+", 
             RowBox[{"4", " ", "m", " ", "\[Pi]"}]}], 
            RowBox[{"8", " ", "m", " ", "\[Pi]"}]]}]}], ",", 
         RowBox[{
          RowBox[{"a_.", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[Phi]", " ", 
             RowBox[{"Complex", "[", 
              RowBox[{"0", ",", "m_"}], "]"}]}]]}], "\[RuleDelayed]", 
          RowBox[{"a", 
           FractionBox[
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"(", 
              RowBox[{"m", "-", 
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"2", " ", "\[ImaginaryI]", " ", "m", " ", "\[Pi]"}]],
                 " ", "m"}]}], ")"}]}], 
            RowBox[{"2", " ", 
             SuperscriptBox["m", "2"], " ", "\[Pi]"}]]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"a_.", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Phi]", " ", "n_."}], "]"}]}], "/;", 
           RowBox[{"n", "\[NotEqual]", "0"}]}], "\[RuleDelayed]", 
          RowBox[{
           RowBox[{"-", "a"}], 
           FractionBox[
            RowBox[{
             RowBox[{"-", "n"}], "+", 
             RowBox[{"n", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "n", " ", "\[Pi]"}], "]"}]}]}], 
            RowBox[{"2", " ", 
             SuperscriptBox["n", "2"], " ", "\[Pi]"}]]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"a_.", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Phi]", " ", "n_."}], "]"}]}], "/;", 
           RowBox[{"n", "\[NotEqual]", "0"}]}], "\[RuleDelayed]", 
          RowBox[{"a", 
           FractionBox[
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "n", " ", "\[Pi]"}], "]"}], 
            RowBox[{"2", " ", "n", " ", "\[Pi]"}]]}]}]}], "}"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"ts\[Phi]", "+=", 
         RowBox[{"First", "[", 
          RowBox[{"Timing", "[", 
           RowBox[{
            RowBox[{"vir", "=", 
             RowBox[{"Chop", "[", 
              RowBox[{
               FractionBox["1", 
                RowBox[{"2", "\[Pi]", " "}]], 
               RowBox[{
                UnderoverscriptBox["\[Integral]", "0", 
                 RowBox[{"2", "\[Pi]"}]], 
                RowBox[{
                 RowBox[{"Expand", "[", "expr", "]"}], " ", 
                 SuperscriptBox["E", 
                  RowBox[{
                   RowBox[{"-", "\[ImaginaryI]"}], " ", "i\[Phi]", " ", 
                   "\[Phi]"}]], 
                 RowBox[{"\[DifferentialD]", "\[Phi]"}]}]}]}], "]"}]}], ";"}],
            "]"}], "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ts\[Phi]", "+=", 
       RowBox[{"First", "[", 
        RowBox[{"Timing", "[", 
         RowBox[{
          RowBox[{"vir", "=", 
           RowBox[{"Chop", "[", 
            RowBox[{
             RowBox[{"TrigReduce", "[", 
              RowBox[{"Expand", "[", 
               RowBox[{"expr", " ", 
                SuperscriptBox["E", 
                 RowBox[{
                  RowBox[{"-", "\[ImaginaryI]"}], " ", "i\[Phi]", " ", 
                  "\[Phi]"}]]}], "]"}], "]"}], "/.", "\[Phi]integr"}], 
            "]"}]}], ";"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"opts", "=", 
         RowBox[{"Sequence", "[", 
          RowBox[{"MaxRecursion", "\[Rule]", "20"}], "]"}]}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"temp", "=", 
       RowBox[{
        RowBox[{"Expand", "[", 
         RowBox[{
          FractionBox["1", 
           RowBox[{"BesselNorm", "[", 
            RowBox[{"i\[Phi]", ",", "ir"}], "]"}]], "vir", " ", 
          RowBox[{"BesselJ", "[", 
           RowBox[{"i\[Phi]", ",", 
            RowBox[{
             RowBox[{"\[Beta]", "[", 
              RowBox[{"i\[Phi]", ",", "ir"}], "]"}], "\[Rho]"}]}], "]"}], 
          "\[Rho]"}], "]"}], "+", "Pif"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ts1", "+=", 
       RowBox[{"First", "[", 
        RowBox[{"Timing", "[", 
         RowBox[{
          RowBox[{"temp", "=", 
           RowBox[{"Replace", "[", 
            RowBox[{"temp", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"b_.", 
                  RowBox[{"BesselJ", "[", 
                   RowBox[{"i1_", ",", 
                    RowBox[{
                    RowBox[{"\[Beta]", "[", 
                    RowBox[{"i1_", ",", "k1_"}], "]"}], "\[Rho]"}]}], "]"}], 
                  RowBox[{"BesselJ", "[", 
                   RowBox[{"i2_", ",", 
                    RowBox[{
                    RowBox[{"\[Beta]", "[", 
                    RowBox[{"i2_", ",", "k2_"}], "]"}], "\[Rho]"}]}], "]"}], 
                  SuperscriptBox["\[Rho]", "a_."]}], "/;", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"BesselScalar", "[", 
                    RowBox[{
                    SuperscriptBox["\[Rho]", "a"], ",", "i1", ",", "k1", ",", 
                    "i2", ",", "k2", ",", "\[Rho]"}], "]"}], "=!=", 
                   "$Failed"}], "\[And]", 
                  RowBox[{"FreeQ", "[", 
                   RowBox[{"b", ",", "\[Rho]"}], "]"}]}]}], "\[RuleDelayed]", 
                
                RowBox[{"b", " ", 
                 RowBox[{"BesselScalar", "[", 
                  RowBox[{
                   SuperscriptBox["\[Rho]", "a"], ",", "i1", ",", "k1", ",", 
                   "i2", ",", "k2", ",", "\[Rho]"}], "]"}]}]}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"b_.", 
                  RowBox[{"BesselJ", "[", 
                   RowBox[{"i1_", ",", 
                    RowBox[{
                    RowBox[{"\[Beta]", "[", 
                    RowBox[{"i1_", ",", "k1_"}], "]"}], "\[Rho]"}]}], "]"}], 
                  RowBox[{"BesselJ", "[", 
                   RowBox[{"i2_", ",", 
                    RowBox[{
                    RowBox[{"\[Beta]", "[", 
                    RowBox[{"i2_", ",", "k2_"}], "]"}], "\[Rho]"}]}], "]"}]}],
                  "/;", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"BesselScalar", "[", 
                    RowBox[{
                    "1", ",", "i1", ",", "k1", ",", "i2", ",", "k2", ",", 
                    "\[Rho]"}], "]"}], "=!=", "$Failed"}], "\[And]", 
                  RowBox[{"FreeQ", "[", 
                   RowBox[{"b", ",", "\[Rho]"}], "]"}]}]}], "\[RuleDelayed]", 
                
                RowBox[{"b", " ", 
                 RowBox[{"BesselScalar", "[", 
                  RowBox[{
                  "1", ",", "i1", ",", "k1", ",", "i2", ",", "k2", ",", 
                   "\[Rho]"}], "]"}]}]}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"b_.", 
                  SuperscriptBox[
                   RowBox[{"BesselJ", "[", 
                    RowBox[{"i1_", ",", 
                    RowBox[{
                    RowBox[{"\[Beta]", "[", 
                    RowBox[{"i1_", ",", "k1_"}], "]"}], "\[Rho]"}]}], "]"}], 
                   "2"], 
                  SuperscriptBox["\[Rho]", "a_."]}], "/;", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"BesselScalar", "[", 
                    RowBox[{
                    SuperscriptBox["\[Rho]", "a"], ",", "i1", ",", "k1", ",", 
                    "i1", ",", "k1", ",", "\[Rho]"}], "]"}], "=!=", 
                   "$Failed"}], "\[And]", 
                  RowBox[{"FreeQ", "[", 
                   RowBox[{"b", ",", "\[Rho]"}], "]"}]}]}], "\[RuleDelayed]", 
                
                RowBox[{"b", " ", 
                 RowBox[{"BesselScalar", "[", 
                  RowBox[{
                   SuperscriptBox["\[Rho]", "a"], ",", "i1", ",", "k1", ",", 
                   "i1", ",", "k1", ",", "\[Rho]"}], "]"}]}]}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"b_.", 
                  SuperscriptBox[
                   RowBox[{"BesselJ", "[", 
                    RowBox[{"i1_", ",", 
                    RowBox[{
                    RowBox[{"\[Beta]", "[", 
                    RowBox[{"i1_", ",", "k1_"}], "]"}], "\[Rho]"}]}], "]"}], 
                   "2"]}], "/;", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"BesselScalar", "[", 
                    RowBox[{
                    "1", ",", "i1", ",", "k1", ",", "i1", ",", "k1", ",", 
                    "\[Rho]"}], "]"}], "=!=", "$Failed"}], "\[And]", 
                  RowBox[{"FreeQ", "[", 
                   RowBox[{"b", ",", "\[Rho]"}], "]"}]}]}], "\[RuleDelayed]", 
                
                RowBox[{"b", " ", 
                 RowBox[{"BesselScalar", "[", 
                  RowBox[{
                  "1", ",", "i1", ",", "k1", ",", "i1", ",", "k1", ",", 
                   "\[Rho]"}], "]"}]}]}]}], "}"}], ",", 
             RowBox[{"{", "1", "}"}]}], "]"}]}], ";"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ts2", "+=", 
       RowBox[{"First", "[", 
        RowBox[{"Timing", "[", 
         RowBox[{
          RowBox[{"temp", "=", 
           RowBox[{"Replace", "[", 
            RowBox[{"temp", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"b_.", 
                  RowBox[{"BesselJ", "[", 
                   RowBox[{"i1_", ",", 
                    RowBox[{
                    RowBox[{"\[Beta]", "[", 
                    RowBox[{"i1a_", ",", "k1_"}], "]"}], "\[Rho]"}]}], "]"}], 
                  
                  RowBox[{"BesselJ", "[", 
                   RowBox[{"i2_", ",", 
                    RowBox[{
                    RowBox[{"\[Beta]", "[", 
                    RowBox[{"i2a_", ",", "k2_"}], "]"}], "\[Rho]"}]}], "]"}], 
                  
                  SuperscriptBox["\[Rho]", "a_."]}], "/;", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"BesselScalar", "[", 
                    RowBox[{
                    SuperscriptBox["\[Rho]", "a"], ",", "i1", ",", "i1a", ",",
                     "k1", ",", "i2", ",", "i2a", ",", "k2", ",", "\[Rho]"}], 
                    "]"}], "=!=", "$Failed"}], "\[And]", 
                  RowBox[{"FreeQ", "[", 
                   RowBox[{"b", ",", "\[Rho]"}], "]"}]}]}], "\[RuleDelayed]", 
                
                RowBox[{"b", " ", 
                 RowBox[{"BesselScalar", "[", 
                  RowBox[{
                   SuperscriptBox["\[Rho]", "a"], ",", "i1", ",", "i1a", ",", 
                   "k1", ",", "i2", ",", "i2a", ",", "k2", ",", "\[Rho]"}], 
                  "]"}]}]}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"b_.", 
                  RowBox[{"BesselJ", "[", 
                   RowBox[{"i1_", ",", 
                    RowBox[{
                    RowBox[{"\[Beta]", "[", 
                    RowBox[{"i1a_", ",", "k1_"}], "]"}], "\[Rho]"}]}], "]"}], 
                  
                  RowBox[{"BesselJ", "[", 
                   RowBox[{"i2_", ",", 
                    RowBox[{
                    RowBox[{"\[Beta]", "[", 
                    RowBox[{"i2a_", ",", "k2_"}], "]"}], "\[Rho]"}]}], 
                   "]"}]}], "/;", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"BesselScalar", "[", 
                    RowBox[{
                    "1", ",", "i1", ",", "i1a", ",", "k1", ",", "i2", ",", 
                    "i2a", ",", "k2", ",", "\[Rho]"}], "]"}], "=!=", 
                   "$Failed"}], "\[And]", 
                  RowBox[{"FreeQ", "[", 
                   RowBox[{"b", ",", "\[Rho]"}], "]"}]}]}], "\[RuleDelayed]", 
                
                RowBox[{"b", " ", 
                 RowBox[{"BesselScalar", "[", 
                  RowBox[{
                  "1", ",", "i1", ",", "i1a", ",", "k1", ",", "i2", ",", 
                   "i2a", ",", "k2", ",", "\[Rho]"}], "]"}]}]}]}], "}"}], ",",
              
             RowBox[{"{", "1", "}"}]}], "]"}]}], ";"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"temp", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"temp", "-", "Pif"}], ")"}], "/.", 
        RowBox[{"\[Beta]", "\[Rule]", "bz"}]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"FreeQ", "[", 
         RowBox[{"temp", ",", "\[Rho]"}], "]"}], ",", 
        RowBox[{"Return", "[", "temp", "]"}], ",", 
        RowBox[{"Print", "[", "temp", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"temp", "=", 
       RowBox[{"Normal", "[", 
        RowBox[{"Series", "[", 
         RowBox[{"temp", ",", 
          RowBox[{"{", 
           RowBox[{"\[Rho]", ",", "0", ",", "30"}], "}"}]}], "]"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"Integrate", "[", 
        RowBox[{"temp", ",", 
         RowBox[{"{", 
          RowBox[{"\[Rho]", ",", "0", ",", "1"}], "}"}]}], "]"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"On", "[", 
       RowBox[{"NIntegrate", "::", "\"\<ploss\>\""}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.407065794829*^9, 3.407065801574*^9}}],

Cell[CellGroupData[{

Cell["\:041f\:0440\:043e\:0432\:0435\:0440\:043a\:0438", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"BesselNorm", "[", 
     RowBox[{"i", ",", "j"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "3"}], "}"}]}], "]"}], "//", "N"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0.5`", ",", "0.13475706197095844`", ",", "0.057890069291101874`", ",", 
     "0.036843175568205676`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.`", ",", "0.08110756541334285`", ",", "0.04503473245716415`", ",", 
     "0.031176262813236297`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.`", ",", "0.05768742740874391`", ",", "0.036824254918687384`", ",", 
     "0.027014904075039866`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.`", ",", "0.044483488878310086`", ",", "0.031104368944318603`", ",", 
     "0.023822869521262887`"}], "}"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"BesselJ", "[", 
      RowBox[{"1", ",", 
       RowBox[{"\[Rho]", " ", 
        RowBox[{"bz", "[", 
         RowBox[{"0", ",", "1"}], "]"}]}]}], "]"}], 
     RowBox[{"BesselJ", "[", 
      RowBox[{"1", ",", 
       RowBox[{"\[Rho]", " ", 
        RowBox[{"bz", "[", 
         RowBox[{"1", ",", "1"}], "]"}]}]}], "]"}]}], "\[Rho]"], ",", 
   RowBox[{"{", 
    RowBox[{"\[Rho]", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData["0.3581994387246221`"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BesselScalar", "[", 
  RowBox[{
   SuperscriptBox["\[Rho]", 
    RowBox[{"-", "1"}]], ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "\[Rho]"}], "]"}]], "Input"],

Cell[BoxData["0.3581994387246221`"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GetHarmCoef", "[", 
    RowBox[{
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"ir", "=", "1"}], "3"], 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"i\[Phi]", "=", "0"}], "3"], 
       RowBox[{
        SubscriptBox["v", 
         RowBox[{"ir", ",", "i\[Phi]"}]], 
        RowBox[{"BesselJ", "[", 
         RowBox[{"i\[Phi]", ",", 
          RowBox[{
           RowBox[{"bz", "[", 
            RowBox[{"i\[Phi]", ",", "ir"}], "]"}], "\[Rho]"}]}], "]"}], 
        SuperscriptBox["E", 
         RowBox[{"\[ImaginaryI]", " ", "i\[Phi]", " ", "\[Phi]"}]]}]}]}], ",",
      "1", ",", "2"}], "]"}], "//", "Chop"}], "//", "Timing"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.875`", " ", "Second"}], ",", 
   RowBox[{"0.9999999999999852`", " ", 
    SubscriptBox["v", 
     RowBox[{"2", ",", "1"}]]}]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GetHarmCoefSymb", "[", 
    RowBox[{
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"ir", "=", "1"}], "3"], 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"i\[Phi]", "=", "0"}], "3"], 
       RowBox[{
        SubscriptBox["v", 
         RowBox[{"ir", ",", "i\[Phi]"}]], 
        RowBox[{"BesselJ", "[", 
         RowBox[{"i\[Phi]", ",", 
          RowBox[{
           RowBox[{"\[Beta]", "[", 
            RowBox[{"i\[Phi]", ",", "ir"}], "]"}], "\[Rho]"}]}], "]"}], 
        SuperscriptBox["E", 
         RowBox[{"\[ImaginaryI]", " ", "i\[Phi]", " ", "\[Phi]"}]]}]}]}], ",",
      "1", ",", "2"}], "]"}], "//", "Chop"}], "//", "Timing"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.01599999999996271`", " ", "Second"}], ",", 
   RowBox[{"1.`", " ", 
    SubscriptBox["v", 
     RowBox[{"2", ",", "1"}]]}]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
\:0420\:0430\:0437\:043b\:043e\:0436\:0435\:043d\:0438\:0435 \:0440\:0430\
\:0437\:043b\:0438\:0447\:043d\:044b\:0445 \:0444\:0443\:043d\:043a\:0446\
\:0438\:0439 \:043f\:043e \:0431\:0430\:0437\:0438\:0441\:0443\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fi", "=", 
   RowBox[{"FunctionInterpolation", "[", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"r", "<", 
        RowBox[{"1", "/", "2"}]}], ",", "r", ",", 
       RowBox[{
        RowBox[{"-", "2"}], 
        RowBox[{"(", 
         RowBox[{"1", "-", "r"}], ")"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", "1"}], ",", 
     RowBox[{"MaxRecursion", "\[Rule]", "20"}]}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fi", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["#", "2"]}], ")"}], "&"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fi", "=", 
   RowBox[{"Function", "[", 
    RowBox[{"r", ",", 
     RowBox[{
      SuperscriptBox["r", "2"], 
      RowBox[{"(", 
       RowBox[{"1", "-", "r"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"r", "-", 
        RowBox[{"1", "/", "2"}]}], ")"}]}]}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fi", "=", 
   RowBox[{"Function", "[", 
    RowBox[{"\[Rho]", ",", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"BesselJ", "[", 
         RowBox[{"1", ",", 
          RowBox[{"\[Rho]", " ", 
           RowBox[{"bz", "[", 
            RowBox[{"0", ",", "1"}], "]"}]}]}], "]"}], " "}], 
       SuperscriptBox["\[Rho]", "1"]], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Rho]"}], ")"}], "1"], 
      SuperscriptBox["E", 
       RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]]}]}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"fi", "[", "r", "]"}], "/.", 
     RowBox[{"\[Phi]", "\[Rule]", "0"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "0", ",", "1"}], "}"}]}], "]"}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ebas", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"GetHarmCoef", "[", 
     RowBox[{
      RowBox[{"fi", "[", "\[Rho]", "]"}], ",", "0", ",", "#"}], "]"}], "&"}], 
   "/@", 
   RowBox[{"Range", "[", "10", "]"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0"}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ebas", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"GetHarmCoefSymb", "[", 
     RowBox[{
      RowBox[{"fi", "[", "\[Rho]", "]"}], ",", "1", ",", "#"}], "]"}], "&"}], 
   "/@", 
   RowBox[{"Range", "[", "10", "]"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.42209385579506387`", ",", "0.0540285387679712`", ",", 
   "0.007720095082051626`", ",", "0.007222697069057538`", ",", 
   "0.0014228605022005847`", ",", "0.002327642152286258`", ",", 
   "0.00044669433239452605`", ",", "0.0010491275652095844`", ",", 
   "0.00017943829394659327`", ",", "0.0005667153641192579`"}], 
  "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
\:041f\:0440\:043e\:0432\:0435\:0440\:043a\:0430 \:043e\:0440\:0442\:043e\
\:0433\:043e\:043d\:0430\:043b\:044c\:043d\:043e\:0441\:0442\:0438 \:043e\
\:0441\:0442\:0430\:0442\:043a\:0430\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"firev", "=", 
   RowBox[{"FunctionInterpolation", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"fi", "[", "r", "]"}], "-", 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"i", "=", "1"}], "10"], 
       RowBox[{
        RowBox[{
        "ebas", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
        RowBox[{"BesselJ", "[", 
         RowBox[{"0", ",", 
          RowBox[{
           RowBox[{"bz", "[", 
            RowBox[{"0", ",", "i"}], "]"}], "r"}]}], "]"}]}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"firev", "=", 
   RowBox[{"FunctionInterpolation", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"fi", "[", "r", "]"}], "-", 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"i", "=", "1"}], "10"], 
        RowBox[{
         RowBox[{
         "ebas", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
         RowBox[{"BesselJ", "[", 
          RowBox[{"1", ",", 
           RowBox[{
            RowBox[{"bz", "[", 
             RowBox[{"1", ",", "i"}], "]"}], "r"}]}], "]"}]}]}]}], "/.", 
      RowBox[{"{", 
       RowBox[{"\[Phi]", "\[Rule]", "0"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", 
       RowBox[{"-", "0.2"}], ",", "1.2"}], "}"}]}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"firev", "[", "r", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "0", ",", "1"}], "}"}]}], "]"}], ";"}]], "Input"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "10"], 
     RowBox[{
      RowBox[{"ebas", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
      
      RowBox[{"BesselJ", "[", 
       RowBox[{"1", ",", 
        RowBox[{
         RowBox[{"bz", "[", 
          RowBox[{"1", ",", "i"}], "]"}], "r"}]}], "]"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ";"}]], "Input"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
\:0421\:0438\:0441\:0442\:0435\:043c\:0430 \:043d\:0430 \:043a\:043e\:044d\
\:0444\:0444\:0438\:0446\:0438\:0435\:043d\:0442\:044b \:0440\:0430\:0437\
\:043b\:043e\:0436\:0435\:043d\:0438\:044f \:043f\:043e \:0446\:0438\:043b\
\:0438\:043d\:0434\:0440\:0438\:0447\:0435\:0441\:043a\:0438\:043c \:0433\
\:0430\:0440\:043c\:043e\:043d\:0438\:043a\:0430\:043c\
\>", "Subsubsection"],

Cell[CellGroupData[{

Cell["\<\
\:041c\:043d\:043e\:0436\:0438\:0442\:0435\:043b\:044c \:0434\:043b\:044f \
\:0443\:0434\:0430\:043b\:0435\:043d\:0438\:044f \:0441\:0438\:043d\:0433\
\:0443\:043b\:044f\:0440\:043d\:043e\:0441\:0442\:0435\:0439 \:0432 \:0446\
\:0435\:043d\:0442\:0440\:0435 \:0441\:0435\:0447\:0435\:043d\:0438\:044f\
\>", "Text"],

Cell[BoxData[
 SuperscriptBox["\[Rho]", 
  RowBox[{"Exponent", "[", 
   RowBox[{
    RowBox[{"eqs\[Phi]r", "[", 
     RowBox[{"\[Lambda]", ",", "0", ",", "\[Kappa]", ",", "G", ",", "Re"}], 
     "]"}], ",", 
    SuperscriptBox["\[Rho]", 
     RowBox[{"-", "1"}]]}], "]"}]]], "Input",
 CellChangeTimes->{{3.406009706584*^9, 3.4060097068789997`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"\:0422", ".", "\:043a", ".", " ", "\:0443"}], " ", "v\[Zeta]", 
    " ", "\:043c\:0430\:043a\:0441\:0438\:043c\:0443\:043c", " ", "2", " ", 
    "\:043f\:0440\:043e\:0438\:0437\:0432\:043e\:0434\:043d\:0430\:044f", " ",
     "\:043f\:043e", " ", "\[Rho]"}], ",", " ", 
   RowBox[{
   "\:0430", " ", "\:0443", " ", "\[Psi]", " ", 
    "\:043c\:0430\:043a\:0441\:0438\:043c\:0443\:043c", " ", "4"}], ",", " ", 
   
   RowBox[{
    RowBox[{
     RowBox[{
     "\:0442\:043e", " ", 
      "\:0444\:0438\:043a\:0442\:0438\:0432\:043d\:044b\:0435", " ", 
      "\:0441\:043b\:043e\:0438"}], " ", "-", " ", 
     RowBox[{"\:0443", " ", "v\[Zeta]", 
      RowBox[{"(", "f", ")"}]}]}], "=", "1"}], ",", " ", 
   RowBox[{
    RowBox[{"\:0443", " ", "\[Psi]", 
     RowBox[{"(", "g", ")"}]}], "=", "2"}]}], "*)"}]], "Input"],

Cell[CellGroupData[{

Cell["\:0412\:0430\:0440\:0438\:0430\:043d\:0442 \:0438\:043d\:0442\:0435\
\:0433\:0440\:0438\:0440\:043e\:0432\:0430\:043d\:0438\:044f \:0432 \:043b\
\:043e\:0431", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SpectralMatrix4EigenDumb", "[", 
    RowBox[{"nr_", ",", "n\[Phi]_", ",", "subst___"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Rho]", ",", "unk"}], 
      RowBox[{"(*", 
       RowBox[{
       ",", "systcf", ",", "cfs", ",", "v", ",", "\[Psi]c", ",", "vir", ",", 
        "\[Rho]mul", ",", "lhs", ",", "rhs"}], "*)"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Rho]mul", "=", 
       RowBox[{"Exponent", "[", 
        RowBox[{
         RowBox[{"eqs\[Phi]r", "[", 
          RowBox[{
          "\[Lambda]", ",", "0", ",", "\[Kappa]", ",", "G", ",", "Re"}], 
          "]"}], ",", 
         SuperscriptBox["\[Rho]", 
          RowBox[{"-", "1"}]]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Rho]mul", "=", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"vir", "=", 
       RowBox[{
        SuperscriptBox["\[Rho]", "\[Rho]mul"], 
        RowBox[{"ReplaceAll", "[", 
         RowBox[{
          RowBox[{"eqs\[Phi]r", "[", 
           RowBox[{
           "\[Lambda]", ",", "\[Omega]", ",", "\[Kappa]", ",", "G", ",", 
            "Re"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"v\[Zeta]", "\[Rule]", 
             RowBox[{"Function", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\[Rho]", ",", "\[Phi]"}], "}"}], ",", 
               RowBox[{
                UnderoverscriptBox["\[Sum]", 
                 RowBox[{"ir", "=", "1"}], "nr"], 
                RowBox[{
                 UnderoverscriptBox["\[Sum]", 
                  RowBox[{"i\[Phi]", "=", "0"}], "n\[Phi]"], 
                 RowBox[{
                  SubscriptBox["v", 
                   RowBox[{"ir", ",", "i\[Phi]"}]], 
                  RowBox[{"BesselJ", "[", 
                   RowBox[{"i\[Phi]", ",", 
                    RowBox[{
                    RowBox[{"bz", "[", 
                    RowBox[{"i\[Phi]", ",", "ir"}], "]"}], "\[Rho]"}]}], 
                   "]"}], 
                  SuperscriptBox["E", 
                   RowBox[{
                   "\[ImaginaryI]", " ", "i\[Phi]", " ", "\[Phi]"}]]}]}]}]}], 
              "]"}]}], ",", 
            RowBox[{"\[Psi]", "\[Rule]", 
             RowBox[{"Function", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\[Rho]", ",", "\[Phi]"}], "}"}], ",", 
               RowBox[{
                UnderoverscriptBox["\[Sum]", 
                 RowBox[{"ir", "=", "1"}], "nr"], 
                RowBox[{
                 UnderoverscriptBox["\[Sum]", 
                  RowBox[{"i\[Phi]", "=", "0"}], "n\[Phi]"], 
                 RowBox[{
                  SubscriptBox["\[Psi]c", 
                   RowBox[{"ir", ",", "i\[Phi]"}]], 
                  RowBox[{"BesselJ", "[", 
                   RowBox[{"i\[Phi]", ",", 
                    RowBox[{
                    RowBox[{"bz", "[", 
                    RowBox[{"i\[Phi]", ",", "ir"}], "]"}], "\[Rho]"}]}], 
                   "]"}], 
                  SuperscriptBox["E", 
                   RowBox[{
                   "\[ImaginaryI]", " ", "i\[Phi]", " ", "\[Phi]"}]]}]}]}]}], 
              "]"}]}], ",", "subst"}], "}"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"unk", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            SubscriptBox["v", 
             RowBox[{"ir", ",", "i\[Phi]"}]], ",", 
            SubscriptBox["\[Psi]c", 
             RowBox[{"ir", ",", "i\[Phi]"}]]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"ir", ",", "1", ",", "nr"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i\[Phi]", ",", "0", ",", "n\[Phi]"}], "}"}]}], "]"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"systcf", "=", 
       RowBox[{"Outer", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", "vir", ",", "unk"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"cfs", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"GetHarmCoef", "[", 
              RowBox[{"#", ",", "i\[Phi]", ",", "ir"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"ir", ",", "nr"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i\[Phi]", ",", "0", ",", "n\[Phi]"}], "}"}]}], "]"}], 
           "]"}], "&"}], ",", "systcf", ",", 
         RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"cfs", "=", 
       RowBox[{"Flatten", "/@", 
        RowBox[{"Transpose", "[", "cfs", "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"lhs", "=", 
       RowBox[{"-", 
        RowBox[{"Coefficient", "[", 
         RowBox[{"cfs", ",", "\[Lambda]", ",", "0"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"rhs", "=", 
       RowBox[{"Coefficient", "[", 
        RowBox[{"cfs", ",", "\[Lambda]", ",", "1"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"lhs", ",", "rhs"}], "}"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.40600971644*^9, 3.406009722072*^9}, {
  3.4072021132790003`*^9, 3.407202115073*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
\:0412\:0430\:0440\:0438\:0430\:043d\:0442 \:0441 \:0438\:043d\:0442\:0435\
\:0433\:0440\:0438\:0440\:043e\:0432\:0430\:043d\:0438\:0435\:043c \:043f\
\:043e\:0441\:043b\:0435\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SpectralMatrix4Eigen", "[", 
    RowBox[{"nr_", ",", "n\[Phi]_", ",", "subst___"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Rho]", ","}], 
      RowBox[{"(*", 
       RowBox[{
       "unk", ",", "systcf", ",", "cfs", ",", "v", ",", "\[Psi]c", ",", "vir",
         ",", "\[Rho]mul", ",", "lhs", ",", "rhs"}], "*)"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Rho]mul", "=", 
       RowBox[{"Exponent", "[", 
        RowBox[{
         RowBox[{"eqs\[Phi]r", "[", 
          RowBox[{
          "\[Lambda]", ",", "0", ",", "\[Kappa]", ",", "G", ",", "Re"}], 
          "]"}], ",", 
         SuperscriptBox["\[Rho]", 
          RowBox[{"-", "1"}]]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Rho]mul", "=", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"tsoth", "+=", 
       RowBox[{"First", "[", 
        RowBox[{"Timing", "[", 
         RowBox[{
          RowBox[{"vir", "=", 
           RowBox[{
            SuperscriptBox["\[Rho]", "\[Rho]mul"], 
            RowBox[{"ReplaceAll", "[", 
             RowBox[{
              RowBox[{"eqs\[Phi]r", "[", 
               RowBox[{
               "\[Lambda]", ",", "\[Omega]", ",", "\[Kappa]", ",", "G", ",", 
                "Re"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"v\[Zeta]", "\[Rule]", 
                 RowBox[{"Function", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"\[Rho]", ",", "\[Phi]"}], "}"}], ",", 
                   RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"ir", "=", "1"}], "nr"], 
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"i\[Phi]", "=", "0"}], "n\[Phi]"], 
                    RowBox[{
                    SubscriptBox["v", 
                    RowBox[{"ir", ",", "i\[Phi]"}]], 
                    RowBox[{"BesselJ", "[", 
                    RowBox[{"i\[Phi]", ",", 
                    RowBox[{
                    RowBox[{"\[Beta]", "[", 
                    RowBox[{"i\[Phi]", ",", "ir"}], "]"}], "\[Rho]"}]}], 
                    "]"}], 
                    SuperscriptBox["E", 
                    RowBox[{
                    "\[ImaginaryI]", " ", "i\[Phi]", " ", "\[Phi]"}]]}]}]}]}],
                   "]"}]}], ",", 
                RowBox[{"\[Psi]", "\[Rule]", 
                 RowBox[{"Function", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"\[Rho]", ",", "\[Phi]"}], "}"}], ",", 
                   RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"ir", "=", "1"}], "nr"], 
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"i\[Phi]", "=", "0"}], "n\[Phi]"], 
                    RowBox[{
                    SubscriptBox["\[Psi]c", 
                    RowBox[{"ir", ",", "i\[Phi]"}]], 
                    RowBox[{"BesselJ", "[", 
                    RowBox[{"i\[Phi]", ",", 
                    RowBox[{
                    RowBox[{"\[Beta]", "[", 
                    RowBox[{"i\[Phi]", ",", "ir"}], "]"}], "\[Rho]"}]}], 
                    "]"}], 
                    SuperscriptBox["E", 
                    RowBox[{
                    "\[ImaginaryI]", " ", "i\[Phi]", " ", "\[Phi]"}]]}]}]}]}],
                   "]"}]}], ",", "subst"}], "}"}]}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"unk", "=", 
           RowBox[{"Flatten", "[", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["v", 
                 RowBox[{"ir", ",", "i\[Phi]"}]], ",", 
                SubscriptBox["\[Psi]c", 
                 RowBox[{"ir", ",", "i\[Phi]"}]]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"ir", ",", "1", ",", "nr"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"i\[Phi]", ",", "0", ",", "n\[Phi]"}], "}"}]}], "]"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"systcf", "=", 
           RowBox[{"Outer", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"D", "[", 
               RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", "vir", ",", 
             "unk"}], "]"}]}], ";"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"cfs", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"GetHarmCoefSymb", "[", 
              RowBox[{"#", ",", "i\[Phi]", ",", "ir"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"ir", ",", "nr"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i\[Phi]", ",", "0", ",", "n\[Phi]"}], "}"}]}], "]"}], 
           "]"}], "&"}], ",", "systcf", ",", 
         RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"tslast", "+=", 
       RowBox[{"First", "[", 
        RowBox[{"Timing", "[", 
         RowBox[{
          RowBox[{"cfs", "=", 
           RowBox[{"Flatten", "/@", 
            RowBox[{"Transpose", "[", "cfs", "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"lhs", "=", 
           RowBox[{"-", 
            RowBox[{"Coefficient", "[", 
             RowBox[{"cfs", ",", "\[Lambda]", ",", "0"}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"rhs", "=", 
           RowBox[{"Coefficient", "[", 
            RowBox[{"cfs", ",", "\[Lambda]", ",", "1"}], "]"}]}], ";"}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"lhs", ",", "rhs"}], "}"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.4060097339519997`*^9, 3.4060097380150003`*^9}, {
  3.407061348476*^9, 3.407061352142*^9}, {3.407065731071*^9, 
  3.4070657467320004`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["\:0420\:0443\:0447\:043d\:044b\:0435 \:043f\:0440\:043e\:0431\:044b", \
"Text"],

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"nr", "=", "1"}], ",", 
     RowBox[{"n\[Phi]", "=", "1"}], ",", 
     RowBox[{"subst", "=", 
      RowBox[{"Sequence", "[", "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Rho]mul", "=", 
     RowBox[{"Exponent", "[", 
      RowBox[{
       RowBox[{"eqs\[Phi]r", "[", 
        RowBox[{"\[Lambda]", ",", "0", ",", "\[Kappa]", ",", "G", ",", "Re"}],
         "]"}], ",", 
       SuperscriptBox["\[Rho]", 
        RowBox[{"-", "1"}]]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"\[Rho]mul", "=", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"vir", "=", 
     RowBox[{
      SuperscriptBox["\[Rho]", "\[Rho]mul"], 
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"eqs\[Phi]r", "[", 
         RowBox[{
         "\[Lambda]", ",", "\[Omega]", ",", "\[Kappa]", ",", "G", ",", "Re"}],
          "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"v\[Zeta]", "\[Rule]", 
           RowBox[{"Function", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\[Rho]", ",", "\[Phi]"}], "}"}], ",", 
             RowBox[{
              UnderoverscriptBox["\[Sum]", 
               RowBox[{"ir", "=", "1"}], "nr"], 
              RowBox[{
               UnderoverscriptBox["\[Sum]", 
                RowBox[{"i\[Phi]", "=", "0"}], "n\[Phi]"], 
               RowBox[{
                SubscriptBox["v", 
                 RowBox[{"ir", ",", "i\[Phi]"}]], 
                RowBox[{"BesselJ", "[", 
                 RowBox[{"i\[Phi]", ",", 
                  RowBox[{
                   RowBox[{"\[Beta]", "[", 
                    RowBox[{"i\[Phi]", ",", "ir"}], "]"}], "\[Rho]"}]}], 
                 "]"}], 
                SuperscriptBox["E", 
                 RowBox[{
                 "\[ImaginaryI]", " ", "i\[Phi]", " ", "\[Phi]"}]]}]}]}]}], 
            "]"}]}], ",", 
          RowBox[{"\[Psi]", "\[Rule]", 
           RowBox[{"Function", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\[Rho]", ",", "\[Phi]"}], "}"}], ",", 
             RowBox[{
              UnderoverscriptBox["\[Sum]", 
               RowBox[{"ir", "=", "1"}], "nr"], 
              RowBox[{
               UnderoverscriptBox["\[Sum]", 
                RowBox[{"i\[Phi]", "=", "0"}], "n\[Phi]"], 
               RowBox[{
                SubscriptBox["\[Psi]c", 
                 RowBox[{"ir", ",", "i\[Phi]"}]], 
                RowBox[{"BesselJ", "[", 
                 RowBox[{"i\[Phi]", ",", 
                  RowBox[{
                   RowBox[{"\[Beta]", "[", 
                    RowBox[{"i\[Phi]", ",", "ir"}], "]"}], "\[Rho]"}]}], 
                 "]"}], 
                SuperscriptBox["E", 
                 RowBox[{
                 "\[ImaginaryI]", " ", "i\[Phi]", " ", "\[Phi]"}]]}]}]}]}], 
            "]"}]}], ",", "subst"}], "}"}]}], "]"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"unk", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["v", 
           RowBox[{"ir", ",", "i\[Phi]"}]], ",", 
          SubscriptBox["\[Psi]c", 
           RowBox[{"ir", ",", "i\[Phi]"}]]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"ir", ",", "1", ",", "nr"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i\[Phi]", ",", "0", ",", "n\[Phi]"}], "}"}]}], "]"}], 
      "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"systcf", "=", 
     RowBox[{"Outer", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", "vir", ",", "unk"}], 
      "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"cfs", "=", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"GetHarmCoefSymb", "[", 
            RowBox[{"#", ",", "i\[Phi]", ",", "ir"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"ir", ",", "nr"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i\[Phi]", ",", "0", ",", "n\[Phi]"}], "}"}]}], "]"}], 
         "]"}], "&"}], ",", "systcf", ",", 
       RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"cfs", "=", 
     RowBox[{"Flatten", "/@", 
      RowBox[{"Transpose", "[", "cfs", "]"}]}]}], ";", "\[IndentingNewLine]", 
    
    RowBox[{"lhs", "=", 
     RowBox[{"-", 
      RowBox[{"Coefficient", "[", 
       RowBox[{"cfs", ",", "\[Lambda]", ",", "1"}], "]"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"rhs", "=", 
     RowBox[{"Coefficient", "[", 
      RowBox[{"cfs", ",", "\[Lambda]", ",", "0"}], "]"}]}], ";"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.406009741159*^9, 3.4060097435699997`*^9}, {
  3.40705561106*^9, 3.407055611848*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"GetHarmCoef", "[", 
     RowBox[{"#", ",", "1", ",", "1"}], "]"}], "&"}], "/@", 
   RowBox[{"Flatten", "[", 
    RowBox[{"systcf", "/.", 
     RowBox[{"\[Beta]", "\[Rule]", "bz"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{3.407200906962*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"44.24099999999997`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"0.8271888679026279`", " ", "\[Kappa]"}], "Re"], "-", 
      RowBox[{"0.00020955151867979615`", " ", 
       SuperscriptBox["G", "2"], " ", "Re", " ", "\[Kappa]"}], "-", 
      RowBox[{
      "0.001371907248145815`", " ", "G", " ", "Re", " ", "\[Kappa]", " ", 
       "\[Omega]"}]}], ",", 
     RowBox[{
      RowBox[{
      "0.003663617894511084`", " ", "\[ImaginaryI]", " ", "G", " ", 
       "\[Kappa]"}], "-", 
      RowBox[{"7.262103288013162`*^-6", " ", "\[ImaginaryI]", " ", 
       SuperscriptBox["G", "3"], " ", 
       SuperscriptBox["Re", "2"], " ", "\[Kappa]"}], "-", 
      RowBox[{
      "1.6543777358052558`", " ", "\[ImaginaryI]", " ", "\[Kappa]", " ", 
       "\[Omega]"}], "-", 
      RowBox[{"0.00004729162594195154`", " ", "\[ImaginaryI]", " ", 
       SuperscriptBox["G", "2"], " ", 
       SuperscriptBox["Re", "2"], " ", "\[Kappa]", " ", "\[Omega]"}]}], ",", 
     RowBox[{
      FractionBox["8.11124283470187`", "Re"], "+", 
      FractionBox[
       RowBox[{"0.13811570381822574`", " ", 
        SuperscriptBox["\[Kappa]", "2"]}], "Re"], "+", 
      RowBox[{"0.000035171573253170863`", " ", 
       SuperscriptBox["G", "2"], " ", "Re", " ", 
       SuperscriptBox["\[Kappa]", "2"]}], "+", 
      RowBox[{"0.5524628152729025`", " ", "\[Lambda]"}], "+", 
      RowBox[{"0.0003065177154563483`", " ", "G", " ", "Re", " ", 
       SuperscriptBox["\[Kappa]", "2"], " ", "\[Omega]"}]}], ",", 
     RowBox[{
      RowBox[{"0.27623140763645126`", " ", "\[ImaginaryI]", " ", "G"}], "-", 
      RowBox[{"0.000022983737169076405`", " ", "\[ImaginaryI]", " ", 
       SuperscriptBox["G", "3"], " ", 
       SuperscriptBox["Re", "2"], " ", 
       SuperscriptBox["\[Kappa]", "2"]}], "-", 
      RowBox[{"1.2690825710190054`*^-9", " ", "\[ImaginaryI]", " ", 
       SuperscriptBox["G", "5"], " ", 
       SuperscriptBox["Re", "4"], " ", 
       SuperscriptBox["\[Kappa]", "2"]}], "-", 
      RowBox[{"0.0003288570469243819`", " ", "\[ImaginaryI]", " ", 
       SuperscriptBox["G", "2"], " ", 
       SuperscriptBox["Re", "2"], " ", 
       SuperscriptBox["\[Kappa]", "2"], " ", "\[Omega]"}], "-", 
      RowBox[{"1.628846656862427`*^-8", " ", "\[ImaginaryI]", " ", 
       SuperscriptBox["G", "4"], " ", 
       SuperscriptBox["Re", "4"], " ", 
       SuperscriptBox["\[Kappa]", "2"], " ", "\[Omega]"}], "-", 
      RowBox[{"0.001175515834171731`", " ", "\[ImaginaryI]", " ", "G", " ", 
       SuperscriptBox["Re", "2"], " ", 
       SuperscriptBox["\[Kappa]", "2"], " ", 
       SuperscriptBox["\[Omega]", "2"]}], "-", 
      RowBox[{"5.228205662337605`*^-8", " ", "\[ImaginaryI]", " ", 
       SuperscriptBox["G", "3"], " ", 
       SuperscriptBox["Re", "4"], " ", 
       SuperscriptBox["\[Kappa]", "2"], " ", 
       SuperscriptBox["\[Omega]", "2"]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "0.38609569104087177`"}], " ", "\[ImaginaryI]", " ", "G", 
       " ", "\[Kappa]"}], "-", 
      RowBox[{
      "1.6543777358052558`", " ", "\[ImaginaryI]", " ", "\[Kappa]", " ", 
       "\[Omega]"}]}], ",", 
     RowBox[{
      FractionBox[
       RowBox[{"9.567574099120641`", " ", "\[Kappa]"}], "Re"], "+", 
      RowBox[{"0.0017328120180966616`", " ", 
       SuperscriptBox["G", "2"], " ", "Re", " ", "\[Kappa]"}], "+", 
      RowBox[{"0.8271888679026279`", " ", "\[Kappa]", " ", "\[Lambda]"}], "+",
       
      RowBox[{
      "0.011709581752474801`", " ", "G", " ", "Re", " ", "\[Kappa]", " ", 
       "\[Omega]"}]}], ",", 
     RowBox[{
      RowBox[{"0.10554364993718747`", " ", "\[ImaginaryI]", " ", "G", " ", 
       SuperscriptBox["\[Kappa]", "2"]}], "-", 
      RowBox[{"6.049980216903352`*^-6", " ", "\[ImaginaryI]", " ", 
       SuperscriptBox["G", "3"], " ", 
       SuperscriptBox["Re", "2"], " ", 
       SuperscriptBox["\[Kappa]", "2"]}], "-", 
      RowBox[{"0.00003925915005140591`", " ", "\[ImaginaryI]", " ", 
       SuperscriptBox["G", "2"], " ", 
       SuperscriptBox["Re", "2"], " ", 
       SuperscriptBox["\[Kappa]", "2"], " ", "\[Omega]"}]}], ",", 
     RowBox[{
      FractionBox["119.08902917023062`", "Re"], "+", 
      FractionBox[
       RowBox[{"8.111242834701873`", " ", 
        SuperscriptBox["\[Kappa]", "2"]}], "Re"], "+", 
      RowBox[{"0.0025472067201447596`", " ", 
       SuperscriptBox["G", "2"], " ", "Re", " ", 
       SuperscriptBox["\[Kappa]", "2"]}], "+", 
      RowBox[{"8.11124283470187`", " ", "\[Lambda]"}], "+", 
      RowBox[{"0.13811570381822574`", " ", 
       SuperscriptBox["\[Kappa]", "2"], " ", "\[Lambda]"}], "+", 
      RowBox[{"0.014944359904591004`", " ", "G", " ", "Re", " ", 
       SuperscriptBox["\[Kappa]", "2"], " ", "\[Omega]"}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.407055749073*^9, 3.407061166585*^9, 3.407200962541*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"GetHarmCoefSymb", "[", 
     RowBox[{"#", ",", "1", ",", "1"}], "]"}], "&"}], "/@", 
   RowBox[{"Flatten", "[", "systcf", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.407061126017*^9, 3.4070611309049997`*^9}, {
   3.407065698898*^9, 3.407065700098*^9}, 3.40720091194*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.3080000000000203`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"0.8271888679026279`", " ", "\[Kappa]"}], "Re"], "-", 
      RowBox[{"0.00020955151867979645`", " ", 
       SuperscriptBox["G", "2"], " ", "Re", " ", "\[Kappa]"}], "-", 
      RowBox[{
      "0.0013719072481458156`", " ", "G", " ", "Re", " ", "\[Kappa]", " ", 
       "\[Omega]"}]}], ",", 
     RowBox[{
      RowBox[{
      "0.003663617894511112`", " ", "\[ImaginaryI]", " ", "G", " ", 
       "\[Kappa]"}], "-", 
      RowBox[{"7.262103288013159`*^-6", " ", "\[ImaginaryI]", " ", 
       SuperscriptBox["G", "3"], " ", 
       SuperscriptBox["Re", "2"], " ", "\[Kappa]"}], "-", 
      RowBox[{
      "1.6543777358052558`", " ", "\[ImaginaryI]", " ", "\[Kappa]", " ", 
       "\[Omega]"}], "-", 
      RowBox[{"0.000047291625941951556`", " ", "\[ImaginaryI]", " ", 
       SuperscriptBox["G", "2"], " ", 
       SuperscriptBox["Re", "2"], " ", "\[Kappa]", " ", "\[Omega]"}]}], ",", 
     RowBox[{
      FractionBox["8.11124283470187`", "Re"], "+", 
      FractionBox[
       RowBox[{"0.1381157038182258`", " ", 
        SuperscriptBox["\[Kappa]", "2"]}], "Re"], "+", 
      RowBox[{"0.000035171573253170647`", " ", 
       SuperscriptBox["G", "2"], " ", "Re", " ", 
       SuperscriptBox["\[Kappa]", "2"]}], "+", 
      RowBox[{"0.5524628152729025`", " ", "\[Lambda]"}], "+", 
      RowBox[{"0.0003065177154563479`", " ", "G", " ", "Re", " ", 
       SuperscriptBox["\[Kappa]", "2"], " ", "\[Omega]"}]}], ",", 
     RowBox[{
      RowBox[{"0.27623140763645126`", " ", "\[ImaginaryI]", " ", "G"}], "-", 
      RowBox[{"0.000022983737169076405`", " ", "\[ImaginaryI]", " ", 
       SuperscriptBox["G", "3"], " ", 
       SuperscriptBox["Re", "2"], " ", 
       SuperscriptBox["\[Kappa]", "2"]}], "-", 
      RowBox[{"1.2690825710190021`*^-9", " ", "\[ImaginaryI]", " ", 
       SuperscriptBox["G", "5"], " ", 
       SuperscriptBox["Re", "4"], " ", 
       SuperscriptBox["\[Kappa]", "2"]}], "-", 
      RowBox[{"0.0003288570469243819`", " ", "\[ImaginaryI]", " ", 
       SuperscriptBox["G", "2"], " ", 
       SuperscriptBox["Re", "2"], " ", 
       SuperscriptBox["\[Kappa]", "2"], " ", "\[Omega]"}], "-", 
      RowBox[{"1.6288466568624298`*^-8", " ", "\[ImaginaryI]", " ", 
       SuperscriptBox["G", "4"], " ", 
       SuperscriptBox["Re", "4"], " ", 
       SuperscriptBox["\[Kappa]", "2"], " ", "\[Omega]"}], "-", 
      RowBox[{"0.001175515834171731`", " ", "\[ImaginaryI]", " ", "G", " ", 
       SuperscriptBox["Re", "2"], " ", 
       SuperscriptBox["\[Kappa]", "2"], " ", 
       SuperscriptBox["\[Omega]", "2"]}], "-", 
      RowBox[{"5.228205662337605`*^-8", " ", "\[ImaginaryI]", " ", 
       SuperscriptBox["G", "3"], " ", 
       SuperscriptBox["Re", "4"], " ", 
       SuperscriptBox["\[Kappa]", "2"], " ", 
       SuperscriptBox["\[Omega]", "2"]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "0.3860956910408717`"}], " ", "\[ImaginaryI]", " ", "G", 
       " ", "\[Kappa]"}], "-", 
      RowBox[{
      "1.6543777358052558`", " ", "\[ImaginaryI]", " ", "\[Kappa]", " ", 
       "\[Omega]"}]}], ",", 
     RowBox[{
      FractionBox[
       RowBox[{"9.567574099120637`", " ", "\[Kappa]"}], "Re"], "+", 
      RowBox[{"0.0017328120180966633`", " ", 
       SuperscriptBox["G", "2"], " ", "Re", " ", "\[Kappa]"}], "+", 
      RowBox[{"0.8271888679026279`", " ", "\[Kappa]", " ", "\[Lambda]"}], "+",
       
      RowBox[{
      "0.01170958175247478`", " ", "G", " ", "Re", " ", "\[Kappa]", " ", 
       "\[Omega]"}]}], ",", 
     RowBox[{
      RowBox[{"0.10554364993718748`", " ", "\[ImaginaryI]", " ", "G", " ", 
       SuperscriptBox["\[Kappa]", "2"]}], "-", 
      RowBox[{"6.049980216903352`*^-6", " ", "\[ImaginaryI]", " ", 
       SuperscriptBox["G", "3"], " ", 
       SuperscriptBox["Re", "2"], " ", 
       SuperscriptBox["\[Kappa]", "2"]}], "-", 
      RowBox[{"0.00003925915005140591`", " ", "\[ImaginaryI]", " ", 
       SuperscriptBox["G", "2"], " ", 
       SuperscriptBox["Re", "2"], " ", 
       SuperscriptBox["\[Kappa]", "2"], " ", "\[Omega]"}]}], ",", 
     RowBox[{
      FractionBox["119.08902917023062`", "Re"], "+", 
      FractionBox[
       RowBox[{"8.11124283470188`", " ", 
        SuperscriptBox["\[Kappa]", "2"]}], "Re"], "+", 
      RowBox[{"0.0025472067201447656`", " ", 
       SuperscriptBox["G", "2"], " ", "Re", " ", 
       SuperscriptBox["\[Kappa]", "2"]}], "+", 
      RowBox[{"8.11124283470187`", " ", "\[Lambda]"}], "+", 
      RowBox[{"0.1381157038182258`", " ", 
       SuperscriptBox["\[Kappa]", "2"], " ", "\[Lambda]"}], "+", 
      RowBox[{"0.014944359904590976`", " ", "G", " ", "Re", " ", 
       SuperscriptBox["\[Kappa]", "2"], " ", "\[Omega]"}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.4070557498459997`*^9, 3.40706116773*^9, 
  3.407065712725*^9, 3.407200459251*^9, 3.407200965137*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"cfs1", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"GetHarmCoef", "[", 
          RowBox[{"#", ",", "i\[Phi]", ",", "ir"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"ir", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i\[Phi]", ",", "0", ",", "1"}], "}"}]}], "]"}], "]"}], 
      "&"}], ",", 
     RowBox[{"systcf", "/.", 
      RowBox[{"\[Beta]", "\[Rule]", "bz"}]}], ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.407201122759*^9, 3.407201176046*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"cfs2", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"GetHarmCoefSymb", "[", 
          RowBox[{"#", ",", "i\[Phi]", ",", "ir"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"ir", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i\[Phi]", ",", "0", ",", "1"}], "}"}]}], "]"}], "]"}], 
      "&"}], ",", "systcf", ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.407201126135*^9, 3.407201148535*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"%124", "-", "%123"}], "//", "Chop"}]], "Input",
 CellChangeTimes->{{3.407060956116*^9, 3.407060957413*^9}, {
  3.4070612233719997`*^9, 3.4070612258900003`*^9}, {3.40720053296*^9, 
  3.407200533087*^9}, {3.4072009733529997`*^9, 3.407200975974*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "41.93299999999995`"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.4070610338789997`*^9, 3.4070612263529997`*^9, 
  3.407200533597*^9, 3.407200981075*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"cfs1", "-", "cfs2"}], "//", "Chop"}]], "Input",
 CellChangeTimes->{{3.407201137106*^9, 3.4072011531730003`*^9}, {
  3.407201186884*^9, 3.407201188766*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.407201280934*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\:0421\:0440\:0430\:0432\:043d\:0435\:043d\:0438\:0435 \:0434\:0432\
\:0443\:0445 \:0441\:043f\:043e\:0441\:043e\:0431\:043e\:0432", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"nr", "=", "2"}], ",", 
      RowBox[{"n\[Phi]", "=", "2"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"GetHarmCoef", "[", 
            RowBox[{"#", ",", "i\[Phi]", ",", "ir"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"ir", ",", "nr"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i\[Phi]", ",", "0", ",", "n\[Phi]"}], "}"}]}], "]"}], 
         "]"}], "&"}], ",", "systcf0", ",", 
       RowBox[{"{", "2", "}"}]}], "]"}], "-", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"GetHarmCoefSymb", "[", 
            RowBox[{"#", ",", "i\[Phi]", ",", "ir"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"ir", ",", "nr"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i\[Phi]", ",", "0", ",", "n\[Phi]"}], "}"}]}], "]"}], 
         "]"}], "&"}], ",", "systcf", ",", 
       RowBox[{"{", "2", "}"}]}], "]"}]}]}], "]"}], "//", "Chop"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rhs", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"G", "\[Rule]", "4"}], ",", 
     RowBox[{"Re", "\[Rule]", "1"}], ",", 
     RowBox[{"\[Omega]", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Epsilon]", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Kappa]", "\[Rule]", "0.1"}]}], "}"}]}], "//", 
  "TableForm"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"mat", "=", 
    RowBox[{"SpectralMatrix4Eigen", "[", 
     RowBox[{"5", ",", "5"}], "]"}]}], ";"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"11070.625`", " ", "Second"}], ",", "Null"}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"mat1", "=", 
    RowBox[{"SpectralMatrix4Eigen1", "[", 
     RowBox[{"5", ",", "5"}], "]"}]}], ";"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"507.6880000000001`", " ", "Second"}], ",", "Null"}], 
  "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"ts\[Phi]", ",", "ts1", ",", "ts2", ",", "tsoth", ",", "tslast"}], 
  "}"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"113.46800000000206`", " ", "Second"}], ",", 
   RowBox[{"48.92199999999724`", " ", "Second"}], ",", 
   RowBox[{"354.69200000000023`", " ", "Second"}], ",", 
   RowBox[{"2.7190000000001646`", " ", "Second"}], ",", 
   RowBox[{"0.10800000000017462`", " ", "Second"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "[", 
  RowBox[{"Abs", "[", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"mat1", "-", "mat"}], "//", "Chop"}], "]"}], "]"}], 
  "]"}]], "Input"],

Cell[BoxData["0"], "Output"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:0418\:0441\:0441\:043b\:0435\:0434\:043e\:0432\:0430\:043d\:0438\:0435\
 \:0432\:043e\:0437\:043c\:0443\:0449\:0435\:043d\:0438\:0439", "Section",
 CellChangeTimes->{{3.403841085709*^9, 3.4038410954379997`*^9}}],

Cell[CellGroupData[{

Cell["\:0424\:0443\:043d\:043a\:0446\:0438\:0438 \:043d\:0430\:0445\:043e\
\:0436\:0434\:0435\:043d\:0438\:044f \:0438\:043d\:043a\:0440\:0435\:043c\
\:0435\:043d\:0442\:043e\:0432", "Subsection"],

Cell[CellGroupData[{

Cell["\<\
\:041f\:043e\:043b\:0443\:0447\:0435\:043d\:0438\:0435 \:0441.\:0437. \:0438 \
\:0441.\:0432. \:0441 \:043f\:043e\:043c\:043e\:0449\:044c\:044e \
Eigen...[Inverse[a].m] (\:043c\:0435\:043d\:0435\:0435 \:0443\:0441\:0442\
\:043e\:0439\:0447\:0438\:0432\:043e)\
\>", "Subsubsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GetIncrements", "[", 
    RowBox[{"n_", ",", "m_", ",", "k1_", ",", "R1_"}], "]"}], ":=", 
   RowBox[{"Eigenvalues", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Inverse", "[", 
        RowBox[{"Last", "[", "#", "]"}], "]"}], ".", 
       RowBox[{"First", "[", "#", "]"}]}], "&"}], "[", 
     RowBox[{"N", "[", 
      RowBox[{"FiniteMatrix4Eigen", "[", 
       RowBox[{"n", ",", "m", ",", 
        RowBox[{"k", "\[Rule]", "k1"}], ",", 
        RowBox[{"R", "\[Rule]", "R1"}]}], "]"}], "]"}], "]"}], "]"}]}], 
  ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GetEigenWave", "[", 
    RowBox[{"n1_", ",", "m_", ",", "k1_", ",", "R1_", ",", 
     RowBox[{"mode_:", "1"}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"eigval", ",", "eigvec", ",", "nom", ",", "syst"}], "}"}], ",", 
     
     RowBox[{
      RowBox[{"syst", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Inverse", "[", 
           RowBox[{"Last", "[", "#", "]"}], "]"}], ".", 
          RowBox[{"First", "[", "#", "]"}]}], "&"}], "[", 
        RowBox[{"N", "[", 
         RowBox[{"FiniteMatrix4Eigen", "[", 
          RowBox[{"n1", ",", "m", ",", 
           RowBox[{"k", "\[Rule]", "k1"}], ",", 
           RowBox[{"R", "\[Rule]", "R1"}]}], "]"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"eigval", ",", "eigvec"}], "}"}], "=", 
       RowBox[{
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Eigensystem", "[", "syst", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"NumericQ", "[", 
            RowBox[{"First", "[", "#", "]"}], "]"}], "&"}]}], "]"}], "//", 
        "Transpose"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"nom", "=", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"Position", "[", 
          RowBox[{"eigval", ",", 
           RowBox[{
            RowBox[{"Sort", "[", 
             RowBox[{"eigval", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Re", "[", "#1", "]"}], ">", 
                RowBox[{"Re", "[", "#2", "]"}]}], "&"}]}], "]"}], 
            "\[LeftDoubleBracket]", "mode", "\[RightDoubleBracket]"}]}], 
          "]"}], "]"}], "//", "First"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<Main eigen value is \>\"", ",", 
        RowBox[{"eigval", "[", 
         RowBox[{"[", "nom", "]"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{
       "eigvec", "\[LeftDoubleBracket]", "nom", "\[RightDoubleBracket]"}], 
       "]"}], ";"}]}], "]"}]}], ";"}]], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
\:041f\:043e\:043b\:0443\:0447\:0435\:043d\:0438\:0435 \:0441.\:0437. \:0438 \
\:0441.\:0432. \:0441 \:043f\:043e\:043c\:043e\:0449\:044c\:044e \
Eigen...[{m,a}]\
\>", "Subsubsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GetIncrementsM", "[", 
    RowBox[{"mat_", ",", 
     RowBox[{"subst_List:", 
      RowBox[{"{", "}"}]}]}], "]"}], ":=", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Eigenvalues", "[", 
      RowBox[{"mat", "/.", "subst"}], "]"}], ",", "NumericQ"}], "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GetEigenWaveM", "[", 
    RowBox[{"syst_", ",", "nr_", ",", "n\[Phi]_", ",", "subst_List", ",", 
     RowBox[{"mode_:", "1"}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"eigval", ",", "eigvec", ",", "nom", ",", "cfs"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"eigval", ",", "eigvec"}], "}"}], "=", 
       RowBox[{
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Eigensystem", "[", 
            RowBox[{"syst", "/.", "subst"}], "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"NumericQ", "[", 
            RowBox[{"First", "[", "#", "]"}], "]"}], "&"}]}], "]"}], "//", 
        "Transpose"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"nom", "=", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"Position", "[", 
          RowBox[{"eigval", ",", 
           RowBox[{
            RowBox[{"Sort", "[", 
             RowBox[{"eigval", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Re", "[", "#1", "]"}], ">", 
                RowBox[{"Re", "[", "#2", "]"}]}], "&"}]}], "]"}], 
            "\[LeftDoubleBracket]", "mode", "\[RightDoubleBracket]"}]}], 
          "]"}], "]"}], "//", "First"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<Main eigen value is \>\"", ",", 
        RowBox[{"eigval", "[", 
         RowBox[{"[", "nom", "]"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"cfs", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Partition", "[", 
          RowBox[{"#", ",", 
           RowBox[{"n\[Phi]", "+", "1"}]}], "]"}], "&"}], "/@", 
        RowBox[{"Partition", "[", 
         RowBox[{
          RowBox[{
          "eigvec", "\[LeftDoubleBracket]", "nom", "\[RightDoubleBracket]"}], 
          ",", 
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{
            "eigvec", "\[LeftDoubleBracket]", "nom", 
             "\[RightDoubleBracket]"}], "]"}], "/", "2"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          UnderoverscriptBox["\[Sum]", 
           RowBox[{"ir", "=", "1"}], "nr"], 
          RowBox[{
           UnderoverscriptBox["\[Sum]", 
            RowBox[{"i\[Phi]", "=", "0"}], "n\[Phi]"], 
           RowBox[{
            RowBox[{"cfs", "\[LeftDoubleBracket]", 
             RowBox[{"#", ",", "ir", ",", 
              RowBox[{"i\[Phi]", "+", "1"}]}], "\[RightDoubleBracket]"}], 
            RowBox[{"BesselJ", "[", 
             RowBox[{"i\[Phi]", ",", 
              RowBox[{
               RowBox[{"bz", "[", 
                RowBox[{"i\[Phi]", ",", "ir"}], "]"}], "\[Rho]"}]}], "]"}], 
            SuperscriptBox["E", 
             RowBox[{"\[ImaginaryI]", " ", "i\[Phi]", " ", "\[Phi]"}]]}]}]}], 
         "&"}], "/@", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GetIncrements", "[", 
    RowBox[{
    "nr_", ",", "n\[Phi]_", ",", "\[Kappa]1_", ",", "R1_", ",", "subst___"}], 
    "]"}], ":=", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Eigenvalues", "[", 
      RowBox[{"N", "[", 
       RowBox[{"SpectralMatrix4Eigen", "[", 
        RowBox[{"nr", ",", "n\[Phi]", ",", 
         RowBox[{"\[Kappa]", "\[Rule]", "\[Kappa]1"}], ",", 
         RowBox[{"Re", "\[Rule]", "R1"}], ",", "subst", ",", 
         RowBox[{"\[Omega]", "\[Rule]", "0"}], ",", 
         RowBox[{"\[Epsilon]", "\[Rule]", "0"}], ",", 
         RowBox[{"G", "\[Rule]", "4"}]}], "]"}], "]"}], "]"}], ",", 
     "NumericQ"}], "]"}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GetEigenWave", "[", 
    RowBox[{"n1_", ",", "m_", ",", "k1_", ",", "R1_", ",", 
     RowBox[{"mode_:", "1"}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"eigval", ",", "eigvec", ",", "nom", ",", "syst", ",", "cfs"}], 
      "}"}], ",", 
     RowBox[{
      RowBox[{"syst", "=", 
       RowBox[{"N", "[", 
        RowBox[{"SpectralMatrix4Eigen", "[", 
         RowBox[{"n1", ",", "m", ",", 
          RowBox[{"k", "\[Rule]", "k1"}], ",", 
          RowBox[{"Re", "\[Rule]", "R1"}], ",", 
          RowBox[{"\[Omega]", "\[Rule]", "0"}], ",", 
          RowBox[{"\[Epsilon]", "\[Rule]", "0"}], ",", 
          RowBox[{"G", "\[Rule]", "4"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"eigval", ",", "eigvec"}], "}"}], "=", 
       RowBox[{
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Eigensystem", "[", "syst", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"NumericQ", "[", 
            RowBox[{"First", "[", "#", "]"}], "]"}], "&"}]}], "]"}], "//", 
        "Transpose"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"nom", "=", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"Position", "[", 
          RowBox[{"eigval", ",", 
           RowBox[{
            RowBox[{"Sort", "[", 
             RowBox[{"eigval", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Re", "[", "#1", "]"}], ">", 
                RowBox[{"Re", "[", "#2", "]"}]}], "&"}]}], "]"}], 
            "\[LeftDoubleBracket]", "mode", "\[RightDoubleBracket]"}]}], 
          "]"}], "]"}], "//", "First"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<Main eigen value is \>\"", ",", 
        RowBox[{"eigval", "[", 
         RowBox[{"[", "nom", "]"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"cfs", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Partition", "[", 
          RowBox[{"#", ",", 
           RowBox[{"n\[Phi]", "+", "1"}]}], "]"}], "&"}], "/@", 
        RowBox[{"Partition", "[", 
         RowBox[{
          RowBox[{
          "eigvec", "\[LeftDoubleBracket]", "nom", "\[RightDoubleBracket]"}], 
          ",", 
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{
            "eigvec", "\[LeftDoubleBracket]", "nom", 
             "\[RightDoubleBracket]"}], "]"}], "/", "2"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          UnderoverscriptBox["\[Sum]", 
           RowBox[{"ir", "=", "1"}], "nr"], 
          RowBox[{
           UnderoverscriptBox["\[Sum]", 
            RowBox[{"i\[Phi]", "=", "0"}], "n\[Phi]"], 
           RowBox[{
            RowBox[{"cfs", "\[LeftDoubleBracket]", 
             RowBox[{"#", ",", "ir", ",", 
              RowBox[{"i\[Phi]", "+", "1"}]}], "\[RightDoubleBracket]"}], 
            RowBox[{"BesselJ", "[", 
             RowBox[{"i\[Phi]", ",", 
              RowBox[{
               RowBox[{"bz", "[", 
                RowBox[{"i\[Phi]", ",", "ir"}], "]"}], "\[Rho]"}]}], "]"}], 
            SuperscriptBox["E", 
             RowBox[{"\[ImaginaryI]", " ", "i\[Phi]", " ", "\[Phi]"}]]}]}]}], 
         "&"}], "/@", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GetMainIncrement", "[", 
    RowBox[{"mat_", ",", "k1_", ",", "R1_", ",", 
     RowBox[{"num_:", "1"}]}], "]"}], ":=", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"GetMainIncrement", "[", 
      RowBox[{"n", ",", "k1", ",", "R1", ",", "num"}], "]"}], "="}], "*)"}], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{"{", 
       RowBox[{"num", ",", "k1", ",", "R1"}], "}"}], "]"}], ";", 
     RowBox[{
      RowBox[{"Take", "[", 
       RowBox[{
        RowBox[{"Sort", "[", 
         RowBox[{"Re", "/@", 
          RowBox[{"GetIncrementsM", "[", 
           RowBox[{"mat", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\[Kappa]", "\[Rule]", "k1"}], ",", 
              RowBox[{"Re", "\[Rule]", "R1"}], ",", 
              RowBox[{"G", "\[Rule]", "4"}], ",", 
              RowBox[{"\[Omega]", "\[Rule]", "0"}], ",", 
              RowBox[{"\[Epsilon]", "\[Rule]", "0"}]}], "}"}]}], "]"}]}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"-", "num"}], "}"}]}], "]"}], "//", "First"}]}], ")"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.391865489598*^9, 3.3918655295808*^9}, {
  3.3918655928076*^9, 3.3918655942896*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["\:041f\:0440\:043e\:0432\:0435\:0440\:043a\:0438", "Subsubsection"],

Cell[BoxData[
 RowBox[{"Take", "[", 
  RowBox[{
   RowBox[{"Sort", "[", 
    RowBox[{
     RowBox[{"GetIncrements", "[", 
      RowBox[{"20", ",", "0", ",", "1", ",", "100"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Re", "[", "#1", "]"}], ">", 
       RowBox[{"Re", "[", "#2", "]"}]}], "&"}]}], "]"}], ",", "10"}], 
  "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GetMainIncrement", "[", 
  RowBox[{"100", ",", "0", ",", "1", ",", "100", ",", "2"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"100", ",", "1", ",", "100"}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"-", "0.2736337556281337`"}]], "Output"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "\:041e\:0442\:043a\:043b\:043e\:043d\:0435\:043d\:0438\:044f", " ", 
   "\:0432", " ", 
   "\:043e\:043f\:0440\:0435\:0434\:0435\:043b\:0438\:0442\:0435\:043b\:0435",
    " ", "\:043f\:043e\:0441\:043b\:0435", " ", 
   "\:043f\:043e\:0434\:0441\:0442\:0430\:043d\:043e\:0432\:043a\:0438", " ", 
   "\:0441\:043e\:0431\:0441\:0442\:0432\:0435\:043d\:043d\:043e\:0433\:043e",
    " ", "\:0437\:043d\:0430\:0447\:0435\:043d\:0438\:044f", 
   "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"n2", "=", "3"}], ",", 
       RowBox[{"m", "=", "0"}], ",", 
       RowBox[{"k2", "=", "1"}], ",", 
       RowBox[{"R2", "=", "100"}], ",", 
       RowBox[{"mod", "=", "1"}]}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Det", "[", 
        RowBox[{"SetPrecision", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"First", "[", "#", "]"}], "-", 
           RowBox[{
            RowBox[{
             RowBox[{"Sort", "[", 
              RowBox[{
               RowBox[{"GetIncrements", "[", 
                RowBox[{"n2", ",", "m", ",", "k2", ",", "R2"}], "]"}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"Re", "[", "#1", "]"}], ">", 
                 RowBox[{"Re", "[", "#2", "]"}]}], "&"}]}], "]"}], "[", 
             RowBox[{"[", "mod", "]"}], "]"}], 
            RowBox[{"Last", "[", "#", "]"}]}]}], ",", "1000"}], "]"}], "]"}], 
       "&"}], "[", 
      RowBox[{"SetPrecision", "[", 
       RowBox[{
        RowBox[{"FiniteMatrix4Eigen", "[", 
         RowBox[{"n2", ",", "m", ",", 
          RowBox[{"k", "\[Rule]", "k2"}], ",", 
          RowBox[{"R", "\[Rule]", "R2"}]}], "]"}], ",", "1000"}], "]"}], 
      "]"}]}], "]"}]}], "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "\:041e\:0442\:043a\:043b\:043e\:043d\:0435\:043d\:0438\:044f", " ", 
    "\:0432", " ", "\:0432\:0435\:043a\:0442\:043e\:0440\:0435", " ", 
    "\:043f\:043e\:0441\:043b\:0435", " ", 
    "\:043f\:043e\:0434\:0441\:0442\:0430\:043d\:043e\:0432\:043a\:0438", " ",
     "\:0441\:043e\:0431\:0441\:0442\:0432\:0435\:043d\:043d\:044b\:0445", 
    " ", "\:0437\:043d\:0430\:0447\:0435\:043d\:0438\:0439", " ", "\:0438", 
    " ", "\:0432\:0435\:043a\:0442\:043e\:0440\:043e\:0432"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"n2", "=", "300"}], ",", 
         RowBox[{"m", "=", "0"}], ",", 
         RowBox[{"k2", "=", "1"}], ",", 
         RowBox[{"R2", "=", "1000"}], ",", 
         RowBox[{"mod", "=", "2"}]}], "}"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"First", "[", "#", "]"}], "-", 
            RowBox[{
             RowBox[{
              RowBox[{"Sort", "[", 
               RowBox[{
                RowBox[{"GetIncrements", "[", 
                 RowBox[{"n2", ",", "m", ",", "k2", ",", "R2"}], "]"}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Re", "[", "#1", "]"}], ">", 
                  RowBox[{"Re", "[", "#2", "]"}]}], "&"}]}], "]"}], "[", 
              RowBox[{"[", "mod", "]"}], "]"}], 
             RowBox[{"Last", "[", "#", "]"}]}]}], ")"}], ".", 
          RowBox[{"GetEigenWave", "[", 
           RowBox[{"n2", ",", "m", ",", "k2", ",", "R2", ",", "mod"}], 
           "]"}]}], "&"}], "[", 
        RowBox[{"FiniteMatrix4Eigen", "[", 
         RowBox[{"n2", ",", "m", ",", 
          RowBox[{"k", "\[Rule]", "k2"}], ",", 
          RowBox[{"R", "\[Rule]", "R2"}]}], "]"}], "]"}]}], "]"}], "//", 
     "Abs"}], "//", "PrintRange"}], ";"}]}]], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"mat", "=", 
    RowBox[{"SpectralMatrix4Eigen", "[", 
     RowBox[{"5", ",", "5"}], "]"}]}], ";"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3014.126`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.407052819016*^9, 3.407205937648*^9, 
  3.4080011614706125`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetWorkDir", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.391865541468*^9, 3.3918655516236*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"DumpSave", "[", 
   RowBox[{"\"\<spectral_matrix5x5k2G2.mx\>\"", ",", "mat"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.3914527598946*^9, 3.3914527908918*^9}, {
  3.3914528304378*^9, 3.3914528613101997`*^9}, {3.3914529793866*^9, 
  3.3914529885594*^9}, {3.4070530674960003`*^9, 3.407053067907*^9}, {
  3.4079981168986125`*^9, 3.4079981172086124`*^9}}],

Cell[BoxData[
 RowBox[{"<<", "\"\<spectral_matrix5x5k2G2.mx\>\""}]], "Input",
 CellChangeTimes->{{3.407998123815613*^9, 3.407998124070613*^9}}],

Cell[BoxData[
 RowBox[{"<<", "\"\<spectral_matrix5x5k2.mx\>\""}]], "Input",
 CellChangeTimes->{{3.391452891777*^9, 3.3914529013866*^9}, {
  3.4070555095369997`*^9, 3.40705550985*^9}}],

Cell[BoxData[
 RowBox[{"<<", "\"\<spectral_matrix5x5.mx\>\""}]], "Input",
 CellChangeTimes->{{3.407893828818*^9, 3.40789382902*^9}}],

Cell[BoxData[
 RowBox[{"PrintRange", "[", 
  RowBox[{"Re", "[", 
   RowBox[{"GetIncrementsM", "[", 
    RowBox[{"mat", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Kappa]", "\[Rule]", "0.0"}], ",", 
       RowBox[{"\[Omega]", "\[Rule]", "0"}], ",", 
       RowBox[{"G", "\[Rule]", "4"}], ",", 
       RowBox[{"\[Epsilon]", "\[Rule]", "0"}], ",", 
       RowBox[{"Re", "\[Rule]", "1000"}]}], "}"}]}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.3918656112312*^9, 3.3918656136024*^9}, {
  3.3918656597784*^9, 3.3918656607144003`*^9}, {3.407891716284*^9, 
  3.407891732458*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"mat1", "=", 
   RowBox[{"mat", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Kappa]", "\[Rule]", "1"}], ",", 
      RowBox[{"\[Omega]", "\[Rule]", "0"}], ",", 
      RowBox[{"G", "\[Rule]", "4"}], ",", 
      RowBox[{"\[Epsilon]", "\[Rule]", "0"}], ",", 
      RowBox[{"Re", "\[Rule]", "10"}]}], "}"}]}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Re", "/@", 
   RowBox[{"GetIncrementsM", "[", 
    RowBox[{"mat", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Kappa]", "\[Rule]", "0.08"}], ",", 
       RowBox[{"\[Omega]", "\[Rule]", 
        RowBox[{"-", "1"}]}], ",", 
       RowBox[{"G", "\[Rule]", "4"}], ",", 
       RowBox[{"\[Epsilon]", "\[Rule]", "0"}], ",", 
       RowBox[{"Re", "\[Rule]", "100"}]}], "}"}]}], "]"}]}], "//", 
  "Sort"}]], "Input",
 CellChangeTimes->{{3.405938427738*^9, 3.4059384549630003`*^9}, {
   3.4059385391140003`*^9, 3.405938588067*^9}, {3.4059389420559998`*^9, 
   3.4059389770360003`*^9}, {3.405939108174*^9, 3.405939109427*^9}, 
   3.407212482712*^9, 3.407217132395*^9, {3.4072173011099997`*^9, 
   3.407217310176*^9}, {3.4072173701*^9, 3.407217370494*^9}, {
   3.4080029450495996`*^9, 3.408002950416*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "4.929788450232517`"}], ",", 
   RowBox[{"-", "4.929788450232503`"}], ",", 
   RowBox[{"-", "4.302495710142732`"}], ",", 
   RowBox[{"-", "4.20146584825882`"}], ",", 
   RowBox[{"-", "3.781467322973962`"}], ",", 
   RowBox[{"-", "3.6844071413560306`"}], ",", 
   RowBox[{"-", "3.6844071413559174`"}], ",", 
   RowBox[{"-", "3.555863896342135`"}], ",", 
   RowBox[{"-", "3.231951667365856`"}], ",", 
   RowBox[{"-", "3.1501378488453793`"}], ",", 
   RowBox[{"-", "3.150137848845377`"}], ",", 
   RowBox[{"-", "3.0215954004323895`"}], ",", 
   RowBox[{"-", "2.719779531860992`"}], ",", 
   RowBox[{"-", "2.653420506282714`"}], ",", 
   RowBox[{"-", "2.653420506282711`"}], ",", 
   RowBox[{"-", "2.6171290056745944`"}], ",", 
   RowBox[{"-", "2.536249472267038`"}], ",", 
   RowBox[{"-", "2.3489838264416334`"}], ",", 
   RowBox[{"-", "2.2705008904871766`"}], ",", 
   RowBox[{"-", "2.2705008904871367`"}], ",", 
   RowBox[{"-", "2.2113462391981087`"}], ",", 
   RowBox[{"-", "2.2036015245503697`"}], ",", 
   RowBox[{"-", "2.1388083713987247`"}], ",", 
   RowBox[{"-", "1.932841084947941`"}], ",", 
   RowBox[{"-", "1.8419258271022578`"}], ",", 
   RowBox[{"-", "1.8419258271022496`"}], ",", 
   RowBox[{"-", "1.731870437178228`"}], ",", 
   RowBox[{"-", "1.6659928469167886`"}], ",", 
   RowBox[{"-", "1.5581533532881908`"}], ",", 
   RowBox[{"-", "1.5135348822445085`"}], ",", 
   RowBox[{"-", "1.400193111785276`"}], ",", 
   RowBox[{"-", "1.4001931117852757`"}], ",", 
   RowBox[{"-", "1.397618952712696`"}], ",", 
   RowBox[{"-", "1.376163430925737`"}], ",", 
   RowBox[{"-", "1.2942332383586213`"}], ",", 
   RowBox[{"-", "1.1215226519688468`"}], ",", 
   RowBox[{"-", "1.1041719484589163`"}], ",", 
   RowBox[{"-", "1.1041719484589072`"}], ",", 
   RowBox[{"-", "1.0044680187872375`"}], ",", 
   RowBox[{"-", "0.9116955260893305`"}], ",", 
   RowBox[{"-", "0.8431183876069028`"}], ",", 
   RowBox[{"-", "0.8431183876069025`"}], ",", 
   RowBox[{"-", "0.771048402581615`"}], ",", 
   RowBox[{"-", "0.7435673516902507`"}], ",", 
   RowBox[{"-", "0.6146364720812593`"}], ",", 
   RowBox[{"-", "0.6146364720812422`"}], ",", 
   RowBox[{"-", "0.6125748861209364`"}], ",", 
   RowBox[{"-", "0.61257488612075`"}], ",", 
   RowBox[{"-", "0.493573048651934`"}], ",", 
   RowBox[{"-", "0.4935730486519328`"}], ",", 
   RowBox[{"-", "0.44581074862499614`"}], ",", 
   RowBox[{"-", "0.3811619061531183`"}], ",", 
   RowBox[{"-", "0.3681556405679542`"}], ",", 
   RowBox[{"-", "0.36815564056794947`"}], ",", 
   RowBox[{"-", "0.2706534237503254`"}], ",", 
   RowBox[{"-", "0.19160985695643118`"}], ",", 
   RowBox[{"-", "0.1916098569564298`"}], ",", 
   RowBox[{"-", "0.08508346914404347`"}], ",", 
   RowBox[{"-", "0.04862076851370872`"}], ",", "0.009449530839700786`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.407893844506*^9, 3.4080023033704*^9, 3.4080029508996*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:0418\:0441\:0441\:043b\:0435\:0434\:043e\:0432\:0430\:043d\:0438\:0435\
 \:0433\:043b\:0430\:0432\:043d\:044b\:0445 \:0433\:0430\:0440\:043c\:043e\
\:043d\:0438\:043a", "Subsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Short", "[", 
  RowBox[{
   RowBox[{"ew", "=", 
    RowBox[{
     RowBox[{"GetEigenWaveM", "[", 
      RowBox[{"mat", ",", "5", ",", "5", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Kappa]", "\[Rule]", "0.08"}], ",", 
         RowBox[{"\[Omega]", "\[Rule]", 
          RowBox[{"-", "1"}]}], ",", 
         RowBox[{"G", "\[Rule]", "4"}], ",", 
         RowBox[{"\[Epsilon]", "\[Rule]", "0"}], ",", 
         RowBox[{"Re", "\[Rule]", "100"}]}], "}"}], ",", "1"}], "]"}], "//", 
     "Chop"}]}], ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{
  3.398663520196*^9, {3.405939001108*^9, 3.405939008301*^9}, {
   3.405939927892*^9, 3.405939969076*^9}, {3.405940000016*^9, 
   3.40594001316*^9}, 3.40594133409*^9, 3.407206109365*^9, {
   3.4072074822720003`*^9, 3.4072075011029997`*^9}, {3.4072075377139997`*^9, 
   3.407207569788*^9}, {3.407207707535*^9, 3.4072077226689997`*^9}, {
   3.407207889057*^9, 3.4072078918900003`*^9}, 3.407217124408*^9, {
   3.407217386899*^9, 3.407217389634*^9}, 3.407891762105*^9, 
   3.4078935823719997`*^9, 3.4078940115179996`*^9, 3.4078945451610003`*^9, {
   3.4080028914323997`*^9, 3.4080029041619997`*^9}, 3.4080029748612003`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"\<\"Main eigen value is \"\>", "\[InvisibleSpace]", 
    "0.009449530839700786`"}], "\[InvisibleSpace]", "+", 
   RowBox[{"3.4273903155710215`*^-15", " ", "\[ImaginaryI]"}]}],
  SequenceForm["Main eigen value is ", 
   Complex[0.009449530839700786, 3.4273903155710215`*^-15]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.4072060570810003`*^9, 3.4072061104960003`*^9, {3.407207487865*^9, 
   3.407207498366*^9}, {3.407207538651*^9, 3.407207570767*^9}, {
   3.407207709034*^9, 3.407207726865*^9}, {3.407207889859*^9, 
   3.40720789269*^9}, 3.407210371207*^9, 3.407217390591*^9, 
   3.4078917631940002`*^9, 3.4078932271*^9, 3.407893583326*^9, 
   3.407893853594*^9, 3.407894012322*^9, 3.407894545763*^9, 
   3.4080029056284*^9, 3.4080029760936003`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"0.4236416090243375`", "\[InvisibleSpace]", "-", 
        RowBox[{"0.720635272792597`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
      RowBox[{"BesselJ", "[", 
       RowBox[{"0", ",", 
        RowBox[{"2.404825557695773`", " ", "\[Rho]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"0.22587578664653976`", "\[InvisibleSpace]", "-", 
        RowBox[{"0.3842258542595324`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
      RowBox[{"BesselJ", "[", 
       RowBox[{"0", ",", 
        RowBox[{"5.52007811028631`", " ", "\[Rho]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"0.10956430290624249`", "\[InvisibleSpace]", "-", 
        RowBox[{"0.18637428343028944`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
      
      RowBox[{"BesselJ", "[", 
       RowBox[{"0", ",", 
        RowBox[{"8.653727912911013`", " ", "\[Rho]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"0.06027606835629172`", "\[InvisibleSpace]", "-", 
        RowBox[{"0.10253256535125511`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
      
      RowBox[{"BesselJ", "[", 
       RowBox[{"0", ",", 
        RowBox[{"11.791534439014281`", " ", "\[Rho]"}]}], "]"}]}], "+", 
     RowBox[{"\[LeftSkeleton]", "30", "\[RightSkeleton]"}], "+", 
     RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], ")"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}]], " ", 
      RowBox[{"BesselJ", "[", 
       RowBox[{"5", ",", 
        RowBox[{
         RowBox[{"\[LeftSkeleton]", "18", "\[RightSkeleton]"}], " ", 
         "\[Rho]"}]}], "]"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"0.00010424201086229751`", "\[InvisibleSpace]", "-", 
        RowBox[{"0.00017732080214370009`", " ", "\[ImaginaryI]"}]}], ")"}], 
      " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"5", " ", "\[ImaginaryI]", " ", "\[Phi]"}]], " ", 
      RowBox[{"BesselJ", "[", 
       RowBox[{"5", ",", 
        RowBox[{"12.338604197466944`", " ", "\[Rho]"}]}], "]"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"4.316233202393839`*^-6", "-", 
        RowBox[{"7.342125568707685`*^-6", " ", "\[ImaginaryI]"}]}], ")"}], 
      " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"5", " ", "\[ImaginaryI]", " ", "\[Phi]"}]], " ", 
      RowBox[{"BesselJ", "[", 
       RowBox[{"5", ",", 
        RowBox[{"15.70017407971167`", " ", "\[Rho]"}]}], "]"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"7.016124532133831`*^-6", "-", 
        RowBox[{"0.000011934773881901801`", " ", "\[ImaginaryI]"}]}], ")"}], 
      " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"5", " ", "\[ImaginaryI]", " ", "\[Phi]"}]], " ", 
      RowBox[{"BesselJ", "[", 
       RowBox[{"5", ",", 
        RowBox[{"18.98013387517992`", " ", "\[Rho]"}]}], "]"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"4.5361486814490346`*^-8", "-", 
        RowBox[{"7.716208978705235`*^-8", " ", "\[ImaginaryI]"}]}], ")"}], 
      " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"5", " ", "\[ImaginaryI]", " ", "\[Phi]"}]], " ", 
      RowBox[{"BesselJ", "[", 
       RowBox[{"5", ",", 
        RowBox[{"22.217799896561267`", " ", "\[Rho]"}]}], "]"}]}]}], ",", 
    RowBox[{
     RowBox[{"\[LeftSkeleton]", "44", "\[RightSkeleton]"}], "+", 
     RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}]}]}], "}"}],
  Short[#, 10]& ]], "Output",
 CellChangeTimes->{
  3.407206057105*^9, 3.407206110516*^9, {3.407207488008*^9, 
   3.4072074984040003`*^9}, {3.407207538709*^9, 3.40720757088*^9}, {
   3.407207709083*^9, 3.4072077269*^9}, {3.407207889906*^9, 
   3.407207892712*^9}, 3.4072103717539997`*^9, 3.407217391289*^9, 
   3.407891766733*^9, 3.407893227135*^9, 3.407893583341*^9, 3.407893853616*^9,
    3.407894012341*^9, 3.4078945457790003`*^9, 3.408002905644*^9, 
   3.4080029761092*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{"Im", ",", "ew", ",", 
      RowBox[{"{", "2", "}"}]}], "]"}], "//.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Im", "[", 
       RowBox[{"a_", " ", "b_"}], "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{
        RowBox[{"Re", "[", "a", "]"}], 
        RowBox[{"Im", "[", "b", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Im", "[", "a", "]"}], 
        RowBox[{"Re", "[", "b", "]"}]}]}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"\[Phi]", "\[Element]", "Reals"}], "\[And]", 
    RowBox[{"\[Rho]", ">", "0"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.3913472095748*^9, 3.3913472793388*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "0.9087178117531924`"}], " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"0", ",", 
       RowBox[{"2.404825557695773`", " ", "\[Rho]"}]}], "]"}]}], "-", 
    RowBox[{"0.3296202733994492`", " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"0", ",", 
       RowBox[{"5.52007811028631`", " ", "\[Rho]"}]}], "]"}]}], "-", 
    RowBox[{"0.16189509957550416`", " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"0", ",", 
       RowBox[{"8.653727912911013`", " ", "\[Rho]"}]}], "]"}]}], "-", 
    RowBox[{"0.09405686358835645`", " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"0", ",", 
       RowBox[{"11.791534439014281`", " ", "\[Rho]"}]}], "]"}]}], "-", 
    RowBox[{"0.045274569540470995`", " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"0", ",", 
       RowBox[{"14.930917708487787`", " ", "\[Rho]"}]}], "]"}]}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.3913466689888*^9, 3.3913472100518*^9, {3.3913472602718*^9, 
   3.3913472803297997`*^9}, 3.3913473487448*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ew", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Rho]", "\[Rule]", "0.2"}], ",", 
    RowBox[{"\[Phi]", "\[Rule]", "0"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.3913472906378*^9, 3.3913473095968*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "0.2892365546388659`"}], "+", 
    RowBox[{"0.46613275742242405`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.8618589111222883`", "\[InvisibleSpace]", "+", 
    RowBox[{"0.534785633642111`", " ", "\[ImaginaryI]"}]}]}], "}"}]], "Output",\

 CellChangeTimes->{3.3913473099178*^9, 3.3913473500308*^9, 3.405940116586*^9, 
  3.4078927941549997`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NumMode", "[", "expr_", "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ex", "=", 
        RowBox[{"Chop", "[", 
         RowBox[{"expr", ",", 
          SuperscriptBox["10", 
           RowBox[{"-", "5"}]]}], "]"}]}], ",", "modes"}], "}"}], ",", 
     RowBox[{
      RowBox[{"modes", "=", 
       FractionBox[
        RowBox[{"Union", "[", 
         RowBox[{"Extract", "[", 
          RowBox[{"ex", ",", 
           RowBox[{"Position", "[", 
            RowBox[{"ex", ",", 
             RowBox[{
              RowBox[{"Complex", "[", 
               RowBox[{"0", ",", "n_Integer"}], "]"}], " ", "\[Phi]"}]}], 
            "]"}]}], "]"}], "]"}], 
        RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "modes", "]"}], "\[Equal]", "0"}], ",", 
         RowBox[{"{", "0", "}"}], ",", "modes"}], "]"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.407891805027*^9, 3.407891808921*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NumMode", "/@", "ew"}]], "Input",
 CellChangeTimes->{{3.405940126383*^9, 3.4059401435360003`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.405940143849*^9, 3.405941444376*^9, 3.407206122135*^9, 
  3.407217395954*^9, 3.407891770434*^9, 3.407891897446*^9, 3.4080029803992*^9}
  ]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:0421\:0445\:043e\:0434\:0438\:043c\:043e\:0441\:0442\:044c", \
"Subsubsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{"linctor1", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Sort", "[", 
       RowBox[{
        RowBox[{"GetIncrements", "[", 
         RowBox[{"n", ",", "3", ",", "0.2", ",", "1"}], "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Re", "[", "#1", "]"}], ">", 
          RowBox[{"Re", "[", "#2", "]"}]}], "&"}]}], "]"}], "//", "Chop"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "10"}], "}"}]}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"linctor2", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Sort", "[", 
       RowBox[{
        RowBox[{"GetIncrements", "[", 
         RowBox[{"2", ",", "n", ",", "0.2", ",", "1"}], "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Re", "[", "#1", "]"}], ">", 
          RowBox[{"Re", "[", "#2", "]"}]}], "&"}]}], "]"}], "//", "Chop"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "10"}], "}"}]}], "]"}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell["\:0412 \:0437\:0430\:0432\:0438\:0441\:0438\:043c\:043e\:0441\:0442\
\:0438 \:043e\:0442 nfi", "Subsubsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"PrintRange", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"#", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "]"}], "&"}], "/@", "linctor2"}], 
   "]"}], ";"}]], "Input"],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
-0.0820106 0.10582 658.023 44.7595 [
[.34127 .04657 -3 -9 ]
[.34127 .04657 3 0 ]
[.55291 .04657 -3 -9 ]
[.55291 .04657 3 0 ]
[.76455 .04657 -3 -9 ]
[.76455 .04657 3 0 ]
[.97619 .04657 -6 -9 ]
[.97619 .04657 6 0 ]
[.11713 .14859 -42 -4.5 ]
[.11713 .14859 0 4.5 ]
[.11713 .2381 -42 -4.5 ]
[.11713 .2381 0 4.5 ]
[.11713 .32762 -42 -4.5 ]
[.11713 .32762 0 4.5 ]
[.11713 .41714 -42 -4.5 ]
[.11713 .41714 0 4.5 ]
[.11713 .50666 -36 -4.5 ]
[.11713 .50666 0 4.5 ]
[.11713 .59618 -42 -4.5 ]
[.11713 .59618 0 4.5 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.34127 .05907 m
.34127 .06532 L
s
[(4)] .34127 .04657 0 1 Mshowa
.55291 .05907 m
.55291 .06532 L
s
[(6)] .55291 .04657 0 1 Mshowa
.76455 .05907 m
.76455 .06532 L
s
[(8)] .76455 .04657 0 1 Mshowa
.97619 .05907 m
.97619 .06532 L
s
[(10)] .97619 .04657 0 1 Mshowa
.125 Mabswid
.18254 .05907 m
.18254 .06282 L
s
.23545 .05907 m
.23545 .06282 L
s
.28836 .05907 m
.28836 .06282 L
s
.39418 .05907 m
.39418 .06282 L
s
.44709 .05907 m
.44709 .06282 L
s
.5 .05907 m
.5 .06282 L
s
.60582 .05907 m
.60582 .06282 L
s
.65873 .05907 m
.65873 .06282 L
s
.71164 .05907 m
.71164 .06282 L
s
.81746 .05907 m
.81746 .06282 L
s
.87037 .05907 m
.87037 .06282 L
s
.92328 .05907 m
.92328 .06282 L
s
.07672 .05907 m
.07672 .06282 L
s
.02381 .05907 m
.02381 .06282 L
s
.25 Mabswid
0 .05907 m
1 .05907 L
s
.12963 .14859 m
.13588 .14859 L
s
[(-14.698)] .11713 .14859 1 0 Mshowa
.12963 .2381 m
.13588 .2381 L
s
[(-14.696)] .11713 .2381 1 0 Mshowa
.12963 .32762 m
.13588 .32762 L
s
[(-14.694)] .11713 .32762 1 0 Mshowa
.12963 .41714 m
.13588 .41714 L
s
[(-14.692)] .11713 .41714 1 0 Mshowa
.12963 .50666 m
.13588 .50666 L
s
[(-14.69)] .11713 .50666 1 0 Mshowa
.12963 .59618 m
.13588 .59618 L
s
[(-14.688)] .11713 .59618 1 0 Mshowa
.125 Mabswid
.12963 .08145 m
.13338 .08145 L
s
.12963 .10383 m
.13338 .10383 L
s
.12963 .12621 m
.13338 .12621 L
s
.12963 .17097 m
.13338 .17097 L
s
.12963 .19335 m
.13338 .19335 L
s
.12963 .21572 m
.13338 .21572 L
s
.12963 .26048 m
.13338 .26048 L
s
.12963 .28286 m
.13338 .28286 L
s
.12963 .30524 m
.13338 .30524 L
s
.12963 .35 m
.13338 .35 L
s
.12963 .37238 m
.13338 .37238 L
s
.12963 .39476 m
.13338 .39476 L
s
.12963 .43952 m
.13338 .43952 L
s
.12963 .4619 m
.13338 .4619 L
s
.12963 .48428 m
.13338 .48428 L
s
.12963 .52904 m
.13338 .52904 L
s
.12963 .55142 m
.13338 .55142 L
s
.12963 .5738 m
.13338 .5738 L
s
.12963 .03669 m
.13338 .03669 L
s
.12963 .01431 m
.13338 .01431 L
s
.25 Mabswid
.12963 0 m
.12963 .61803 L
s
.5 Mabswid
.02381 .60332 m
.12963 .01472 L
.23545 .0154 L
.34127 .0154 L
.44709 .0154 L
.55291 .0154 L
.65873 .0154 L
.76455 .0154 L
.87037 .0154 L
.97619 .0154 L
s
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
 ImageSize->{288, 177.938},
 ImageMargins->{{43, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztW1lvGjEQNusF0pCk932EHmrTI/Q+nqpKaaF96F+ohKJK8FC1SvN7+1co
NmDvrr+1vV4blgOFXccz33g842N2vHzvnw5+/uqfDo/77d5J/89gePy33f19
Mq6iNUJqA0LIvzZh5dG4OL2Mxn+jIbuwGnP5A79RMgGPJl927VSIzrt2wHko
mf7LPxG7xPmSvoK6I36tp1ucyvwM+CNQ98mSD9XVllLd9+zGzd1lpYZsvkKq
9XhFnGIaf76wQix056WjebWbwXYXYZfsuBKmyACRwqiBj+zKq2IHlWJhMmk8
mvYT8g4V1DjbP87wYlL7DvR1megtduPVPziNXAK2OAvqdvAgvGAJR3XnPPMt
I7Y5MeRbbN1vAIFmVs+ST99acpxYsLzhN7w+h+eLs3xU8HXCtPsaGBQtRkkd
1gajWP8V4KQG6auGeQnoaEuzwigW9iq9ApgGu/FpWBf95Ri+CTdEndyp66LU
MMjeAnSEoaI9LjtnVWhoaNkZJGWV125b025zauMkzVEdmsfEhfHYvKXRhAo/
RtOeZHSa3aX7OOkw3xgUd25HCEAzMQKgMuNFp4TFUEfqODpIzoVsP9hnN1d3
pFCud9BWYFrwkNnqYkrtCbUzwbaVS55bTpJFYDqA3hS9teJ0kb6kmENARyMn
GEbxysI10mCeAfqZqmMUC7tIfwro2xXBFA9WcrYjuIxnWwsRvqQ3jUjDP7fw
JSqribfIhZqUWLOwBVvCNIF9xinmOhfj5AYnmaltGnhPAL1lwDwGdOSVYBhl
kZ6XRgeAjkbDWmIUrzwCnHsG6RsMIQ8BHaVgrTCKV7xK94wpHpzIhxVfm71d
KKLbXdBjhCmH5CMUsd1vkC4m/UoGKJJLluYSjthbysVDAUMUFxWLhy2RGOw2
J5ZIso2ZULBC5BsLwoYNwWdq5QGgn686RlmK7wNOdC65yph7gH5xnhjFKwvX
SIO5C+joIHzpMYpXXKS3Af1yAEzxsCUWiPAZlORddwCENtFQYUvy3tToZHpQ
tw1LEgkaJUFRFw5BHQkdoCBBYPf0GJgkBkmYWNFn9kTpgq9RKmOS3bSX5Pyk
cnTmy94H9CsGzB1AvzpPjLK6LlwjDeY2oF9bRYzilVuA87pB+gZDyE1Av+GK
UbziVbpnDH++kpGIXNX0CRSNRPQ+oHxOk1FOkXMb9jWt2fp2dbkG1CPT+T/X
XmYl9MGE8RAGZzZQj/DGN2uodOhgMqi+eQuPuSgicwC+D1dcTKB/y8MUnaOV
CK1YlcIoKxrasdAutcGkMShyQRGOFUbxilfpnjEowt1fRYziFRfpKH/QrggG
5S6yj17Tjwwf5Mtv9q/B5acK0m/yzRocWZ/CoI1BeW5Eu5fLW4G6DMrW4lSl
0lR5sQtJZ9xDK1smcYLab4IxV270FW3cOh7y4tGgWRRfs8HXO7Khfy7Ly4af
/JLaf8zWWUA=\
\>"],
 ImageRangeCache->{{{0, 359}, {221.375, 0}} -> {0.45274, -14.7015, 0.0340262, \
8.04443}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"PrintRange", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "&"}], "/@", 
    RowBox[{"Log", "[", 
     RowBox[{"Abs", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"#", "-", 
          RowBox[{"Take", "[", 
           RowBox[{
            RowBox[{"linctor1", "[", 
             RowBox[{"[", 
              RowBox[{"-", "1"}], "]"}], "]"}], ",", 
            RowBox[{"Length", "[", "#", "]"}]}], "]"}]}], ")"}], "&"}], "/@", 
       "linctor1"}], "]"}], "]"}]}], "]"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Graphics", "::", "\<\"gptn\"\>"}], 
  RowBox[{
  ":", " "}], "\<\"Coordinate \\!\\(Indeterminate\\) in \\!\\({20, \
Indeterminate}\\) is not a floating-point number. \\!\\(\\*ButtonBox[\\\"More\
\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"Graphics::gptn\\\"]\\)\"\>"}]], "Message"],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
-0.0263158 0.0501253 1.20376 0.042752 [
[.099 -0.0058 -9 -9 ]
[.099 -0.0058 9 0 ]
[.34962 -0.0058 -9 -9 ]
[.34962 -0.0058 9 0 ]
[.47494 -0.0058 -6 -9 ]
[.47494 -0.0058 6 0 ]
[.60025 -0.0058 -12 -9 ]
[.60025 -0.0058 12 0 ]
[.72556 -0.0058 -6 -9 ]
[.72556 -0.0058 6 0 ]
[.85088 -0.0058 -12 -9 ]
[.85088 -0.0058 12 0 ]
[.97619 -0.0058 -6 -9 ]
[.97619 -0.0058 6 0 ]
[.21181 .0922 -18 -4.5 ]
[.21181 .0922 0 4.5 ]
[.21181 .17771 -18 -4.5 ]
[.21181 .17771 0 4.5 ]
[.21181 .26321 -18 -4.5 ]
[.21181 .26321 0 4.5 ]
[.21181 .34872 -18 -4.5 ]
[.21181 .34872 0 4.5 ]
[.21181 .43422 -18 -4.5 ]
[.21181 .43422 0 4.5 ]
[.21181 .51973 -18 -4.5 ]
[.21181 .51973 0 4.5 ]
[.21181 .60523 -18 -4.5 ]
[.21181 .60523 0 4.5 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.099 .0067 m
.099 .01295 L
s
[(2.5)] .099 -0.0058 0 1 Mshowa
.34962 .0067 m
.34962 .01295 L
s
[(7.5)] .34962 -0.0058 0 1 Mshowa
.47494 .0067 m
.47494 .01295 L
s
[(10)] .47494 -0.0058 0 1 Mshowa
.60025 .0067 m
.60025 .01295 L
s
[(12.5)] .60025 -0.0058 0 1 Mshowa
.72556 .0067 m
.72556 .01295 L
s
[(15)] .72556 -0.0058 0 1 Mshowa
.85088 .0067 m
.85088 .01295 L
s
[(17.5)] .85088 -0.0058 0 1 Mshowa
.97619 .0067 m
.97619 .01295 L
s
[(20)] .97619 -0.0058 0 1 Mshowa
.125 Mabswid
.12406 .0067 m
.12406 .01045 L
s
.14912 .0067 m
.14912 .01045 L
s
.17419 .0067 m
.17419 .01045 L
s
.19925 .0067 m
.19925 .01045 L
s
.24937 .0067 m
.24937 .01045 L
s
.27444 .0067 m
.27444 .01045 L
s
.2995 .0067 m
.2995 .01045 L
s
.32456 .0067 m
.32456 .01045 L
s
.37469 .0067 m
.37469 .01045 L
s
.39975 .0067 m
.39975 .01045 L
s
.42481 .0067 m
.42481 .01045 L
s
.44987 .0067 m
.44987 .01045 L
s
.5 .0067 m
.5 .01045 L
s
.52506 .0067 m
.52506 .01045 L
s
.55013 .0067 m
.55013 .01045 L
s
.57519 .0067 m
.57519 .01045 L
s
.62531 .0067 m
.62531 .01045 L
s
.65038 .0067 m
.65038 .01045 L
s
.67544 .0067 m
.67544 .01045 L
s
.7005 .0067 m
.7005 .01045 L
s
.75063 .0067 m
.75063 .01045 L
s
.77569 .0067 m
.77569 .01045 L
s
.80075 .0067 m
.80075 .01045 L
s
.82581 .0067 m
.82581 .01045 L
s
.87594 .0067 m
.87594 .01045 L
s
.901 .0067 m
.901 .01045 L
s
.92607 .0067 m
.92607 .01045 L
s
.95113 .0067 m
.95113 .01045 L
s
.07393 .0067 m
.07393 .01045 L
s
.04887 .0067 m
.04887 .01045 L
s
.02381 .0067 m
.02381 .01045 L
s
.25 Mabswid
0 .0067 m
1 .0067 L
s
.22431 .0922 m
.23056 .0922 L
s
[(-26)] .21181 .0922 1 0 Mshowa
.22431 .17771 m
.23056 .17771 L
s
[(-24)] .21181 .17771 1 0 Mshowa
.22431 .26321 m
.23056 .26321 L
s
[(-22)] .21181 .26321 1 0 Mshowa
.22431 .34872 m
.23056 .34872 L
s
[(-20)] .21181 .34872 1 0 Mshowa
.22431 .43422 m
.23056 .43422 L
s
[(-18)] .21181 .43422 1 0 Mshowa
.22431 .51973 m
.23056 .51973 L
s
[(-16)] .21181 .51973 1 0 Mshowa
.22431 .60523 m
.23056 .60523 L
s
[(-14)] .21181 .60523 1 0 Mshowa
.125 Mabswid
.22431 .02808 m
.22806 .02808 L
s
.22431 .04945 m
.22806 .04945 L
s
.22431 .07083 m
.22806 .07083 L
s
.22431 .11358 m
.22806 .11358 L
s
.22431 .13496 m
.22806 .13496 L
s
.22431 .15633 m
.22806 .15633 L
s
.22431 .19909 m
.22806 .19909 L
s
.22431 .22046 m
.22806 .22046 L
s
.22431 .24184 m
.22806 .24184 L
s
.22431 .28459 m
.22806 .28459 L
s
.22431 .30597 m
.22806 .30597 L
s
.22431 .32734 m
.22806 .32734 L
s
.22431 .37009 m
.22806 .37009 L
s
.22431 .39147 m
.22806 .39147 L
s
.22431 .41285 m
.22806 .41285 L
s
.22431 .4556 m
.22806 .4556 L
s
.22431 .47697 m
.22806 .47697 L
s
.22431 .49835 m
.22806 .49835 L
s
.22431 .5411 m
.22806 .5411 L
s
.22431 .56248 m
.22806 .56248 L
s
.22431 .58385 m
.22806 .58385 L
s
.25 Mabswid
.22431 0 m
.22431 .61803 L
s
.5 Mabswid
.02381 .60332 m
.07393 .24889 L
.12406 .04024 L
.17419 .04444 L
.22431 .0416 L
.27444 .01472 L
.32456 .04473 L
.37469 .04458 L
.42481 .03155 L
.47494 .03127 L
.52506 .04182 L
.57519 .01741 L
.62531 .03414 L
.67544 .04863 L
.72556 .05716 L
.77569 .06135 L
.82581 .04172 L
.87594 .01892 L
.92607 .02401 L
s
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
 ImageSize->{288, 177.938},
 ImageMargins->{{43, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
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\
\>"],
 ImageRangeCache->{{{0, 359}, {221.375, 0}} -> {-0.199929, -29.0788, \
0.0745121, 0.0873629}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\:0412 \:0437\:0430\:0432\:0438\:0441\:0438\:043c\:043e\:0441\:0442\
\:0438 \:043e\:0442 nr", "Subsubsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"PrintRange", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"#", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "]"}], "&"}], "/@", "linctor1"}], 
   "]"}], ";"}]], "Input"],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
-0.0820106 0.10582 355.98 24.1778 [
[.34127 .55411 -3 -9 ]
[.34127 .55411 3 0 ]
[.55291 .55411 -3 -9 ]
[.55291 .55411 3 0 ]
[.76455 .55411 -3 -9 ]
[.76455 .55411 3 0 ]
[.97619 .55411 -6 -9 ]
[.97619 .55411 6 0 ]
[.11713 .08305 -36 -4.5 ]
[.11713 .08305 0 4.5 ]
[.11713 .20394 -42 -4.5 ]
[.11713 .20394 0 4.5 ]
[.11713 .32483 -36 -4.5 ]
[.11713 .32483 0 4.5 ]
[.11713 .44572 -42 -4.5 ]
[.11713 .44572 0 4.5 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.34127 .56661 m
.34127 .57286 L
s
[(4)] .34127 .55411 0 1 Mshowa
.55291 .56661 m
.55291 .57286 L
s
[(6)] .55291 .55411 0 1 Mshowa
.76455 .56661 m
.76455 .57286 L
s
[(8)] .76455 .55411 0 1 Mshowa
.97619 .56661 m
.97619 .57286 L
s
[(10)] .97619 .55411 0 1 Mshowa
.125 Mabswid
.18254 .56661 m
.18254 .57036 L
s
.23545 .56661 m
.23545 .57036 L
s
.28836 .56661 m
.28836 .57036 L
s
.39418 .56661 m
.39418 .57036 L
s
.44709 .56661 m
.44709 .57036 L
s
.5 .56661 m
.5 .57036 L
s
.60582 .56661 m
.60582 .57036 L
s
.65873 .56661 m
.65873 .57036 L
s
.71164 .56661 m
.71164 .57036 L
s
.81746 .56661 m
.81746 .57036 L
s
.87037 .56661 m
.87037 .57036 L
s
.92328 .56661 m
.92328 .57036 L
s
.07672 .56661 m
.07672 .57036 L
s
.02381 .56661 m
.02381 .57036 L
s
.25 Mabswid
0 .56661 m
1 .56661 L
s
.12963 .08305 m
.13588 .08305 L
s
[(-14.72)] .11713 .08305 1 0 Mshowa
.12963 .20394 m
.13588 .20394 L
s
[(-14.715)] .11713 .20394 1 0 Mshowa
.12963 .32483 m
.13588 .32483 L
s
[(-14.71)] .11713 .32483 1 0 Mshowa
.12963 .44572 m
.13588 .44572 L
s
[(-14.705)] .11713 .44572 1 0 Mshowa
.125 Mabswid
.12963 .10723 m
.13338 .10723 L
s
.12963 .13141 m
.13338 .13141 L
s
.12963 .15559 m
.13338 .15559 L
s
.12963 .17976 m
.13338 .17976 L
s
.12963 .22812 m
.13338 .22812 L
s
.12963 .2523 m
.13338 .2523 L
s
.12963 .27647 m
.13338 .27647 L
s
.12963 .30065 m
.13338 .30065 L
s
.12963 .34901 m
.13338 .34901 L
s
.12963 .37319 m
.13338 .37319 L
s
.12963 .39736 m
.13338 .39736 L
s
.12963 .42154 m
.13338 .42154 L
s
.12963 .4699 m
.13338 .4699 L
s
.12963 .49407 m
.13338 .49407 L
s
.12963 .51825 m
.13338 .51825 L
s
.12963 .54243 m
.13338 .54243 L
s
.12963 .05888 m
.13338 .05888 L
s
.12963 .0347 m
.13338 .0347 L
s
.12963 .01052 m
.13338 .01052 L
s
.12963 .59079 m
.13338 .59079 L
s
.12963 .61496 m
.13338 .61496 L
s
.25 Mabswid
.12963 0 m
.12963 .61803 L
s
.5 Mabswid
.02381 .01472 m
.12963 .54302 L
.23545 .60332 L
.34127 .57364 L
.44709 .58907 L
.55291 .57882 L
.65873 .58551 L
.76455 .58051 L
.87037 .58416 L
.97619 .58125 L
s
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
 ImageSize->{288, 177.938},
 ImageMargins->{{43, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztW9tSE0EQ3WQ3IQHEACIgCBG5KAIiipcXSwsDpVX+glUpyip48FLIt/g1
fosPfoYPxsys9GZ3Ts/MXlg2W6Zg00z36e6Znktv7/K+e37y8VP3/PS42z46
6349OT3+1j78ctZvciuOUzlxHOdn2xF0r0/+u/T6P71TcREtZvq5/HIdH9zz
f8V1J0O+6/tnj7oB+HcKgpkB/HYZMUrUbgLJZYP2smFmAX8pT4wSlbw8mgP8
25eAmRBfNcGtUX89QVUFNQLQVULUDbpbgF8j3TWzFacW1t2Tu25KuxOA64I2
5NWgFamxTj1B/tfj2JO98mi+bfN98dFeqK3/uQ5EPW4oYg4fYxKJIpOoTZmF
Loqt+Iyx80NxCA2sybh+uoxRIF1y0jQ1bgH+QhkxyvaYRDviIz1lxiwC/nxS
jBKVTLVnjEEHFDrIyoxBycAsjCQrmUR7ATDLgI8SxUJhlKgk0Y5uFNDNwVVg
5CEcKyl0CSEpeS6b0rQG4COMq7XMJl8WbShbSOLhOHmIuOx4aSy7NPix8kqU
6rDmlVwTdTdlrpluNuiMB/cQGeTydZrmfP4ZduPCgyApRL6Y7KJOo9ST7WeN
4w5aWQH86SHG3AX8KYqDlWQS7QXArAL+ZNExSlSSaF8DfHTjVmbMOuCjjfjS
MEokr9wjDWYD8NGZOfQYJSr3gOQ1g/YiY+LXKO3PRrTmLJJQNtnLyp4+pTRZ
SVObZEuGQ1ab1GeJJkPZVCR7lgVD2xJkkp5sAj7y/yowDwB/NClG2Qcz1Z4x
Zgvwm2XEKFHZBpLoPqjMmB3AN+0RmWKUqOTl0UPAN5UGyobZBXzTLs5ilEhm
qj1jzCPANz2eS1iM9Egux2IkX3jETyrZ9CSJa+OxHAJBsPLG5YSiWSV+ds8+
HQ6Mp69L6kwrCZrVbUIMF1q42dN4hkqWpgqxTcnSaiJm7ZhtTTOySq3CsJfA
nySYx5bL5tIwyq6el0dPNLNBUrvDIbcPox4Z1H28IlQ9OYg8jTicB78aHRCT
kmfiS6Le0iztEHUoKNnJ14KKPA70oiregRAdaML7xnI6v7KUQ22VoXRSDnw9
MF8g147wzO/QtAgmzUF6u+hN547Gg4joYX4jhDyNmqfhgT0ym3oprkG+HNM5
l8IXBDJY8GzElAVv/056sB1t6YQuPJJ/b/KS7I3FBo+phbVrJEfCkmu8ZDMs
6T/38xMhGeMPUhq+HY/KpqgtqBajqNpqQVXINHLDiPXv6lIFIygdo4ea/wde
O/BoAbVodsvsT55uv3jxKRKXe43ci+S6bgjqhaDGBPWdV4HCv0HKZFhHBHVf
UE1ByeU8TkYXBCX3hGlBNXlTM+TtKs2bRTIwTwbaZEAOx5Sg5Juma4TABmbJ
wBL1YJ2Go0EGZI7aEtRnXtk8KZsjZXuk7McA0CUHIyomCfibt7NIdoLV9IcX
XyLxBmnv+W0spk2YahhT5zErhJF/j/KSprMuNt/qBB3kS9rw/2hO5S+MwypT
\
\>"],
 ImageRangeCache->{{{0, 359}, {221.375, 0}} -> {0.45274, -14.7238, 0.0340262, \
0.000148924}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"PrintRange", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "[", 
      RowBox[{"[", "7", "]"}], "]"}], "&"}], "/@", 
    RowBox[{"Log", "[", 
     RowBox[{"Abs", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"#", "-", 
          RowBox[{"Take", "[", 
           RowBox[{
            RowBox[{"linctor1", "[", 
             RowBox[{"[", 
              RowBox[{"-", "1"}], "]"}], "]"}], ",", 
            RowBox[{"Length", "[", "#", "]"}]}], "]"}]}], ")"}], "&"}], "/@", 
       "linctor1"}], "]"}], "]"}]}], "]"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Graphics", "::", "\<\"gptn\"\>"}], 
  RowBox[{
  ":", " "}], "\<\"Coordinate \\!\\(Indeterminate\\) in \\!\\({10, \
Indeterminate}\\) is not a floating-point number. \\!\\(\\*ButtonBox[\\\"More\
\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"Graphics::gptn\\\"]\\)\"\>"}]], "Message"],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
-0.0820106 0.10582 0.485602 0.050643 [
[.34127 .4731 -3 -9 ]
[.34127 .4731 3 0 ]
[.55291 .4731 -3 -9 ]
[.55291 .4731 3 0 ]
[.76455 .4731 -3 -9 ]
[.76455 .4731 3 0 ]
[.97619 .4731 -6 -9 ]
[.97619 .4731 6 0 ]
[.11713 .08046 -12 -4.5 ]
[.11713 .08046 0 4.5 ]
[.11713 .18174 -12 -4.5 ]
[.11713 .18174 0 4.5 ]
[.11713 .28303 -12 -4.5 ]
[.11713 .28303 0 4.5 ]
[.11713 .38432 -12 -4.5 ]
[.11713 .38432 0 4.5 ]
[.11713 .58689 -6 -4.5 ]
[.11713 .58689 0 4.5 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.34127 .4856 m
.34127 .49185 L
s
[(4)] .34127 .4731 0 1 Mshowa
.55291 .4856 m
.55291 .49185 L
s
[(6)] .55291 .4731 0 1 Mshowa
.76455 .4856 m
.76455 .49185 L
s
[(8)] .76455 .4731 0 1 Mshowa
.97619 .4856 m
.97619 .49185 L
s
[(10)] .97619 .4731 0 1 Mshowa
.125 Mabswid
.18254 .4856 m
.18254 .48935 L
s
.23545 .4856 m
.23545 .48935 L
s
.28836 .4856 m
.28836 .48935 L
s
.39418 .4856 m
.39418 .48935 L
s
.44709 .4856 m
.44709 .48935 L
s
.5 .4856 m
.5 .48935 L
s
.60582 .4856 m
.60582 .48935 L
s
.65873 .4856 m
.65873 .48935 L
s
.71164 .4856 m
.71164 .48935 L
s
.81746 .4856 m
.81746 .48935 L
s
.87037 .4856 m
.87037 .48935 L
s
.92328 .4856 m
.92328 .48935 L
s
.07672 .4856 m
.07672 .48935 L
s
.02381 .4856 m
.02381 .48935 L
s
.25 Mabswid
0 .4856 m
1 .4856 L
s
.12963 .08046 m
.13588 .08046 L
s
[(-8)] .11713 .08046 1 0 Mshowa
.12963 .18174 m
.13588 .18174 L
s
[(-6)] .11713 .18174 1 0 Mshowa
.12963 .28303 m
.13588 .28303 L
s
[(-4)] .11713 .28303 1 0 Mshowa
.12963 .38432 m
.13588 .38432 L
s
[(-2)] .11713 .38432 1 0 Mshowa
.12963 .58689 m
.13588 .58689 L
s
[(2)] .11713 .58689 1 0 Mshowa
.125 Mabswid
.12963 .10578 m
.13338 .10578 L
s
.12963 .1311 m
.13338 .1311 L
s
.12963 .15642 m
.13338 .15642 L
s
.12963 .20707 m
.13338 .20707 L
s
.12963 .23239 m
.13338 .23239 L
s
.12963 .25771 m
.13338 .25771 L
s
.12963 .30835 m
.13338 .30835 L
s
.12963 .33367 m
.13338 .33367 L
s
.12963 .35899 m
.13338 .35899 L
s
.12963 .40964 m
.13338 .40964 L
s
.12963 .43496 m
.13338 .43496 L
s
.12963 .46028 m
.13338 .46028 L
s
.12963 .51092 m
.13338 .51092 L
s
.12963 .53624 m
.13338 .53624 L
s
.12963 .56157 m
.13338 .56157 L
s
.12963 .05514 m
.13338 .05514 L
s
.12963 .02982 m
.13338 .02982 L
s
.12963 .00449 m
.13338 .00449 L
s
.12963 .61221 m
.13338 .61221 L
s
.25 Mabswid
.12963 0 m
.12963 .61803 L
s
.5 Mabswid
.02381 .60332 m
.12963 .23121 L
.23545 .16987 L
.34127 .13196 L
.44709 .12249 L
.55291 .07387 L
.65873 .09775 L
.76455 .01472 L
.87037 .08276 L
s
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
 ImageSize->{288, 177.938},
 ImageMargins->{{43, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztW1tLFVEUHj0e75pmpnk9al5ST5pZmSUlljcQgp57EAn0ISovFBURREQE
BdFPCSIiiAjpQhZd6C711GMQQRDBydkzrjN75lt7xjkXPdGBhmmt7/vWmr33
rH2ZGhufnTx6bHx2amI8NDQ9fmJyamImNHh8eskUSNO0tElN0xZDmn4fWbo1
L1u1SCSiBTTxl6U78Ue/9ohbzZM/YOitkLVC/1dgO8zDv4hrBtnMn4KxqF/T
dUsG8B7iiZ+BLUhiCuInYMsGtjFe4iOw5VJsK1Fg3pNrHSCO8nHeAVsRiSmI
b4GtBNiGeIk3FKeM7hTw18C2CdgO8BKvgK2SYiuIL4GtBtj6eYkXFKee7hTw
58C2mYj77ANgAcCbgW0vH/EZsG2hiAriUwIh726e+ATYOkhMQXwMbF3AtpOX
eARs3RTbJIoGF7UmE8DnbanK3u2GRANwpQNbANhuUvgw8PZS+DiEukFiokgG
9Ts0fvqArdMIL16kTN2BgrKJiOe7TuHzyFYnvybirtNLv1wjeDE9SyXADQBb
OPamvEovZTmFLwW42dhDXaEnDVEoNAHMeWm2yyTWTLgcsp3mX6VLBApTFihb
hcRFkuim1jvLwy8Q6BYPOk+aty0ggTlHrjs8/wyB7vKgU6R5jwfNkdJ9HjRD
oAc86CSBHvKgKf2arVvmedAR/ZqvWxZ4kFjjFOiWD/YmHKYg33j+QYJ/50ED
9Ew/eNB+UvrJg/oI9IsH7aFwv3lQDyn94UE7CBThQV0yKGBvx05KR/gzeaWw
rJTNI1tlZB6PbJGjF/LIRlmziEc2yJrGotDCR7WnTuYY5dKoV1pQQgrH0i8I
VGpllTJ/KtWyirHEtMxuATc9UTnRhGPVU9fiCjmHKuuTyMgsYCuX2TWWHrAh
UewyLnNTp4l6ErVeqRy7jh8nJTKygUcWy8hGHlnE5a7gFMrqLRakAObL/lZe
KVdGtvPIHC5PBSdLVu/gkUEZuY1Hoh2xGyddVu9WIZdB1oV4tIjEdNYQltPo
jZe13RY33v428FyOh28ze8cKgjqxQlrNASO1Msg63jhRRERm7BA0m8K+C0kU
x7Z9ySJOBuW+y0CiMiyGEaqH1hC+iY22jjR/brQmGuCozqsaLKKqDUnmNAG/
pydHHMeb5kfd60yaKhyv64rV4KDtcTbsSRbpRz3OnHrgZ9cASebUAX9uMjmO
nvSjHgL+vDXCqQX+fE8cee6OmIcrbu+zwcWTMDqYcavAKH90ROX2LkenWBRR
PJVjskWn7Kg+u9VspIPa0a0tqoFftSN06yukl0FvhVuLInZhAjhVwI8OGhPG
cdQItL9md38pwKkA/uI1wkFf2db75Th6Mq7qCk458KMvliOU5bB8J2qT+EgY
PeK2bGE8BxgFtkFxxSVkEOBR+UXfM7x+ikn7Zx4BHV9t4NIVk9FQaiVupOvY
1UeHaPTOa/YJzsoGRbZkt2kAJaf/Rthncw/aT8poFaFIcyNwoU+GIrnov8wI
0Ohle9tRpLyGslZOPxzkRzqpwkFjnj0pNzliROn/Pmu5n9E2EW3P0PBBC4j/
tthsxvIaznBoJkS1IRbbCsNbh1ayOGhRhRZfq8FBy1axvHUsMVmkH/U4c9C4
ZD8eJpmDtmtoi5YwjqMn/aijzS3aBK8GpwD40VFFqnDQsVYt7EkW6UddwUGH
c6E1zBGLE0/HfOhI1FjG+DuKQnpoieN2KIV00DyDD/zQegjVULcDP6SD6p3b
gR/SKYuhlZFeOb0hbm2LVpDog0SsnLX5/we0tL8FeoPP\
\>"],
 ImageRangeCache->{{{0, 359}, {221.375, 0}} -> {0.764329, -9.58879, \
0.0329782, 0.068909}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Flatten", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Take", "[", 
      RowBox[{
       RowBox[{"Last", "[", "linctor1", "]"}], ",", "50"}], "]"}], 
     "\[LeftDoubleBracket]", "#", "\[RightDoubleBracket]"}], "&"}], "/@", 
   RowBox[{"Position", "[", 
    RowBox[{"nm", ",", "1"}], "]"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "14.55288862401047`"}], ",", 
   RowBox[{"-", "14.622981173105822`"}], ",", 
   RowBox[{"-", "14.622981173907569`"}], ",", 
   RowBox[{"-", "48.80302685831628`"}], ",", 
   RowBox[{"-", "48.80302688407419`"}]}], "}"}]], "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\:0412\:0438\:0437\:0443\:0430\:043b\:0438\:0437\:0430\:0446\:0438\:044f\
", "Subsubsection"],

Cell[CellGroupData[{

Cell["\:041d\:043e\:043c\:0435\:0440\:0430 \:043c\:043e\:0434", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nm", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"NumMode", "[", 
     RowBox[{"GetEigenWaveM", "[", 
      RowBox[{"mat", ",", "5", ",", "5", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Kappa]", "\[Rule]", "0"}], ",", 
         RowBox[{"\[Omega]", "\[Rule]", "0"}], ",", 
         RowBox[{"G", "\[Rule]", "4"}], ",", 
         RowBox[{"\[Epsilon]", "\[Rule]", "0"}], ",", 
         RowBox[{"Re", "\[Rule]", "1"}]}], "}"}], ",", "#"}], "]"}], "]"}], 
    "&"}], "/@", 
   RowBox[{"Range", "[", "50", "]"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "4", "}"}], ",", 
   RowBox[{"{", "4", "}"}], ",", 
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "5", "}"}], ",", 
   RowBox[{"{", "5", "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "4", "}"}], ",", 
   RowBox[{"{", "4", "}"}], ",", 
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "5", "}"}], ",", 
   RowBox[{"{", "5", "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "4", "}"}], ",", 
   RowBox[{"{", "4", "}"}], ",", 
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "5", "}"}], ",", 
   RowBox[{"{", "5", "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "4", "}"}], ",", 
   RowBox[{"{", "4", "}"}]}], "}"}]], "Output"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "2", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "2", ",", "2", ",", "0", ",", "3", ",", "3", ",", "2", ",", "2", ",", 
   "0", ",", "1", ",", "1", ",", "4", ",", "4", ",", "3", ",", "3", ",", "5", 
   ",", "5", ",", "4", ",", "4", ",", "1", ",", "1", ",", "2", ",", "2", ",", 
   "0", ",", "6", ",", "6", ",", "5", ",", "5", ",", "7", ",", "7", ",", "3", 
   ",", "3", ",", "6", ",", "6", ",", "2", ",", "2", ",", "0", ",", "8", ",", 
   "8", ",", "7", ",", "7", ",", "1", ",", "1"}], "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False]
}, Open  ]]
}, Closed]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"v\[Zeta]si", ",", "\[Psi]si"}], "}"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Rho]", ",", "\[Phi]"}], "}"}], ",", "#"}], "]"}], "&"}], "/@",
     
    RowBox[{"Simplify", "[", 
     RowBox[{
      RowBox[{"Map", "[", 
       RowBox[{"Re", ",", "ew", ",", 
        RowBox[{"{", "3", "}"}]}], "]"}], ",", 
      RowBox[{
       RowBox[{"\[Phi]", "\[Element]", "Reals"}], "\[And]", 
       RowBox[{"\[Rho]", ">", "0"}]}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.398664187101*^9, 3.398664227545*^9}, {
  3.4059402495889997`*^9, 3.4059402497650003`*^9}}],

Cell[CellGroupData[{

Cell["\:0417\:0430\:0432\:0438\:0441\:0438\:043c\:043e\:0441\:0442\:044c \
\:043e\:0442 \:0440\:0430\:0434\:0438\:0443\:0441\:0430", "Text"],

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"v\[Zeta]si", "[", 
    RowBox[{"r", ",", "0.4"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"\[Psi]si", "[", 
    RowBox[{"r", ",", "0.4"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.398664384451*^9, 3.398664389709*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["\:0417\:0430\:0432\:0438\:0441\:0438\:043c\:043e\:0441\:0442\:044c \
\:043e\:0442 \:0443\:0433\:043b\:0430", "Text"],

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"v\[Zeta]si", "[", 
    RowBox[{
     RowBox[{"1", "/", "4"}], ",", "\[Phi]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Phi]", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"\[Psi]si", "[", 
    RowBox[{
     RowBox[{"1", "/", "4"}], ",", "\[Phi]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Phi]", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.405940278135*^9, 3.405940279885*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["\:0414\:0432\:0443\:043c\:0435\:0440\:043d\:044b\:0435 \:043a\:0430\
\:0440\:0442\:0438\:043d\:043a\:0438 - Density", "Text"],

Cell[BoxData[{
 RowBox[{"g1", "=", 
  RowBox[{"PolarDensityPlot", "[", 
   RowBox[{
    RowBox[{"v\[Zeta]si", "[", 
     RowBox[{"r", ",", "f"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", "f", "}"}], ",", 
    RowBox[{"PlotPoints", "\[Rule]", "30"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"g2", "=", 
  RowBox[{"PolarDensityPlot", "[", 
   RowBox[{
    RowBox[{"\[Psi]si", "[", 
     RowBox[{"r", ",", "f"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", "f", "}"}], ",", 
    RowBox[{"PlotPoints", "\[Rule]", "30"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.3914128321798*^9, 3.3914128333608*^9}, {
  3.405941189082*^9, 3.405941227189*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:0414\:0432\:0443\:043c\:0435\:0440\:043d\:044b\:0435 \:043a\:0430\
\:0440\:0442\:0438\:043d\:043a\:0438 - Contour", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"g3", "=", 
  RowBox[{"PolarContourPlot", "[", 
   RowBox[{
    RowBox[{"v\[Zeta]si", "[", 
     RowBox[{"r", ",", "f"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", "f", "}"}], ",", 
    RowBox[{"PlotPoints", "\[Rule]", "50"}], ",", 
    RowBox[{"Contours", "\[Rule]", "30"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"g4", "=", 
  RowBox[{"PolarContourPlot", "[", 
   RowBox[{
    RowBox[{"\[Psi]si", "[", 
     RowBox[{"r", ",", "f"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", "f", "}"}], ",", 
    RowBox[{"PlotPoints", "\[Rule]", "50"}], ",", 
    RowBox[{"Contours", "\[Rule]", "30"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.3914128384547997`*^9, 3.3914128393308*^9}, {
  3.405941257781*^9, 3.405941274067*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
PzD/wPwD8w/MPzD/wPwD8w/MP/Z95x/Lr/OP5c/5x/R9/jF7OP+YvZx/zJ7O
P2Zv5x+zx/OP7BMtv9kX131A3ffQdd5d19p1fF231HUanZfuPFznHTrO2nGl
9qPbb2g7qfVC/QD3l39g/oH5B+YfmH9g/oH5B+YfmH9g/oH5B+YfmH9g/oH5
B+YfmH9g/oH5B+Yf+77zj+XX+cfy5/xj+j7/mD2cf8xezj9mT+cfs7fzj9nj
+Uf2TZff7BPtvrjuA+q+h67z7rrWruPruqWu0+i8dOfhOu/QcdaOK7Uf3X5D
20mtF+oHuL/8A/MPzN4xe8fsHbN3zN4xe8fsHbN3zN4xe8fsHbN3zN4xe9/3
nb3v+8/eMXuf/s7ep9+z9+n/7H32cfY++zl7n32dvScuQPnNPuju++w+t+7r
6T6GrtvuOtWuy+s6pK676Dxz59U6j9Bx044TtV/cfkDbPS3na9eYvWL2itkr
Zq+YvWL2itkrZq+YvWL2itkrZq+YvWL2itnr8v/sdfo5e53+zl6n37PX6f/s
dfZx9pq4FeU3+/S7L7n7MLvvrPtsuq+g66i7brTr5LouqOsgOu/bea6O63cc
s+M27ae2Xd52CGaPmD1i9ojZI2aPmD1i9ojZI2aPmD1i9ojZI2aPmD0uf88e
l/9nj9PP2eP0d/Y4/Z49Tv9nj4mbUn4TJ6L74rsPuPseu8+r+1q6jr/rlrtO
s+vSug6n6w46z9p5pY6jd9yw4yTtF7YdjNkjZo+YPWL2iNkjZo+YPWL2iNkj
Zo+YPWL2iNkjZo/L37PH5f/Z4/Rz9jj9nT1Ov2eP0//ZY+L2lN/EKWlchu5D
777b7jPsvqruI+m6+a4T7rrIrgPrupfO83des/M4HbfuOF3HJTD7w+wPsz/M
/jD7w+wPsz/M/jD7w+wPsz/M/jD7w+xv+Xn2t/w++5s+zv6mr7O/6fPsb/o+
+0ucqPKbuDiNA9K4B93n3X2t3cfXfUvdp9F16V2H23WHXWfVdSWdR++8YedJ
Oi7ccTDM/jD7w+wPsz/M/jD7w+wPsz/M/jD7w+wPsz/M/jD7W36e/S2/z/6m
j7O/6evsb/o8+5u+z/4Sl6z8Jg5T4840zkbjCnQfdfeNdp9c9wV1H0TXfXed
a9f1dR1T1210nrrzcp2H6Lhrx5kwe8TsEbNHzB4xe8TsEbNHzB4xe8TsEbNH
zB4xe8Tscfl79rj8P3ucfs4ep7+zx+n37HH6P3tMXLzymzhgjXvUOC+Na9F9
/N233H2a3ZfWfTjdd9B11l1X2nV0XTfUdRKdF+48WMf9O86J2SNmj5g9YvaI
2SNmj5g9YvaI2SNmj5g9YvaI2SNmj8vfs8fl/9nj9HP2OP2dPU6/Z4/T/9lj
4jKW38Sha9ytxhlqXJXGkei++e4T7r7I7gPrvpeu8++65q7j7Lq1rtPpuoTO
w3beqePsHYfE/WWvmL1i9orZK2avmL1i9orZK2avmL1i9orZK2avmL0u/89e
p5+z1+nv7HX6PXud/s9eZx9nr4kbWn4TJ7Fx4RoHq3F/GuekcR26j737drtP
sfuyug+l6+67zrjrKruOrOtmuk6g86KdB+o4ecchOw7Uer/lbu0a95e9Y/aO
2Ttm75i9Y/aO2Ttm75i9Y/a+7zt73/efva8fePY+/Z29T79n79P/2fvs4+x9
9nP2Pvs6e09c3PKbOKCNe9g4b41r1Tg+jVvSOA3dl959uN132H1W3VfSdfRd
N9x1kl0X1nUwnffvPGfngTrO3nHOjjO1399+WNvBbYe0nK8f4P7yD8w/MP/A
/APzD8w/MP/A/APzj33f+cfy6/xj+XP+MX2ff8wezj9mL+cfs6fzj9nb+cfs
8fwjcaLLb+LiNg5o4x42zlvjWjWOT+OWNE5D96V3H273HXafVfeVdB191w13
nWTXhXUdTOf9Oy/aeaeO+3fcteNgHZdov7Dt8rZ7Wi/UD3B/+QfmH5h/YP6B
+QfmH5h/YP6x7zv/WH6dfyx/zj+m7/OP2cP5x+zl/GP2dP4xezv/mD2efyRu
evlNnOjGxW0c0MY9bJy3xrVqHJ/GLWmchu5L7z7c7jvsPqvuK+k6+q4b7jrJ
rgvrOpiuE+g8bOfBOg/RceGO03WcpP3U9gPaTmq9UD/A/eUfmH9g/oH5B+Yf
mH9g/rHvO/9Yfp1/LH/OP6bv84/Zw/nH7OX8Y/Z0/jF7O/+YPZ5/5ByB8pu4
6Y0T3bi4jQPauIeN89a4Vo3j07gljdPQfendh9t9h91n1X0lXUffdcNdJ9l1
YV0303UJnRfuvFznSTpu3XHDjtu0X9x+Q9tJrRfqB7i//APzD8w/MP/A/APz
j33f+cfy6/xj+XP+MX2ff8wezj9mL+cfs6fzj9nb+cfs8fwj52qU35wj0Ljp
jRPduLiNA9q4h43z1rhWjePTuCWN09B96d2H232H3WfVfSVdR991w10n2XVk
XafTdRKdp+68YedxOo7eccyOE7Uf3X5D20mtF+oHuL/8A/MPzD8w/8D8Y993
/rH8Ov9Y/px/TN/nH7OH84/Zy/nH7On8Y/Z2/jF7PP/IOTPlN+dq9ByBxk1v
nOjGxW0c0MY9bJy3xrVqHJ/GLWmchu5L7z7c7jvsPqvuK+k6+q4b7rrKrlvr
uqGu2+g8euc1O6/Ucf2Om3Zcqf3o9hvaTmq9UD/A/eUfmH9g/oH5x77v/GP5
df6x/Dn/mL7PP2YP5x+zl/OP2dP5x+zt/GP2eP6Rc5fKb86Z6bkaPUegcdMb
J7pxcRsHtHEPG+etca0ax6dxSxqnofvSuw+3+w67z6r7SrqOvuuMu46z6+i6
jqnrSjrP33nWznN1HqHjrB1Xaj+6/Ya2k1ov1A9wf/kH5h+Yf+z7zj+WX+cf
y5/zj+n7/GP2cP4xezn/mD2df8zezj9mj+cfOYes/ObcpZ4z03M1eo5A46Y3
TnTj4jYOaOMeNs5b41o1jk/jljROQ/eldx9u9x12n1X3lXTdfdc1d11p1/V1
nVXXvXTdQed9O6/WeYeOs3Zcqf3o9hvaTmq9UD/A/eUfmH/s+84/ll/nH8uf
84/p+/xj9nD+MXs5/5g9nX/M3s4/Zo/nHzmXr/zmHLKeu9RzZnquRs8RaNz0
xoluXNzGAW3cw8Z5a1yrxvFp3JLGaei+9O7D7b7D7rPqPpSu8+86665z7brD
rgPrOpyug+g8c+fhOu/QcdaOK7Uf3X5D20mtF+oHuL/8Y993/rH8Ov9Y/px/
TN/nH7OH84/Zy/nH7On8Y/Z2/jF7PP/IOZXlN+fy9RyynrvUc2Z6rkbPEWjc
9MaJblzcxgFt3MPGeWtcq8bxadySxmnovvTuw+2+w+7L6r6X7jvouu+uw+26
yK5L67qgrrvovHTn4Trv0HHWjiu1H91+Q9tJrRfqB7i//GP5df6x/Dn/mL7P
P2YP5x+zl/OP2dP5x+zt/GP2eP6Rc1vLb86p7Ll8PYes5y71nJmeq9FzBBo3
vXGiGxe3cUAb97Bx3hrXqnF8GrekcRq6L737cLtPsfvAug+n+yC6Lr3rhLtO
s+vkug6p6zQ6L915uM47dJy140rtR7ff0HZS64X6wb4vv1uPKn+sR6Vv61HZ
g/Wo7MV6VPZkPSp7sx6VPVqPerz1qB/zm3Nbe05lz+XrOWQ9d6nnzPRcjZ4j
0LjpjRPduLiNA9q4h43z1rhWjePTuCWN09B96d23232R3ZfWfUHdp9F18123
3HWjXZfXdUtdp9F56c7Ddd6h46wdV2o/uv2GtpNaL9QPll/53X4++rafjz3Y
z8de7OdjT+cfszf7+dij/XzH/OPpnG/+0XNbe05lz+XrOWQ9d6nnzPRcjZ4j
0LjpjRPduLiNA9q4h43z1rhWjePTuCWN09B97N0n3H2a3SfXfUvdR9J1/F1H
3XWqXcfXdUtdp9F56c7Ddd6h46wdV2o/uv2GtpNaL9QPlj/53f4u9mB/F3ux
v4s92d/F3uzvYo/2dx3zj6dz7/lHzzHuua09p7Ln8vUcsp671HNmeq5GzxFo
3PTGiW5c3MYBbdzDxnlrXKvG8WncksZ16L757lvuvtHu4+u+qu5r6b6Crtvu
utau4+u6pa7T6Lx05+E679Bx1o4rtR/dfkPbSa0X6gfTd34XH5y9nH/Mns4/
Zm/ig7PH8w/MP8Jvzrnvud49x7jntvacyp7L13PIeu5Sz5npuRo9R6Bx0xsn
unFxGwe0cQ8b561xrRrHp3FOGkei+/i7j7r7WrvPsPu8us+m+xi6zrvrWruO
r+uWuk6j89Kdh+u8Q8dZO67UfnT7DW0ntV6oH8we8rvzJdjT+cfszfkS7PH8
A/OP8PYd84+ec99zvXuOcc9t7TmVPZev55D13KWeM9NzNXqOQOOmN0504+I2
DmjjHjbOW+NaNe5P46o0rkXjCnSfd/fddt9j9511X0/3PXSdd9e1dh1f1y11
nUbnpTsP13mHjrN2XKn96PYb2k5qvVA/mL3kd+cTsTfnE7HH8w/MP8Lbh88/
8M63O+659z3nu+ca9xzXnlvZc/p6LlnPYeq5Mz1no+cKNI5640Y3Tm7jgjYO
YuO+NS5W4w417kvjbjQOQveld19w92V231v3BXUfRNd9d51r1/V1HVPXbXSe
uvNynYfouGvHmdqvbj+i7abWE/WL/u58O/Z4/oH5R3hxKfgH3vmoxzsfNefc
91zvnmPcc1t7TmXP5es5ZD13qefM9FyNniPQuOmNE924uI0D2riHjQvXuFuN
e9S4M40D0rgM3Rfffcnd99l9cd0H1H0PXefdda1dx9d1S12n0XnpzsN13qHj
rB1Xaj+6/Ya2k1ov1A9mb/nd+ajH/CO8OC38A+987eOdr32887WPe+59z/nu
ucY9x7XnVvacvp5L1nOYeu5Mz9nouQKNo9640Y2T27igjZvYuHSNC9a4TI2T
07gljRvRffvdF919o90n131B3QfRdd9d59p1fV3H1HUbnafuvFznITru2nGm
9qvbj2i7qfVE/aK//CO8uEX8A/MPzD8w/8D8A/fc+57z3XONe45rz63sOX09
l6znMPXcmZ6z0XMFGke9caMbJ7dxRBunsXHyGqescaMax6dxVBrHonECuo+6
+0a7T677groPouu+u8616/q6jqnrNjpP3Xm5zkN03LXjTO1Xtx/RdlPrifpF
f18+/5t/9J3f+/v4S6+/n0Q+/tJLfv3wu5/5ku/f++4/etHf+/FPe9HPp+/+
2Ev6v7j0+Ne85O9fffcfvFz3paXH5H/mRe//1+TYe/yjL3b1p5Yek/+6Fzv6
7skx+R98+f0/Jse/7pU/+c9f038iP3DzSf7hp9/mY6/Dyh/5qXySf8ov+YXl
j/JOfmDfj30ve+n31W6851cf9lWL/tF3fn/k9ffx7/31nU3Xv/f5fY705P7u
/Rfn9/S7uJUf8Jd8tb304rff/e6Dt/2MH/uj47Wnjj3n4TuWX4sjfM/D7v8t
Lzf+k3s+Jq9+mp5c+q99KZc+i/dPLh+8v/fr93o//uV69oRfiqsv/sjex/3L
Te957s8eMX28XP51n6X/xpd0f2Dpvvjy/u/GP/FF/p3jv/XiIL9j/JIdP/vd
P4l/1Uv63/EJ/ubX68d//fX+nzQflFv8BP97L373R8beF/+mV/kn+Pterx+v
XDnmx8pRfozlG/Z++Adf03+ClRP/2It6f/DdT335ri+PPQ/7Hux7sPzH8h/L
fyz/sfzH8h/Lf/zzXp8/lp/4m16/Z6yc/Asv+fBX9v1Y/mH5h+kXyw9MX/hn
v95v/HNenz/+yotd/+V3v+6l3fED7379y/VfGXtfTD+YfjB7wL4Hr9469v6Y
PjF9YvrE9InpE9Mnpk9Mn5g+MX0uf16/d/xNL+m/b7/yE9Mvln9YfmH5hekf
yz8sv7D8wvILyy8sv7D8wvILyy/M3jB72/tfPjVfMHvD7A3LPyz/MPvD8nN2
ffmH5R9mf1h+YvmJ5SeWn1h+YvmJ5SdmX1j5i/kr5rf10+Yj7q/8xPITy08s
PzH73PMvf7H8xfIXy18sf7H8xfIXy18sf7H8xfwZy2/MXrHyGj+V25g9125x
f+U/lv9Y/mP5j+X/yuXLfyz/sfzH8h/Lfyz/sfzH8h/Lfyy/sfzGygusPMU/
8Jq/Y/kv39h7y9WWE7Xz5jvuL31g+sD0gelj73f6wPSB6QPTB6YPTB+YPjB9
YPrAymtMP5g+sPYZ/lmv+TvWbms7DfOPthNa77UcbzlUv6hecH/pC9MXpq+9
3+kL0xemL0xfmL4wfWH6wvSF6QsrvzD9YfrD6gv81E7H9IPpo/Vo64GWS/WL
5jvuL31g+lg78vSB6QPTB6YPTB+YPjB9YPrA9LHxitMHlv9Y/mP1CVZ/4/ev
+Tt+Lf/ej+lPPvEvTH9tZ7cd2XZQ6/HWKy3X6jfVG+4vfe79Tp+YPjF9YvrE
9InpE9Mnpk9Mn5g+Mf/C9IvpF6ufMH2134vpr/269ova7sf013ZX2wGth1rO
1c+qJ9xf+sP0h+kP0x+mP0x/mP4w/WH6w/SH6Q/T1/Lr2heYP2L12/L7VZ9j
+u04RvvlmD7bb2s/pO3mtuPajmg91XKyfla97f3yu/748frjx+uPH68/frz+
+PH648frjx+vP278Tn/8eP3x4/XHj9cfP6Zv/OXX/Borb5e/r/44pm9sXE2+
0Dfmzx2H6bhG++ntd7af1HZ7241tl7RebLlaP62ecX/pH9M/pn9M/5j+Mf1j
+sf0j+kf0z/WXsXqW6z9in/Ta/6Of8OrfsbsAdN/x00xe+g4ZMfhOq6F2UPH
HdpPbr+t/Ya2S9suar3acrp+Xr3j/rIHzB4we8DsAbMHzB4we8DsAdP/8vP1
+8f8HyvvsfL+4+s/HZsP6bh+x8077ozpv+OYHafrOFPHRdpPbz+x/ZC2g9uO
ar3ccr1+Xj3j/ip/Mf1g/rjvu/p4+XH6w/SHld+Y/rD22Mf3f5/7fzqmX3ZL
n503wPTZceiOs3acsONaHWdpP7/9yPZj2g5uu6r1csvp+ilWn2L6xPSJlbeY
fne/K28x/WH6w/S3/Dr9LX9Pf5j+lDP0h5XPnffB9Nl5hI6Td5y345IdJ+s4
TccB2g9tP6bt4rarWs9i9SOmT0yfmD4xfWL63Peevy5/zl8xf8XK273P2QNm
D5g9YPbw8fPf5/mfjtmDeoY9YPaA6b/zRp0X6bh+x6E7LtpxuY77dNyh/db2
g9qObrsK0zemb0zfmL4xfe/7Tt/Lj9M3pm9M33uf0zemb0y/Hz/vfZ736Zh+
tRvoF9Mvpt/OA3aeq/M0nVfoOHfHWTuO13GkjkO0X9t+UdvJmH4x/WL6xfSL
6Xffd/pdfpx+Mf1i+t37nH4x/WLta0zfHz//fZ7/6Zi+tQvpG9M3pu/O83Ye
s/NwnTfqPEbH0TtO23HCjjN13KL93vaDMH1j+sb0jekb0/e+7/S9/Dh9Y/rG
9L33OX1j+sbKb0z/mP4/fp/3eZ9Px/SvH0D/mL47j9956s6zdl4Q0zfeurXj
jgN3HLHjUh3XaD9XfY3pG9M3pm9M35i+932n7+XH6RvTN6bvvc/pG9M3pm9M
vx8//32e/+mYfvXr6LfrajB9d51G1yFg+sb0jem782KdZ8H033Hijjt23Krj
GO3HYvaA2QNmD5g9YPaA2cO+/+xh+XX2gNkDZg97n7MHzB4we8Ds4ePnv8/z
P/2k+u86Kkz/HZfH+nXNR9xf+YvlL5a/WP5i+bt1BZe/WP5i+Yvl797n8hfL
Xyx/sfz9+Pnv8/xPx8Yvui4N85+uQ+k6ic7jY/6D+Q/mP5j+MP21H9p+TNu5
bRe13my5Wr+qHeD+sg/MPjD7wOxj+Xf2sfw++8DsA7OPvcfZB2YfmH1g9S9m
L9PfjXd+/H7v836fjtmPfND+2rj7lccdB+o4Qvuh7ae0Xdt2T+vFlov14+oN
95c+MX1i+sT0iekT0yemz73P6RPTJ6ZPTJ+Y/rZO7OYvPn6fTz+pvrouFPN3
rD7D6rOOu3cctuN+HTfquEP7pe3HtJ3bdlDrwZbb9dPqGfeX/jH9Y/rfusfT
P6Z/TP97n9M/pn9M/5j+t27q9D/9nf67Ttt3KK8x/WL6w/TXcb6OE3Ucof3O
9kvabm27pfVsy9X6ZfWE+0t/W+d3+ts61dMfpj9Mf3uf0x+mP0x/WPk7fZz+
MP1h+vPe/BPTX+e5MH123L3jtB3n6zhQxw3ar2y/o+3OtpNaL7ZcrZ9Vb7i/
9InpE9Mnps+9z+kT0yemT0yfHz///Zg+8dbr3ntqb+GtezvuuoXNEx9vnvC4
8yofj6N/6c04bsf5Oi7UcYP2K9uvaDu47Z7Wmy1H65fVa3+3PveYfjH9YvrE
ylNMnx8/5/0n1Yfnbl7/Cx/PO+KP5y2+/GbcvOOqHYfrOE378e3Htd/Rdmbb
Ka23Wg7Wj5rv/ZX/WP7vfc6/MH1g/oXpBysvP36f92P9mdnB9Vew/gnWH8H0
i+m388idl8T03XmQjpN3XLXjbh2Xab+8/cj2G9rubDuk9VrLxfpR9Yr7S997
n9M3pl/M3zD9Vh/uSx+dx8f00Xmnzkt0HLvjnB0H6zhI++3tp7Wd33Zf2xGt
h1pu1Y+az7i//AvLfyz/8frjpzf533UzWP53Xq/zPp0n6Dhyxxk7ztRxkfaD
249qu7rttNbzePVWyqna8Z6f3/XHj9f/Pl7/+1h7vOuAsfzG8rvz6J1H7Txb
52U6bt9x3Y7rdRyq4w7tt7Yf03ZU62Esf2u3zVfMnrH8xl3Xqf/adQedd8by
D8u/znN0HLzjoB23a7++/bz2G9rubD3ZcrX5gvurfpRv7A8rDzD7w8pbLD+x
/MTys/OCnSfC8hPLTyw/O87VcRIs/9ruazujflu7wuyJX/NX7PmYftsPbD+i
9WLL6ZYjePtkrh7durHjrTs63rqV461jON689/HmRY83b3a8eZXj7f/KOGPH
rfD2f6Wd13YB3j6Gawd+3F96n/7E+zf9tLbzty73+m1bl3nse/DGyTPu1nGY
9utx1zV1XUvXQXSevPOmnWfrPEvnBcTH6brGnavw8n3/4+Ti5WDxchbv4OX6
37hxYvFysHg5uPMS2LiHOA9ddy/OiPg/5OL/YPF3sPg7WPydjpOVjZuKV9R9
VOIsiV9ELk4EFs8Hs7+yfoz4Sd33KI6TeErkvr/rkKWnb3L6xfSL6XfrIE+/
mH4x/WLxkDB9YP5SXjyCi2/Ufl1ZevGnui9XnCv66L4bcvZGzr4we8HiNeGO
82DzIuIxkSu/y9KLt9V984ujffG3yNlD91lKz37J2Sv2vd234Hr2Rc6eMHvC
7Amzp62bPXvC7AmzJ8yeMHvqvFPZOJv4WYvXcPVLWfrtFzn5xitOLj5a4z74
O//tvmRy+d99euTsdfc/+8Tyv+vId27N6YOcPjB9bN3y6QPTB6YPvPokzE75
Czl/wRtfCrt+4w4nx+RrB58c108a12Rx5s9/Gidh5zRceUK+86eP+Zf0O4/6
5Dtv2vOv/pJ+50+ffOdPH+/86WP63TlEp1/ynUd9vPOoj3ce9fHOoz7+vHUz
O4/65DuP+vhpHnFxJ65+W35rf51854qeXHlYbr+FfO36kyvXsXJ2cdMvHxsv
g5z/Nm4AOX13XzQ5/ybnz4svcfbRfX+uZx/k7APTf/cVuJ49kLOHpT97wOwB
83es/H1aR8U+yDfeH5ZeeUC+9nl48TSuPdBx3XLHVchx40uQY/mn3dT4E4sj
fuVs43/sHJf7bdwPf1eeNK4BOfvpvmxy9rTnnz1136j07ImcPWHlDWZf3afi
fuyLnH0t/dlX11U+rbNkX7UnrLzB6hfMvtzvad6bXHtg+ae/GZZe/5scNz4G
OZZf7KtxzhZn++qrxjfZOQ5XXjW+yc5BObsl99zGO5HeLzl7bFwN6ZR35Oyz
cQKkZ5+Lz3L22X3M0rNPcva5+Jtnn933tnP2zl7J2Sdmn9tndfaJlX9Y+dd1
wJ7HXrvu7WkdHHslV/5h/cPab+eFF8/mmPxpnmvr8K7+3Psdk7PXjiPNfo7J
9XuxfuziYF/923gwO2fhys/Gg9k5PmfPjQdDTg+NB0POXhuHhJz9Nq4FOfvd
+539dt+99OyXnP1i9tt9mjsX8uyXnP1i9rt9gWe/mP1i9ovZ69O6ZuUtufL2
aR2n9h05Jld/k+PFm7nydfl73Hgp5Fh+qc/JMbn2IHnHuY37fexfn52TY5yp
8VjYFXvG7Hfn6lx53Xg6O7ftyufG0yFn342vQ+49yf29cXb8nb03bgs5e59+
zt4bV0J69k7O3rvvXHr2T87eMXvH7H37Xs/eMXvH7B2z967b9z7snZy9P61T
Vn6TK7/rD9Irzz+2ty+98Y+Px7G/NH5ap0DeeVv23/g0rsfrt5y9N34NO9H+
bfyhnfNx7ZXGHyJn7zt37crzxh/auYXnD41HRM7eG4+I3Hc1PhG538Yp8nf2
v/hJZ/+NoyI9+2+cDXL+QM7+uw9/5/6eP5DzB8wftu/7/AHzB8wfuk/J8/gH
OX/ovgrjpPyj6/bJ+Qe59gvuuuKuQ9UeX/5ffVD/2LjZyV1v/KDrGOovru86
B+0f6bH0/KfxgRZf61h6/sSutJcaH2rngFx7qfGhds7UtZcaH2rntF1903hR
7Sdi9UvjRZHzt8aPIudvjSdFLh8aX4rc777n/K1xiqTjb41jQ87fGtdk8dTP
/8j5W+MmLN76+R85/1v68z/M/zD/675A9+d/3TdGzh/J+SM5f9w6nfNHcv5I
rr56WtffdcX8s/LFqzp/bLylrqPzPvyv8Zikx9J33Yb+x+KdHUvP/7B5zMZz
Ymf8r/M+O6fq6rfG8+q47s4NNR8jfzLOp35rfC9y/th4X+Sb3zl5+yWb3zl5
23Gb7zl56zn51nhhm3e438YN8/fNH93ftz725Js/OvnWy55880kn33zSMf+U
fvNLJ9/8+ck33+R6803Hm2863nz6Xb/5p5Nvfv3km486+ebbT775qZNvvuTk
/LfxzOQb/218M3L+3H057q/9Sb71vSfffFj8e/q++rX+3nXPXSfbdYL7vmP3
7zq3rqvZuhzjmufv87/z98brYof8G2vPNn5b5z13buPVt43ftnNPr75tPLed
G3zlQeO77dztKw8a741cedD4b+TKg8aDI1ceND4cufKg8eLIlQeNH0dOD40n
R+63ceX8XXnQOGPkyoPGoSJXPjSuEbnygVx50Lgp0isfGneDXHlBrnzovn7p
lQ/d902ufGh8O/mgfJg/XflArnwgVz50H57ndZ9X9wmZX3E/50nV392v67L5
f+W464bV767H0nfdIf9vvLaP3++zc1eVB+zMeE7j+XXdzM7Zu/Z44/mRKw86
b9t5us6zdFy744QdR8H8tfH8yPlr4/vtfc9fG++PXL41/h+538YB9Hf+2jhx
5Py1ccfI+Ss5f13680/MHxs/0P34Z+MJkvPPxmHw3vyTvHEG+OfWwZ9/kvNP
cv7p+erv+iu5+vtpX2b3gfHn2d/Jp//zX8xfcfdRPK07l56/Yv1j6fHH7/M+
+9be5/0+OyfZeU6N18fO+G/XtWH+unNkrz3feIw7h/nq+8Zn3DnmV983XiO5
+r7xG8nV943nSK6+b3xHcvV94z2Sq+8b/5Fc+dF4kOTKj8aH3DqjKz8aL5Jc
+dH4keT02niS5H4bV9Lf+bO/89/6a+OAKGf4a+NMuD9/bdwCcv7afe3k/LX7
psn5J+4+ze4b7L4y9efe/9j9+Cfmn5g/fvz89+OuC+Zvym3+1nWjmL91HWDX
oXXdUtexdN1B53U7T4bZv/zqPAN7x+xd+o4LsXfy9kvXbjw5eydn7+TsnZz9
krNfzH6lZ7+zh7NfcvZLzn7J2S85+yVnr1j/UHr2O/1de5GcPZNrP9a+ydU3
tffKMXvH7B2zd8zeZ19n79Pv2Ttm79oh7B0bv218UXL233WvXXfZdXpdp9V1
NVj90Pii5OqHxhvtvBpWHzT+KDn/aDzSfc/5R+OTkvOPxislZ+/k7LtxfqRn
340bQ86esfK4cSrI2fPy/+x333f2itknZp+YfWL2ibuvjH1+/Pz3ef6nY/ap
Xcw+MXvE7LHrrrvut+tEu06w67q6jqbrEjpv23mrjqN3nA6zn8Y7JWcfmD1g
5V3jypCzB8we9v1nD8uvswfMHjB72PudPWD2gJ/2xZGzj4/f533e59Px4llf
P2nxrI/ZB148a+OiWZffdeFdR9x1pF3313VWXbfSef3Oa3aepeO4G/c5Xtyw
48WdOl4couPFtTleXBTfp30mP7TPjtc+O1595n1O/3j7do+3b/J48a8/ev77
PP/TMX3rB9M3pu/Gy+w+i67z77rwrgvG9N11c12H1PiZnafuvFnH5bHyoPFS
yekf0z9WHjSOFDl7wOxh33/2sPw6e8DsAbOHvd/ZA2YP2Hnr3VdMzj4+fp/3
eZ9Px+xDv4l9dJ8W/XQfF3vpPpzuA8HspevGMXvB2jNdB0yuPdNz0LrOB2vP
ND4rufZM47Xue6490/it5Oyv8Vw7zoS1bxrvlVx7p3EJybV3GueOnP1i7Z3G
1SJnz9PP2fO+/+wZs2fMnjF7xuwZs1/Mfj9+/vs8/9Mx++2+0O4rxOy1+8Q+
b59SzwXtuZU9J7Hn7mH9z66rbLxS78ceGz+284RP5yCxx6dzcvQ/G2+245je
x6/0fv2dPTeuKjl7blxNcvbcOI3kyufG8SNnz1j/tHHGyPVPG6eKXP+0cZTI
rSdq3B1y9o/ZP2b/mP1vH83ZP2b/+GmfdPc1N54r+faVntz4p/sZ76x/uN54
Z/2F3Hhn/YfceGf9iVz5X/8iV/7X38j5W89hJFcf1P/I+V/XuS1u1vnf07lj
/K/nUpHzv87rddyx/thxIKxdgJWTjSNOzo4aD5ncb+Mi+zt/blxccv7cOKvk
/LlxOMnVV43zSM6ft6/s/BfzV8w/8S97tc83cZrI+Svmr5i/fvz893n+p2P+
Kd+0v+UbJu++96dz5qXnnz0X/PP22XVfVM+J7bmleOsk7316Dib/6TrQ7bs+
/3k6p2/zwifvPDb/6bx3x+U77ya/Nm548s4DbNzm5B1X0C/fuGv6mdYHkLcf
snbSMf+UfvXIyfknObtqfGpyv41T7e/8s3GPyfln4+KS88/GXSVX/zaO5+z1
/BPzT8wf8e97rW/exPUi55/4u17n59/E/SH/1tfx2jdxZz5+v0/H/Fc+8NfG
fWiciq3TOn91vfpVevVp/df16tP6s/upT+vf5OrT+ju5+rT+T64+bXlArjzo
ObjkyoOeu7o4AFce9JxOcuVB17mRKw+6zoVcedB5j8Yfl57/Nx45eccVO67U
cQb1s+v5f+OVk/P/xi8n5/+NZ07ObhvfnNxv45z7O71h/o35M9aebhxXcu3p
xhkl155uXMqVU+fv+Otf/edNXDly/r59wOff+Gs/fM7Xfxb/3HrBxv1pvGzl
Iv+XL/x96yivPt66y+PFeTr/xvy7/rx43ufPns+fybsvlD93Hx45f+6+PHL+
3H1L5Py560q7blx6/vt0Liv/bbx438t/Oy/Z+PHSd96Hv3act+N8HTdpPHn3
55+NL0/OPxtvnpx/Nv48ef3Q3xuH3t/Vx41zTq4+btxscv7buMvk/BFrPzdu
KTl/xMYvG8eQnH9+/D4/POZ/vlP72HfixlXaPoVjcvXv4sBdfVr/9LynuBOY
P9b/uk9bev5H3n1//K/7pMj5X9dtP+3L6DpP/uf7+F/XpXRdmfRdF8DfOm/W
eZSOo3ccsvH/Pa/jPPyr5wFIz796PgB56zV21vMCpPfbcwNmH+cvWH3XuNnk
/AVr3zYOLTl/wT/hdb36mziR5PwH8x/v+RSXTDnxFIeJvHF61F/Sq4/qL09x
CvhL/aP7wrvP72mfLP/ovoWnfUr8o+skuw7a93fdFn/ouoHOG3cesfNIHYfv
uGXPT/A+HRdh/z1PQfq249h/z1eQ3m/PVZg9XP3RuPzk2neNI06uPmmca3Lt
vcYJJmf/+Pe+rud+E9eT/CnOIj/dfq/jxVk7btyq7ec6ufYb+eJFxf6lZ//k
H+/D/mxfuPSLH3Xy7otdPKmTL57U8fZnfeHjdftdF4y7LrHncn+8jupLb9bN
dN1E59E7j9p5qI/HxT87X4LddRyQ/fe8CenZf9s5PX9C+pbz7KjnUUiv/O+5
COTsG7NnbPyicYgX5+rsuXEwe96B93iKa9i4eXvP48bNahykxpFp3A7yxcGI
/XYfd/eFzv8e9p11X0nXseOP17F+do68/Pl43d+X36zz6jqfrvvovH/nTbVn
PO/jeZ0vvxm37jgZ+3X9xk3Sruh5HdKzk57XQa587jkO5NonjXu//Lv2feOO
kxtva9xmcva68wyuvG2cR3LjZeTaH1j5W/t1vfKYXPlbe5ae/ZKz36e4G+x3
73/2i9lv90F13wVmv10H23XgXXfYdWhdl9R1KZ3X73kj7IT9dl6l4zY9b8T1
7Vey354/Ir3ytnbZ80ek157oORjk7BNrTzeueuPyuk/j8iovV64fN65W48KR
N67R4sycnL3VvuYvZ1/dR+/67rvrvh721XXVXYfddaxd19h1bl3nhNlPz0+h
N/bUeQDMvnqeiuvZV9uRPU9F+tbL9N7zVKTXHu05FOTsB2/+7vKvcYN3furJ
G5eycdoa10r5VHvBm4873vyb9zl7cb/uy+y+ku4D6zr8rnvuuteug+w6uK4j
6roK9qJe2nxY5oXw5rOOte9cv/ks/nz20PNfpFf+kG9+6rh/33zU/V17bvXq
1W+NI62cUr+RKz/K0jcO2lMcqMVJPnuo/ruvr/uIMHvoPouuc+8656577brH
rhvrvHzPn+GX9N95gfYbe/6M6/l/z58h59ez/2v/9FwV6RuXunGJn+IskvNn
8sZB6T7pxk3ovq/ui+k+BPrZeTinn6477Tq+rmvC8r/n28g3/tlxrrYje76N
6+Vzz7ch116UH9qDZeV24wQqX7H5y7Lru0+d/1QfmD4wfXTdf9eFY/rA9IHp
A/Ofzotj/tHzcZRjyseWYz0fR3rlU+PcNk4PufLoad9w9/2zr56vo13HvjpO
2nZez9dxfet1/QfPX5zGcPcxky+e8vH2NR5vn9fx9tkcb1/F8dbdH29d9fHi
Jx8vfvLx4icf02/P39GP44/kjRv48fjU+4y3fsYdp+75PMbxPh5vef8mzsvi
5R9vH3a467J6fo954cWvz7xw56Vw98l2H2H3bXWfTvdxdN1+10F3Xejf98M/
95d++7d9+u5bXuz0T757Wicq7lXn1eS3OBhP46T2OT6tUxNHp/16/kRO352H
EFeDv7WfRb74SNeO9vyd63D223EvcuVV2+Hky99rh3Vd7MZbMk9C7vs7jkGu
vmo7j7z7JrR31WOzx5Nrz5I/zdOQr9+TfurOj7h6s+0Ucu+jXbrx1uu30Af5
0zwq+cZLT95xHfpqv4h846Un7z4k4xddJ4U3D33p+cPO+VAeZhyUXP3RcSZy
+m47g1x51PjgnVfG9Nt5NHL52Xjf5PTfcQhy9ojVg623ydmDdpP3x+y168rI
2UfnyXeuyuV/x5nJ5T85e1kcgLPntqsXT/zqtcaz7joZLP87b995G0wfjddL
3nHG9uvZd9sVXefedbmYfXddXtcZLD7v5XfnlcjZT+OpkrP3xhsmV68/rRNk
D4032XndznNh+d1zgsnZR+O7krP3p3X/Xce8+ibzyp236Dgw3jhRxmHI2W/b
Td2H0HXTXTfZdSCd98b8qfH6Fu/s9Nt+5s4RufJh8fKuXdV4Z90H0XXdXZeC
+V/PeSan38WLOv/B/L3xnbrvovOenUfquDymT+1O+Wkctf1u+rWuXLur+2Wx
dph6zX647m9rO2b7n65e77k9PWel51j0nIDGUW/c2sbBbNy7xtnC4jt1f1/3
LzUObuNqNo5e43Zh7d7ul9Ku0e5cOXD52XOu2g7quTRYfvYchcaZb1ztxvVt
nNDGBWwcsq5nVy9rl3e/yebJ73t6rk7PLWk937j4jQOO9Uu6vr7nKGLt9K6v
Xb/s9NFzVLD3a5z+1pONo4obZ5U/dj2ieoz9dD0iuXZ11yOSy++2k3qOAO45
A96/68GUo/SvHpC/PXdPeu3Wru9qu7TtpMZxb5xZzB+7Pkc923NA6R/v/La7
fue4nXznJB3vHI60e1qv44/HF/7c9K9e2LmhX/h4vYV2yc6H/MLH6y02X379
mq63IN/5kV/4eL0Fufff+o97//bL1Uv03fn29mvazm5cfex5rfcwe+t8qnpT
/nQ+lZz9dT6VXLu+86ltZ2Hvh1feZ75Ou4J9db6OnH46X7dxh3s+Xrsn82vk
9NP5Ie0w+dH5IPL2KxZf4+Seh+V/5yu0U9pPbD9Lu7TzEeTsu+Pv2mn6CR1f
J386N027Xbuz48XkO18v47XahR/3Kz4br9RvWVzXjC9q537Py/X/y7uOy/3B
D7f7iT/87l98ec6fffcrfvyHF/qhd//lB/Hv/gvv/oEPzZ5v/8F33/DyXn94
/FN+1c/48IR3/9s3fvjPX3n3417086fGf/ylwfSX3/27L8m+/93/91LBf3n8
K1/09b+Pf/KHz/kN37dfz8f/3Uv2fM/Y92D38dxf/UGtf+MvjT0f+37sfth3
9D7Y+2H5h90ff92L/r9r3Hz0Hbi/3h/LD+x52POw/PHevgdLhz0Pex72PCz/
MDtyH/mJfS+WL30ulr/Y+2Dvg70Prp37fuz7sefj/no+9nzMXzB9u44+sO+v
XvudfS7ur/fB/A3LH0xf9WNMX1j+YfmFvS/2vthzsffF3hfLT8y+8d9+Kf/+
h0+w/K0f1k9qx7Wj6rX52vfG/fU92Pdg34P/7Zfy/feM/9BLuf/ffIJ9L2Zf
nkNfmL6w/MDyA8sPLD+w/KhdVW/9btxf+YHZJ5Y/+Jtf6tffOv7Hf9wHdf/a
T/Bveamn/9CY/3sO+8bev3ZWPfU9cX+9P/b+2Ptj74/pG9M3/gMv7bDvHr+8
/hd/ZM9l/60nW89h9oDZQ8v1lquYPbRcwfITy8/qufmG++v7+/yWC/Wr2lH1
gt+/tKP+6CdY+cgv5QeWH9j3Y+9Tv8beB7Nf7H2anh3JjzI7+kUfsudnfP+4
5WbLFc/Hno///pf27p8Y/xsv7eg/Pf4FL+3n37df98Puh90Pe3/8d7+0k//M
+LXd+6Xxt7yMz/358d/xEvDie8f04T3YTb+z74n76/2x98feH8sf/C99VXu/
5Bf8pXHtjh6x8qF6aD72vXB/vS/2vtj7YvmP/9sPr/tbvjL+wofe0Xf8wPgX
fihuvuGHPqkfeS47xuyydlW7aD73O3B/2QtmL5i97Pkv1cVfHv/ND+r6/T88
9j3yzfvWbmsHzWfcX/mP5T/2PZg9Yf7e96sdVs99Lu6v/MPsAf+/L93lvzKu
H9eu+p399b2YvrDvx/SHf/vLhMT7x3LE+zRf+1zs+zH7xytXL537N996H+z7
sPzF9Iv5G/b82jX2/D4Hy09Mny1XpXP/6qH3wfSD3c93yn8sf3B/5T9euR47
wN4Hy8/6ffO56bD79z2w+zUfse+jR/pht75HOfTvv/K7H33ld9/5ml/v/ovX
9O/+69f7vftnXu/37v/52x/+/cV3//fr8979kVd7HP/CVz28+62v7/vuX359
/vhvvn7vu3/29Xvf/fOv+TH+2tfvG/t1nefjH/OaX2Pfgz33t7/m45tfz8e+
H7sf7nd6DvZ+WP5h98c/7dVex76398HeF/t+7P7Y/TE9uo/8wb4Hez7ur+dj
z8fyDytP8D/3Wv99ot1bu5Pv2Hfg/nof7H2w98H06Tr5j31/87nPwf31fMxf
8O9+bb+sXan8Iv/rr+3LyemvfoXpD8s/LN+x98eei70/5p9YfmL6xb5PP4G+
ccsd+V8/qV3Xzqrn5jt++tVv8X3+jsnpjxyT8zdy7Tv8+1/zZ+l/0cu6h9/6
pt8kvfwjl3/k7AWTS89+yJX/mFz6n/Paf51cewOTS/+fvfYfx/xJvrFHzB4x
/WL6xfSL6RfTb+3ySY/9pT/MnvWL6ZOcPjG59PRLrn+Cf95r/2TpXxcI/Nox
e5BefwazB8xeKnc/9kDOXjB5x7vI2Qf5v/Wq57HyWj4qjzB9PPlN9dBf+igb
Z5H/5PSD5TfWH67c/eiDXH8Zk0tPXx1fk54+yOU3OX1g8o7Pkct/8g+zcL/z
635k+aL8bDuo7RjM/zD/a73dehPzP6year2A6R/X76rn/hpvwfSP5TemD6y8
wtrTlXd8kFz+k/9Pr987lh+tB57qhZYjLWfkx5OdNx+U11h5Lb3vI/f9mFx6
30suPzC59H/Pa70+1p+RXvtFOcm+MPvC7AdrN+CnerXl8FO5LD/JccdPyeUn
lt+Vu15+kstvTC69/CTH5Ppz5OyPnH6Ua/TReQ7l1sZ5jqXH3/46/j82Xs3P
6Iuf8f+2+3DbifRFTp+fV6891YMtd3HHZcnpC9Nn5a6nL3JMTl/kmJy+yM03
KPeVH+qFtpuf2nlP7cKnev6pXfBUDz3VW9oH5PILy08sv8ruJ7/IMTn7JH9d
1/Jnx6/rVL48/j2v9jr+h1/no8bs1XfI/47vkytvyZVrtSvsOa7vr/zC8qPs
fvKDnP9i+YPZG/4PX+fnPmm/0nv4Puz7K+94PHnrIeUQuXIIk0uvfUWu/YXJ
pVcukWsv16/rx7XTJ7utnvpLP5h+MP1g+sH0g9kz/tOv86vjP/k63zz+1a/z
iZ9UP23HtN5vPf/ULmi9RV/S0yemH0x/mL7cr+UoJn8qN8if/KR6wf2lL6z8
wMoPrPzA3/g6Hz7+ya/r4sbKb89RPmPld+XsRvncfhcm/7x+AiaX/vPaeU/t
EEyfmP99Xj34VM7jlmtP5d7n+V313F/+iPkj5o/L77MPrDzF2kvNf8/hn9px
bTfLLyy/Wu+1nG+50u/C/fW9mL1j5Q/+Ka/rg8bs0X3Yl3Z/+0m+r/VSy8Hq
oe+J6QfTD+avmL4w/8V//HV9z5j+PIf+zLO0HdJyvHbU9+6v/MfK+6d2jufV
LpsPuL/yB9M3Zs9YfYPp13srP8xL0Te5962d9btxf+kPs0fseS2nsef1u3F/
2Ufbjd7D/WtXfU8sfzH9YveXjj6x/Ol9MH1h/lU7x94P99f31Q76HOz+/S7s
ftUb9n3sjL74pe9Rz2Lr0dX/5hVcb92ecte4pedZl8WvjVN4X+sitTuMc3t/
cnZPLj+sE1QuGieVP+Tme8k93zo8z9986elj61RvfpmcfsjNN5MvP29d3+aH
b9zQ+5N7f3LfT+77ydkRuXlucvZuHaF+nnFKcusK+YP06nnp6ZOcPsnlN7n8
JmfH5Obdyb2fcVP68X70U7l1kPJTevkpvfwkl5/k9ElOn+T8jFx56PnaE8Z5
yY3reH/y1ft3Pf+p3PXsceuizx6lV46SW7dBzl7IrWsgV394nn6acURy88ne
l5x9uJ59kMt/cvlPzn7I2Q85+8bKNemtyyBnT8bR2LtxId9H7vvI+YPv5Q/S
k0vP/qRnf9KTS0+fW8d++pSePsnZJ+ZPmD+5XjlP7nuNw/he4xS+j9z3kdOv
9/d90tM3lt719O96+peevWLf73r+SM4f3c86nI4zGRdVHus3yg9y+UHO/5o/
0ssf6fkDuevJ6Xv7Ek7f0rN/cvZPzn/J+S+5epz8i9/xuj9Rv1d8IO8jDgAW
z0B6++ixfeztRz/1u9l780d6+SM9eyJ3PTn7Imdf5OzL89iT9PyHXHlCrjwh
t5/P/e1PxPb3YfsHt2/vO173L2L7CbF4X5i+jDs4P4wck4vr0PUO3tP5YeTY
9eyBnD2UN1999oH5D+Y/+q3qO3L1NTl/qH63LuT8Y+sKLr3rlR/k9E/On7b+
48oP6ZWf5Nbtkduv6X7idGD7NzH9lfXbxW8jN97HbsTxIMeudz4kOSanHyxO
RdcfLP2Vh/rh9ElOn+T0SU6f5PybnH+T82/yjgMo772v8k965R+5+o5c/Y/1
Y6SnT88z3uDv9EmOpaM/cvrB4vFh+sH8FfNHzB87L6Tc4I/bn3Ts/bR3sOu7
j4Kc/snp/2megr7ll/Lf+9G/6+nf9cpr7698ll75TK5+x9oz3Q9GT8ZHsPzo
PBL2/R2ndz3m976XXH1Hrvxyf9+7/U1Xnm09wpVn5MozcuUZufJMfqq3Wm+0
3lfP8IumrxzTa+fjXS9/MHvpObkd5+710pNj5UH3i31evYh9D1Yedv0BuffH
vhd7X+x9sfaEcp29KCfUN+Z1jIvoJ2qn467rdT/lhnGU7qtVLmgHdD1A63Xc
duLWdSV95Zi9dF1Q92m53+Ytj8UZ6r4p8s2L5fqei9x5kF4vPTl+KU6++CMr
F4zrdBwHG+fxXcY1yI3DkBs3IDfuQa5fTm7cgVw/l1y/nZz9kLMfcv0kcv3E
N+tWrx2xfsGl1894s47x0n/euti2U9TL0ruf9Mp5cteTs5fuq3P/zfcfb54r
cvHDyLH1f55nnJPdGVdsP1q/Sf6Ry7/tM7r8eloXLH82D5F2t/whlz/k6qXW
e95v+1OuXFSvSY/dXzmGtW+wcql+/eT38t/7YO+z9VYnN67s+4wLu864Ljl/
JeefmH9q1/JPcv5Jzj/J+Sc5/yTnn+T8k5x/kvNPcv5Jzr7IjXOQszdy9rb9
lGdv5OyNnL1tvv7sjZy9kbM38rab1PNP7Yad55D1LPyavZFj17M/ctxyvuuk
1BPKgT0/dsj+pDcPopwwD+H71RfkHVdnP5j9eA77IWc/5OyHnP2Qd9yS/ZCz
H3L2Q248g9z4BVa/t53m++kXaxeVXa8/tH18N34hvp/yhBy33iZXvpRb7pOb
x/L92mP6Lcp3rL6XXvmyebQrX7DyRb+IfsnpE9On9PRJTp/k9ElOn9u3ev5O
zt/J+Ts5fyenT98rvxfH4PLX9erNrS+5/MZP5Xr9DGvfeh/lvXED5T05/yNX
fpPzR/LOG/FH4xT003F7TB/S0wc5fZB3XJQ+yLUv9BuVL+TsD7M36ZUX5L6v
8zJNr9/q+8h9H3nnATru7/vIfR+5+hvzN/1g/ob5F6ZP19MneefJOs/i/bH3
1y/fPrWTb//ayfW7ybWfyNkrZp+YferXKx/I6ZOcPZLTZ+WdR5Oe/UpPLn3n
ZeTH9ptnXF1+kPNH/XT2SU5/nZfsvFbnebDnY883bmRcgFz7lpz/YPZlHEX+
k8t/cv5Bzr7I+Qc5e+u4M/b+xjU7rsNeyNmLcTH2T87+yemXvPOG3gezX+nZ
d+Vd14Dp17is/CKXX+Tsi3zjdyf3fEw/xlXoxzhK54U7L6o+I1ffkfMf48js
07ij9jO59jW57zUPtzh9N4+kfUyu/Uy+/es3br34hDfOuf3yN6+5eIg3z7d9
aDdvsThSN+6tfm18r5Urx76DPlaOnBy7f8elfDcW59Pffaf7Y/fH2uGdrxZ3
0/Urt+96LH+7z0O+4sU1vft3PQC557ED+YjlB+4+k+7bweKUeh45JpcP7i8f
sPdmJ+7TfdfSGw/E8qv7ocm7TwbvHNGMa+jnS4+l932dfyfXv/I+4ntvfvb8
E4vnitkbZoeVKxfkL1574XjthePN45ufvPx1f/n7tO+d/ZCb98ObF7309NN9
dZ7TfV3a593nJb32efcxeU8svfZ659trb8o5+dN9+9j3YP7TeYfu05RP9jvs
PInrP3ZcuvvW5Ct2fccdfb/0eOfgPozDSY+llz/my+SPcls++373we5Teect
m7/kxv86//y0j8/+AvftOL/8I++4rPzyHlj6juti8qdxpc4/S6/f2X0X5F03
rx/Y+WrplQ/yT/mBlRdYeYyVH1g9gpVzmD1ot/KX2sf6GSeXnn08xVXwXU/7
+tlH54s7P9x5HH6Ldw70+Uf38XX+eefAnr90/pmcvskxefd90D85/zP/KP99
v/zfuXuX39UHufx+ikshvzu/3P3inY9WzmHP27kb2ffXcTfXY3L5031H0ivP
Ox/d+WfM/n0v+8faLVh+YvmHuw5GfpH7/u6TUw+6X/djNw6Icg133LHzrY0b
9BQ3hv10HRVuvYPJ1a9P+1rpW3rjok/7+OgXK9+kd44H1k5t3KC2+7Qb2k7o
uZGtNzF56wVM7tf7dB+0/CKXX+TdVyq/nvY1yi/P7bp9/c/O13Z+tvOxnS/t
fmDf0Xby4jadvHFium7rKY6y61uOt97F0isXML/B7ND92DW5fCSnP+WedOTe
g5y/V3+Y/roP0X3Zu/TsHZO339L52/bLdp7T+X/XCbdfIz3/6HwvedfZqT+6
7q7zva0Xuk6r9ar09Iu1B11v/Vr3h0uv3Oy6i6c4DuyBnD10npfce9ceKnc9
+yDnn52f7Xxs519x92lgzzFOIb36sPO70itfpdc+7Hyv9OxRevbX+V/p2WP3
Q3c+WPquw2WPnR+Wvus8u64XS992fNvtWHrttMZpIWefnc9tXBDp2dtT3Av2
Rs6+sPesfS2/blwdOxep8/WdX+0+kc7XOg+s+wq67wBLrz0rvfYW1j7qfunG
pXe/xh3qujz+3/nXrpt5iivSOBv0gcml5+/k9IXJpac/cvrDvhv7bqx+wOqP
6rP7Qjof67qug+YvnX+VXv533az0WHr53/3s+r300fwklx/k8qPzydL7vs53
On9N+dJ9G53/lF77pOvApcfSsyf9FvbievaEfe/TvjTsPLanfUud/5S++xYw
+fZHZP5ROYKVIzuPJPOR5DuXIfOR5PSv3+b6zuft/LZj81e455A6R+yLtx7A
OV9bd3tsfQ7eutHj7R85dn6Wc9HcH7s/dn9svQ+2PgR7PnZ+mXPErG/Bnoc9
D3se9jzseb2/cWr3x+6P3R+7P7Y+AjunEDvPzLiV/MXOQ8PeD8t/7H2x98Xe
F3tf7JzNPt+4gedjz8eejz0fez72fEwfuHZn/lI97P2M23k/zB+w98Weh53L
id3fOIn1VNj9sO/Hvh/7fuz7MX/Dnq/d4Huw52HPw56HPQ8r9zxHuagd6nxE
68zMxyt3vI92jOdjz8c9N7LlnHKLHnuune/VTvI9uOe2qi9bb5O3XldvkavX
yJ1nyQ56jp9yi9z89+KmXDlDbj0AuXKB3PzZ9tOcX5KrD8n5Dbn+DTm7Ju+5
auoRcvXM5h3PHuidPajX5B954970XFX21npx9VjqTfZDzn62v+bej196P/3o
1ovsi1x5Q668IW+9R78bnz39rlw+/ZLTL3nPFWy5Tr/kLXe0R8jZN3njKvl+
fuT7F5c57QTfT9563veTsy9y9kXOP8n5Jzn7IWc/5M4tJbcuhbz1nvyzf6f1
Ev8gb7ktf8lbzm7/zslbDm7/zsm1d8mf1k1Lrz9EvnWyJ6dvcvoml5/k8pOc
P66ddv5I7lxacuuOyOmDnD7I2+6gD+NUbRfQB3nrTfogbz1HH+Sth+ij59ph
+pGefrpuXXr6IacfcvZOzt7J6Y+c/sjpj5z+yOlv7erTHzn9kdMfeduB9GMc
ue00+iFvO4Z+yNvuoB/yp33vHccm138kpx9y+iF/WpdOLv/J5T+5/CeX/+Ty
f/2Yy39y+U8u/8n5Dzn/2bmUV15rpy5u0fUb229TXpO3X6W8Jm87WHlNzn7J
e+6V/CHfeUAn933kvm/zc1dfa/eqrzdfdd9P7vsXzzf9VN+/c6ju+8kbV0l9
Ta6+Jldfk6uvyfkPOf8hb7u+55psvuPkPddL/lgXKH/4gfwnl//k7JOcfZJr
b5Frb5Frb5Frb5FrD+vnag/zw52ffnL5v3Gey39y+U/efrT8J9/56ydvHCTl
F3nXKbJ/8q4r1M5oOYO1l12vvbz5o7Pf73vtT7yJW6Yd23q+9Qrmj+7HH92P
PZGzJ3L2Qs5eyNmbcQD25jn6id7D+7ddh31P60EsP/tdmP15H/bXOAZt92Lv
03ZS693WA/XL5ivmX8YN+Jd8149svwh737Z7225rO6D1UsvhlgvV+8Z/r/w0
LqX89B0/9cXOv7x2ovzG3rftyLZLWk+2XMLer89TTtFHyy3seuz69hux+7Wc
wz/4Ov44Zv/tJ3f8FbsfZse9XjtBeqxcwexJvep7sfz+ttdyZ/mNjd8rh8xf
0Lt1O9i6HLx29JVr4ltbh6Fdideuu/T2C5Jr52DrXDzPOhBsvk49Ij/Ycc9Z
0r7Hvtf1vhf7Xuz7sPfH3hfTh/d52rfc8/q2L+reH7MP9aj5KfPmxmWw73G9
78G+B/uexkfc9doN2lFZV6MdgNmr9J3nVy9i/qQdYD7VOgD9hZ6LpR0gf1y/
uEKXXv5g/il9z/0xjoTlp+fJTyw/sfxc+su/tTOzDkn+YfnleuWF65/2IWPz
YK63fqL7OrD87jp7LH+1w+Sv+8rfxau8/JW+5yjJ357H6HnyG8tvLL9xz2FR
nnu+8sPztKsx/aydn3Vh9IPlv+epH1xvHrP7OrH87j4GvHHha9fKb+te5Dd+
WueJ5R+Wf1j+NY7N4pLoF937yM/G68Tyc/2iy8/GNcHKS+mf4izg1gPaJ9r5
0pH7jp7r2H0jWP67n/x3vfzvuV+upw/cc5yMU2L6wcbNMH1h9SumP6w+xT1X
h35831NcGUw/0j/FucDWISx/rx40j6ve6z6t7ttRL6q/e15oz1Ujfzp3DBsH
r9z9tGf1C+lPevrD5K7X/nU9/UpPv5jc9dpXrqd/6ekfk7tee8v17EN69oHJ
e05V98N13XHj5nje07lBmD1J/xQXBdtPpp0g/oN2gXqRvO0G9tV9Tt1P13P5
us+DnP30HDbMPp7OaaNvcvaAyaWnX3L6x+SLj3r6JKdvTN5ztLp/ENOXcayn
ODVYvxG332Tft+cbX9i5pFdemB/efvvf+fG+SOk3T33ccxUbd6/7cnpuHv0t
nu7pA9NX5e5HH+T0hckb/5WcvrD8N47+FAeo+/yxfqP87L5y/cCeO4kXP+H4
aR/I4tJd/mDfi+XH9nnf97tfz/kxjoK1p7B+tH6gffnuZzxy+xuvH6qe1+9U
DujHSa8fhLWrsXYg1t7A6kH8dO615z+du4jJe95q9wPijqNY1+b6jpNYh9Z4
n+5nnEF6+/6l58/siL56TkzjcGD2i9mvfgX7ZZeep5x+Gtdovx/TL6bf9ktw
291YvdB1UdpF5OrN1itP9Qz7J9e/KEvPHzyfP5DLT3L5SW48XztIPA52KH87
TtRxFNxxCex+Xcen/ibvOjz9KPK2s9sua7ut53hpr5alZ7/k+tdl6Tsuyt/I
+Rs5fyNXX5KrL8npl5x+yc2vrV678XztUvFKlNPKQ3Ll4crxrBNVH5N3nSf9
knddJv2Sd11l+/30LX37tZ/Xj9LO7HqOp3b5Uzvsqd321A54ajf03PPWm9rL
PSey50I+nSO5+Iwn/7xzCo1nkC/+6smVP+TKG8w/Kp99XHm/7z1/KEvPP+iL
f5DzD3L+QW5+3f35w/Rx/qCfxR+0S/gDece1+QM5fyDvOmf+QN51yfyBvOuK
O+7FH6TvuM7njRvwh66neepnPvUznvolT+3cp3Zx24nabU/txqdzT5/OSe05
nPzh6VxO9k+uvsDk0qsvyPkLJpeef5DzH0w+ezr/WX6cv5Sl5z/0y3/I+Q85
/yHnP9PX+YtxBf7S9SnkndfhL+T8hbz7APgLedft8xfyrrvvuDB/kb7jnp83
jsZfur7paVzlqZ/91C/nD+Sf1y9svwn3nF9y/vF0LvDTObSYvOeYPp1zyv7J
2TNm75XPHs7e931n32Xp2Tv9sHdy9k7O3snZu/urL7D2sHl17WHjYtrDnbfs
vCBm32X3674U9k7O3skXv+3k2sMdx3sa11O+9ZzVp3NX6Y9c+7csvfbw9hWd
/sjpj5z+yOmPnP7ItYfJtYfJ6dP76S8a96K/zjP3HL6eu4f1F7Hyp/MkT/Mm
G4e/eRblD7nypuN0T+N2/I+cf5Wll3+eL//I9RfJ9RfJ5adxX/aB+TPW38f6
+7jrIDxPu9h4jnJM/WPeWf2j3KO/nQ9++us8a8/R67l5PWcO91w27Pn6YeT6
abjndLTc5j++j/+Q8x9y/kNu/MbzjN9Ib/xGev6g3DcO0/PPu//7qd/RdtdT
vdL43Zg9Y/aF2a9xUvbreexz5wBfe8S8uvZIz4nDvt/1xp1w4xjJn8VLfuhX
td/1ee3Mp3ap/Gy+Yf7lev7l+/mX9Oof69nUP593Tl7jen3euUKNcyT90zhM
x2naLyWXv40r9Hnt8qd2vPwlZ6+YvOVu7RYrD12vfpPf6reNe5+9WmfAXvmB
eRXrEemn5/jt3OuMoz+d64U7jvs07thxyY6bkdMnJv+8cYSncYenftNTP+up
3fnUTtVuwE/1aM9vbzmFtS+0k7QH2AV9Wp9Jn9Jv3vOYPrH+M6bfjruT95yv
p3OwOu7ZcZ32U9uOx0/tRNx2g/zD/ET+8CPX8xssP9Wj8lM92nM+zSNJ/3SO
Id680rVrjKu7/uncMCw/O078eeNknzcO8Hn9pt3v2s3el37aTsfsv+24xlnB
9rdrp+iv9FxhbJ+39NrDPYcW06/09NtzRTH9Sv90DiWm385LYfp2v6dz4LBx
e+npv/MA2Djn1jufPXRcFBvXkZ59dBwI6xdLz17aj8b033Y71q5wP+0O12tn
YOWm6+lPu5W+1JP01XMnMX31nEIs/91P/neeBcv/rQ+//O+4M5b/0sv/jrNh
+S+9/O84BZbfvkc73vXa+dJr12P6cL11/65Xbkqv3MXWcWl36+/0HGRMf9LT
X+fpMf0Zl6Ev19NX570wfW39/emLnL4wfUlPX+T0helLevoip68978pX6ZWv
HafA9Ov76RMrH7XjlY/a8cpHvLjKNw6ivHK98qrzwFj+Sy//yeU/lv/rx1/+
k8t/LP+ll//k8h/Lf+nlP7n83/Mu/6WX/+TyHy9OWfJLv3nnlV6/WX5h+SW9
/CKXX1h+SS+/yOUXlj/OR/D92Pe6n+91ve/FxnWkV76Ta99i6zC6n8T5DNqT
ZeMK4sc1rgIWv6xxB/Bvfnnf3zWWP933isXbwsbbjAvxF+z9GtcBe7/GPcDe
D3s/LD4eZt9YPEfMnrF4btj8hHEt5S+2vxpbB6Zfr/wl9314cRWOfR/ePv9j
34e3z/zY92Hfh30f3vkUx/TZ7zOO5/u0M31f122Vf+bLfb533991QOWnOB7y
C8svLL+w/MLyC8uv7nvF9qFi76Vd3V/2j9k/ts4Tq+/1U7WnyeU/lv/Sy/+u
kyvrJ/C/nUNz5U3XWZHTF5b/WP43DgiW/41LgeV/4yJg9rr7X/mLe06gfa3Y
dxlnxvY1yBf1PH1Jh6XvOST053r6qz6lp09Mn66nz+pXevpr3P2nOPz0S06/
mH4x/WL6bRwXTL+NK4Lpt3EtMP1i5RFWHuGe6yt+ReX01X2AfukVa/fVDrB6
QDpy9oDZg/vSf+1DevaA2UP3Z9Q+pBdftvtrul+DnP1g9tB1lOT0hemrcvnS
eVL62znL1x7CPYeZPit3/6c4wY0jLH3PjTSOu+fdfgf9YvZCr+rB7pvE8rnn
MLVc6DlP7u89yf0du0/3WdS+ur+n7D5P5yJ5Lvsj77kt+pvd39H9QmXP7zkU
yqeuyyVXPmHlE1Y+NY4UVj41rhFWPjWuDmbvnSf2Peqjxh3B4s1i9ty495W7
/1Oc68bBlt44gvxk3/Y3sG96Z8/kylHjfq3HsPTK2Se7xO7H3mt30tdOn/YZ
+bWex/2f9q14X/bd/Upl93s658r9+AN5zzVSHne/TPc/lT2f/Vfu+drH5PwD
84/GUcP8o3G9MP9oXCnMP7D+sPfH3pe/yA/+0XM2XK++6Lnx5D1X3njd58V9
r9z9tCfJtSdx47QY1/A9zmvr/qqnflTPHcTS6zeRtx+g/coun84RlJ6/dh9o
zw2Unr9Kzw+7X0x6/it9/ch10vvteXD+vvgTJ+df7qP+kX77cC794kNf+p5j
hF2P5T//kp4/Ne4g5k+Vu7/xJbx10Zeev2H+I/3TuTPk/IVcfYLVN5Xv+hsf
9f38q+e79dyOnuvhfk/nKPScBen5Fzn/w0/nsns/8yPd3+Z67T9M7n4999t8
aOeBpe+8v3UEHYfH1k81zgi7x+y+40iYvOMwmLz9SEzefgUmf9on3nZgzwEl
Vx743p7riKVXXkjfcgFLTw/SP50b2HJEu9bfpVee+HvPHVS+SI97fqPrtW97
nmPPSZNe/U2uvMHKh887x6ty9386h4tceeN71dfSY9/zdM6V+ylPxlc+Sa8+
J1ee9PxI8qdzVnoOi/TKB++rfOi6AtebV935wCef/dw8ves7j20cH/N39dZT
XCHyX//yfl95E1enLL32QePElKXXXmick7L02guNy1GWXnuh+/7LHadwvfKg
5/BKr3zoPvO2s91P+dBzVvGTH7cd0XNn3Z9dtNzo+ZK9v+v9velcrz1CrnyR
jhwrX7rfuek9X/tGeuz5yiNy5VH3R7u/8gM/nXNHrnzA2ic9l4386dyvngsm
vflGrLzoOUzk1rmSaw+Qd12q8qTntkjfdX7aB10nhq0X6P5t7/NNr/447rn0
yht2gtVD+iPkmFx5RI7Jn+J4kT/FoSLvvIPxhnLj/JArb9wfS6/86TnkZfd7
imtjnEr7pf121yuPtg7tod8hPTl+iqPh+cov8vZT2u5QnrXd0ee7v/Kq7Rb3
Z1fk7M79yPs89+cHT+VWz2V2H+m1V/Dm1y/d5tOPlTc9j5dceYOVNz2Pl1z7
BCtveq5g0/se4xHSY9+vPOp5vu6nPOq6bvKnc7B6Tpb0rvd++jddd0yu/9J1
LNh+rcZFxMoH47qN+6f9Qq68KEuv/UKuvaLee4pDpV5TXkjPvxtHSHrlhfTr
p5987fJj/tM4IuTs0/uxT3L2iXsOKfsk3zmVud776r+7Hns/9kfO/tyP/ZGz
H3L1X+Wer36TvuvS1Yddpyu9691Pe5u863zJu+6w69qw/bbWBakvG5cVqy+1
izD5V17y/zO5+pOc/WP2Kz1uPI7GGez5H41zRt44aE9xmKR/irOl3ae+6/Xk
6qf2Yxev4+of6flL4y2QKy/J2av7s1f3195zPfuVXvuNnP12H4v0ylNM7nns
3f2Up91nQc6eybX3ug5devbcdbGY/TZOMGafmD1i9tj4B41vYFyzcfHYBzl7
wPS/c/BO/z1nt+eaYvnrevqrHMtvLD+x/Oy6YSw/G0cZy08sP7H87P747n83
jtM4gfKTXH5i+ddzibH8w/ILr/w+ll+7v/L3WH513TRW/3d/9s4febnPZyz/
pFdedr+2cSz5SS4/G3ez6xAah9H95O/TPJX8ll551nGxjrtZN0s/rle+NX4A
ufKt+zTJlV/dL959cp7fc2mVb01PrrzqPi1y5dXiRRyTK7+678X7sh/MfrpO
u3GxtfONh2H2oN2v/dj9392/T679iLvuyLqprkNyP/fXL+HP7mc+2/Vbl3DX
a2/ufJazN3L26f7sTfqOw7Iv8p5Dj91P+48ce/+df3X3Z3/k7Kn7MKVnX57H
nnoOL7n2X/epkbMnzJ4we8Lsyfvpr2DlgXHo8eUT/WDz1trp+geuN0+283Su
f0BOf+T0R24cjlx/gVz/WL+h/Vi/rvfr+qU7lg/u13Q9l15/QzryXud+7Mn1
uPeXXvknPZaePXoeeyRnbz1XW3rsecq7nptcdn3PjWaPOx/pWHr2SY4b/8H9
2KfvWf/j8m39i2Pyxv0nX//imFx65SlunPbGyVe+Nn4DuxBXHC++3N3P/V2v
/G38B9crf7vO0/2Uv643P9H4Ea63brPrDN1P+e167Qe8eHWXXnmhX658cP/F
s7v0nWdXXnRevvPsWPkh/eLCntx4G1aeSK88IVeeYOM4vke/+mmcQflB/lSP
1O+lfyoXer334TdP5ZBf8sX3u/stvl+e5/7+/nTd4gHm765XXrl+8QAvvfLK
dcoj6RdH4dJrv5Fjz1P/ki9Ow12vfPM85dfTufDqX/KeI4+l194jV/4tXszN
V2DlH1beuZ/50vqbfNU+wvyn61DIO2/MfzC59PwH85/OM5EbFyV/Gtdd/Jer
r6U3jtX4NdIbZyA3DoD1yxrPpv0Icu3qsvTYuLZ23M5JPdYv4T/kT/X2+PzV
9eym6T2fHbu/67Bf15Pj+i12f+me7sN/+3fX82fX89+y6/kvOXY//kzOP8uN
T+R6/oW1L7w3/yLXHvAd2hc994Zc/Y17rkjPseg5BI1z37jr+t/yXf1H3nVk
/JW860L4L+a/0pt/Iu+8C/+u3PX8FXceR33ZccaeK4yNS/Vc243Dn7/3XFXP
V/+2XSw9/6x8fP7pffmL63Gv9738VXp223pPenYsvV/p64fY9dKRe++y9PyL
nH+WpVd/kvO/svTqT3L1ZVl69efWRV592fha0qsvfZf1w9ZB2o+Ie64Vf/ad
3Ten/d59dK7n35h/Y/6Nu05a+7jrOrH6vHL367kF6nNMLj3/J+f/5PyfnH9j
/o/5t+vV35Vbp8r/G19LeuUBVh5g5UHlnm+cGisvpFdeYOVF41CW3Q8/nUus
PJG+/Wz1++ZVrnwgVw+5n/JCeuVD/VR6v9LzC3/H3l86cu1lf/cccux65cHi
t50/l93PeJT78F/3U98qR/RvvZf+Lyb3HvwP8zfp+Rsml77rnvlf10lLr77F
6lvp+Rfmfz1XwfVdt/B1r/29Mf/qPBzmPxt3PP/A/KfnvGP+0XPIMfsve3/j
jB33bLwycvVf2f3Up+TYvCP/Iec/mL+0nqr/SM9uPZ+/kGPPZ9fk7JucPaoH
2Zt4bOwRk3edPFaeS6+87zkn0ivPyZXnWHmO2Rtmb7jnUrA3zN4we8PsDbO3
nmuPzaP0XPfGwyv7fuOIiwt75XH78eTsB7OftltqT9Kzq7L3YT/kWDw59kSu
fBMHSfmH2Zd2E/shZ1+YXHr2RM6eMLn0yjNy5RlmP5j9VO5+7ImcPeGe48Ce
cOPUsyfcebnG+WYfmP2UxadjPz3HvvZEzp5w+6lP7WLpjcdqBxuvxdsn/zrO
O/2S0z8ml77r+Om/6/67rpZ8+82O1V9YfYAbZ3vzQiff/q3jjqNtXPjk2191
vH5y8pe8+xJ8j/hvvgcrL7HyEvs+7Huw78He3/MxuXoDKwcw/YmfRr89J0s9
1HO0fB/2fdj3Ye+PvS/WD8Pqz14vfpjrsXFOrL2Ltw/ntV04fWL+L/4U/8f8
HdOPdRjer/GbxDei38ZD0o9UP2F+i5UbuPNAvr/zRp2H189snHbliXpC/mD6
qdy8kOuVI+qj9mM7D9x5n45Lm9dX/7ne/dsvxuTGwcix+2HtNKz9qN2+8vba
UcZLOo7W/YtYPYV9v3Ky80ye33Hzp3F17+N+3oec/vkt/T/Ng3s/6b3f0zyX
95Xe+5HLX9d7H+WE5ytHPJ/c88g7r8Yu+SW7xLP7u6/5R2x8VHp2QG589M0+
4JPTq3JA/+1pn1739WlfP+3b8X782vvxe+9DD96n+/5cj2tn7uf53RckvfUb
ylnv133J2PuoZz2f3Xo+efchdZ+R8TZ+bv4cK/daTjVuTeN69Jxu5YTrsevV
U67HLWee9j1j+YGtz9IftJ4As2f9B++DvY/03oe8+6rdT7nlftj9tCNcj+W3
ekt6LH3jd2tfbd/MsfzH7qf95X5l7RvlgvaL8UIsvfaFckl7QTmGrYt1Tof+
hHUi+hNY+wHrb9Gj8so80fpnL3r6yvbpSN99Ylh65Yh1nsoR7Q0svfY/v1Fv
8yvsHIXp865XL3sf41nSs2fpu+9ePdV9udj3YOUS3jj/5Q+/5TfrD9376BdL
z26lx9JrDzduiHkA70tOX1h7T/5qD2q/9Rwk3+v6jRfc+yh3yeUHlh9Y+9/z
lQOejz1f+8Tz+L37yb/lx/mBclFcVH6LzXuwA+nZpfRYeu8lvfeWHkuv/Gnc
SPOq0mH+6P6NW4hdpzx0f/7hfvwJL37pXa9+dL3+l/TsDbM317M3cvbWfaDS
sz9y9oXVs/JNPSvfsPtpP3t/9az7sT/M/nDj1rIz+coP1UO4cT6x/KYv+U0u
f+lX/kovf6VXPkmvfOo+/a5LxvIXy19sXsL9tRPYGfY+/E36juPhjeOdfymn
+ZP+UuPsKhdcz5/kPz1PH2cH7k8f7o/d330bl4+cfuiffhpXSXr6kZ5+Gheh
cRNcb7zQ9cYTpTde2H043UeC6RvTN9bfkQ/adeTsASt/5x9X/pKzB2w8wPd0
nA/7fvVe4yzTH3/cOPCl15+W3rp79qFcYz/SY+nZseezY8/z3Y3z+BS3jr1I
zx4aR8f1ysvuQyfvvlb2gLsvq/uKjN9g5QNmL5i9YPbh+9gHufK07Xr5hH2P
cVb5rR3tfuwHi8fSdrb7Y/cXh1567WTpsfTOL6M3+5XI1Q871+YlPz5j5Zt2
u/JMvwa7v3qtcaBnz1eeYX7jet+B2R9793fXK38ah0U69tV9nt3X131puPuq
2NfiT157ELMvbN5Ifuj3kffcLeWN7+28YucdO0/knAjX62c9jTv/4pf8/6H1
G37Fh3Caf/SHto9Re9J4nPLJ9con9qA8w43z3TjRjRNM/9hzGveSXH2FN99x
/BR3h1z5RM5euu+3+z67b7H76jB7wPSLlRe+U3lBrrzAyov2w+UD9n365dg5
Da43Du96LL3zMpXzyg9y5cfOubryo2wcSXrjTtj9lSeYfWH1G2ZfmH1h9tU4
v5g9bd7s8gGzn8ZJImc/jYtCzn66L7j7XDuOiZUvuOvE1D9dR4B/zmt7c/o0
DuN+PRdJ/aI86DwOdn/nGxtHYi/GmbB8VB81jiz2HCy/Mf9kP9qX5PKbXP5i
/tlx4I6DYu0BrLzG2o/yo+fm8XfMf5/mYf+dD+b5xT//yd/6Vz7c6A9PP/yH
Pz/Ne3aeUH6z06dzVHpuCeZ/mP/1nAWsvdn5gcbFxvSP+R9mD9h3Y/Vx9xFi
/oPps+dSup/6dO9z+um8cfOz5870nBes/mw8GXLlVeOCN64i9r3d59R1m1j5
0XVomL1K33MIe06d8kV+KF/I2S9W/xgXVt/wY+x91DeNV9JzOXqOA9ZPc738
bVz1xpFuHNzGqcTmabqPpeviuy62666w8lf8DeWtdTZYevnV/Oi5FY0T37jY
jevb+BbY93VdP2ZvPZe46xa7rqzrgrDv7TkrPXejce4b17txhxtntPuOui+h
6467zrLr4LqOCfue1fvXPvr/CbvzeK+H93/89p3sKlt2su8hXhHeyJJsWUJk
J0tZI9kK2ZeQLcpaqIRUmtbTadVx6ignOe27nex+fc5r7nNujd+5ff963R6v
a2aeM9dcc811XbPZl0C+zVNbVt+3PTdcVz0++vzn3Zj8nRF+Z23vWjT5v+J3
np7Ky98ByO89xy+YvMP4BeMXjF/5PkCYvNtXhD/2pcLSk3eY/s3f6cr3fcD8
k9rehWpb7f/MCi2q+TgwxWHz+zikxz+YHS89fqHjD4w/+b5bmL60Tq/91vFh
6c335gX8yffJwPgD4wdsvofJHyx+ZJ2LPKIvqH6foTLcVs334Uk+1T9/R0I5
MP7B5A3Gz3yfaL4vMN+Xlu/rgtmz9jmwX9UDNs/id7p3PK7PpP0JcXynd4lj
PAUmj7D4HixukN9bnu9jyfeN5PcmqJ92wPgHkz+Yf5qff0U3v1s3w0/pYenZ
C/m+NPUVv8jfKZUf/9npD1e3Z37iv/uNfH9AtXzVYP2hvsYDuYKVb3zAxkf+
bhpsfMDGA0x/wPpX/egPOPlxEbOzYHZSfq8YTM/5HnmAtTs/t5Lvw8/3Vafz
pkV79j/7AH2ffs+xfVLS218CK198SnrxKXI7s/q7CxI/3dekPOMZpg+tmxmP
6MYjbDzC5gOY/oPpN1j/wvoXNp7zfWSw/s3vfcvvwcrvVYL1d34+L9/XLD17
H2bvW4c0/q1Dwso33uHFxX0R6Xvmq1TfOL/l2Pek9z1Y+fQvu5O/gG4fSKpv
1M+w/vc94904gJWvv+XX37D+hulj2PjNz8/m977l95rB+lN96HPYeIb5c9bF
ajvnID15gOnrfJ+w+tDXOfY96X0PVj79DdPfaZ9o1N8w/1l6+1LQ9SdsPNNj
9Lc4Dnvv7mq9ULMvQ/3zfRuw/Prf9/Q/bDzD5CG/pza/VzS/dzG/BzC/5y6/
9wym/9WXfMD0qPbqZ/mls46BD9YxYOnYC+ldk6gflEef5Fj50isfVr75Rvnm
C+WZX3KsfOmVDyuf/Ehv/BsnsHFlvSvfd6F88gSbP5TPXlA+rHzyJX++jmT+
gMkbTN7ye49h8pbf45nfM5nfo5jfo5ffI5WfF9Qe8geTP/wgf/L7H3/xCV05
sPnLPEeficvC8s0o9t9/zm0oj30Lsw/Td6I+Uh59lL4X5Qmmj9SPPlIvWPni
qcq3r0V55AkmLzB5gckLTD5g8pGft1Lf/N7E5Fdn56ekZxei63/t0//S63/p
07we9Yp52ToZrDz9KD++yU9+5Ifll04++kd59BXMnpCPfSkfLJ99or7nvLT6
pPWziMmP8ukf5cPKt79I+fYNKo/8wfST8s1vyoeVT/6kJ3/KYx+h83+UByuP
fMpPPuG0vhYxfZXfI5zfg5vf8wqT3/zeRdh8qX7pXrPYnrQeF9Oza+kR8u18
GKw88q488q4887D+M7+ik2/YuJGeHkH3P6ye/qfv0NN6oP6I9rT6s6e1j/zD
9KH09CE6eYbJH0x+YPIBk4/8XSLtMv+hkx84v2c9v4c6v0c5vyeY/OT3dLKT
yY91EBhfyZP6kifl0Xew/lZ+fk4dVr75Ev/pN+XRa4mfUQ6lN07R/Z/uOYv1
8D97Hp39D9N36kffpXXoqO9g6zXS23eHTj5g8516ia+oF5zvi1G+fTfKI29w
vm6ezonF75E3dPIFky+YfKXzEVG+YPIF0y9wumco2sH0iXt1YO3l12qv+VJ5
5A0mH8onP8qHlU+PyE+ufY9+Qfc/zL5RnvnF98wvsP5XP/MJOx5m95MP+fUn
nN4xieXZv6E8WHn6V379C+tfWP/C+hfO7/VNce4YN2E/u2cFVh9xTPwz3ygv
vzfN/CI9/YFO3yR+Rf0gPf2ATg/k/aO+9pGor30m6PoD1h8wfsP4DeM3jN8w
fsP4DYsrqp/xg57fU0VexanIq3voyCtsn5X09nGhp3eBItZeWHth96Arj32O
rr2w9sLpnuWIrXNcWZzH0/x0V9FuTev0X1X365L0zks12zdfmt69QIfRnd9C
h9Gr1UOT0BgdRtdedBjduiE6jG7dDB1GJ5+dq/m0OOG+1fPO4hQXRIfR7cM9
oFpMFiYsbk1exKnhfN8UOoxufKPD6MazOFo6T23dI85T6DC6+ZadB7Pr7DtC
h9HTvaWRDqOzT9FhdPMxOyG9pxztgmQPR3p6rzbStSfd+xwxOzPfN3h4sZ+S
n7RxkY8J/1lcP0h+D/vBuLY+Duf7EO0nyNPn513gOm8V973A9nnAzjvC7kuA
jf/8/E1+fgM2n+XnM2D2KmxeJBfmATi3s4wT4yAfJ6P/qDYA/7PPG1Z/dpj4
BLr9X+jqD+MfjH8w/sH4B5tf4Xwful//5/vY8BddfdL78LE+sPrA6gM/VRy3
yW6lp2H3Yvg+PWTeoYdg62f5PjtY/c3L6gurL1y0D5amea7oN9bg5dXr/0vS
PhJ6mJ7N9bD35ckt/uXvksDzi3ox2RlDinot4beK6wnZPUiLE70Yx1mU8GnV
+2MWpfTkmV4mzzB5xjf9ha6/YP0l/T5F/qV5tdrMuHRZwtXN+XhZknP1QVcf
WH2kVx909YHVR/qHq9v9baIX7b1lCTe79P8KWJbSq795X/1h9deP6oOuPrD6
SK8+6OoDq4/06sPOUB9Yfci18YJuvMDGi/TmD3TzB2z+kL7oHy1J9GJ8ZnHC
Pf9vmrppcUqvvence2wvrL3Say+7SXth7TVutRdde2Htlf6o4rxdQGd3wvk9
PviDjj8w/kiPP+j4A+OP9PiDjj8w/kiPP+xG/IHxh17BH3T8gfFHeu1F115Y
e6XXXnTthbVXeu1F115Ye6XXXnaw9sLaa543HtGNR9h4lF590NUHVh/p1Yfd
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
7TW/+c874L5PDsibeRX2XfKFTh5hdOnxI38vU3r/51h9jD/0H6vrUx6OqI57
fh1OqObDxISdu5GP/6Zc/l2+38f3+BGweA67RHwS3+F8P5L0+ju9Pxn1Gowu
/7Tq784JW1bbAzXjINdD+bvUtb1bncsJ/ud05ZML40650uP/09Xt/irxHx5S
Xf/BCefvwvOblSv+aVyLd+b7megNdia6+Jr8xjM6LD+7Cp0dI39t+27lN96T
3xn1uPz3V7dzdri+eF/xf949pndgdPnpMfnJPXr+ri+cvyeavysL679l1cm/
THhkdb98+Z93/t6s/i1JdHFadOf0YPSV/fbpyS/P7z0VH0IX10QXx1S+8Q2j
+15+T5y4HzuV/vc9cap8/1ouL+wW8kTPwsonH9KTH+lh6dlZcH7vjvlGfjh/
LzTfdwrTNzld+fRNabUeLE/zDTr5rO1d7nzeyd8xJl/HVdd7asJbV7d7yn/e
+WtZPZ8MT3RxbXYh7PvkBZ0+Rxdngulzdim/jJ1Z2zkF44JflO+LTu87xv7L
6cqnL+C0jzemT/uA4/fMn/m73Pk70DC5hfHz5urvlqX5X/n0c35PdX4PHyyO
K24mbouf4qhwfu4wxf0iXZwPtt4pvfVNdjZMbqynoZuP0fUXXNs5Et8zH8DG
q/Sw8ox3dONZ/r2q081NdpjxKD37CTY/5PdU5fdS5fdG5e86w+Q+f3cV1g6Y
fPhffB7duWkYXXvFc/N7XvN7OMVd4Pw9THT6Gl1cDSYP/GTjGyYP4gywOA/9
zo/Wn/Lrb/lh+Ws7ZyA/+zq/Fyt/Bzl/tzR/RxHO363I75HP7w2nH+WnH9HN
j/xq/MYP82O+/1Z+9jKsf2DjUzv0lzganO8fTvdeRX0qvbgFbDzBxhNsPMGb
VNdvRtKL/ADf0z/5PVv5u7GwdsL5vaX5vZn4l97vjPyD2cPiBOxfcWNY3Jg9
jI5/6OY35dF30sPS05fo7NnNq9kwMPkb0rMH4Pzeuvwdg/ye8Pze5/yeXvyE
rYcrHz/R8RPGL3F07U3vRkd9b12ktnNu0tMP6PT792/+32+fNP6lN5/D+AfT
78rDT/SrqtszPZXPL0PP77Ez/vN7s/N7jmHr9Cvnrzmnj5/WedK5+Ijx1zoE
/sL4B7OHYPyC8QvGLxh/YPzI7wXP73GG2Suw+lsnUX9Y/WH1h9UfVn9Y/WH1
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
TypN9TKv7lm+rHO7dUpDhguNYnr13Cd+X7ufGbnD+idvVhOvwadbKk+v++8x
K/yHT25sv0O9ksKmG7Ttf83tvUKDisYD1ukwIq2TDOty309PTixJ94jxP/av
f/91F3dZkvTo5sN3fuu9ipr3C7utdfzUjTZcms7lNVl2YcfvS5akc3Rb/DK9
7KgbloTL12836591p6ZzImGNNU8sHT89xXPElc+48PrJhxcWp328d358/KNb
Dqk5Vze7br8tJz+6OHTfoeOigWtVpvho691OaNz185lpXUlcc+9VZz3XZbNF
aZ5dMq7VKcv/qDnn+vqrOz48bsdFKU7QaI+q1b47fFGy535q+PHaHzRdlOyc
t9v88+uixjVx6I5LG/XdbNdFSV/cs/Xh9Y/5Z2EY1OTdN9u9MTmtp1lPmXXC
oJv2v3BROHPbx2fe+VrNuw3itme2HHRRnZcXpHt4zzu9fObSMQtSf7Qa/8lH
o/aoOad49r/HHHzntjXvuDT+bpV913+v5h2G9W8Y8UWrqQtCtwFPj2zdZE46
32+d4bCPx5xz/fD54c9L+z655KnKRBcv77vXiNd+aDw/9c+za/1U/6vJ88P4
kksvu3vSpJTeOPl04zM+femM+Ynfj7X7s07Zw/MTvw/puFfjrn3nJ363eH7U
3p+Onp/4/cDy1/t8MG5+4neP6WvucnCYn/h9TZPz2t37+vzE7wPHnf3vYe3m
h6nv7t2k5MTJab3HOkCTzkPGD1rx/e0uP+TLzmNr1i37TP/92dMvqEgYv19q
02zKvqfOC6cuHfTCzmUlaT0ovV84+Mg7Fl4/r+bdnCW7v3fYt3PTOsOV59x3
z+trzAvbbPrtRW9tU/Oe3ZS3fr2p+w7z0/0DrR9ae6t6i2veqdP/jW//6cVd
68wNR187ddfT7q5MdP3R/ZINK596Z06ShxvWPfKfKTPmpPF5b/976006eG7Y
7oC9r5vx8oiU33h94YoPP1nzoLlpvA677Ycls7+YE0Zc9crzu836Iq1P4d+u
Rx/8wvwec0Kjeh0OGLNuZaKTr07bfnRdty3mhrHPjGtxcfMFSa4OnfnenP73
z6m532Dr18/bafXpCZOnoRMmrbP0vNlpvPes+LLkp29np/YMnnb3aff3np36
e89/3/xtlcrZ4Yy66/W5vNfktF6mPx4aWP7EJyWz03jrctMvO937+ezwUuve
7x9wQc048/vpjofPX3z8rPT9Lhd8+eCkc2Yleb6rYuuXezw1K31/q0GndD7v
/Jp30xcv/X3njR+fFToNP3bK2q9NTesvb+1/zgmn/Lkg4XFtJ1/ZbM056X4D
9T7qj78rLj+mKvRp1G7w5hfW3LPg99CZcxs8uWFVuGrXPetcuqTyP/ct3Nfo
6feqVq8KI4betffdXcoSXf2f32LhsSeeUBV+3HDzme81HpnoxtN3764777kV
379x8u9P1F9vYIoD39Jx47+evXJCwvTv/Rtu2LP5LlXhue5dl/U/oeYdBusO
nbc97q6z61SFv5Y9MKX91IWJntbvj9tj4vcdvg6rD/7xgz71a+5F6V13lQM/
22lBwsc/8dfIb/83N+H6XX6/8vXyWQlvc+3y068cXJEweZlxR/eH2j70dWrf
vT8u33C1ZV8ned+55Pu9hyz/Ooz+rfHA3Zd/kda/rKtsX3HQpUtO+jqc9GJF
j/lfLE58/uiF3hceuXHNeZq12rdq/sn5Nf2Qyqn75fDjDqoMp++6/yHnP12R
6Op3yV31tx7WpDLVZ86ju2/wdJ3KJL+n3z4nbLpaZXj85mfqDXx4Vlq3bL/x
G8dd+G/Nu9EHNPjllO2PXpyweeScTxcPPfb6aUkvX7Vz64//bDEtvNjzud5b
3FOVxl2jT//+5Lf7KxKmTyoWrlbvsCOnhT1Ou/O1Z2dOSPRW3U7tv+9mIxOm
37f7ocNVR9w5rUa/733ltONHTEv6/YPVpp9816RpSb//2qzFWS/0mJb0+1qX
Pv1Q9wOnpfH10hYjhx/QeVrizx4l09uOPHNauOLntoNOe2x8Wn+276z/Ee9N
/v6JaWndtrDfZYv/XXNa6Hj2+4ff03NBSl/ofexR3TouSuN84OW/TXhhywUJ
09M7TLhklY2nTw1/X/POGds1qjlPRI4/3+eVDn9Omhp+OXrkpfMfqEh0v326
f3ngi69NTfwYXPXSFWsOn5r4ccMX35f8/sXUxI9rG5z39O6vTk3yevbaR06o
WvH9C7/d5JClY0vSugt+3H/QnJbPTJkatp/d6+A6vSYk+upfTrnm0ZaVCXe7
elm/Ru1r1m3YdQe0PGGV7fYqD28O7zjvgtuWpnnv5QvnbjV048UJ77Ss57gj
RsxLmL467uh9777invKwTbO1P3nshumJ/slnzyzr+EhFwr571Sqv7dz7zPLw
79lfH7PeyPJE93voI7NL1vr5i3D+V71uvKN+Wfr/s4Ynv3nPhhMT7n5rw3vf
mjomYfptWvepq992XXni97cHzih75ITyxO873/vfgDValyd+99mtomHDhuWJ
35NvGz1qyZ9fJPm797WNt7/+kPI0X763053rtL2ohv9rP1lxcHisPM0v3Xbe
oXedDuVh6Mk975lxWFVaB6NPzrtiaN3+e5SHNzZ95oMmY5ck+oDuM9brefrC
NO56l3SYtLRQM6+v037j0HVmzb1CW7U46brnO1clfMFzzx7f+qKZCR/YebeJ
2/WrTPifugOvqVOn5p7mz/ttsteTj9SM8473Dh03/aApCbd8+O6rz/thTML4
e+px3z75/Q+T03gv/2BE68PfnZzGb8Ojlh3yV9vJiZ+nfrDvya0emhzO/Wmr
688f+GlaR8Pf255+cf/TLpsclh85/KGzu5Un+tx1bj9s95+mJvzIJbOWteo2
LWH2xqazD588oPvk8N7Wn815u9P8RP9ul01vKt9lUcKjV/3iiB++XZz07mo7
vr315XPmJzz35rU6tL2tImH53tl3dsML95gQznnzjVELV/hb6EO//2O9Tw8Z
lDB5K6zX6q3Tn5yQ5OubAW0u6XbJhDCnzoNX9/m4d/L78OeVPV4699DXa/ix
+tGLvr/1k/FhSsWE4dvdNjylf35U+a2X7DkmYfPDx3N+e7lq4IRwVtNDh5Wd
WZ7o5ucNDn2kSdefx9fcM7Jm05K6v4wPN50Vdji/zayUfugp03fvd9Oy1M9z
Vzm4zvtHLkn4o/YnjLr4oxq7vukXP3Zu0Xxuwi/1u2Dug2vNSfi132//9txx
NXbTTc82+L306aqEzVNfn7DX8mbLS0Lfi++dd90xFYluXHTc49bfNmw3Joys
P2T6sSvsmRQnjP3zQdNrf9/7nJJw3TqlBy16cWKi77Brv0Y7nVOacPL7Gy3v
1nT1MTXrwzs9+v7eO9f0R+eN3j157RNLUn+8PW7ziSXlJeGP5Ud1mTtueIof
0Ac7Dem2wzu7jgn9mh2x3jdPlCR68r+avFW5UY+SsNbBx13drE55ov9ye92T
zntnWsLjd/ry7S82qkz4md9btRr/6dc19Ncnn961WVXCD+y2/L2BO8xL+MV7
Pqx6veeyNC7XuPnk648/rebede15Y+fu7c8Iw1P9P/jk2h77/TUsTN/zr7/q
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
x1am+fC1q4785KMJlYW343pFal+c/za87KdBD1VWFqbG9Qr0p+J6kXL196jz
7/juhQNmpvHy95pH/DF065lpfvv4lq0Oat26hh+tGnTb4LD7ZyZ+LL2m3n1t
jq1p/3UVQx+9aaeZafzPXPbEvLGPzUzjpXzzvU64rO3MpJcaj93r2EMvWlFe
XG/K72+9rvEha9a5eWZqxy4X/HPz6BtnFibH9SjprRe8c8XQ+k27VRU6xvU7
cfU74vodvHFcv4O1Z/Crb1w4qX1Vqv9tr7zZ/9W7qpK+X/2KNea3frkq6fc/
6vz98MCXqlL7fqt75C8XdKhK+vz0FvsOP7BTVaFBXN/zPXLe5u8N64w5u+Yd
rOc/bDXgonOqknzf0/zDMU/uPrvwbVxvJQf6r/2zl9546g6zC8fE9Vf0NeJ6
K2x+nD6+8YbzP6hp70Hr/rxou5mzCu33L66vSq/9jf74bf4ZpbNS+9/Y4dyd
Ji2aldr/yvg3dr7h+5p7qPoNOvDNmVNmJXkf8/H4xlf2nFV4Pa7HKv+SuP6a
33d7c5d2221TOSv9X/bDs/fOLal5b2zrf64reeHLWWld/LAuF084t/OcwgZx
PRwfjfdjez/1Y9Wuc2rOCU5/qPl1v8wuLI7r5dKT39PWer/nwz/XtP/zqpMX
lDSsuffqw93GNh9Wf07h88XF9XT5b4/r47B+XrD+RY8sX21Ous/wt+7NRu96
Uc07WEf974BHew2aW3jyw+J+BukualPcvwAbf+Ov2q7+uifMTfbLuX+fcXV5
+dxCi9HF/QvSa8/SmVO/mXrX3DQ/Hdrj8fW36zS3cHTv4v4C6enb67Z5+dIj
z5qb2jH+7ib7thtQ8+7WvQeMbvPqhHmJn1sPvPnWPZ+bl+bLdrsdP+rLj+Yl
ff/Qnk8+VGfD+cl+nPXIT5sM2rfGbp9/x/vbNa+cl8bD5s/fvfZ1U2veb7v4
ya/PfLlqXuGbXYr7YdgF2v/+xrPqDD1zQaHiqOL+FHTtOfbvIZ+duduCwgFx
fwq6/tn32t2OPmLx/DS/9Ru7+5LrLllY2HGt4n4eelV7OlaNvTjcvTDxd2JV
h0/mjFyY2rfVX81GrDt6YWpfkyEn/t2+w8LCtjsX9/coj7y/u8k/e8x5o+be
k2Zn7jh6g/6LCk/F/UXmffqwyzbvTj1xlZp7+7+svL5b2z2WFKZMKu5/Yle/
1r24/wmmbz9aZ8LYuussSfXfuPegHRpuVRPn/Om5Nxa1OLEmDjin0YA3/7l2
abJv33pqyrDd7l2axv8zr93ccNCDNXGeYX9tdttjnWriKvfuFxpffdXSJH8v
/rLwtTWbLi3Ma/hK6YzmI8LLNzT+tnzLpeHmNqHnvU8ODiUj/q2/Z9Ol4bA5
JzQ6/4D+4cfZqzfqddnSsMt2Z0y5sv3wQs++O0/e/KSloeK4/1W++WRZ6DRm
6b/LN1kSTvlj/CFPNJgerrt4zn0/v7oo9Lz8375DW8wMLx/X67UfTlkYusxp
u0HpM6Xhlq/bPHt224XhpXqNdpl51azC/at8uN0Dmy0IO362zri/NpsTxr38
7cyBfeeFRqc+esmMOyrDZif+dv3rT88Lw/6+ekKnRhPDuput/2bDPvPCKncf
9+ebneam35uXVxy0xtEVYY2Nnrh08+Pmhi5XrPfpDtuODBO/fmNJ33Zzw44f
PFN5y9rDC9e++3qdbR+fG348ddljA2ZOLbSqOu3DW66aG1qct8ZzJ0+bF969
fbt7nzhiTuj50hM/Hz58Vlj+yOr/Pl9nTlj4ZOcNTmpfGZquV2e/l3+aHabc
2uuppueMCI/c+MI5lSvw6f9u3XzOp4PD1JGXL+i105zw7rq3vLn7kwMLLQ8q
f6nejnPCXzf+u8dj9ReEPn0PXGXLWbPCR22+vPnSg+eE1u3bXLPmglnhx72P
O2/SBzPDa7euc0zPn2eF11p032OfOdPCq4ufP6pO71lh1NNvdf6gRVnY84Lb
Nlg8cQU+qskPp+49ONxwft3TB4ycFVZd89gJJcP7ha6jlpz92txZYer9164z
7KQHCh1v2u2p33+aFY78aeRDv43rXeg/dfvNy7+aFcaetufr128yqNDkxUX9
+/ecFXo93enUUccvDH1+mFTniRuqwrl/dnyrw5CK8OdRXf/+6Lmq0L//1HND
w7JwaoeXljx9TVXoMnP+g+P/NzhsXug+/Y3bqsK/++66zzPl/cJz9T767c7n
q8IF127c5+/LOxce+XGXJxu+VhU2++7Q1y67r0+hxxsHN/q2U1W44ZW9trro
mfGFpkNP/PX+l6vCGqPP/7JLi8rCvwPeWGPf1lXhsNEdFx25oj8a7tbp6s97
zAz7Du7Ybswfs8MVU5q9fd72M8M/LV+6+ZqWVeHMshYV9TefGa7u0eHlL16r
DJvc07r/Y0fNDNeuOf3UG++rCK3fevjRN86dGf4sLN2m/s5l4aieVz1QcuDM
EIb/e97km0aErea/P+WEFeXdcuRG7/b5cXBofPPz8/9398zwzkO7XXbMgN6F
429de+QaK/AFA3s1/XeNFXJ68iq/TB9WGUo/uK/zm03nhpP+eqhXj1srwxmH
b7LH2EGzQr8vbtjswlcrwydnbfDztq/MDJvcvOs3rVedEXrNnnfgO5dXhB97
9mu1Q4/KcMczDfvsflBZ2HKrEf/WfasyHH7Ru62nrDcy7HPmdiMfm1QZfn5r
zuTjunxauLtjuxcHP10Zpg/956LhkxaHuyq2+eq6WdPCT8uvn9lt1TmhxyOX
nHnPTyvsis2OaLvr/jND1xbXH/v+8mlhzbVmzLjk3IrQZ/7wH7b7dVoY/udl
ux/Rsix8/PJWV1y/z/Tw40NdF/22ZmlovHvTr9/edHoI9Q4+s/DLrHDY5KWF
L76qCBvXn9/umhX9fH+/g56Zf2lF+LvlPafseO30cM5tLza6/POKcNq4c+q9
clbN7xZHfrbBFY+XhUv/efCQb0orQqcLpu67uGRCOLj5S2e/c1hF+LX/bc0/
u3lEGDrk0427nlQRPh317lY/XTIk1PvllKa7jK4I3dr2ati4Q+/CgEZvNvvh
g4qw1fjnVhlbb3jhpNfvuGPp+IpwxlmHr/HwnYvChB3f37Bpj/KwpP6IfZ5Y
dUFodv1Dj4yZUx5+XXvZnj/VnxNaLnli9PCl5eHxwve7nHrC9HB0x53/mrrR
lHBtYcsd27asCKMv3G/D/oPLw6ulfy3bbNLE8PIu4xrc22BKOO6R7zc//Ncx
YauFe5x4ell5uO+9TZ/be8Lg0HOjYyZ9stqUsOWuZ2/V+qs+hW12aPhC8wXl
4ePKlusuqlNZWOf7yW2b/1Iett3x+X0+Pn9e4abxFzx/8B/l4buWWy+4/KKl
YYMHhz5TuoIv+zc6o2W9FXpt2ju9v5nepCzU2+jOd5ovrQx3dZ171sW3l4XZ
fTp36bXD9LBsvakn3NCsLExudP85b1xYEe69deDee+9SFl5t88ExJ/cuD7/d
N3bvJzYqC3NHtJzeZJ2a33Patf51ZOWE0KL7lhu/sl5ZmPdStxm7vzomDK+z
1fMbrFsWJi0d8PGmjw4Jkz87dtWDu5WFq7eZ8eg7x/QNF1798/izG6zQK603
feCQri+Ev68aMG/r48rCIQ/et+TPqU8XNlr6RPmo9cvCe0/u8uUrdasKGz40
auYnN5SF259Y44JnV+iL2Td82vyIfSeGrc9uULfHk3PDeeO7Dp209qRwyaMH
PLZw5zlh1FU9hl352MQwr/7nl48qnRV2bD3z5ObnTAxfnND4ze3aVYXdv7qw
/f6HTwz/dA7PLm08M+zReeB+6+wwMQzs+ceeDZ+pDIs7/dH5z3UmhpOuG7Tl
Hz9OC62mHtd5s1Umhm2PfqbrW5dUhOZHjX5hft2J4a+/r//92vnl4YLbT3h1
0bkTw+btOt7/821l4aud9//mhoETw1Y9X73vjffGhMvaXPPetgsmhKu2abPn
qDAirPnqnx0HHDAxPPb56Zcs/G1Q6LfnI+/P2H1iGPXy29u/cVy3UPjqu/Yb
LpwQ2j6y/Pgrnn+/sPblU1rsu3RC2Pr21o8c+lR5YeTMZ9fqvULO9/vhir5b
HDitcMiNDTb9ZvnEMPaIS28+Y/7icOBXkxuNX7U0vH7+ZudfNGt+eOjln0++
tPuYsP1vmy9+7/yKsPaSP/bqUDYmfPXhMzf8sMWUMGGnkkvvuLs0HHvIAw8t
7j0x/Nr+04tuuqk07HvgG/3/+mpM+t1n+GXNep05Mtx57/43b/NYaWj29mHT
d991UBhx9kHD1ug8Jpy5zmaVV92wLNxQuleLIXeNCFOm7bHo4hXz5ulPnfrA
VSUjwuCLn/tzt5PnhiPbTf7t744jQt9xR5b+uMqccOmMg896reuIUHnEXnfd
GWaFiy8Z3KLJCj6t9tqJzU66pyqcMPCvAd/9OyIs6z3//gUPzgzXnHL94A2P
Hxlu/2HTZS2OrAjXbrPnuqecPyLcc2ir31fdd8oKe7lrs51uGxk6DFn0wPxT
ysIGB9/wWJvvRoQtxk/868gV8/ntJxzyzimjR4QXWh7y9T/LxoRmz139YecB
I8K+vy5qdcpj0wrd595/6d2TRoTPX+zVsfWXXxXeOa+y2ec3jwwHbdRjuxlP
fF3Y+9C+B7dY4ef/sVeLp378X1Xh94vbnTHw1hHh9qfL613+0rJw/RUlx1+9
cHD4ou1WT8/Za3pYZ4/DVv/rscHhrb5P7PXcTlPCkwefsnHv04aE7X/9+KIp
K8bhepPu2u+JrYeEi25ffHnfHyeGRVdvVP74I0PCs2+du/v758wr/NX+xh/a
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
9k+/nxIR6reUrZmc9zNqUksuTIHJGZ+fVMkJf0onZzzkRNMn+vczOfiw9+3T
qjOnmBx8OFccrBJ2gskZrxrz6MfLdjGxk+QTfgSfQLWF70K8Rtph+np+qGce
sz/eCZ+JLeJp+Q9HjVmQdY8WuM2uE6fXg3Ui1oNFm2pPuYwcFuc+p9+bOaXL
brZd/FeHM5hYHxaZvCdSZLCT03/6vLLN1OaHgR2c+dbGEDl9RaYTt/5iVI+9
auH0Vw4OzF4T1cYZ9+n5Vxsn53U6u4ODV0eVlHNN9DvwyqaLD0WcGjj/nx7f
dwa2RhHPOlCL11h3Ifcnzn6T/L8xwaN5nONP10veO+HC++NdB2e8K/XuHdMY
7UBVkm9GEnwTP7i6nN6c3gbrFBS33pDuwJn3E1syo5hg8K6ydHJuB37sPuzx
fnYPZ11YFjFe4NR3Y1Rxop1TbzCLWD8YU3yPCB1i9ODWqXnSzsHB+xHZrlSz
Ns77PH9BrNnOsXZ03yx2aIZ6F6e/+B4nPm9WF6cuJ+e96Bu8v/NIO67yWRsg
lNHO6T+9nqr/kFFdzGA7+s6ONc2CJs7+7a39z9/taOEcbxrfGgdK3v68/a8O
4qrd7/qeZ7ajyUYT4/x0Gqf/ND54GS0ziTjXznkeDuL2D18q/KvDdu2ik0Ri
XzvmMwrtdVsqOOeffh5Jd4raI0za/9UXnvnsbnVsO9Y19jMz3D/CdP9p++UL
Yb/grJCTtmHtzRB6Q+vOMec2FFVIv2ixuQMcXH3Sl1a2cd7/lSM3EuftbsM3
VsdH9T27OfNs+v33Ey6dO1DewpnfhkUCj3iUWjnjEbOrQNDavoVzvyo3RXfQ
Sls495sk/d/+srQWzv1uiYwxM1JtQ1mVX3zU3grO+abf/2dLNeNuNrdw3v8F
TMnSlZX/6h7ROv9EdjT9qxuUwhAJr8tuxek65Xxue87KbG5FbdIefUnYo1h5
VKTw8Nl6SBz9OMNLtQX5wta9rnFmQKQjX56fWAsOl1jaHwxsgy2su2eCvjdj
iVDU4BHbTrjr+TjMfn4LXiTtUQnCHsXEB0oxzwX7YMkqteiT0IJn/BoFZ6b0
ccZlmjfUWHtrVhk3cfDkObF+OjL6Klx2RLI4/afxhNXspXHuIoMz3/efernT
1u1f3dZzL5aKPbjejMkG679bJLZw/j89juEXBUx5TZqwm29vj5NqI2f/9PMp
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
mj89huRP41ia7/qQ5LvixyG7dfqczeV9geqI3wG37b5ozT0Yj7s35cqJ/u7u
e3eL2Mcw1vy/I6qNcTiH2CMQvecX/LCPR4N1In+rkqq6++T1dRmLR5v4mPXX
3Uv66+Lk0qqPjRs+cr5Zfnlf/JFx9ZzPmD32+uSGopv6MdgncIht0oVqPn/r
f1Ll+cO64wBfroyvtUiq4GOmz/reNji5pzkaMx9+7qi/Us7pDFf8GH89YuTz
GJxitiZq/qoyTt94/Le4m3wJHx/RMzdfgN24Tb8Xb+oUrPL5+HhHzCgv5QJ+
/8yfyEtIWGJuG4UnW4893DWuG0eo17o0ytFLyM9n8h5k316UMiKS61P1s9pS
kQnRWD9lzbHgKxn/nx6zVD4p323nMXnu+ynK2+l0NC78U7voUKec8TiJ4VAL
2x9JfD7jE7kmiEyfE83/336uYopscQwG1koaHVSP4uer771iougay+ex/x9y
T+kQa4ri+splbt/EQeNisHXS95knP33gcUomf57yFipTO7+nhtFg8Rs+kZzO
5Kunorvn5kkxuL8ofqZeRRynV3oV1Bm+ioVjzRJYYRaBF+h+DwWy34Prp7HD
r4UM/RyNEquOLtomlcLPf/fkx62PTQm8bxSTL7NmV+dPxjG4o0l39N2sDD7f
39vU1Ucqi4+Zfaj8KTjoZWU0ttq3xJ7vyOb026PORfz1y+LX1yDfE6aNOtRk
vCsStcp+XL65s5LT5/bJfz9UpZaPf5xSKjL2beJjIl9NoDu6cfPtHZE4b90Q
/ZjjjXxdZXjO7eKI00LlULy59ZrbFPtaTp9QOrf8Ta9yPmb+SPONnNnOQ0LQ
0XWwiIZ/Kacz/9hDRH+rbHs46jjmKR6Iy+PrNMMl9LX96j9KBOPt0NMKElFC
ThcfL5uxu3e3H7H21DVo6JvKx5JjZ+67NKl73Wf89zrgZGZuR1C3/ymt8LGs
Jgy3z6n/qxUUCWz+x5EfGn5uSeBjZu/vGiN4MuV5KI4L2JH6Nz+F060WhM+x
TU7kfcEcye/B6FHO4mY+gfz7a+km7tedGo5fTb8v7F+Qwc/vuOt3s25oGj9/
1+ool9+uQk731b+iO1gun49XGjdVnT6Wy+ez9dRVykEhc18Qeh1eV3PuZCGf
35wtIqF0Pp/PH3P6P4VLo0o4XV7JpDhStruP30Y7wxkr99fy8cGXemcHfavn
Y7WV42z0n3TnAbxxsfmrf7ae+233FYMknsXWcnqChYeT2IIaPmb43S+FLTd3
23pzPObopZwE93YPVPI7vEHxWSWfz+Jvm60g0mWoD/666JajaNkdZ5xRmj31
3qpyPp5bU3k2JLOY38+3sY6Chb6FfMzWS2eXgH0T/npgcEzDp7Gbczid2UuH
N1vJb5jrhx2HUpbNvirk9J99zZ590czmvxdv9efIuGECTk90knSW8cvk9KKH
iTfz/VM5vSBIx+TtteTu+SMdBpu3xQEbPxm5/dydryl8fHO/7sbmzETeZ47x
l1ffF3eDhG/xW4DTKIsXGXz+HEmpbeqTM/n8mS7W4bLiOZy+0nCOiG58FqcP
FR+zVnJAAR8z/XvkQezINaLuGH9sa4KaXhGnx5d4Lh1ZU8LHrxr83vfN7u77
6UjwV+gnWhr64+Z7Hj+cn1F6y1HLD0/8FLovGd7A5+ObO3fPeDdyO8w0xGd5
ml4NH/vXp+qM+1PFx7/XiEe3R3bHlW0/frRd41DBx+svT3ijerCAj3+smn2r
/45U7ifJacctjsxO5/STQ7cv/fUrgfft+53e9PXM0zQ+nq+b2FPGRQjs/GEn
HI8kOhRx+uMpYe9Txpbycfza2NCa5jI+Zs/H/DL2fGz8nj4fG/+iz8fG7PnY
mD0fG4+iz8PGx+nzsHEHfR42lqH3z8ZO9P45rkLvn43VqbzzvtRUvtm4WSPz
+aRO+WZjJt9607rkm+c5+F/okm+YQuWbzWfyPYXIN3RQ+WZ0ZSrfbMzkdzeR
X/hG5ZHRY6n8sXEr/f7Mjr9E5YnRmTzFEnni/R+HXynf1/PIS5hHvz87fyaV
L3a+DpUnNpam8sTGTJ7kiDxBApUnfr9Untj4LZUnfn9UnkaKdckT70P6W/rh
glnLPOGLW6+z7+9X8/tj8rY1vkveQNmhI3Vmp7yx64lZbeqR1KnfmR3F9PsN
ot/BsqHPaYtO/c7ok6l+Z2Om31fd7NLvwNZb5gfZU33P5n+l6y+jM9xf58nC
VxF3AsCPrr+MzvS/KdH/8IWuv4zO7NXaLfFiJj/9IYKuv4yeRtdbNk6m6y0b
M3vAjdgDEELXX0Zn+n4n0fe8P2m4Uo+HvtIBcJeuz2y+CdX/7HkZP8kS/Q+f
6frM5jdQfc/mT6frM6PrUP3O6Ey/OxP9Dk1UnzO6HNXfbLyW6m+Oy1P9zcZr
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
2yU8H5fz+QzveGASPsxnihAOx9Z/+I7VnO5F87PY+Sw/K/tlV34WeCtmndKx
bORxFYZ3CA+q3xu9Lgd8aT+TJRu7+pnAmp8H7fwc6nDcjNrVgwbkwiXa32QW
6W8C4yVtC3//qcZhw0slRw7LhZu038ki0u+E2/MeoZftPozOhqM0f5C9p2OL
72YtOF2E887HvY1ZkgtlND+Q0WfTvjNa5Mjtl5vRX1SUvmRBPs0XZPNZPC6W
5Jty/lOVWNly82w2uLeSfD82n9kXr0n+Kee3A7szX3mbZnP+KVjZnjZDPhv+
ySeF0AEkX49dj61n56adhseLs8GB5usx+pXkYBnxrGhg75/x1+sZS09P+ZLN
16u8rfEby9xyQJ/m77Hz2Xc2PNvHouFRNr/O6aerhZd2dsrn7YLfs97l8Pns
eLXRyTXlQQ60WoqWrmor5v/n8eT5cwuCrXJg0H8zjvlkVXA6w9umH87cle+e
A7Xeb+YmxFfx32X5quIkXxX6HzBUefy5lp/P8Lc2oz6zvnzIgSyaj87kguGh
qSQfne+zmRM01Tnyfi6I0XxmJiesP1HfPV39ieCli/SPVq8yNHl81N/7ej7n
t0+9lvQUn5wHzeYkv5md/0UnS+P13XzstazrCIa039Qg0m+K+5MZbr22VfXN
4+tTb5KPzvXt0QG9DV1/dONSvbOtr1deygWHNpJ/zH6PrSf9SD46iNJ8Y0Zn
33t8v9U/Vw3I53K7aaqO5QOfXFAaJ2a6Syjk8wdVtytfHJrJ1xXGD8fE1i06
65nH8YiI+7efOHTkwsA9nv1f5RXy85m+U/a51SNjbT6Mu3ynf1ZkCb/eAfL+
wU/dM6Pldh7IEPsKVGfsafgrmge1m1+J3jep4tdrIHg11DkoDz3XqwACP7hM
PnOr4Z/fa4AvZ9dcHG+UDyto/7AhpH8YvFw9NL20uB6P+stWjFcrggzaL0za
tatfGNd3k6XFL0ksKIDpdL8Cew57uv+AjfV3q436Ep2PklpyKu93FPHvab02
vyH1cgHXV+nh5vEe/xVweV9X33Bv4cruuM9Wj4+C1TcKuuMan81HPrhfwO0f
lQlrjZ4fKIDdXmT/Aft9hss4vxrdwz2sgH//Ie6rtXWmFvLv/X3olffnfQr5
95Oo0xohUVzIv8PWDO0wG9sCsN7X6Jyqlc+vz95r7yrz7MWuhTDGyLvPYqdi
Tt8UdsLt4LoizgdMvqdn1nzp17sQvrYmla9wqOHz0eS5ifW0Gj7/LolXgJ+x
kayGQSEo0X52VqSfHfjQfnbZpJ8dsH52baSfHaynfex2kSOw+PaS3tKXmn8X
QRjdz8Pui30fKReva7dHF/Pv8/3FKV2t8CIIOUX287D5bL1+SvZX8fW4H9kv
xd9/5v7yR02qxfx9B006qSC8UgLPYiwj81Iz+HvZ7ivlYSiZw8ds3bL3tYn3
uFYMhyKe7ZevL+B09t4m/lDcfuy/YvhoYX9t7t0KTncstJoztHcFx/14/G+J
65HxpsVcfxvlzN7duKIYiu+/viPTqb/Z+Ww93SW63XPMoFJQHtN8LWlePacz
+7FR5Uh89bASuEH7K14h/RUhX3y91fW7VVit9t3g0Ksy8BfVjvUpKcMwcoTl
W7+5T51ShBvtyk3Xe5fx9x94+av684xS8FIl+9mKuvi2lOtP9/5zbvz3o5S/
b4OKltDGnWX8fcubXzq6q6KU27luPXoedOu83qCHs87q7EiDYUSOuZ37/KTi
2eHzyrr10NmdtTNvlMHBy8Vmi/eXA/v9xRH9htvFlvHzmT+ZdOBY0w65MhhE
8nPhxuilZ/Qky6Bt1k2roP11/PxrtN/mJ9JvE9xpv83+pN8m7KT9NmeRfptg
TPcvst9hz//y/vtHDsvKu/GxptIde63Lub7/9mCnaUnn/EN0PyM7nz3vGP3X
iVY55RArc2/I7c1CTmfyniBwWT6k836YfL/SlfP09SsH+2VKL40Gdz83ey75
4PT+puvLQV8hGM57VXK6pbzEw00ylXwdZ+uz4zGvY2uHlkM+3c/K6Ew/PyX7
WWE57b+6ifRfBRnad3UUOYIN7b+qTfqv8vjVl88mMW6GFXCa7t9lfC/Zppsg
5i/Aqb/DP1iuruTyHeal4pmtWwHX+5H9vGw+e79vpzn8uvS7gr9fs1Xqv75f
quDrpf0Ek5erpCu5PO7KE7+ftaASEkeZW2sfqOByp1L4OWLZuRo+fiHyxfhG
SzVEkLxsvt6Zt4zob+hWAfX/2z8XdtP94ew9mv90vSCaWYKS+KjhpFsVjKP9
cyVI/1z+fCq/lHI8Ciu5fbel5e3JOVurOC7Scn71H4nMSv79VRarOtc8rQSn
6N0N61vyuvUq5YfI1B9Xtv+p5HKQONrfzHFIFRRJkP3gbD7jj/q596KN73Tq
6X2bYkINqjldb1Rq64+AKq7X2Xpz8UvBikOSVSD83/7IcIX2R7Yg/ZFhP60H
wM5j+rFtVUpIaGMV14+D1Td+L2rq9ovH2Wvr1r+q5vbNykYFT7VPVfAs19f9
UpiQ3wdbN+31L15w610NGrsd4k2NSzi9/39OkT23FfF1lK2L087ImcHBanj2
0TB8iXj3cz1+c15tz7pKPp+9h1kpN6/PWVMNBrQeBOMDZ7ezNWJJZbh0Y9iI
0nW1XH/FT41y/bygBqpoPQg2/8bjk5o7tLNQxmf+taKZ3Xll5ts66uvW1/D1
sfHdmjvth2ogmNZ/YOez73/ocmhy8LUaWEHrQTB6u1qq87QLuRBK8qI5P0zP
ibQY3jlekxneo9f1bj6uov2+D5N+3/BxmuSayluZPO+E+U+9pjyMd4yr5d8n
76bq52LdOv599JpFlPt71sICQ1Jvg53P+O/kwajMrdmd19Mh9TcYnfFfYmaz
S5FGHWz/oqGxZXAk32fB7C3lvdHl037UcXur7PjFXurj6vn7MtZaUXr3dx0M
eJq1c9GxOK73mLw/MV39Pt+7HjbGvlRtPFLM6Ww9OrLNImM+NMCA1aT+CbND
mb45v/TdpM2pDeDV7tO/XjOP26lMfiNHXDLbYdsISrTeCvOjedwkJMCvp2IT
13dFX/MFiw42Qu+RpB4Lm/9WPzXcalMTgvBX9p94AY/7/AzuOp/7oafJ/XC/
yGPU2+zlIg1o+43cH8NB2fP/+K/r+Tmu10q+H8/ffz/4z5TKF3VYHkPeD4sL
su9TSr4PBkya9U6xk79Y3j3jr3WEv3DJRKdhl/3LOZ393mAiz2i8X+DjvrUI
WN4wk0dtIo/I1lnZO8UbH5dVoy3lV16Xg8onO5/JpwKRT/6+dpP1Ew2bL8ro
XM/huC+732iyPuJoul4wv5I9bw5ZD5Gte9XnNJSP+FXhe7pesPnH6frIrs/W
EXuyPvI4uSfRTxyHVknc+ybOoJLjTteIfsImsxmbN3Wu57y+CP1+24m+wrMp
H/t8DCgHtk+IrVP3HqyMnbS9Ej/R9Zudb0D1F5vP5P4A0V/8/p4T+4THOaa6
Rt4YINuNgw8g9gjHgSZ5nPN+0kln7/MZsT8wcOhWyxrnEu6Xs/c5ltgf/Pv+
+exgXRVXjuqjif5l+44dqT3CzmffN4XYI8jWtY7fZnHOueVoQvU1O5/Zm5uJ
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
YhrOGjnp6P3VL9DjwDbnnjkp6PNO7lfxnXtYemeJukNNCto8rlLcbmKHfT7f
yrvmk4a9ikP+PDo1ESfqjU09EpmCDj99XTc/fQY/Mie9GpKZgZr9ytx2Dn8A
c14vGLH4bzpOHrEs8dJPd7Da+7LHaLsMDPMi9ncqsb/xYZ8DI59/8wZby2rj
uZCBw6YUnAmuCYTMARJfnnhkoLzWm/cmwe9hvN7weyezUvDa4pcSt7W8oU+/
iTPDbqThvd9x5wdbhcKTdXpvHJdkoP9T6+2ltyJBo/Xwp2ePM/DT05fXM9aE
guuDg6MdNNIw+MKTorxDcTCy50gn487vPYva94uJfY9yB5JebZkaDY8/7fy5
yiUVhb7WS1tBAPNequ08oJ2KU4xPfAhwbsCeC9tMM8RSUD9yeZV5aAMWhTx3
CtVJwrnKTUq3rGvwv4gPv3Ksk1HaeN36bJsMzO+Te3JmZjJu6/My5Ml/KfyY
VpwwLWZXHFqlaW9XgWTUvFV2X29DHDaYx3lItSTg+Xxt32UtMTg5eGpC75vx
uOty7pmVOpH4R8xCoB6cjNPa38tN1YzA5K/3NNdNTME31F+8T/xFbKb+YjDx
F/HT0hwx+ah36Odo/OY/xxRc+drAIsDEA5cvyjniUpiEHUf+x3/EK2XKSw/r
u6PfKIcJPeQSMbx534KvatdQatgIt6PDkvHnoWXas6zvwsusaDUXixRUbSP+
pS3xL3Hx9fsyFvtvov22bZ4bNidiksawgAlaj2HWwNbRe24l4L3t2afbrF1h
+Rr3y/pGCegRfkDE6XcQjHvmfGa2ewqWyBF/tJD4oxgw9Vzo0ExvmFzgVnjE
IQFtZ+zrM8bNF9TWWg04K5+AwxYOVmqxD4bq/dnzll9IwVVuCa9DjcJguV95
6LWwZEx+KHXb9XEwiHtfnnFmWxKarZ6SvMk7EhrSI8Zoy6eg9cZHx0PmhUC4
xx5JXckE3H9PvzrfUQgjn8sejw5Owdqo4QWtmwQg1evRjrZ5CTh8iW9Hi9pH
FB480bq2OA4D+l348GnNR3xvdO+o6qxY3GV1RP3v5mosEGh0GHbaQacNZYek
narGoNtHetcqxmJvqaxNFW2Vnevmrevbt8fhWY8x0pY9q3C77bWKnJxYXKy5
S870RQW2nbtX2K4Xh/me5xJ/eFXgs4j5pZqVsdj+Yv+1h1vLcVjKJe/Zh+Jw
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
5mONwPJ1UnI6a1+hu8lPNyuK0dz86m8fVGq1jofXUtQT56bF4LDePGceO0cz
YzncqRASMDpkh/csh7ocdg7g9hO7Kved4aPNyEGHgrcEA/d8xY/TU9xG32P1
bDb39n8EG/vNMJP6yGPnBv7aPbllWx6f0Q9/VG+NupmDqitPG2l8jmTP49bb
ppeOH/VUBIw2c7xo2dqRw9bfvUmoODI5BzUo/mZP8DeUprhbf3JFO9uFCbJ2
PfqPaMQ2+z083EbzO0aS/A58RvG4VwSPwwsKRtl/V1XByHGbp9wq5mEsxeeu
EXwO1Si+UUfwDVRe+WTyoG+14OC12Mmm5/m2NF9kFskXQfFygn8oEfwDi9Tv
lLeUtEC2WbiT4AIPr9B8kvTA3nwSdk57SEFZc1J3JjvH+dgk/D56TxY7z3nO
g4cO962y8Xtra7PANwkP9dYxymbz3TLtUeaXQ9moJJ+7sxpj/3/t47OmrnHd
kc7O8QzPHQjTesZvXe/6CsJoXviI7VGZ7NxP7UH4VTI4m9ExIfv9nMQykJ13
Y6cePfZmNqO/dKZFvPqZzubLuKJtrc6UDBxlqjTYxCgG0nvz4jNYXZlT3Rne
f4dl4cWn++TE1icD9727Kb5/m+D7uDbzdZOZeCbIkyuGUpzfg1xxK8X7mwje
j6pD5fTiRAvgEK9JYbxNJiYe/Dgj4VkRKFYEPvM/nInvKN6vQPB+fE/xV0WC
v6K58MvLXwJq4OniG6HOtzPwpw7Jh7pJ8qEwkeKz5X968Vnsl/rjpMTtBlAe
ofs3LCADT9F8qUMkXwpn6O39nrGoGZSST7o9iMzADJo/VULyp3AaxXedCb7L
1sPXwpf7Lcenon7qCrx+Jhlle7dbKp7srReRjB182fCpgclsfTiMzvzAK0hj
9KcyKcfRGkls/iaY7Bs4bUMaO/f0fYiLlVtmKholRnpfk/cA7vncfD7xGhkq
vygNt71Jc4p/F8Lauf2sc2P+15y2NHZupeGU/Pldu1Ix3U1LakRoBOuv1cvv
omGSbF3F7cg0tr//u9P+5YOgj/Y1aC7zzk/CfvsLO+dfDgPuP490HLog8jEO
fN+ohpybloJPqf9xAPE/4orTwjbteikgTa5YSv2Q0eSK16k/Uob4I1HH483D
5JpMVm8qRGTaKrTrO2cksu5YtrJXPkxMjPl2VTcZZWg+oCjJB8Rb1P9Y+LbX
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
gXdNvVLg7gLs9n21XfpxKRjQ+h3hpH4HiKwm9Tv0Sf0OOOwx89n0BXycMja+
W/JJKdjTeh6ypJ4HiHWSeh4DST0PmGwaZJY3NAHnbZmc4JpdCtKBpJ5lA6ln
CVL/W+8Dgmi9j3Wk3gfk0/oiJ0h9ETBJOt28vKgez8s7WuY8roDpUacPp/yq
Qcs8zafbplRAp4HX0f0GVWjA1y0YP7oCEmn9E3tS/wS0H594IPAuxYFOZqGu
qhWwi9ZDcSX1UMB4YLH2wXMFaPbk8jV/wwrwo/VRtpD6KPAVPk4cL8tHdd99
55OVKkCX1kvRJfVSYD6tl7Ka1EuBNzcdtRN79KektmwxN9sqCKL1Wfzie+uz
wNqbpN7oYIXeeqPQTeuJziL1REHj9+knJ6IL8LfqlT9v7lTBAVpfNIvUF4Xw
0HxDnMlHgxNeLTf3V8F7Wi/GmNSLAbH/rRcDGysaLmWsjUIJuFfsb18Fj/63
Pik40XoyVqSeDPQ/1D3DdXwjRoUoCY2prob7FoVHzRfW4sYjFvsHNlZDC61X
s5bUq4Evc9S3Zb+swCd2Q1b5dlTDW1p/9Ripvwq3de/NUOjZH94fPFXFgqvh
9c0nF17q8nGWsf2wD1nVcJTWy7lK6uXAbtUVbdpzotDKSFLndUI1nPjf+q2w
a9uAOxt61kPS8cln3ZbWwh0vt44lcdXYfrV/t6dYLeS6Xxi2/kgprhgqNu9B
ew2E0/qwM0l9WHj1v/V4IILW4/Ei9XjgtZ3fDTX9eLx68K5+ac/9b2h9nyxS
3we6T6v/DnDsmb8zvVewpfWBjpD6QGBM69dmkvq1oLKP1AsyJ/WC4PqPggUD
VhbguOFu5qPV62D3nqHvpCclYFa5f0vI4TqY+7/1biE1ekh6l3gt2j/4XBER
Ug/62td2ljn0rBeNThufm/Wwm9YvciT1iyCD1i+SJ/WLoPGPZaZjjz05Xlwk
YOazesgXI/WQ5pB6SDDvf+shQYcGqc+7LaO3Pi/8R+srfSL1laBhV3dIjG4F
rlX3827TagIHWm/pCam3BLtrrYeleqTisXKLW3rWTTD8E6kPvJ/UBwYDWs/p
CannBLz9pJ5TFKnnBA9/ZSi7SRXjwx215zoeNcMKGVIPah+pBwW1q9eWBrjz
USzlY/ePkS3wvZzUI+5H6hGDxGdSX2oSqS8FM2h9qQ2kvhRcnvEwtWxTPGrb
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
HI6dtrTZ7nga8Cn+U0/wH3hI8Z9Qgv/A9FPRGgtCE9j3F5Bxx7wJ4rd803ra
KT7EtXP7YSPBh4DDA3LSSxOlzdLAHkm+Avc/7XIEP+Lu5/Cj4QQ/YvEaY0vX
t8wemgZpr0k+A3f/TpqvwNErKJ6kSPAk0KV40hKCJ7H9tEkmMW26ehqoxik/
PFYcz+5/QPGjKoIfQSHFj8YT/IjtJ97f0CaDselwxnJbv88Zqez+zk3nF6V5
Z8Am20cyogPTYMZFJUW9rAzWnk3xo6MEP4Jkih9ZEfyI7acPz/NW289Lg/s/
eR7jJvPZ/eclT8Tcba5BSbunt5uX50D4q8EHjl2uRoUHAQ55v7LBrXuRkqJi
FdbcUnq/KCcbhuaOHjviVTkO7F63TiQgG15T/FeB4L+gcXToAmmoZOctzxn/
2E5UqBTvas9SOn0qG4QpPixN8GHIHqAp89mojPXvUvi/iSvDy37lFlaafKjv
0up6pleE+vm6uxdaZMMyiicP2N2LJ8OW3vO0i7G7vvjGx6886L6++czP9/lY
Gj3j9hqrbNhJ8WYewZvZfpVQqHO/84oHF24YTb6nkosLzw38230vG+ZSPFqd
4NFsf15Qm7pQ04MHsZfLwjQf5qBK0PeH14WzYO7CoWsSY3lY4KJgl1mXDQso
Pt1K8Gm2P7fLaIY03uHBbAPbupPV6fhVRe+nyukseHDu3LsBnplobrEvO3ZB
DkhQfPoAwaeZvPHV3t6dFMyDKopXdxC8GhZTvPoJwavZft3r2tl4LpIHF3MI
fs2N7z/4NdtPVX+WnU+O6ItP23XvaJ4zLxsqTxG8mrufkyejCF7N1v+Y6J2v
byzMhhl/JqRddOmLU5Wl+HUpwa8h7y/Br/8S/BrMaL4X15/bty8zvbf/Fs+B
sF1TLpdlZrH2Af9JhU/w7RlXxW36JwKzoZ/Sllb1Jh5r72qpkXn3pRzS59Wb
bp+aAy4EfwKlpQoRW2OyQeqXz0mDJRWsv7ZU1dqi9aU4xjXqr7qcAP6+2CC6
2q4Irf6IFh/4wodP1L+0nfiX4Nydfu3VWcXsPG5u/b3XKNirWpcL2l7tp5cE
56NFxj1TqVg+OFN/1D3ij2Lrr7/Lj18XNueCMPU/hRH/EyhQ/5MG8T/BoyPp
4iVdqex93Pz+UPj1yNA7Fzbm7vPU1YpFoZOGt5b27JeO7UvCBkrE4+a4OBmJ
uQJm114QiZJTfM+HjTokP5SLh7srRvI5OZqb/6KRdx5iBB9eryD5mVw7O0de
aYubYxwfTj3Pu671ti/ueDb1j50n/jG4R/1j74l/DBQtbk3flJAMUeYu6043
8xn/03L5+sw2gA/zsvRjTa6nsOeFUf+YD/GPwcsX35YElWTA5qe5y2yK+FCx
eITggnEm669I/WWLib8MbvwQ0g89w4OGxsNmI7L5IPU2M3v4cx7rr6U4NXv4
9Fz4tSIkIaSYD1lrZkq825bL2t+aLh2/82s+vHet+bV2sIDpD4mdrYI34T3f
a61557R6AesvcXhv17cbRTjTR6y89EkeyFL/ahXxr7L5dzc4bXzqRz5Ej/qk
dUA0E8WWLiy96trTn/pf1Yj/le3/pLkx+bvb8mG1UJuln3AsSrefvSnVM56J
ZvKtzbLxWD11sl5Cbh6YUH+tAvHXMvm662fD8OUyBWx+TaWj3J4Z5kG7Acn3
HkP4HJhRf64e8eey+T63X9T8Z0YetDoS/20c8d/CI82ltgLTXPi69IXDvBd5
wK3TEJuTu12O58HNg+LrTQpy2fOPmhzWXPOiCBWthVY2mRZCNfWHqxN/OBuf
+nUn0oV8i8Dn6AiHLa94uEV+44uZiwvhKPWXyxF/OZwVnNTQlRSw8945ftsy
Yffs4SLFIJTiU3FhXAo6FhhljdQuBEPqX59N/OvQWS03e/aNNHY/t790Lj5Q
CW4rgkXU/z6M+N/hlX5O/coNKZA2+esmmz2FbP0eP1e5bIRhIaym/vdRxP8O
mjSewIzEE4B80Hm9e9qV7Px3n//73FcV+Cd5rnt3ayk8vTh1e2RWEYrY394j
ObEEmmj8wVcSf8DGB78KFWRuK4XOYBKPsInEI8Ce5mf+b9/w2fO58fCS9tr/
8lgpCNN4hbEkXgEqaPzEdRI/ARN+ecaXiRUixze5913yNHq2ZXoFeNL4Ck8S
X8GeD6WzH97oLoclNN7iBom3YOtPcPzx0FXCFVC953/iLyCbxnNEkngO2LVo
2SxxXz47H557/ptrOXMEPXQTjQe5T+JBIEqhYKeIkoCdr871f7U9fX5ATDWL
B7eRTt+6WrGB5eV9bp/zfatXHctLG5IQKbEirY7lxz7yHBm3u66O5UVtFx25
1iuzjuWJmD4fNd/uUR1y53e3tJ6LtNxcy54fVTk51mVULXv+hyqX8Weglj2/
c/2nzsWGtSy/NjFbUC60o5bl0wpF/fXz6Hke9/6xL59mqSjVIneeuqcGb9Os
/2r66gU8fDc4bFwNe19ewVSXEWXV7H3Hd2UuDWyvZu/LNH81avCPava+7f3W
TuTVV7P3fX8dpDsbq9nzh8fru98KrWLP3xJ25t0ztyr2/Ksxh/mf/KvY8yW/
o6x/D83im+uXehpdr2L1IWRnikdpx1WhKxk/2HHF1dM2vwq589X3rRVulJhW
ycZ3tWHI8DPLKpE7r/3IRzCxVaxk3/doX+vHpsQKNv43XtUc+Wxawb7XQfXV
5+TXFX356yfiA3RLK9j3jnXKVW3NrWDfez/55k3jBxV4j8Sj9+h1YkYVUn3v
lxspJrL6aBl7/9O1M+/fWVPG3j/RuuKStUwZe7/q83G5ovZ99KKD+d4Lj5Sw
73n9x74SvMoYvaSo5bvs/RL2ffMX+o9pu17G6M7kG8FaV0rY924auWX7QZ0y
Rg8RG5+9a1UJm8/1Xfw5ymWlOH/F/gKRor51e/Rm0Sr9ijr8XaM1ZM2IEvZ/
XmqDVn8XFLP/23P8Q41hcx8ta2GgU/yqLw9562i/Oe8uFDP6yfP4pyG+hWw8
RvBEkveOKWG0SmKYtZN6Efu+Ax01/CvxxYw+Jnnd41tjIa4g3wPHxqaoSP8/
33dlSMt/dqsLWT2MNfOtPMqTCxideW+i3qzfeex9d20OlMzw6at3sjr+ymkV
+Xw2H5tHtO/UGVHYt76nT0g6753P5uPxvtU3S5YXMhqeO236mJfP5kNq7oLL
O+YUMtomZfHBjMR8Nh+vps2YP7GsgNEbN858qGydz/jJrXlhcqUShYx+9eaF
/J4d+ex/H6Tvi/NOzWO0/5OZt16YCNh47x8eJLxzTx6jjeUXNtX/7svD3XRK
RWfolr483f++bjWtk8pl/7N/4qTDy67lMXroTPlTkaa57H/kUUGt8FQeozHB
qmmRTi77n99GM6c1yOQxespor7GHvgrQ8PIxOYuNJcB99xnlaW/780ogy7nh
7Jx1Pf+1reb6YdtGVielPeui/7Vjjfi6Q2HXIMW+/1OsEto9PZDP6JAT3VM2
7+Ox710lWXbZeY2A0Yd3emruWsln9CTpbOHwtTz2/eZdVS71KgJGmzToJ2Uo
8RldkfmpbvhSHl4fMNfzUlgly0t59TtNtX1QFUT7+g4te8nHRdoPvfaMaWD7
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
u2Kzi2Fb+trFqmW1uJX6BwuJf8D2CdHNmrNW5UAthl577+YwjMuuryrDGWrR
WIMt87b0TnpYjZv/+4wP12AlL0bsd1c1mktcl7fqLkfTd2UaTxurkelvsmig
RZqqczX7fniNJYd6E6rwgs+TU4GPeMj07TGT2baiILsM/Vf992IqsUXKeumW
NyVYl6By8fbdavZ92S19O+EoVmGOxlo52eB8nGUtc1n1WDX7fm4fLKkPrK/C
POl1LycppuHzVIs9Jff/9gEuPKS39NV/++qPFnSvSsSGgSKdnsrVeILGK5pI
vAKHPxyomt4ciYfFJXQ2XalGbxqvCCfxCtycKDY1utEXF0pPfvDZvRrLIkm8
YjGJV+CH0Zk1B2ceBzFJuRnp9tW4/zGJVxwk8QrkWuTMduf7g8WEjQ8SVavR
n8Yruki8AgXmXZ+HLQlj+xpJdP0Tf2DlifSJFcft7KpQeZvRn49l6aBdK3Yn
se95hN3c63n3YCY7v/uSe7vemDS2LgTTH9Vg6Q1RZetqjPm3fwT23//fCyzH
7HAJkbu2lbhla/H+Q1sr8fehA9sGDqpg35PczafGy4LK8Vv2Hqk30RXse2f7
j47Zfe/HsApsrAu0POtUxq470/Zr2OeoErywPrHS8FMF+34nzz09pWJXBV6x
iTr8M7KQXc/abObbu+IFWLsycNGbrgq232xp/CWNC/IVeMlYXuXLp1SUv/TD
je9bgZ/lSTxPm8TzkHfifnvxMkTr3g+bHktWYv78N4P934bAhSrziLHDKtn+
38MUB/jflK/EKfN32X1oiIbhVxaU87wqUMGdxOs8SbyOff7J8e4PBhyvwJff
xmisWBTL9vUpfrFh7d2WdDDxkxhfVFyBcF76bp+kZM/7zjEPTLuWxtrZzPvY
IdHZfb+7Aus2P5FK8ikEyYa3h/UyKtDw6+2XpVOK2PkX5RuXeI0sZOcz/Wf1
uRvsO39U4KGLHoObZvNg7zaHs9sqKlCRxgvHkXghMv1oUp1DjO8MrMB0f+eY
spc8dv3u3Cmnj19qQ42sNQ5Vk0uxKrWz8NqURva9dhb+p8gbsBx2zDocW4pX
aX8WRdKfhX3PfyauWP4ay/r2v8JsV7lKPJJZIG6xvJTdP64Ny3h6ETx23WHn
6wz6nSxl+1VI8fonN17h4dGL/D9fTpbhbtI3HHt3+/Z79YGLPbN/yXDKyvDd
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
PntcyUD11tdZ3KIydnzmsHF2k4ZUwtpzWvOmbcvA44Mv9f7UrmTP28ruXNvy
thoulItc0rDJwN7gtwsCzKrZ6+/nRfhIBYSPhCsoH0mC8JFw2zdJ30e3mrCT
/8GyH4eDW/b/zsFpjbhq/SbdiWYclLGM92or6dMXD8dkrjbn4MQ1sHG9owB/
7fz4UsmLg/g78rzDJj42ijuYRBVx2Hjjp8fSEguepbJ5j493xzjWNHEw5OWd
VcsUK1HQfOhU0/4UdKR8tH2Ej4YOy5deFimvYL+zg59OqtYgD+t/cBKm/E7F
+S4HFdac47F1Txn56pE9tDTLhYNKmbe3vGgpQ5UWxURlyVTWnp4S6/rEUSGF
tY9Fwg02JJ7iYKPBvIo/qWXs7+UlVsVN/lzCfnexA/IyviQU4vznk2cqG3PQ
KpebkllfgGC0Y/dkbgoa4MVGh1F/+7Qy8jj5Ualkw480Vv7V5MYs+XYwDaeA
d9LM6D6/Wb/zk+L0VGy75OCu9buYjZsz8vvYlOP3GkxSWL/8qOja0482cbBW
vVrykUMxe73M+cOw0ac4CXHjo36HT33/G0eQ/5lQW9T3Shfpi3t7zOTgqKrc
xHcu2Th52aTrkYkp6OSinek0NZ+9fkbeaxmvqM38w8FBYwL31q7JYc8z8nZs
02nva7Ec9v4iAiTfqacl46ZhSgnK6gXs9THyvqtd9LRPNuKFE2su1fX5Hcz1
VSUYv3zulI6Lq285v/+Wij8dIuqTVvXty6DcvIE+Kazc4vLTbl+6zsGesNX9
DhxPY6+H+Q6uegaFC9b8vb4S/zUyqcnJeGPbIff85Cz2epjv2NM50KJGIwmX
Ldg0f5hdFns9zHrdZuYFBZiMR5Qlru4bzWHnD7GXm6dzK57t687Y068rOw2/
DE1D7ezZIiLvElmcDpNfsB5vW+K7Ow2lGnUCpERT2fmM/DzhMTxOxC4Nc7sH
Hli9hcPOZ+Rn9gBt1WPeaRi/bMNMi+8Z7HxGfsY1HtkoeJmGFSMzVd6ZZrHz
Gfu5wz1MXyU4DUe5vF9f25XLzmfk5YqaZVnSyWns+Erj8wt6+/YfE2+VqreY
mjGAgymXXt/uZ5LNzmfOK2XfXBZ2NgkPJrleGZSbBczzXN9ZNkVVpYgdz9Rn
O6tZYxcwmIOWsj5Pqj0L2POMfLXYb/VVTIWDz7KNnusMKwX10LcOPQ/6xget
EwzVLGXHy2p258j+KmF/7+ag6rQX90qB+Z5SKb9UnvBLcQzll54j/FIUUH7p
PsIvxQzKb54hKeQ3Y0S4UUy0iAAVIx5ur9wRh3qUzxxI+Mw4JNpM+0IbH0eS
94z+vsa+Zl51WKpsb/p5WTzOoPxmUcJvZu3dwtXXFgbeeotOj3rcrt2oY+fL
w6y9SWdrWLuBsW9LPqVHbcuKw2yvqhdRWeW4MGS8ecyKPnV/213STqeKHR9Z
pb5sOJaxdkW5SMTIT3U89jzzPQYF9K58ZfQGP5unREzeWsCOZ763AccbB3QE
J+Iw8w95V96kAHN9zH7VUr+8p8s+CaXHvlWZ25XK4vaY/eo57/IW0TlJ+JnY
MeD/YaRsQUMcXrh5xuz373R2vaujn+91n53Ozmf28y3JVSorVyG7H3P69mNS
biJatHDrxB6mAnM/zO/9mCweYiYVhyGiNQYGtRx2fYaX6zprCO/RptcobVkV
rrqTA8z9WljP2T12ehE7ntmfFSqlPxLT36J8/sW2rdwC9jyj3wecbOiq2vkW
tctixp4xLWbPt1xvLw2aVMJeH7OfM+82bMvRi8FFlr+95l0qg/tKHge9u2NR
bItAusi3jL2eI0RfguYrhYwrTnHIo/xzD8I/x02Uf55J+Oe4nPLPfQj/HBn+
+SHCP8dvlH/ekyPkn/ftD8I/30r459hvCqm/MZ/U30BRl9XRIc8asNlohIvz
z1A8SetxdI0Q1uNA5X2NoY4PG9CU2IX4mdbnsHQS1udAph7HAlKPA5l6HOGR
wnocWHxZ/nBiTQ1ee2hxTkwpCk1pvY2cGmG9DTxL6218Pi2st4EG7xcP8DhS
jqsnzufXfw/EKFov47W2sF4GtkpzF75z4OLGufY/z8VH4eM1M0V0nhbj4Jiq
pf27w3A9X/Gz3wIeLg7T87AsC2PjWbdu+B8YGBGFcy+GexRJ8Nj7YfSpTkZl
eCU3CjeqT7NWtypmzzP68cxZnw3X9SIRnuvcOnq6kI3DM/pw3Igvqls+hrHf
m06OF2jJ+KHavUlfn00qQG0Sl8FjnoWL2z9kADPf2FZ+mOrsbGDOM/GLrEHr
fZvTQlHbzPTqNl4hMNeTL1lY1fI2j53P2LtDH8x59mPVK3Y/j/Wc0uk0PhLn
GN1rnWdewM4ftWPzIsU/hex8Zn9Ht1nNn5wWgFAx2+qAVjF7PXkRvlvnjimF
fj3K8933RbH4C7NhD0e7VYTjOzOvzi/zStn1mXivpibEjfEJQJdhMj+jGkrY
9SzKn4RF6Jayv682pVz2/ohKWLIy/NLN4hD87AWXrkyvZMdPpfUrEgTC+hVo
TetXFLYJ61egMa1HlaYgrEeFz2g9Kr1OYT0qZOpRGVwT1qPCqbQeVc0RYT0q
ZOpPfdgvrD+FTP0pFQlh/Sm2flR7mrB+FM6m9Z5enxfWe0Km3lPPFGG9Jwx5
ekb9SxiPzbvkXZueensOlz1Obih7YvitkD2eJ1Gv3XmoCJjjpcvjeHVJXPY4
8klR9QfPUvb4Fa238/SZsN4Obqf1dmRIvR2cTevrlZP6eqBK6+udI/X1gKmv
107q6wFTXy9tt7C+HjD19A6fEtbTA6aeXhCppwdMfTzLUGF9POim9fHEngvr
48EAWs9umYKwnh3Mp/XsHpN6dhBMnw+TJ8qlz4c5Rvp8mOO59Pkwxyr0+TDH
EfT5MMdKtL6ZprewvhksovXNgmYK65vBdlq/kUPqN8K0dWp33gsaMS+95+em
iaFQulwlV6OtkY2jDqbycZuxUD6CEpWHjJ/8lNZvlOoV1m+Eelqv8RKp1whr
ab3GTlKvEbKGS51YM7YST6Uk5YzvCgGttzO4bgv/4rj8UwTfXDeWs3Fexp8p
DjukO/xjOGhT+XacyDc2j21N5BsoUvnGXB8j3/SJfOvT40S+MeeZOPCf4spJ
E34FQ0i706PDYnns9Syj8o65HkbejSDyjo2jmhB5B8upvGPm76Xyjpl/mMo7
5nwGlWfMeUaejSTyjO0XNI7IM5hG5Rlz/W35Qy/M8OTCEd5To89SL+Dkwyu/
xHL7/PfRSi+m24XAcCrvmPUZeedH5B2oUnnHXA8jv1SJ/AJHKr+Y8+ZUfjHr
AZVf7kR+wQcqv5jxZ2m9TJl4Yb1MsKT1Ms1IvUxg6mVOAGG9THjxxHp2unI9
7rnY/OTorVhg4rUR3zgfZ76PhunGqpYDNOr/+iHUXr1M7FUYRO1Txg95Ru3T
n8Q+ZfmaucQeBWtqjzLjjygcG/fNtwq9c0bZ896+BgbPHDndWarmcgwcd5E3
UbWqYn9/GrVfGVwhY7/mEfsVxtD6ri9IfVdooPVdl5P6rnBhzzpfvkwpu14I
tWeZYy61Z1ncKN2vP1eMvjOWEwOjV/jsmTcujx3P6Gtjoq/Z/elH7F+oo/Yv
M15uX6f7hLEcMDCzj8u8FANG1N5kfo+xN38Se5Ot+/KY2JcwnNqXzHpPqD3K
PE9m/5YQ+xImUvuSOc/sx6HEvgR1al8y5xuofclcD2NfFhD7EuZR+zKJ2Jcw
iNqXzPUw9qU+sS8he/rIW5K8Kna9V57aE8+a1LLHEYly1Xc9+ezxXIJXgVZl
w6KCuBhIpfVwV5B6uDCXxl90SPyFxbX9DhPGW6CKxluY5+gtN6LN48hfHNDj
WP6aa08K2WP370tm3BmVyx6HzjN+LteTzh4z/ooI8VfYuFgX8d9BlfrvzO/Z
cuIz4lamQn0DL+KPdxJMdNi58/5tDpwLPKvGfZ8MzLraxL8BMerfMLwd9rqJ
f8O+ly9hYZ/nTPg77sO9r1EmGzlw1bStONU8iZ3X+73wYsLQTBDbJrPMRikJ
bprLFr4wzoJ7paedzromwwnqDzHrMP6QPfGHgPGH8ok/xK7bURznf+pnCpgM
X5b5bFXa3/ug+zM0tulLoCYHrO3jlmy3TGPn/Z+/z/I1FxN/HjZSf55Z7//i
ARBE4wHMesz+PkP8ezhN/XvmfEzwBzdxLy5Ma7Np+2aG0BI7f7sOpwTa767/
1D0oBSZSf575vXLdRX4SwypAWSVG1XtaElyn/j2Dy2xoql7terEKutVvOmre
QDg3b3rNswm14NYwMMTBCaF/74uteTkCdjxTP1uF1M+GA7T++f+4uvJ4Kp/v
X9qEEKLlo1IqFSXt69GiPaFVpYW0ikSpCBVRqZDIElmSshSJQsa+79e+Xvde
l2tpVVLU736bZ8br58+5Z57zzH1m5syZ99nccf5z8GLsZXLYXkbl7VK5f/Yx
SGPsY+S7vWfsYx3YPgbEHtaK7WEQxNjDSH97EyuTmkmNaN+rSwGRopnQLu64
eVZhA733vmXsZanYXkblcz22j4EsYx8j/MRape21gupQvPHFz/3amTBXDU30
O1JH+RE8tgbjsbCAsacNd/9nT6N+9PrYXgbnGHsZXWe2BuvfLK9Brntrn+rG
C/kz8U5Nm1V7tvVkwZFbvEC/sTX0fYPwXrjC2NtasL2N+nlrY3sarGTsaeR9
Mxh8l6zbQfgurGfsZwRXOO80Q85Hg0XfH7jnys+THqVo8uaLztMnZAHxm3KY
bfVzjIVQ7xjj0nTfuZT238Pgt+R9BL/NwPgt1W/qMH5Lz5tX60161fZlwdW1
SReGsAsoPysGTyX8yPmzDeOp0DoW46mETvBKOYynwpvbumcmFWVRfkS+lWP8
E1gM/kmeJ/LOFuOfMIyxH5HvM8h+BEsYexHhf5qxJ5HvHyDX+HpreiJoRUz1
qhHOt3xLfnSGbjLYe3h5yf/NgkF4J/TlYryTjGcQ3gmb1txZCDvS4dPk85t/
C4Trfa/7c4fgDHBbejlJUzOb7vPTGP+EKAb/JPwG4Z+Uv9TJtf537mWDSVK8
X4taCpWTRG5uP/hMXa0hBzbJDHWZZj0gN5/fqim/7pEDQ0O/ocyeTFCdOlqz
d0weOML0uavNsymfDxhPBcTgqWQ8g/BUOr41t/IClRbkwEHjEXsnv86kfMhz
zedWi6wV7l8z5069x5WZlA/BX1dh/JX+vpG3/nd0fg4MO/BjV6pcPuUXx9in
SD/nl2fuv2ljga26y511zpkwCD+FRYx9ajq2T8EjmR79ZrdSoPsHr3foWrl9
p4xuNtU/JLD9CqYw9ivyfqIPqz5dOYpXkQM3h4xVPtFaTsdTztizsrE9C1Yx
9izyfBpjz9qL7VlgyNizCF3ReX1CnwiXji+PqaeAcD0FmM3Y18k5NMi+DsR+
4oPt5WBZETSsOqmE4txkfy/A9nLIqZdbVd9ciDT75s2aqpVP9/fL+Zw5h2cX
wJNnOVlnIgvp81MZ+zh5P9nfL7B9nO7nadg+DoPs11B7WHHKXkEq5beLsS8T
fgTXfo7ty9A9HNuXCZ3s57PYvgxtftj/iPBLGKchouj5nrbXZmB7M3me4IyO
2N4MV/MPSvWHxKITRjy/PMiDEUw9jYW4ngY4MvU0LHA9DYrTaIoZPNd1K6D3
7KbY44aehgVQtRTbl8n7iH15LbYvwwiuTJfe8Jfw64OF4fcT+fDy0yrd63te
QrSqQaLq0Xwo1e10Oh30Bq7ugL36EwtgGmOPJvzIPW8ctkfD+Rjsv0TsxISu
hP2XYBPjr0S+x59g7M9E7pUK8pGnTixOB4l3h5/7iAu/V5yVUm1kBizZP/uo
pEMBlU+HsX0bLjP2bTIesv93Yvs2/MzC/kuEP1nXPGzfpv1berRWquoWgr63
uqrDsCw6vvVK/EMr9xaCn+aQzXbv82Cpax/39IJicH0lXxzpUQA6jL2bvJ88
dw7bu+l7O7G9G7p0Yx+vls6FRxo+kb0R+RD9Jjr1PTubfi+yb716Dh9f2ZJP
+crK9h5ZE5gHJ48XXPy1M5e+51dKy3XvvwPvIfbzk9h+Tn+fU/vhQGp+Icxu
zTz3Z3wJff6Q7pzwkdPL4RJUdR1dkg9nGfs6eS+RX13Yvg5NjP9VNva/gktH
xJPvWpXS8RP5VTRk1i+uXgGVX1HYPwu8GP8s8v4Vb1V5Sq6VwNGSXjKlKg+I
Pf4otsdD30a1ujfWdZQ/RI80br/fSNsx2P8esvilGZZzC8D2bI+06SEepZN6
Ujm4nhQQf6nH2N8UiP+TAPuX0vtxKvYnhUWM/yjRo4k/kgv2HwV7xl+U1uVj
8KAw7C8KFox/KKET+fgO+4fCK8bfk9CJvFTG/p4UP+Jif3tQYPztyTwTfcgN
+3NSPOkr9q+Hy4x/PelP5GEx9t+k92897E8PiYw/Pek/yH8TlBn/eUJfyNRf
eoTrL0EFU3/JD9dfonY/ba2Pbp+/lFB5mof9Nan842F/TFBk/OsJzj7Ivx6u
r1G+PaM5AL1gxy2X2VYChjm4PpMars8E59rjrNwy7cBjyrp027klsMAB12dS
xfWZwDAF+2OS701wIBXsj0n1qUjsjwlJt097Gc5PB/tL3+ycppSA40lb1itO
Bhxv6Vec11sCexj/SsJvkH8lZDP+lYRO5M1N7F8J7Rsmz5v8JRvY/GITvexi
OMX+alAjPEfmr9UrulVSQuVBOPa3hEH+8QNyCvtb0v7TP2wMyhJ+L6kp7FrF
n3lULsxk/CvJeMjvY7B/JTiMXNjx8WUReFpI2FcEl0DqjGC5pS2FQOaDyJO7
P7fXabQP8DE0O3fRXrsEChtGZ23RHuA7m/Fnr8D+7NAjuGhnsr+U8iPy4mTQ
lfKyqBIqLw5if3c4yfi7E35PGf/1UOy/Drrcl6V3v7AoPyKvcr+tfAxPS6h+
dBn7t8MKxr+d8FvK+Lc/wv7tcOGwknhSXiXlR+TRjskrkmp5JbR+uxL2fwdJ
xv+d8PtTe2l54K8aiNus91mysoTiOz90ryg6PCiFYre52S91amn/yCOJixd0
N9P3Xcd5KOBkoUnc7O8l0CER+ZlrxUY7s06bfnArg3dicioCXTaNGyDxSnY4
XgnsmXqJsbheItxi6iXexPUS4XvTGKc/io1I4dyw2a8PlUGl74+6KJ8Gyo/E
MxnieCYq7/g4Xkkob3A8EpknIu8e43gk4DLxRYQ+KL4Ink2P8Bd5UI5mjCzw
EXlaBq1Mfb8QXN8PSFzd6SGByuG7WfArb0LmWeWBuK4GifYUj+OlaG3/ofyv
MWX0PrnYhZM1srsMPATduVFDSml/PSYeiYxnUDwSbMosUHHXLESvFqKFRnfL
IGLu2h7lD/n0+eprOB6JPE/0y+c4HonKRx6OL4Jspv5gEq4/SOVftU/FsMvn
WFSemeN4IgjTPDQur/YdfV+jCI4vJHEkpP8GHF8Ii5n6g924/iDV/7oW1pe6
bGZBTheuLzgX1xeEEl1cX9AZ1xekdiqbyE2xw4+x4BILxxuR/zco3ghIvNEl
HG8E+8/heoGauF4g1TcjZlXOmTOHBRdyrtrxZr+AXj+9Mc9Ky6BMwWruz/hw
CJJZGAEfhPv6iMvHoCuxYHr24TwLGxaccsDxR+T9RF+MxvFHMCg+EVSY+CPS
f1D8EZQNxfFFhE70vRYcXwT7mfhFIieInjDSrXIxui/8P0z8EHl+UPwQDIp3
BF8m3pHwiy/1/djuJ5SjuQtdFpwtg11MvA/hNyjeB3rbrw9bUlkK2+u6x3gI
18u0ppj4WbuE9z9m/ol8XFRrtEhCj0X5LFsUxpKLL4MR52VMIiQG+JJ4n004
3gfyls5ZWvRGKP82xaueN2bRcT6/GWXCqhHeU++Pa3JUqqDPS42zf/qsuRpM
jdaaFOuXge8ZsYceC7h0PBU4zw6cfbRA7D9dFixk6g0vwfWGYZW15QqZu3Xo
Ze7ikauGVYCy05ehC77U0jgkgn/Nw/HPMCh+GdxH/Km8Ll6Ofnw/39ykX0Hl
QYRP1ULfwAr4+HeJnuU7FuW3yyJ5wuWEcmrXJnGgOw8otkktqwDNNyZnLIeV
oq0OmbfvfyyHQfHKcIqJLybPE/2oAccXQ5szjscn77vRb1RTW5OLEk//CgoQ
rYAWpt7sVlxvFibKi+quVc+m/cn+fY3jiSGy6Orlr7LJ6Ma31E3jl1bAc6b+
bAmuPwsVz3F92XW4vizd3wlsv5MjUitA9//Xh6X7+XzZ56zesgroEcf1Xk1w
vVe6P89NPfBQJaACgv+8PFId6kfXScz0R8O9jofBqNy6C/HC9ztn4Hhh8j3I
/nuC44Wp3WHPqNUF7BrhfAQrT5u1P0Woxz/oRSsrYFSOTXDjz2zY/oPjM1S4
rog+MhXHD8ORnQfZsQ8y4OnEZUUqoyupPvMzP/b+m3WVdD86LuLu9xD+P9/V
8W0XXQvpeFP2X7NbujeXnsv9dWal902EekVEzuewfeUQVh3c8/xwMQRFPplR
0FZO17UljgcGi/NLzlr9KIVzax/ccWuugDujT+4/eacUiN8E2W9ff7fpqE+r
BP8in7A9hwb2leuDdTkTjNm0P1m/fTgfBWyO2/ZXtYuFdjuFTN5UXQVFefKb
TuuzkAzuB483vHLYaltO4+jIek1Zl9t0NawKuPY4nwShD8onARoLvQt14oqQ
hmt4WT2rCvhM/e7tuH43xUuq20QmLF9dDe6TVrckTiqk75di8kUQ/gSvZOF8
EeCiNCf04b0MFLfPa1V6VBU8Zep9W+F633CPqecdjet5U7+qKV+sT6+0qYZ3
TP3tYFx/m67fJWqnqjemVUNsGa6f/RXXz6br95VIzfZrRdUg3ozrXxvi+td0
/fZs09vj/bQazDtw/WobXL+a2nlHGD287bOwGubfneZy4MBrIP9XYPfRc//U
OHDJGP5uRWkVDMovQe0QfuPSUzVuVUOX9gdp/p1MSBCrPz+looqux5lZNabp
u6shYp/R4sDthZT/i5jwQ7GXSmDb8XbXO38qQcNMvfCdQTE8qNnyTNqxCkID
1B7ejWFB4PlbMc+eVFH5e2tF3SqPOVWgdsbb0W9RGRRNqn5/Iamarr8s72W/
tZRqwHPaGElR43o0eVtRmPGlWgjQGzvFTrweHTT0l1P6UEvtv0bjq1K1FtUB
6Lf0/vhTh95hvQ0G5duB91M23auuE8rPUsfUKKNaeJ3SpXh1PIv2D/tq/Lbo
QDkieT3J+qz94uX/YV4tXPXVZy+ZXYiSNJcWCfbUQql9022jDUW0P9GP1IPf
hxTNEeq5Z++eU1mXixaNjnsx+W8tkDiKo9cmTkrRrAOrtANya94nIPfMMqUy
LWH/3DDWH+tkyo/48TmO/pG2T6MWFgXlnpl29Q3aPEXu6OartaAhr978VCsa
qfzuEoQ61oLZrPXX2uUCkea6ZZ5W3rWQY/1EK+eGH/ob2bx1lrD9Vu+T/LGw
y1B6c++eX9drodHJuPXizAcQfkdD9aZlLdxZJGJpXf4Mzqs+mqO6uhZsw+2i
J49LA/J9DspIB+S7JoPNBHuHtyvroP+jo016RiJw8DzQ9bV9JD9yjEEdcKuC
g6NlM6F+/uKda5fU0vXEvaci8VCqDoIas1fwiwsp/0u5Z6QmBwnvHQcf7H+d
VQOGzRISW4OLYce3J/qPNgjpTD6s6zgfFjS3rwxsV61GRzFuQe09Sjg/FojL
X0lcVcNCx8OeDC/ur4eQJ+Oqzw1j0f42717zPxwsR0uw3YnO94Ofl8P78+pB
v/trw15UgMoLBc1vP9TT+X2zoEe+5GY9VFr8cO5vzUFOJZzbafsaYNnStcon
MnJQe/EP795DDXS+K6/63Da93SDUS765TPPMoe8n54nD154xIl0N0GbTPjGq
IwVkfz9QKjkjHN8XGW2XyalA+hsfnvjtbWUWnDcyuq50oh4e1N9+Lvs1A2pl
JE/MS6un33dy1me1pJ4GSDs0aZOJTAmMTHn8avy0BmhxqPrrcigXPVPZz12S
0AQ3xr9bb3sjBy1WepycWt0Ek/bszvbYk42G/UvcyYbA0CLHX9oZ6FLIhl8N
amyqz3uNa9uwZfOAHf7ry9EtXuvYoO89sjC5JAVS+G8+XhdjwwYZqyI5s1Qg
/PiVtjlzFTMh/Lzp3UuWTfQcuTFmTLDODOHzil5XVUMraX+LexN257hUwcn5
+e59hk0wRDLww6Nnwv04/0lfx8RmKOgrtm0aX45WqLB/Wq5spvqS7aEq56J9
zaDOrrvfk8pC+zDuBez70kdbT+UilTRpnqFKM3yccjtr0dUclLfO4k7EsmbI
q5RdcmV6Nu1venFznsm6DHRNtPLR+CvN9P/bVk568tR9wI4rn7Dj1oGDzVCj
MCPogHQ6kOcjSz9+fueYCQdnbfRJmtYMk8/lLJC5kQ2X9E7PEfxi03svv7NX
WfpBMywzGcMKCy2DsfuXhTnPHuCv9jf055A6Dvz3Q3bI3YVZkH/0hsoDPw5M
T3dJvr44C7aoheueFbZnS4kOn7E0DxIvSQQo7OSAe/IME91fRWjppuP2015x
wS1tUqbF/UKUXXdn98QCLnA9usq+HSiGOdWZeuKPuVDkLpn64aQuOLhI3fL4
yIPt3iqPxgzzgMBlCHo6eWBwI2Sr+qcQkDA4EXiRz4M/TD7QHTgfKM1PtPLp
A/HJ9jzUxeRXvYvzq1I/mVezcnVSJnLROyZf83Ccr5n6cfWOX/39kDUbTWXy
J+vj/MmIypn+MVLZe9nor4jXsBqpbNjt6TTZbEoTemGdbfMjJZPaqcn9R/5X
7VoPrSZ0n5FfV7D8QqGifcO/tJfALeuRRhBRT3G92T6+NeP+1qMlzPmUjc8n
ZMnobz5Yf0M/GH2M5E+yZvQrY6xfoXhGfyI4wJAOfN/ZgO879N65HN9nkAJz
nyE4aDlzfzHH9xfkwtxXCH0Q3oUWMXgX0ZseMXjWfYxnUZz1KMarUDuDV5H+
I+owfhOJ8RvUwOA1hE70VT62F6BrjL2A3Bv+Mvi+E8b30fhUjM8TuUnujzIY
z0cuDJ5Pnif4mirG69FiBq8ndHK+SGJ7K60jpo3tqyiAsa8SXMKTsccSPW+Q
fZTardnYHooeMPZQGm/H2E/J8+R7a2F7KPqPsYcSOrk3zMH2SOTC2CMJPzL+
r9g/h46/A/vnIH/GP4fgxGS83difBg3yn0H+jP8M6X+b8bch9y73+efFUm7W
o8uLT9VdrU6l/hXlO8rc0iuF+1a+cJR/bD31Xwpl4uG+4Hg4sGfi38g40ph4
NNJfgYkfS8DxYxR/P4Hjv2A9E/9F+hP6cRw/BiwmfozwJ+ssGsdvUXx+6Ld/
8VpgwMRrEX7LmPguapcneRFwvBWNk3yK46tgKhNfReNEmXgs8vxrJp6ZyA2y
z2Jx/DJUM/HLZB0kMfHGQTjeGDSZeGHyPBn/fRxfDLZMfDF5Po6JH6b2ZWb8
LBw/DIPihaGaiRcm/IGJLyb8BuXbgDAm3wbBcYg9ZQ3OnwEcJn8GoZsz+TBI
m8zHFZzfAo4z+S3IPg1k8lkQvYOMPwfns6Dj/4jzV8BtJn8F4W/M5Lsg/O4w
+ab4ON8UzGXyTZF7wXgmvxSR0xeZ/FGkTfx5anA+KAhi8kEROvk+PTi/E3zU
w/mdCH0nk49OHuejg1Im/xyNm2Hyy1F8lOHHxvnjYCqTP47Q3zD54ORxPjiQ
ZPK9EX4hTP62Bpy/DbYdM5CJW8tBkmZ50cdmVILZHLM0ni2H4ikHmXyP5jjf
I32/PM7nCNuZfI6k/zMm/+IrnH8RgMk32ofzjUIXk1+U4PRFTD5Rcr/bx+SP
Jfr5ayb/6zOc/xUmMvmSM3G+ZNh1MnP5iu856IiN/LKIhxzgx23+IJGUg+rG
e7rbe3GoPvy22m6nQzgHtnixhiSeykHhOA8EfJZmZzr6PEKP7ymXOHbwaBzC
yB0FiUnCNrkPT1y5u7e+k4cun056f2dzPWq+dv76/TgOjfetPa75UzuTg1SL
c0Wqb2ag5TtPm5ZWcWjcpNgb27VKPA6KutZUZBmNwCxxhMyp3xzk+Z+hnX1s
Crz7N38cKieeLx5eV9PJQbmz/d/PSqhBow8fG2pg1kzjiaUaQ88+ud6MnHN4
V//bXomk77dfkt3DQax5lYbiC4Xy7t/6babxuPEGeRqhyc2oULEk7XphAVoh
4phrt4ND88Kkv14QWaHNQS3M9yF5MoicMNu+sq/XgYOOjzt4fPfHYsgotjy5
N7uZruPu+AnX/d80IzPNO/aiPlUQpr/VLDyyGRmFPIyzT64CMh4yz+Nb9EYv
thf+H0ZfJnbiB0tXzZUNLqV5pcn44+4Vq5UJ22Q+X3q98nu0uRldrsL6M3le
86FHTsqmt1B4LvcW6wgbxVlP784+Hk/rphN74zOnIt0uPTZyHY/1Z/J84hzt
Tp7w/55z5D2s/sWm/7/H59iZRmH7ovxSdz21CgjPmHpZx4pN1/2f566ni/XZ
qOvm1Fi3+TUgezfoz9g5zWgl9hcEr+2brHdvaUY6XtOWJ6ZW0/dtGXVVumYG
H/UkDIt63tWA9GXPzd0wgY+u/JNPjejiP3NTC+K0iLpp3WtE0R4zwi/u5KIJ
XjPH6F9tQCQPe+wJ9fSzrg3o8Ru1HNc3bLTEU8R8lE0Dza93R6Rl1ikhfRhv
4udpNo1ob/m9X/Z5TUjLdkiIvHojzUuyZU+30rET9eiJ1klVFNtA1zfXLbnN
WTi++FmyQTpQg/bX6FbOzG5CizwudQ5prKbPb//1OK1eqoqOn+ipjx4fjNit
0oja9I9ZvBGwUHXB2dKh4U0DeTtvda8MKWlCNVGvHzmpsSg/Mv+b6lT93f8O
5D15Lb7E5fSvJpTK3B9Jf7LfSq88FVs3tJHeD6aYOlw05DShJOZ+SPprZGRl
GpTlwSbP92e+GzXScyLKUSdt17pGxNrD4jzcWgr6L9L3+Ic1UTu5+1CR80HC
8eYL6l0W+Az4NRxn7pOkPfaoROh/UhxUo9Yt8ry3lua9HxF8LlRkbh2Se+m4
10d7IE86sQf+zZrv9vdzHc2vv2K4rMOn/no0ogPjD8RvgnzflK9DKgsO1CF3
Bl8gehfBF+5gfIF+b6mA13dcFRtQGoNPEH5XBRHP4t+W0vGQ7++h5Hf21aU6
Gv8Xh/EIKj96n1lrb0iuR+kM3kD4ke9ffrbZr3NxAxL/ivEFQj8rMyq34l4Z
BIfMlTkVU0fPsTuCy/tWXKhDhk277Y4GVMH215H+V+/Uoej6+EaFtCqKwxF5
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
imoyLoX4XqxBW0uPTvxzj0vx4+nRy/lHtnNhw6dTpuZVtSjWQNLP+qOA0red
XHfI+b0AhjueTehtr0VvDW22rcgSwNRP50uuJNaiP2XSRc5N7eh+ZFHlT/9q
1Mrch7TwfQhx/t0PuWh94yk0+n4VSvn+98SzfVwan/6VvzBxhh+XymEoVw2t
2NlK7xFSW+81h8m1gqOisrnD4Wr0WvxlpNGsVkBKMS+cJ1aj0JabnvykDjrv
n/7nPpfagU6MsNwbUVJO1/PFBOeQbUoVaFJ1tMK6AjaNb2bbJkT1yDbT50me
l7P6U8ZZ7itHjZUt5hWVA/csYofzMFRqXXyxAnUvmmhhPLGD0qf6Xjt1nNMO
b1dJ3XPsq0BSC6rL3ot0QJPg0tMNhyuQvWJy1J4dHRC4adKPDdUslB7+2mGE
gwBJHWiYk2/HQpnM/doA36/p9/M2Obp7/OUyNNdvRtWb81waf1s6X/HP41Au
lQvDFM/tKrvFpfeeP0/vqYTYtNH2oXPSE9rWt8HGH0u7thix0BCRX/oLjNvg
jMnT9E+oDPXJHNylFdEGMQnzTRdsKEWvGfxhJcYfkPTJ/bWlOu1UD+CtzF3w
wqwdPbaZeHpvfyG6sMNhTPk6Dr1nSZ3rhAuju6jcqBrz2KtF0ImsJYZNKRte
gMZXHWsrV+pCpSN/ZO13zkHL1xm0jZnUhf7ojsqy/5ODlvz7rjy03rtMyX9p
PpqjOOvmMDaPxkt+vbgn12L4gN0mRk4t8vOsenovIn4HfX/szvSfzUPxlrWJ
e+c0UbrXs6SCvZ482p6N/d8hrcr8rdTOPGQnddKoVKeT0s2drx9YPa8TnNda
/YnbW4DQ58n7DLQ6YV1hzcslzXlo38xD7BfHO6EvrS0hIjUHsdw6YiwMO+HQ
SoGTkiAHHTDYoZjS145Uzr4OSHyRhVT+P56EHD/UxxzpGbBrbd2+eH/RWAHi
9P2pvrA9HRG7YXJa3JJj0hnozpmpdqFjWike785Olj3fwoerE502PzyQjXwj
LOUvDWuF0CEeM0RuZaIxpsVNx6e1QtaMCUuGGqcj+QJ2jcikVki7O2GSS2s6
Yo/YcVoyWED5yQa9ShhhJwB5r4ND1E5mo9lnnvrq+gpgtWU43+5CJnqRanzC
Kl4Anl9q+w5sTEd14haB+yIFsEPqlM7ssRmIe0T7upNnJ+Wnmlny8Mn1Tgg1
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
gKoIvybtX35DM3yHYhJqLZ0XmDS9EPVrOnH+P3yf8qRQfWlP0JmiwrB8ZCl4
WXCjjcP6qfxP/bbAFx7lI6ftarIJWT08fZRXbtVYvYQKYT4KtYqfO7ODx/qp
f31T7oHoSd/z0dJ6n9hpw0Tgp5Rw98m7fOQleX8RqGx+nXexfz6KPnRGa4Om
iNX7mO4eNzAWNcDYJwsUDMvy0QS+i9XakgbWrxq98fO+khYk4L/rt08jF0nE
d0ILWrd0zb4Mr09I2clEUTmthdlBI9dIy3xzbWJ2ONU/HoeZJ7uW5KJlhE83
DvPpojvtVqmG60Xi87VsziT9XOSK3xeFXojcqL3uE+q1ZU5DrL6Ijf/07crU
DLEdXLbXYvtbwxwU+XG9rlylEJVmlHhJ+2WjPMKvS68fSvh0aZueZ30a5Aea
/ctFbYRfl/ZT/aJ6xMlrvLBc9Ifw7dJ+qmf1dx9tOnh/LhpP+HdpP11PH/Xt
fmiuykVdhI+X9tP1pM7bm3T5VC6KJ/y8tJ/uw/HJv3lKTbloPeHrpf1GhJ+X
ti9ZyX64caqA8TTR9ZbbS+u3wDwHzSL8uXswfy6rD3GnZrLWgs856AXh06Xj
mRnuS5COq2A4NOU/3LpVPkx/Rh7qZzytMvJcJXuewZu+u5vcq1mbyqcYUUHK
8Sk5qJPz2b2gvhY6NQylFh/JQY3PbiZe6MNjPFO77H4qHNoqZPeP+ZRU1aDV
wtpb9zmb1Wq3svowSRVLR8xMbEIfdRYWdA3IQnnhak90axoYrmFL+LuXYP5u
dr7sUfmhvmJNNtI+GPhteJpA/DteKjXpZzD7ZJPi+P3Ls9OYvfbl6MLcIcJM
1Hg6cMKUaAGrW0K/X+GU2dp+czJQGuHfpv1qhG+btvuEYn5t2i4mfNq0HTj0
52aeZwHj3aTf7+uClWuGrk1n8l12iCS+AWWT+AZ6v4qLYdxfKQG7/6s9py0h
Xwi+vsEiuelivQbjNPAvDnk0/05F8vZTriryhax+iv7ais4mvojdvz4nVPas
YyNrq2EcFj5rVN5YczYDpZ8fxDm4sRXVX/1l5BKRws73m2azbxoOTUICwmdP
89op7tTVVcq1Vk9G8wi/Pe2n9sV7rR+po5cnoz6E7572jyb89rRdSvjsaTva
ZZrs1ctiu7Kez+1blohOTLzdfDeMizxmHnT4ODyRfa8lG+zH8U8nifUCzH9P
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
58JPzFsH836817/7NQ9OeTXbPfduhhddmE9YG/MJQx+SP2WE86dY3XgdFfcD
soYtaFf3jngOpxBOZvKMrCY2oxqSH2e+QJIfx3C5Dnm5mIn9m1FKeUP+1Ckc
oPlJzVlqbU3DskFluNOiEu8GtK8C5w92jZfkDzJcXEOlon7N2QbUXXm/uv/1
HKD5QldtO/l/ZxZDfNSMB+5b65Erye/cjPM7GQ4l/y7N/YJmPTq5q1e4/KAS
VodYSPZbBN5vKJnke87F+Z6InvMTElSMlzWJ0Hiy/wzw/kN0f23D+wtp1eD9
ReMoDNJvTn8r/n075i701/pZh7TbcP5rPxNJ/iv7fcv2G+2qKq9DuoKFO7o2
57A6iPsdt+j21RLbS6OPdtlqixAi+bGncX4si0+Z6jtse25RHUrKiosxXVrJ
7t9D5PUvLK+RHMmHPobzodn87BzR5idYL0Q25DwzxecZmkvOK4rjFZN6U5Nx
vSkUTupL0fwRGXKeUr8TPU8N8HmK7AfYtMRM4EGkWLPyPCRAr0i++HicL87m
e4r8kXKBlABNbP+embCRx8YPJvpHBtY/2PyLsH6BOgKwfkHtLO3pWN+civVN
lD8Q65vUrqL6ZhDWN1HnH1wv7D2uF4YuEP2KxslR/eog1q/QE6J/Ulw6htQT
G4friSFVUj+M9lvOGKFSfaGYjUft61TZx7G1y/hoN6kv5oDrizE7fsO1Y2OV
K3moNQ/XG6PjfTJXTktp4LLxqH2xavPdzQ/G8NE4or9exforqif6KfXzjSf2
Tg22d5gf6Qy2d5AlqT/X1iSpP8dw+UqsXyMusYcojnSS2DPa2J5hfKUI2yvo
IbFXqF9xNalHdwTXo0MppP4cHY/q40OkJfo4uk7sGQtsz6ClxH6h4w3J0d6/
45tYTzw2xOzE61pE9TCDS29GWlnUIpv3gz3tfwvY+J2BV67bhwtYfgzVy3av
mr4h/p34/lMYH6F28maCf3hh/APdJPgHtbupvtQf4x9oLcE/KI7mSeolquF6
iQyXtdTXkRl8oho9JvUT6fN8iH1J42SpfTkJ25foMMFPtmD8BAkIfkLfh9WZ
xfgJ0hVi/IS+jxepz1iM6zOy9TZ7678TqfbVyJ/Ua6Tvc43Ys/R9WD1obM+i
dwRv2YDxFmbXR2A8BaUTPIXlTZH6j31x/Uc0xBPXe6TPo3ZUCbZn0XKCv9Ri
/AWtIngLHa//V2eH5JR4lt9B9/fKvqJQuW2V6DXBCylOvZLUI63G9UjZfgzA
eBeaRPBBev1zUp+0BdcnRZmkHintp/jWfIxvoasEPxyP8UPGX7gU44eo11CM
H1I/uSmpZ3od1zNl8ekWts22OzMrUTSpb8pwdjeMf9E4f7pf/klL8C+05ZLt
qWkJfLA8+vJpxjouonbaRt2mNdtzKtHYMXfnrirqqdOYaFK69bQnn41H7TS7
/rxizUdcZO06W65rTSOMV03dG2/HJeurEVqs2r0ucitRxfgzcHlvIxuP6kln
s/w+D5eqYn7VFL/5f5aplbP12TtNgseiUwTfj8f4Pkol+D7Foag+PAPj+8zv
4IDxffSL4Ps0ruQNwespLlVP6hVX4nrFyIPUJ6b9dD17YfwXLSP4vQ/G71m8
phTG79n6TsP4PbpG8Hv6fO85CZobxXbI1PUJ4ZPSyxHT002uNNZMLUdnW/xf
SqeJ2POpXl5x5/ewi6YVqAPbS9CZHeUeuaQEfbP662wRwYFq7Q1P7e+XoocD
bDfZuhawfAI6v9/+NJhpjy9B84i/iuIOdP2lYX8Guk38TbT/FvE30fYItct2
WQ+bwOdlhEhtbilZ303gLpRzbr5YgnZO+hazL7KJXU/11K03dKcd/1uKdGoi
YrTWFTBcg77fnIpdcwaZc9j33Iz9a0x+hl4OO8Ap5yB5wP5Xigt+I/Xs/XA9
eyTdgevX036K6yRgPiN0m/AZ0f73pF79FFyvHiWQ+vS0f8eeRedSpBqgYPjg
MYV3i5ACzjsHS5/mdcN4HPRg2sDr/4Y3sOupXWTb68n1HMtiJNJ4rDivLpfF
m9Pz1O3XyspZTfmomfiDabw+/R562B/M9kP72jMqVzwKUDbx99P4+fa+g4xn
PeTB7fLFfR8YFqKOaV+ch2fxWD/FMZ5hvirkRPiqaH9J5JvE2Np0Fi9M8bR7
P7fbLKjLZvGIu3F8ANOvTmG+LdSH8G1RHMpUPdhbTlMID4UuiQY/PrHztuGy
lnnvH7lIIBCUpukL2fUu3AUtJ3u1wNuFoyYN75dHfn8LqLW73Evl5iJPo5CW
miEt7Pr/Fw+CHC6UXtIQy6u9G1Y7PQrLZPIsUZQNMrsyUO+8zmX69XwW73th
7m6vae9FcLVODTYFZ7L9t2yCyrl1X9KR1+amumk5InZ9x9eBhrstGyHWTC3M
6FUmk2/201SHVJeno/qvCi8X7Wtk17fpZo5WuM+DhQuGV5sWpiDV183n3KN4
DOe4dexWjatjI/oz/fmyRoW3EN+dfGT/0UZE6zTXnnG7Z9xVyOwqigfZqOx1
FxxOgjCVmRrPv+WzeCqKj/1T/D4iNSuD2Rn/cLw2yzNfiPmrxXYT5q+meqsp
yQf5gPNBmJ6cjvNBmB65FeeDwF6SD0L3rcu3Wz4Js1tQUKjy74KrhZimVLEF
2VmY9Bo7lQMV5z0PzhnXwvREGq9WjPNV4BzJRzqF85HAkOQj0X1P7YYgzD8O
swn/OB1vLMkvApxfBMUkv4jamVQPjML5RfD/8ovAneQX0edRvaG6yDjFU/z+
up8E3jPmcth49HvUbWkL2prKYfOf99Si799NHOijhfMJdXA+Ifwg+YRUrtHv
Y4HztaCI5BdObJHkF4IryS+k19PvUY3zrZheehjzycNwwidP9RQRyQdcj/MB
gUfyAaldR3/fMpwPyM71EpwPCB9IPiB9PtVD3AS6xeYRxez3D6hy0aqXKYH3
x9rMLSwa0LohljWRVaVAeTnq9KZX2h0ugzt7EgV3oYHpqdROnxt0zCRnWyn7
voMwPz9kEH5+ev1Vkh9Jz3X6PTuUJfmREETyYWU5knzYHjsG58PCOpIPS+UG
/f6ROH8V/En+Kn0e/b3TLgfs131VBjkkP5f6m+n3WI/zc9n+8MP50/CD5E9T
vc+b5Ev/xPnSUEzypamdTp93AedLs7xWM5wvDSNIvjQ9F2jewSdr8/kvxfdH
WKsmJN9vRLy8gDSTflWwFcsnNCdrppSOQxW8ant6e+6FRqbHUJ4WjWGq3TXH
uHCO5OfTfkeSf07tNGrn78P55+x7zcH5+LCH5OPT+//2xfnm9H76PZbifHO2
fs1wvj7Yk3x9en9jd73xWGEVCh58YuHH21x4RPLzaT+VH70xvwD0S8N8D3WY
74GNn4z5HGB8EeZzoOfYaMLX4IX5GgARfgba/4rwK0hhfgWmt93F/Aqg/uXM
9G6zRKaHU36KeIPNBZ4WtT24iIWEj4J93zeYLwJCCB8GtWM+y2K+i2+Y74KN
p475Lth+nYP5NNh+1cP8IDCD8INQvXwv4ft4jfk+wJbwedA4gSlTv2wY2iC2
c5Uff9J5KYAiUl8lDNdXYbwPlVdtHp6QF4LQ9F/GE5ceO9iS8LVsxXwtEEv4
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
   "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}}, {{}, 
     {GrayLevel[0], Opacity[0.4], 
      TagBox[
       TooltipBox[
        LineBox[{16684, 18089, 18088, 18726, 18727, 17778, 17777, 18728, 
         15665, 18087, 16682, 17776, 17775, 18725, 15662, 18083, 16681, 21588,
          25653, 25694, 21587, 25682, 20486, 20484, 21580, 15185, 14668, 
         22852, 25672, 16680, 21586, 25656, 18754, 16738, 25663, 16737, 17797,
          17796, 21672, 16740, 21663, 16739, 21671, 18143, 19336, 19335, 
         19296, 16775, 21719, 17803, 17804, 25674, 25665, 16776, 18784, 25658,
          18797, 16817, 18173, 18172, 25669, 25666, 14737, 19372, 19365, 
         16840, 17820, 25654, 25650, 20634, 20635, 25684, 19931, 25655, 25651,
          18198, 18199, 16872, 19375, 21848, 21847, 25667, 25670, 18218, 
         18219, 16904, 18825, 25659, 18829, 16905, 25662, 25677, 18253, 15947,
          21922, 16937, 19414, 16936, 21921, 18830, 21923, 16940, 19450, 
         16941, 21924, 15971, 18277, 25680, 25668, 16992, 18896, 25660, 22005,
          16995, 25681, 19455, 14811, 18299, 14831, 20784, 20785, 25686, 
         20788, 25695, 20787, 23036, 23035, 18303, 16000, 18900, 16001, 18304,
          19505, 18307, 16003, 18901, 16004, 18308, 19506, 25652, 18310, 
         18311, 16997, 18313, 19456, 14812, 15260, 25671, 18280, 18281, 18904,
          18903, 17842, 22009, 16998, 25679, 19457, 19458, 18282, 21930, 
         16943, 25691, 16944, 25692, 17834, 21927, 16942, 25678, 19417, 19418,
          18255, 21896, 21897, 21895, 21899, 21898, 17829, 18831, 15907, 
         18222, 22952, 22953, 15233, 19979, 19977, 25690, 25689, 14751, 15223,
          25685, 19932, 25688, 25687, 14738, 15218, 25683, 19882, 20576, 
         20575, 22916, 22915, 17817, 17815, 18800, 15745, 21732, 21733, 19367,
          21730, 21729, 18757, 21720, 16777, 25676, 16778, 21721, 25661, 
         25693, 17558, 25675, 17557, 22500, 18738, 21673, 16741, 25673, 16742,
          21674, 25657, 18735, 18736, 18124, 18123, 14696, 25664, 14671, 
         19251, 17781, 16684}],
        "0.594`"],
       Annotation[#, 0.594, "Tooltip"]& ]}, 
     {GrayLevel[0], Opacity[0.4], 
      TagBox[
       TooltipBox[LineBox[CompressedData["
1:eJwl0+trz2EYx/HLuWH+h5Wc5hQ2NFZOk2xsGpIxm9kszAPCA1JjiDk9cCxq
w9BGmwdzKKeUYyi0MZtIPHeI7Ce8flm9d93X5/rc1319v/fvm1a6fkFVj/Dn
39BpEbMLI/IxH49zIiomR5TOjXhkPWtqxOA5ETPFOvV6nMaTYl4sy4oo51++
JKLEnga1cyjiX2pfEd7p04Vi64S4h/8sbw2anZ+yMOLIrIijqNangZ5KG4hG
fc7nRTSJy/PNxH9CfCFvp78UT8nb6K/FX/K+8yK6k+fbX4Rm/VowbHZEWnbE
Tlq/6RE3aTusqzFSrdZ8c8VcXLVuRS5/YnHEb7Tzv8YD899QeyN2mDdB+6rH
F5Txv1Br9iwteG79DBV6flP/juG5fM7/Yb2Nf6tatz7jCiIyFkVMwHb6Js+R
aT0RR/mr+arpv/S7qfctHKPX0GuSc9Jv0+7gJH2SflPszcIu9Tb13eKZle7A
ngxzZGKv9T5U2LNf7EXrjVPuNn2Fd4OfZk2gG6v0aBSb0OnZ75v9oXdxmD+V
dxDOqV3EBeTx14oD9L/Hf43/OnbxN5i1P32Uc++qteozxnoZ/3v3+QH9vYeE
++y0bnfPdcn7lne5/1fiafljerl4Wd5IX2ldgkH69NavyrOvx3HnXeH963f4
B4eceRAHUEv/6Le7VuwQ32IvfZ1ZN5trhv1rxEraanz2m/iEcfyNvE0ooxfz
V/I91T9TnoEtzh3Nd4nWhOF6pcs30jdghHy82RfqsQgpZs9Jfgu8Y+kD1MeI
Z5O5fvXiKHkKfWTy20x+q/w97UuXZ3sHI8Q8veahD32I86qctQ4Fhf+//X9R
88/r
         "]],
        "0.567`"],
       Annotation[#, 0.567, "Tooltip"]& ]}, 
     {GrayLevel[0], Opacity[0.4], 
      TagBox[
       TooltipBox[LineBox[CompressedData["
1:eJwl1FtMz3EYx/EnFsYsly4dMseZyimWlUPOiTmfokhkjM3pximanG1MxqxN
ZUaKuGFzuuLSKBIaLowbXWAxp9d/Lt59vs/z/TzP9/D79u9buHnepqSI6O3P
9+yIfbkR32jX6RFVxrMzI5LyI4qWRXSmWbOZ6d85EZOWREzERb7BWRHJagbR
GfMjZiIX/XMirhcoGR+xcUrEAPF5/lTaj/+xccHMiJUYllD5KnVlvNV0lfgM
LaCX6Gv+A3xlWI5y+cO8xYn+9lKKcvlm3ibssZ+N1tlLf6rtsSCiO5Y6wzLU
Os8KuhzD5SvpRWc+TZvNteA5Loizzb+gLUjOi2ilr7Ak0Q8Dp0b0mWB96/Wj
B+XKcc9+7uMBpvFMx4CJEc/EqbSKJ0/u5yJnnhzxVb6G/hYPMd9ufgX9lTgz
/SIu5n9qndXi7caFdBfdiR/uoANDZkWkLYwYgd32843/jru6i9P8GfKj5kaM
xjbnGSt+6DvXuMtM4316daip5L1sfI5epVfQc1zENVqH8/INNMN6I1Grfpz6
MfpmYqfeWeLqoogJtNca96kmZ5X3gxy5bByyxxbrVdCj+o3Rq923OG6cZH69
mg5n30A7iRud44+4RNzqbpL5u6CU/6Z8unwtzaCN9Cp/PW3AI/43eKJ/Pv8Z
66YnzoBTxieRah8jxJ+8sfe+82e6Um2K8/TEL2+qTf6Cu/7gjbxHG5rkq+RP
yN8Q16MugXyK+tv6FJq/RZP1L5PfYr2t6CQOFBm/815fe8NvcMxe2+hblKr7
7G1UeiMV8mfpR/FINXXm15lfJ1+S+N8Tp9FW80f5iuSP0Jfim/oPVTMMO9zN
dgw3HmU/i9QtRjr/VOfobr/p8tnO0c24K/LcXY0evXhSsFZ9h9+OA3L70UWv
XG+hcMr/35Z/LfHbRA==
         "]],
        "0.54`"],
       Annotation[#, 0.54, "Tooltip"]& ]}, 
     {GrayLevel[0], Opacity[0.4], 
      TagBox[
       TooltipBox[LineBox[CompressedData["
1:eJwl1Ftsz2ccx/GvKBpzukeyxkRE2pI0lrGxnlR1U3VqsVJb2wvS7sLFsEwc
I1SQasWhB1W0irIg2cVu7GI2cbNsTagwXFmkZIw/4rDXLy7e/TzP5/t5vs/z
+/2fXzO+/nZh/aCIyPBnoDTi0y/poohHePp5xOY5EWmfRaQXR1QVRqzGf/xt
/GH84fxveNVI8R9b90Sfp5it17/m1SsiimbyjRuse05TmFYS8caal8Y5ep1R
y+FdoJm50Ptj/s3yiH7MUJuJhZ9Yq7aGVi2LqE3WLI44j+nWPZD9B3X8etTJ
Fcivp/Xye3gNcnflV+p/3357zQcVReyj1bJb+evoEc91FDus22V99YKIGpz1
bBewznMd4LfzjtFOeo9/it6h69U7+LeTOUbMjxiDrfxefo++0+w7cZY+9uuy
10E6Os+74I+iZXS++o9LZM3P0TFVMmjU55o+V/X523NdVruEWvl3NJZGvKZZ
splok78tf0s+/Qu/rfpg7JZ/a982/ffbr5X+4ixXUKDebj6b5iMPF5OzzYgo
LpPz+5bQDZ5rLi3C+OUR43Be7oTer/XupL3mtfbtoR3mr/jHaLf5WPkCa9vM
v9MrzzgXI+zToT7Vumz87EzNzrOJ9wMynafRfEpSN87C93r8qffGpFfyftUG
PPd1Xj99m9w9pFe4x5hi/YD39AjP+De9nxtyP8n/Svt4f+GFe5XCPH0vqhXT
Iv0bjHdjsvF2OkS/TuccSj/iTcA5fbqS9+7ZhiENKfesz704yu93X26gD3/w
m/l7+afNu3ESPfxy/hb+Tv3q/J5N9ul1b1Pu8XFn7MRL40rnWIlbxiusqzBe
Tlvc+1ZUylXqU6PPV/r8tiridzSpHcYh5MsX0EJkyufKl8iXyn+oX0byjeg/
SW6C8VpnmStbjA/ks5CNFplWPPG9t9ORvFEo1Oeh7/9h6fv/P/8D9s/nlw==

         "]],
        "0.513`"],
       Annotation[#, 0.513, "Tooltip"]& ]}, 
     {GrayLevel[0], Opacity[0.4], 
      TagBox[
       TooltipBox[LineBox[CompressedData["
1:eJwl1GtMl2UYBvBbyQhE1zpsrg84bWNzyckpDFiiBh7Q1EhIPGC2WBMoP2sN
D8vKA7hgg6ktlA5EORjqokV+ss05aNVy2lqrttaciInWUDcZ/d714fpfz33d
13M/9/957/ed88rOyjemRES+n4dWRby5PGI3hHVZSUROTUQ2ZKyOuLUkYuTF
iKxnI47xPENLgzlLI5ZsiKgvj3gOzxUX4GWwFC7yvloUsZl3HnTQ2mE//wm8
lf8g3oKP41/49/LtgRo4kOR56/SzX7wP7vE06aNBn21yqVURj0AK9PFXr4/o
ke96Xg3rjZAt14rb4Ed6B26HUvpP+DJMXau2fVesr6kz4Kxq+SqYvVgvzuty
3scwKPcNlK2IKIe5yyJ+SO4Dd/JX0MZf4i+LuEP/CN8XZ8nfkB+FcfoIvg6D
ak/bGPEwPL0m4gv+NOta/vnVEUdxFr0F71b7Lf0soLcleXo25MCHctOL9YBP
wl11x+ED/i7xU5s8pxc8F/sO2N9Jn1URMew/fQeX6OXyXfR97uM9noMwRF9O
/4T+Nv0Q7TAM0/vV/ZSeqc73ahyhN0MFf6bzzsl3y5fTTvIX6XPCXN02F92e
64T+jvK8D6HGpPiCOiv5T/Gn8hdDCbTypNMb6RPu7XU8XXwumQPcIP4tmU3e
dGjk/5KvgN6Lv4IBOM1/3jnr9FXJ8609A/p5Vz+t9Az+QvoMXIAXwTb7Xoa/
zMekOZnpHibwn+KfzUt3wuI/zNfVZP7EQ/QduF/cS+/Dr4kfV+cxSE+eF5zl
S8Wf6aMHUqx36afNukWvzbBdX1vt/9p7MgiH5XYmc2q9SK4f7xA30uvxmUTH
v5u7FvNUR2/Gv4of5a+Rz5UvoufhTeIC9TPkZkCf96wX1uvjc1yKn+R9Ah74
HtzzPcjgPyJ3Xzwm/hf+gTT6zZXeS/yOfH7yvNeZb3Ghe5iGx8R59Fs4RbyQ
PhX/Lc6lN9k3RXxNncCj6t52zqj8GN7mTmohZdX/36//AI4v7EU=
         "]],
        "0.486`"],
       Annotation[#, 0.486, "Tooltip"]& ]}, 
     {GrayLevel[0], Opacity[0.4], 
      TagBox[
       TooltipBox[LineBox[CompressedData["
1:eJwl1Hto1mUYxvF7MyXNkLFppGZO1IUGCbpw5jzNdJ4Pr4e5vTKnlYLSQYwS
igx1TszT1D88RjVFm4HOaRr9Fx4j2UzUoFbC1M1AwjUPBb59Xvrju+t57vt6
rt+z5/e8v9zF78x+OyMipvkzdFrEjRkR11CdiBj2WsTjyRGP8MmEiB/GRHxM
P8LIgogP6WrcKo5oRmpkxAfmLy+IaJVxj79VzsLXIzImRWTiff1VSPEXyR8h
ZzB/lykRLbx3MKAwomBOxItjI/JpH/pNecR0/jG8ozGIv6/6aP1x/J/RMvMq
WkrP85fxL5Gf5C/l36FXjRL++faygP5iL6XpMdqNH+Co9ZlzI2ppq5wVcirl
zJ4ZkcAXzukr1GCz7K1qDbIazK/gZ+xRb1RvV8+YHtEBa+QclZM7MeJb/VM4
bV9PjYsYqDYAG+yjCkXGE0dFHDMupvfnR7Shkf8Kzsqp17sh4zra1ErktNh3
Hs0sifh6fMRD9Ud4jEv8D3kfoP/UiE18g+dFlNNs/hzkqb+Ee/Lv83ceEbHP
Xvbjb/M27LGfddads+5TepbWpD3qPdyV5/Cjd37c/9vd+KDeIVziu6z+hvw3
cVWtr/ySWc4fa51Rkp4v8+5orl45XYRKvSX0gl4F7ad3zfre8l9AnfFP8hvk
13luT7VeOKl+2L76GTfqbbHfy3zDPX8pTukf0Z+i/qV6odoT55PCYTlFiyLG
Y4L+ZEzCJv6u9Fl05f+Vt8l5fc7/Cu8QdNTrjKexlP+M9/IdbnoPF/gvYgf/
985zmOfOtY98OocmsFs9K71P4zzrd5oPpBUyFuOEnFoZOc4lG1l44q41u3P7
1Q9gtfzb7mIzDqrXYLv6NpxUq0cdjlm3TK9SvVZud/k5WK++ynPX0U72Ue33
8Jb5Hb+RFmw2b6bbranGH8Yr6Xt4F2f81k6jgO8Ercdy9QrPWeG8hspK0FFq
hWhyv39DJn8ZbxLD1Yv5Z/Edl9/LvCeeR8r3JeV70c3+tur9Y56t/i9tV39G
/S/fmS50o35W+jlyNhhX4Rzfevonz10kjfdZ96pzW+ie7U2Pnc/vvmVN2GWe
r5fU25n4/3v5H0sOCmg=
         "]],
        "0.459`"],
       Annotation[#, 0.459, "Tooltip"]& ]}, 
     {GrayLevel[0], Opacity[0.4], 
      TagBox[
       TooltipBox[LineBox[CompressedData["
1:eJwl1F1M1mUYx/GLVa7WQmSz1YnmbGmtrZkWKvgkLl9TkzclicQn3ZICOvLE
FxZgORv4gEutNldLN7PcLKdpbgoE6EFOpJpmqRivNjtwUw56oT7POvjyu15+
9/W/+d/385+UrCmszoiICn/a5kY0FUU0I4WNCyJyZ0UMvxxRVhbxO522LGI0
L2JI/NQrESNLIm5Z18f/6vyIQfqH/DodQD/2mrPEnKkvRUzBzOKIHGzgn0MT
mI085KKLP8lfyrsK76vtwDv8KdqMRuxEEy7zb+bbhBI05Eds512XG7FVvgV3
eLbMiahcHNGid19JxBjci8P8BSsiDurv8/+ViIvxtF4jbcJ59WaaQkL9Au3G
v+oj1vWIB80p1CtGESYkIuo97xPP+xQn7eNb5C+MmIeJ8yK+l0+g+/gXqG1O
2idur4q4izuYrD+oP4Q+DKAfJ83eyluLjFL/C+5BGf+TK50PnsBUTMF5/nH6
2ShfGvHVixHjxSn+Wv3v6Fr1djq3IOJj+69dHlGn1+X8j3if9eLP7PNd+h7q
+M/xX1TrxjZ5A34Qn7H+Ufejlf4kf351xGpz2+R15rbTq2ZcwxXcNWe9/gi9
nt6P/ja+DppUz7H+kjmd8onmdtEDrzv/9H48c/LsiJ/FV3DBjF/pG+obcNTe
H7NmEr5RP2Tt4+Ie59LsWS3I46vEmzjBs0xtvzkL6QG6nHbwL02/A/mDfAm8
gF38Y9Vr1MfQt2kWPcafSavlvc76Id5MVPG3Oo82rBQX2M9p8Qra6GybcDZ9
X/zGTmG7/R80K8ucr9U7ccJvZJa163mH3b+byPa+htJ3EfnqX9AvMeCefp6+
43hGvYpW46j6W7QSD6tnmpdFx+GQZxx3px9Qux975LvxAYb97oZQ4e4n7XsN
7fMbWyxehB7xMf0q62v4q+lx+Ux6w51OuXuV6jtprzzbmnL96fp56jPoa/IM
elG/gS9HvZ52y1vM/9O3ZdS35hH1v8V/IdM+bi/ynmkjT7ZewnvaIR513v+g
1Hs8Z91atQoM899EiXoxbon7fePK9Tr5PjL3QzznXf2mvlfcof6Lb+BYZ/Mj
3aO2G7vwLN8Nvkvq7XxFZhamv43m9qqXmdua/mbKpzvXgvn/f3v/A6haI04=

         "]],
        "0.432`"],
       Annotation[#, 0.432, "Tooltip"]& ]}, 
     {GrayLevel[0], Opacity[0.4], 
      TagBox[
       TooltipBox[LineBox[CompressedData["
1:eJwl1GtolnUYx/FrRQRmbdELFxaztpnRi0I7kIfQqNlJlzs8zw54aFubMFKK
HBWBk4iZrGw00oQ5exOmhSlKVNsiSA3nDq4J7eDanrGVk6xm4IvI+jz04nv/
/tfxf933/b/vu6q2Fm3JiIgGl7OFEQ+siXi3OKK9OuKmmog56FoZUb8x4lu6
W2xsecSppyJ+phUFETeXR9yCHvW9yNejnxZVRvTRhY9GnKMDuEfsPC0W+zFt
iw3RYdwrdoGWiI3SRWLjdAL3iU3aL2WdZa+/n4nYb5Y2TPH/bp7EkxFJnDbn
ZXaN2V7EGXbGsxHX4Xq8x7dS78X6zGNf0+MfZK2IOKJvrR51yHzafWFWr+oq
/TCQND8GccOqiKoSMWzEC9iE29Q8jF779GG1dUEa/TvFu/CqfbehAVNyptGi
Xyv7fTot5xJfnbq5qz1jNFhvQ5M+mewv5dU/H5Fd6j5wjP818Taz70er+zsk
PsT/i+d3ETNo589WH49F7JDfLrdWfR1m5P+m71LxReJ7xPdiOXsZ9lkn6aQ5
UziFRx6P+Dy937KIbr3PYIq/Q79vsFmfYXUj2Kp2C0atW+ms97DqOe8DRYmI
dTiZfo+0DCVIoBRfy89cql7uV9af6ZvhfR2mH4i3YjcqNzmXOG6eBRUROXhJ
Tb85x9RdwE52E0asf1Cfq89pOqV+Gq+ofxlX1dzqG5jk+8Q3kaL71rqndZ4X
Jthd9hlwZset94rV8tdglN0pdk5sxPpDsQ386zHE7hDrF/spPbtYkj+B8+wr
9h3xHIaxxGxdZhvkn+V/y9wPuacSuR38jWqLrYuQ4/n0uKc5tFpeFb5X06i2
hb5Jv6Mb+G/X40/voZmdVRbxxRMR5fxHaCa7WyxP/k7xHP53aD67nIb4p/Lm
8x+k//oeTshPed+l4pe9/wQ9xncUfexe9OBj+X/ILzB7odmzzT0PO9Tebfbt
NEPtifQ3Sxfw5eCws7LdMws115zjv5zr8vX+W87sR85cH18vzqJPbIXYLrFm
sQPpc482rOVbg7f1q9evxTM+5My/br8D6flwxbc36BvMlZeHN9Ql9WziK5eb
kFOhbyUq9GjUo4w/l78YJTipxxL5d/DfT++kD9LNchfT+ewb5eVjIfbIn/Af
mvG/GqGXaIpWyK/Er+wx9kU6nv5n+e810072VWdkrlny0v818+zi7y78/5/+
H9z1Nag=
         "]],
        "0.40499999999999997`"],
       Annotation[#, 0.40499999999999997`, "Tooltip"]& ]}, 
     {GrayLevel[0], Opacity[0.4], 
      TagBox[
       TooltipBox[LineBox[CompressedData["
1:eJwl1W1M1lUcxvEf9SJXW2WaqdMCtUTbygdYs8ApSqSCPMljDyjYaq2ZaKsp
RZjLBeokmtO0Jr5Ia0vKNu2FNJw9THzI9HbWDNRaiZSb0KxVY63PvV58uc65
znV+55z7f/5/0mpfKFmREhHN/uyYE1FQGlGMIlQ9GnHvrIjuQt7jEcfoxIKI
3qyIo9q3VEWcWxjRad7G5JzciB8fi/gJleZW4IL29EfMU+dm+T/km2XfxJA6
PfSy+efpL7StJiJHfopsOoYtiujj9xqflB0xbUnEmLkRD9DR9CP5AvnZstmY
JD+WP934XPl19HU04WvZr1Alv8x+0ooiJmCNMzXgFTynxlo11quRMKdBjZbk
GM2QvWJ+H6IsYvLyiBSazy9Cun4hHTQ+lX8/mvU3YSP+5GfxsnFc/xu8b72T
9EidGvxiRHHEuNkRDy6OGE+beDfmRBy0rwPyo4zn8hcbL0Kr83zpPHV5ngc9
J3NV9pJ5F5Fq7r8VEXvnR1zjD2AQ3Qs8D9nrGJcfsUFuYnlENb21MqJDPpWf
hgkYkB9dHXEXqvUPy62R30xfpY2o4S/FsIfVt5+76XF6AiM9+xE4ZO+nZQfM
a5S9Rsuc6XN+m/OcMXbKfTvkXAntM8lz0e+wW/66/CBvADPUX2Xuamw193s1
XtQus8eX6Hn9bfwf6Mv65fy1tEf/HX4vbdCv4FeiUfs17DS2jibso4nOtM7v
1uuzh7+s/zP9m/a48132meFcmbgo063mLO1eY1fk+vG8fTejBZdktvMS5rfS
szQhe0CdJ5b6bfS3Js9Nt9F96lXRD/TnmR/2mYIP5XPl9/ALje+lpXST/HC6
Sv8O+V7P9wLa5Q9apz65f8//NmO3Y6X9HPFsv0Cldqn5XdoldIv704qj8p1q
ZPpdMjADN/hdUvCxO7de7SH3+zfvTZ38VTpWrTHI0f/EHd+ffH+8Sx10H6bx
Rxq/M3k/5Dus0WaNtzGC16LuCnW3mLMZG7yDmebVG98h+6v3sx+1/Kftdxnt
983J116Es9qdxleqvVq+np7mfYv5+vOQgyz+M3I30eX0ITqHv8A6CzFcrTT9
VNyDN7wXCe/TKd+lkA/58fyZshloVf8tnDQ+in+C7vH9epa3i3Yn5/F3a7ej
z3ew23fyMq2VGXJ3pjj7U9o1aJf/h7eLPimfx6umk/02Ze5nlfZUv89h3+Qu
VOq/J1tBy5Fu7Jjancbe5ZfxluA+fjf/M/5OfimvJPmd5X/K24/CZM46ebn/
/3/4D08RO+0=
         "]],
        "0.378`"],
       Annotation[#, 0.378, "Tooltip"]& ]}, 
     {GrayLevel[0], Opacity[0.4], 
      TagBox[
       TooltipBox[LineBox[CompressedData["
1:eJwl1W1M1lUYx/GLNMtNV/iIIjZprWWt2dxUpFRMUwTB8inFrSbmolzoC52p
DTUVKzPJaaHZShOnpLiJJrpaL1QQU2tLbh9KrS1XPJlib/KFfe714svvXNf1
O9d9zvmf/59Bc0tfeislIvb783VhRObkiPypETuKI7rOi3gQn46JmPJKRCUt
UDv1bERvvnq635ybL0ccoA3ivvIHjfOLImroQ1kRh2gt+qkdoZPVDtOH1Y7S
OqSrHacFasdoqtrf+n5rfEbfDPUf6HfiW/IXJ0XMsZYinJVvmBgxcXxELj63
zvpk/IIYu8SX+a/gFxTLDdb/nvF84z/Nb+T/i36l327sxBnzdtEFPKdnRiwf
FzEgL2IFbRSfU79vWkTnnIiB8p1oirhDryb1dXyj5ctpQtxFfb56Ns2RH0lf
E9fqX+N8D+IN8QK8iQnPRUzK1ceeyrHUnFLrbuZfOMsYlXKb9WmTa0WLea0Y
NiVivfkbndt7dLi4jm8/f8Z0+8Ah+SPqR1GHLfrV8F2WbxG3oR1fyLfIp4zy
3As8Y7xufgnmoV3fTi9GPKE+VG0w7Sz+WK0CsyZEzEbWWM9TPIKmvur3sp2x
/dywpkXqJeb9ar/f2GvfGRFp6IU+6I0tPOPzI8YhFXv1mS1/in8OrRZPofto
ET3Ov5CvFGNxQb5S/mf+7TQh3kqb6Db6O/9HfBvxIVrkmnGVP9tdabS+33hG
GA/H99afNVuMDfz/6vOP+h1UiXejw/i6ecP4r9GB7sEjqLD/TUh/PqKHd6wn
9nrnMtT2OsOrvKud4QBxOk77rUvejf7Ge9TfUVuBfuIGtYtqaca71d6WX4q+
4nq1hFof411ql/RdrNbf7/aW64Uv5RPyPY3T5Hda9zR7WsTXJL9ZfaFxKYaM
dC/saRXPSpThln2flzuXxHm1ic/SH3Eex/RItf8eaOCpR4Y+J+kDdI4eRVjO
uwzvm7+YLsEM+T7Wcj/fTXej1X0ZKJeB7r4D3TCTfxBvZvLOJM/cfW3mW6x/
gra5XzWe4QE06DHXej5zD3dgOzLM7+ZZjOYfg3TxGXNO6HMSo+QO61Nr/Iyz
GIKnka7PPe9FlXyBPn94Dwpph/fnrvfmNm1UvyC/np4Tn5Y/S8vF9fJ5dI94
m3wVLdOre/IuqN3wPVgp3qD2QfI9xjKeoeaUyC+xpuLks+dbxf+T9341TfgO
NGGNeKb4XboOa1HmDHKcwRh9TvBk2meuPvn67NOnGoP5nsKTeJTvom/gJXTh
fdzvZvHn8G/ircAFtQSacNc3dA1di1ued1f+TP4h/Fd8F6f6zWm4bnwNhdaz
jrcct/k7cAfTeWbgE9/YhLjNc27HY/rk8VYX/v//6j8UA18g
         "]],
        "0.351`"],
       Annotation[#, 0.351, "Tooltip"]& ]}, 
     {GrayLevel[0], Opacity[0.4], 
      TagBox[
       TooltipBox[LineBox[CompressedData["
1:eJwl1VtQVlUYxvHXTDObCiEtEUFKvWnK7CbFQ5SKpxI5euhE6EwTM2mippCg
pdU0ToWaqCUoqEl6lTaZTmUemuRQY5pN2oFxqpskUDtcGFa/b7r48+z1fM96
17v3XnuRWbowf0GPiDjsz0u5Ebc8HJFWEDH9ETomYrDr8uyItX57b2zEAL+n
8zKwmL+Ov49/G38ILxNL+Jv4+/mp/Nt5d2Apv47/Pj+NP5SXa53B1hnmenRO
RBaWybVMi2hFG3J4yaMjjph7FBnmfqnG4+Y0yp6VaaCHpkRU0hL+Lvojvx0p
5j6lxp30aVqGNtlW/KrOHvm92I130YRnZOaURsxF66yIL9CGk+r2Loy4Dj3R
C9dig/yGJyLeRB/jvrgeo8ZF3Dc1omKS3pAzPaJIH6flF9DSOe6XV/6AdyA/
nmbJL6Wb+c/Ro/x56lS575VYhXLzKs1PmhzRDx/KDSyKGIRUJPPS6cKZEc/i
gDmLaTlG8vfR/ejgH6AfYAK/g/6GATMiLtGLKOOPU++g9Vr01IzkBz0r9/Oq
d3eI/7F+BuZFFI6PyDO3AIfNGyP3Cc2i5WqU+T2lWC/GyfTeEv2gQZ12dVIe
iqiVe03uGu/uc2vMk5uPEpTiSXwkk5Slpvwi1PG24ox8A21EPbZjG36RHya/
XnYdunidaJcfa51x+FnmJ2S5PqKfofJZcyNq5P/Wb4f8eX39JdPEW4vBE9TU
f6a9sdc9r/EMVmOIcYsac82fg92yabI97LlAttqNcufs/x10j7l/qt3gukq+
nv5h3MT/ndYZr+C/RS8bv5N4P3SL8fP8WnrReCe/i240ruBXYr3rb6yzgTb6
fR2twf16+Ne9jKQ79bcDA/XYxetEsnu41bgfTcI2c8+ofaPrm1Avn69+Ae7x
zEYmnttEz3l2xKd0k2+nRZ1mz60FJ9CGVhxU52b5JByXOYY0fRylvelstWdh
uewyvOL5L6ZLUMDvb82ecp2+lQv2TWqid9xg7b6oUL9cvyPc5904bw/OV/ss
PYdvUajmdzSNdrmf7XruTNwn7W/ORDVWPOZMdF0tV4U+3nW6OhWuK7EcYX61
PqqwRy87fQtXfVfduIJLvt1m39FmfqtxC06gjf8yfy1/q/Hb2IJd/Gn8av4a
9crsoxr7tMk3Xu/b24bV/MvOkFPOhgzZ4fPtOZqO7kcjitVon6eG34vMq6LF
dCWtVmsFLTTOUysfJeodU+8u/lVn7D8oTpzd6px2Hn6NXnLD9TRKNltPrzvr
3sBJv53CV7jiPF1FX0Cnd9tHfoj8CPlz9v1Ma+ThB9ffY4ZeXpRdjS75i8iU
z5eZxtvovJ1Ka2mO7FB1chPnbGLMn4LJOG7dFP1+ljjP9X7BHujARHUmYZH8
icT/FF73KOekOoPMW5P7//+9/wDjdWJI
         "]],
        "0.324`"],
       Annotation[#, 0.324, "Tooltip"]& ]}, 
     {GrayLevel[0], Opacity[0.4], 
      TagBox[
       TooltipBox[LineBox[CompressedData["
1:eJwl1WlslVUQxvHBqJigEqUFrFCsLAU1mhijKFBoSxco0AqtgEZRRGNxwdoG
iYWCoIJEltCyKFWIsiiCEClQ8INAgQYVUWg/scimiYFWlkQlAvq78cP/PufM
zJmZ97znvDdt/KSRr7WJiON+phdG3D48otOoiNrnIzrTthMiXh8UkT4uojdS
2O7AV/0j2ondSGdY992YiLfpJvNb2GcZ5zwVMZNe7Rsxm87Be5iL93GNfR6d
jw+wEAvwL3s1rcEiLMFixKMRH9KPsAy1WI427D+o/4nxFvXbq7+VrjA/wL5/
aMRkz9BL39vYU/nTjYv0l9rPcxn3z43IGB/xwuCInaMjXqTb8yPqcUmOizgm
zyp5xomvpM/R8TjBfhLJ+nhZnvvoGbV/xWmcVXOjuE1Yn9g7bMABuV+xp69i
q3l9oj/cNiAiU49ZyNdfpnyb5S2mBWPta0FEaXHES7gpM+KUfk8jn30IhqLv
ENuFCv6d4srpLtosTwPtWWQ/UKXGBPXSjReLaeFbQlvpXPaF/ItQjdlql4mr
Y99h/g0q9Fejrzr2LfiD7TzeYv+UvTVhQ+cRzg1SsF6eGx6PuDcj4mHzvqgp
iUjKUod2oCn8Jfwj+boY34ldfOV5ER2H2WskoUJsfY5a6p2Q9xd0Yk95Qj3M
l+MZOg5PI+/ZiFysE39Jf8PkHY7Z6szBGjFr8RlWYxV+UzP9Mfsjb02ipvXl
uMhXa81E60vRYr5b3l5i+z3pWcReYDuPU/ro7h11y464m6bSajm+F39a/2nm
Pdjvoj3pdc5Gpjxr5T3inH5O16v1lzzD+DPErbN+AE1yR5PxpTtbwLdD3J/i
1lgz1HwImtU5KU++8Xb+1XyrkGfexNdsba5xPd9K9hXIMT/M18Q32HgbXy37
cmSbH+I7zJdlvJVvGftSZJr/nHgf6g0yruNr1U8NX3/9Dkz0j6/ZW9j7Gw9I
xNmvKfZtgbhz7Cv55xvPQ4a9uOI9PEBXiluBjnK1t67VGXjQ/Usyb2eeTG+m
59h7uLffusvd6RL3ezH2ybPPO2nEXuzBQrXq1dxt3IBK+R/SS4p6t8p9PS1h
K0ZXubrgXfnLxL6BosR5FN9GXIt797uzddFZrJC3HGWYIv8xZ/g4juIe768P
Noo/bD5SvkN0FG2iKXQDX4M8Zz1PS+KZkC1PgXxZtIO9mSq2EtPFzsA197fO
N2CzdXX66Op5v6BV3slld/Nv7HMn9+Jj9snsjQkb3mGbhYXsZezL2JYijy0X
M9lLE2fWN+sMrvpOrFXvgu/KeRw0/wldxZb4TrxpbTEdrZeBzsoYuse6Bow1
nubsT0WlNaPkGaHvQhRht3y92NMT3yv0QW+MlrMEafJe8X3tKc8j+hqorw/k
nYcDvqMH8SMu+/5W0elo8S5vFJ8q/n7xpWInopJvGqbiiPg0+Y/SRvnbiu8m
vlA/2fyDkYVq/wE5NEf/mXSReZP8zchOfGet78g+ib2Rbb8z84//thR1k9mr
Cv//z/0PBhOBAA==
         "]],
        "0.297`"],
       Annotation[#, 0.297, "Tooltip"]& ]}, 
     {GrayLevel[0], Opacity[0.4], 
      TagBox[
       TooltipBox[LineBox[CompressedData["
1:eJwl1ntM11UYx/EjloqKXaQ2RRde5q2wmxcUUbwlCIgC4l2bilriD8sEzey2
/COtNTdFS2vZlslFlxcUjVSI0iVQm2Vb/dPmmlbOK17Kqb1+64/3Pjyf8zzP
Oef7Pef7o8f84txIqxBCm5gQinJCaJ8dwqXcEC4jLy2EZbzNI0LoyL/C+2J6
CIMWhLCLxs3jo9zfEXlJC0Mok3snK4QttJhXYWw53Sq+x/+QviSu5L9MPxK3
0nsbXSGu4r9Ct4tb8z+m18w71Vqu0ny60vgn/E7GW3jXcRM3sC1dLQrkHZ8Y
Qh3qkfJcCDHDQtih9jN8iho9BuSFsFpuf7qKVqmdTuumhbB4XAhNaptxn9qv
jMXTFmtsUP+D+m/oj3SR+sVYgEIsRK38ifNDyESDft/hW+zS/4DxauzFfuxD
s/yI51mMWvFRfI2HU0MYa6/jMB6DZ4QwxjriM+yTZoknZIaQOtr7yg8hlj5q
LI1GxKNpMU3XZ676eZib4r2ovei5rKEr9Nimxya5OWon4ZKareLkySFsULtR
3Xt0mPgI/7GpnglNpNX8WuNHcQxl+tXI+41/RXwt+q6wg3+VHzMyhIRJIXRH
kfrL+iyll2ibKSE8YXyosSTaVvzIGOfQ+KwJIczGCPFxcefnPR+U2U+jffSU
2wsFaqehW0EIJXIT6Eq6Re0Hei4SV4kLaYb6dFTq0aJHzEz712OPvHf1WI/K
aD52oQLlOKdXv+F6OtdlaOFdw+/jQ7hF/8F13MSNqMofLH+u/v2dgzk0012a
TQeId5vnrDnXmbuvuA8arWmQmllyys3Rc6w5+bfktXZejvAOI41faQ+TjNXq
U6FHObLFZ/R4Q/3rqJE7Sm5HtR2QH10//4jcB0Z5n2o70YHu8mFembET+s5R
s9taN4sjep6UFyevRs5sY8t4RdEzzu/IP8SfxV/KexEN/A78g/yZ/Bd4S1DP
b8+v5s/gF0bvHRYhNuobb0cPGN9k7v20rXg/f5+/9yLPHmLt5ZC9HUQ1UvS6
63nfwXC9UjAMyfhS7d+e3xB/D43G8kv0LkW6u56BJnf/cfe8ke50f5/ktZXb
Dm3QPro+/KTPRv1O04i1TNEjyXoGyk+ga/V+Lfre9OqBY9Fz6yzUoZT/rPwu
8uLkx9Bc3hQkyO2Kd+QXy12OLH5n+UHeBffzvLN6xX1abv5iRFBqHWfci1/w
M/p5d32xR36zOEe/JjqZVvDKUa9HHbLVZ2EiRutTIq8UK3HPvbzr3nblF87x
XP2dzc/Cbd+rE+KTaEAKbziu89eJ38LbeN/52W7N/aP33Vg6LwPjcc+35i7+
4D8tfgZPIc5cq31DzqptNP6mdZyizWjCKt+UEuTJ6SZ/qn0UYLozv8Y9zJWf
6buWhWzU+d71UNcTieiNXsiP9kCiPrd903vrMcRaR+qz3po24Hvf4kacwi3f
/NX0VVzw7u6X311+kvzFcpegJPqbglL8Kj+VjsRp+eeiv5/ye8lP4Y1AuXnr
5SVaR5r4vJxU+/6TjhL/RTupGWMP8eJlfkc60wgdba9d9Opj3iLxg9HfDTyE
Kj1j9dxN15rjpD7/Jjv7+iQjV/4xa/qcvxPx+lz0W7o05///Cf4DSm6VPw==

         "]],
        "0.27`"],
       Annotation[#, 0.27, "Tooltip"]& ]}, 
     {GrayLevel[0], Opacity[0.4], 
      TagBox[
       TooltipBox[LineBox[CompressedData["
1:eJwl1ndsllUUx/ErFIOMIqARIns4oBQE0bZsyh5djAIJlFFZyrJliAooDhSM
EIwMUVAIJmw0kZRRKGUUFGjLEgUSCU4coBgZBf088Y9vfs/53XPOvfcZ930b
jp6SMfmeEEKzciEkdA6hOCOEp2kJbdUjhKsJIUxIDWEixuG99iHEZYcw3vW6
ISFUygqhMta6bjMmhE/ob2or9g9hqdyx8n4VX0HNdiF8bHwN8vuEkG6ep8zR
Fod5h9BUr9gBIRx0najfAVpNXF2/l/R6EZXFtfS6aW2FUZ1eVXlVUGDORLpY
7wT6Lk3Rs5H8H+R+j1L5S/hJxs/Jz6U7xTk0j46VHyc/ZmgI5XFF/i7+dOP/
yD9CL4uL6FtyF6CD/LaJITSWf8sa63ewP2vOQL2BYtTBQ11CqEv32vM+pItn
i9Pofn0y9cnSZ6A+D6ep1ydXj+k4Km+uvCI6hx6hl9yjmXKqDA9hFm2pZr2x
S3rdNl6GrrxuSMYf/EcHhfAY5ojnYS6u8xN4iSgQF2I/bvEv69eXf8NctTqG
kG2u2rTMeJmxHGN3aC7tzO+ZEkIv9MY++yi0n/W9Qzjt+lR0P/uG0L9rCJt4
G/HISPdBfEJ9CYoxQ59n1T+HSbiq7kd9rsj/l9YYpn+/EHarmzw4hPm0tme7
o5ve/BSkorJn11ruE5gh/lneXvn5tEH0HsqfxX8BsxEnP01uKj4Q10gOoUKm
eeU/Lr8ZVvE/RHySvcpvTxemh7AIb+MXa39STVu0RpIebWgfuX1xxpzb1X+G
zzGYl6HHUnNuVR/Tybg9V6Cj1I3GSAzRZ5vxe/kFxsfwzngmF7wz2a4r9bKf
0WL9W1nnRfqM3tkYpf8htYdxEHX1KKK7zXmE1hMX6lmfHhXv4X9JG4gP8hvS
r8T5/GO0kfgwvzE9Lt7LP0GbiI/wm9Ji8T5+AUpdn0QJTuMUxlhTTWueZu3P
Yyqy7PH37tZuT1PEI8S75N4frUvfHN5y/QbZ94po7d6dIqyMnheq6heLLlGd
ezuP9wrO6peqNg0b9bvpGe3RL0P8qvEU/ebTdPFrtKu1xejTQhyPODTRsyW9
bH3NaWPxBnNsxCbc6Ol78G7d8a7cpnfpHfqd/Fu0TLxc3gqsxE/yt/C3YjO2
YxsWWddCpFlnKv72vm+y/r722Q99sFmv/nSxfSzXZ6a4rtpZtB4dqn5I9Byi
Z4JjeizT4wE1HeTs9411pCPUDsf74ory7sM43/dYxOt9032ZZOya7/u67z2G
V0ff8vQv8Tn+TnrB2fOnM+o8zRMf40+nO8R7+F9E55h4Nz+JviOONUc1XHNG
XcU5Z0267zsDy+Stck7k+u6noz9vmj1k2cMo/Uaitx7T1CXLnRqdc7SdvE50
su9gSXQWqE1BptoHjSXT3nr0VN8DNfXYF/1uYC+mWcNUFHv2O8Ulzvk8Wkp3
0Q3Rue/Z5+p9mOZEc5grX/4E4+uNj6ef0on0ZVoob4K8/bSL3M7YKj/OeAs0
R0vER79Dfl/W+v3Io+vocd9xeWveKP+g7/gACjFMv9W8j3DTb2umeW7Q27iF
NepnqF9NZ9LN+mzBCvkr0Uf9buupYS3V0cxv0UV1se5NaXSmuI5xfwapHYjz
4g7m+JZ+g3LGFug9wFh7/jne1wj8N/kZ/Hb8s7wzuOt9f4Ofzk/in+adQhn/
dX4aP5F/klca7SM6v3kpOCGual0J3f//j/Ifsu3BzA==
         "]],
        "0.243`"],
       Annotation[#, 0.243, "Tooltip"]& ]}, 
     {GrayLevel[0], Opacity[0.4], 
      TagBox[
       TooltipBox[LineBox[CompressedData["
1:eJwl1nlQVlUcxvGT2aKVhZVpi9skWk42lYrK4hKUAQKpLJoKmuXSZAGBOdOe
a6lNq2lSaTXVpDZjVppiBWYzIOAumWVpo0ALpYKKZX3e6Y/vPPc8v+Wce99z
z327TXpo5IxzQggTW4UwID2E46khfDYyhO33hnBebAifux7IH4QTYuuNN6DL
kBBiecVxITTxv+BtRFd+HH8mv5m/iVeKbvzNNF4sASfFvjTeYZ7zzfOV6znD
Q5iL7nI/TbYO7B8Qwg13hHCUZqvLQRbGYgwW5YSwEONcLzDnPfQ5+rN+h3AQ
Cfr9RF/S+2WkJFqv3huxCSW8v/T/WJ9Z6leof5SupGfV/Yu/MUaff+hK+b0n
mUufL7PNTdfwVmOHHtsxWHwqv9vkEGqMH1M7jDedt9N4F3ajVM1J2owmFIin
yvtQfhotMj7FP40W1MhvPyaEKLRO0UfeLt5OjJf/uPxqa3qC1tA94q/nhrAU
r2IJXkOz/GX0ktEhtMN340KoxcD4EAqNE4daC003T7uMEJL5k0aEcC/y/F4F
A0PIuMvvLF6MEmtZqiaTNxr79T6m/jiixodwGRbrEatXqbxumSHU++3X824U
20CLxarFbhVrFPuRlyB2kG4U2y+WKNYU2ZsJ9oDY+bRJ7JjYDLEWsZt5U8Wm
4aK7Q2iLJWK5d1o7hgwLodx4ML0yz/NxP9XuJ1peT4xN89tiHA65t9vkzJJ7
qd/yZ+MX9V+h90rEyh+EKVnuS++oQfbvWPeHCerGY29SCOvEv9NjLa2ln9B6
+Q0It9tnxv/yi+SXW0+C+njE4RzxYv4v5n2NRhu/QnvQV2mV/Iny8pCLnvwl
/Bb5o+2B241H0WF0Fb9Wfr01JRln8hNpFr3Unlih/m1UyCvmveU6yzN9k840
rvRMogZ7b9xzkfEjOKhfifhyfOO9ztPvSr2uwNaIh8P6zZe7xfUY/crpAuNq
/aL1q9WvWN083mH99smZ67pKfJ/YXswxPiQ22TMuU19lriI1Xc3TBYX8Fnln
cBKncQo/yv0Bza4HmOsEjaFN9AD/OO1v/BftR4/R7/l/0r7Gv9NG/IECc/xK
f0MdGlCPfP511jCJbrOuSjxibVOcL/fjWWufjWfwNLa5r2v13hLpKe9JXiF9
il7D/5pfjjLk6jlRjy16lqMMB7zfObxsjFeTrXYczcUEnKvHKrVrsBoZemTK
jacfq1+DPXr0caZcrvYWNTF0dWTd7r0IifKTUCmvl7wK+p4z5ibeuZH9Ir8V
vYy2pg32b5fImSavM91EX5F/sfxS+/uI+CZ6lG6OvC+0jViKOZMj3x35HdU9
w39Q/As6nB9lLWe9n/XOlSO00Ts43fObhqkoss8rvc/bUIE0dT3st/flf4AU
4wbn0051u/AOr0yfF+ylO9QnYbAe7T2nteIP61GAfFzF7y3egZ5xzhx2znxF
/3Qm5Xj/G+kJezVG7m6xx8UqeXFiFfQPsWixrWJDxd7l3SD2Dq0Ta3E+vifW
R6yYN8/5WkTvt44h4lPoPmfpXkx1XShegHxcraYTJriXLPfytZw0vWZFzm26
2XezFJ2MOxh3pNfgamSoT0dnc532reuud1994vSZq888bB3lfn0/vqXNvoUF
dL1xg9+slfwRzpBU5PM/5x/l16Eeaebtz1/E70cX0xiaKL8vXWhcI287dmCo
/Lb86fw29AE6RO5V1nN95N6NL+BPoxfSj6yn3rc4w7hU/Rv2TaNveHv5dfzJ
7uk+XOAeG4yXi9/qeZbQNvpdiDddv4U+5r4Z/fTaoNc83nxcrFeV2rv0SUaL
vVhtvEBsmV795f8+wf8N41Tx3r4Pz1pXiuvZdAR9XuyIdfXUvxc6q1lnjkJ+
Lb+1OT7VMyb9//9f/wE6MPij
         "]],
        "0.216`"],
       Annotation[#, 0.216, "Tooltip"]& ]}, 
     {GrayLevel[0], Opacity[0.4], 
      TagBox[
       TooltipBox[LineBox[CompressedData["
1:eJwl1ldwFmUUxvFjGxWQhJZgAQ2IghASSGSkSMCA1KCIsSGJoNjGoQhIUESl
6QgSCF6AWIAEy4WFKhqlODoSQBFREeIokEKxjIOIKOr42/HiP8++pzx7dvfb
d7+MMeNvGndGRJSdGZHSJ+LlmyKW4xVkXB+x95qIq2+I6IauyEUOHr4tYiK6
OJ7SKyKbTqbr9LXi821RxCX07HsizsGSuyPWyh0fGpGltjPWWJ/VM+Ib55jA
a+3giIv1XOG87TBXbA5+5PUTZjvO5jOL7tT7J6+ZzjmQ13brKjTkV8dvppqN
/HL57RAvU1dLC6xr6FDas39EDxy2vsG6jg6j9TTX+T/isRVb0LrYdSFPfRva
FpciA5ehj/pG3Z1DbQ0Gig1AvvqhtACDMASDk7X6evPVoRbrnHfcCHn1E+gG
6/F0PZ2k9nfzf2J9yPpjepDO4dPT9eY4b8btEafch1bX8i5wHUi7OSIdzdGi
L2glrw9QYF1ivYXHZhTyGcUn/caIlhinfzwmYCzvTLHJvOdaP4M/9Vbw+IOW
01P0sGezQk37UREraR89n8i1K4z4WW6bWE+5Kjpdbo9cN7nf5H4Wu1XuF7pZ
7qDcILlDdDBt0TviqmERnZCJ1WZqMjyit3i+dT8scA1bXcPyQRFf091qjg7h
c13EKrEKXH6X52H9Kc8qbMNkHmP134v78Iu+Ov316lPv8F5ggN/aRn0P3RLx
FD0mt66fe+xZr6fptFL8Pfk6+i6tpRtpA8934ZiIRSjFYpThiPwC85RiHp7D
fHRUv0J+JZajAuVokh/xuvwbeBXdrF+j1ye/H/k95uhkjq9oJr1GfoRcmfk3
m7/QeuStEd1plny1ui3iWzG8R0SR2iJaqX6Le3thnj56EX1c3ww8hon6p9Mx
6u9OfsN8qnhsx136J4pNoDV6a3EIXXnU0f28G4+OeJZHmn1hn3WO3Bfu+3ye
z2Ge3AJar/4wdsuVWn/rd1LvGS903HqgfcM170UX1/KrGWY47+OY4dzne4cb
4Dw0SvYFPCHemKbgAuQ7byr9ywyn0dRxMzRBCzTHk3rSaUuk4SJciKfErzDD
lZhv3h/0H8BBHDbjIjP+bfZ/8KX5y6z3mf+I3OLkOvX8K9fdDHvknxc7pLdY
TQ1NdY9SUOs4wzmy3aseams976l6PxXfhrHmqOX5bOKf3F/s4jfPukr+bX4l
6uv0bbdO45XF68rknouNllspXo5CXgd47RT/DDuwC5+jqfoPeTejm2iF+lvU
p/J7R3413sZarMEx+9ib9C3MUTsX+erPUb9U7AUswYtYlvSa+S08zXsuOqj9
2CwlctOSa8ZjeDSZy/taTKu9P235Xo522KB+r/PuF5/ktzgZU7BpQMT93sMH
0Iv3Yv2r7DVltJxW4Gp+uajx7hebowij0EF9++Se2g+W8k9X0xJp6Os8Y3iP
xhL7yFI0UtuF74M8s+lp9398ssfZx07a184TGyl3Lj0p11+uWu6DZM+z9+XJ
HaC/yuXI7ZKbKlcp1lHufXpMro3cJrlecgvFmsqV0lq5E/bi7+zp1bjfPvUA
lnk/SlzbNEx3LSPEJtHRrmms/fweDNGfwm+4mhuxRv/q5Bsjvv9Ovz/6Pf8U
/i+KL8Mpz7ORdQOzNKQN6e9iJ5DOIw0t8ITzF3lXv/LdGknvRDPx5sm3Jdmr
1afR9ubJNEsn7PbN6+IcXdEZ2chKZlJ7Fe2IDshEJ4zknZ3sB8hEFjpjlfoz
fTPPwhkIpPIv599YXwresYesxnH/HVaoP0pLrRdgmNmb8cnjv1xuqPWH3q8C
uinZr/iM8u0tRhGO6F2krppO1f8I8tSe9D635bFQrrf1e3or8T6m8eint4T2
T/5L6ZmC6xznIw990Qf7+M7mUSh/M0Ygh98ssZnYwO+09+czz2q945+8A231
tcFryX4nt1PuVcc/ymWIX4ZV1qnmq6DlOCZ3qXhrrEz+b+nbkXzjHR+VayV+
CV6yPiWX2////5D/AYhgDwU=
         "]],
        "0.189`"],
       Annotation[#, 0.189, "Tooltip"]& ]}, 
     {GrayLevel[0], Opacity[0.4], 
      TagBox[
       TooltipBox[LineBox[CompressedData["
1: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
naUD//+/+x+ptTH/
         "]],
        "0.162`"],
       Annotation[#, 0.162, "Tooltip"]& ]}, 
     {GrayLevel[0], Opacity[0.4], 
      TagBox[
       TooltipBox[LineBox[CompressedData["
1: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
         "]],
        "0.135`"],
       Annotation[#, 0.135, "Tooltip"]& ]}, 
     {GrayLevel[0], Opacity[0.4], 
      TagBox[
       TooltipBox[LineBox[CompressedData["
1:eJwl13lwl9UVxvGLCChoRw3tFBAkiAihttValrAEEgPIDknsAmEJIStJsEUR
JBQ7WFkUatmFglpbKxGQLQScEaSdglYWxQ2SCCTIFhogLErA0s87/eM7z++c
e85zl3dLYjOKRhY2CCE0bRjCRwkhLB4TwlIsQUy/EEq7hfDy6BD+hAX4IxZi
q/yFoSEM6hnCeTqQrtHzKlajglfn5BDi8Ia4Uvwa/QteR3Peu3m8wmslliON
xwr6vnziL0Oo07NW7fyRIRwfHMJ35rmBeeLa+BB2qeurrg8uqn1LbQaPUtq4
jzXSRvQRa3gY28W3ibfRJrSMtraOQ3yyeEzEJ3Ifo8Qc583ZeZg9YK049DCu
NlPdBBxUdwCzzHmcVuErHMNR3K7+hPpitTNwQq4aC9VfpzfwLepxDXepP6d+
sdpF2OQsNuLv6jfTt+h0a2mcYl9IsPam3c2n9ij6jnUWSLTXJDrXHhPpHDpI
7ef6x4o3idPpRjqGdjZvKz43eZzkf1ld/BDbxSzjz+F3qFS/lE+LXiH8VRzT
17Wl99BBPAbwuGN4CHdilN7RSEfKr9TIjdCXJc7Gp/o+wyEU69+T6gwnhDBZ
TbP0EJ6kcXrWGLtfvErcjj6A9qjV93PaBY+iG7rikvxImoIROK0vlVby6ZcW
wjfmuLu36yd3D71mjuvGGo1zT6Axesj3dJ/1Qm/stP7YESGMl08Vp2Gl/R6y
3z2Pu6b0jJrTWPeYM8twXon2Y2wW7c2zDxKwgscM/cWYiTt+7b7W32RgCD/2
+yH8CNv5zONTpb+jsR3i+eJ36Yu0Wv4FfnMwG3/A84hTO5fOQ4NfINO6zLnf
fs/QEr1vo9AcRejuORqmZwh9SfwiSo1vxcgkzwotwwL5hRiqbrT6UXSzeBM+
ML4XBeo/pP/GFvmtGK0uX30BrXCGlSjHQ57XhuNDuBUBt6ABCtXW2OMnPM7R
Q3QO36nydfwu4pr8YfkV8kdovfiS/GXMMM/zaufTBzyzHdAej5uvB//1euLp
OnrMmQyUPzXK9Za74Jr2oi/ob+gZOsb7VnqcblD/knxLtS0wRN1gpOmvdB1L
nPXbeE/dUPkTvL9Gjdph4su8h9OXedzJ8yzP79Hl4mVYa73jrHM8xmIC34xo
/fozaaZ4Ap1IJ9IH5bNpljiLZtMx/MciHfusI0c+R/6o9a23tg3YL58rnyt/
TP4duXHqx6Mjz07IN/6w+yZPTZ7f+XQSjTNWSCeJC+hkFKHE2uMHOF/s5D/F
M/aq3BV7HsH3pHM4hXP6R4qvyqfQXWrH6E/n95W1rLOW1OhM0VZtLNqhC9+u
2BLtifci3nU8EtUd51sVPefqksS5xvPQXPx9/AA/0ftTvK4/iBvgFpzn8Zrc
I/oexc/Q31pirel+tMNsc8XpbW2sDe6N1ob78K3r15K2wln3Xg2mqm+v/pLn
7zLqcBVXcEn9BXoRB9V+jCz1LdQfkSvHYVSiAtXWWBXtw5o+tcdktUeseaA1
v2d8F3bihud6Ne0sn89zEgpwQO3J6BscnZs4F3mo7+9d/4SzcN4FnsV9+sv4
f0RL6TZ0VJfJsxONQxmvL3lVeu90ED+ImOgbzCuPV28+CXhT79+whNdN16Gt
sWf1dOHVDV2jddvTTkxSs0DtQe+/HeLtKMPv5Z7Du/LzzLtBbn1078kV4B35
2fJXvLf/631/ld5rHa3wjThZTT8k4jEkoU5+mvfxdKzyvkiytqV8porn0yJ+
M81RHJ23+uYols+Wf1ruKeT4ltz0HZ4iP1lcFK0pehfIb+Vfii3R/NbTzHel
l3y5+grc7ft2F9YYb2nOXM9/HnIw13quuwfq0dI3pAV+iAxj41Hre7yXx39o
hXXn+/Y/wScNX+hJVfMMjxQ6je6Wex+VvucVKEehfHL0XfINL/A7nk8j+9gc
3av+5hhgH/3RD29Ef9P5e+QCapGo5011bfTfh9aIRVt0MNaUNsPtSOS9RG0j
vxtH70/chiaIUXvWs1KDM+gefcvUlrkPv3MvHbCmbX7X+rsr3xp2m/sfGGX9
o5GOmeqH0MEYhDgexXIzomeIZ6fo20ArUB69C/mscnar8Wf8y15/q3YHbWe+
Nup/I34Se9W3Fu+hH+IDDNdf7900LPqbjW7Xt5TPMizCEixGmXwOjxLaim8M
n2xxFjbZU7X9/VN+o9+H7S+J3zl+Bz3bz3rPTMeX8onyNfIH5FfY+0q8gr7y
Z+T70LO0m72fpgnik9HfKTTOO/uU312NdcFyfcswjfcXvHup+dr4ft7PyE3F
5/I95U/I75N/Wu4pfCZfLVeFKeIq6++U/P//Ef4HlyOH1g==
         "]],
        "0.108`"],
       Annotation[#, 0.108, "Tooltip"]& ]}, 
     {GrayLevel[0], Opacity[0.4], 
      TagBox[
       TooltipBox[LineBox[CompressedData["
1:eJwl13lwV9UZxvEDJgiEVttKUm07BYE6FCyLhRIIiUoSwKK0lKqEFJKwSQgk
kLDvYQkqihLQ1rDVICJFSyJMZ8oiFoFCVcAW2im70FEwC1AwYU0/d/rHd57z
Pud933POvTf3/tI6J3/QhEYhhJZ3hZCVGULS0BAWDQthMXamhHD2qRA6J4Xw
jwEhFA4KYRcvfkQIa3qEkCO//cgQupjPNu5KR9C15kbR0RiJ5zAG6/i5dBzG
Yjzy8Ht+Pi3ABEzCRLzJL6KTUYipmIJy/nQ6A9MwCzOxnj+HzsVsPGI/8+hb
/GL6U/F82o0ucb7dzlJCP6AL+N35vZ3/z9khbMdO7MDwfq4NWqSGkODsG/TL
Fm+mz6t7AUuQqv5F+i7/+/KO6JvGe1TPPfqc7xnCR3Ss2vv02mvcku6jn8nN
5W9X20btD/nneK1oW/GO6FqY30/XWWOYvmvpcHpG/VmcxGmcwly5HdR+btwx
6kWv61dDe4mraE9aTV+Sm2Rca9ybXqL3PRrCN3OcSdyC9qHfoK/JTTO+xzid
3ksfktuO/ggPoi3aYKPcy67vFfwhug/2uoluoDlquznXVefZJq9Jon2J8/nz
9NvDm08Th7t3tCf9u7qnXctn0L6Xe6HmX/I60WS1xWqPyb3F+yctUjMFkxHf
2zOpbjTGIE3N9/q7TyhVN8l+i1CIFN6f1HxprxfwBb7CRXzCn/ZYCI1+4z7q
GWgubUzL+Al0hTierqS7eY/b21LrdeTt4pVYfwmex+v8vvxz/NfFv8XvsJ6f
yY9LNha/hQ2o4KfqV6dvN3P5crrTAprweAgL6RDxAppBF9E+/PuzQnjF+FUs
QymWI5H/Rl/9on3oWyH3QFoI77m+9bxKOZX6HLD2wej6yR+DUTglt0rtp+aL
xbF93DMaQ/ep/7Hn/a/qD+CE2pNYZ/5h82tpR3q3e3Vb/QDjzdb/OT2uNl3t
QPGT4njP7dHofPQYPR2tjQfUjpGXIW+2vKv2fZ0/17iOzqH1tJ28mgzPOqqw
nN86+nuQ35auED9IS2kb2kF+rL3G4C6U87vxb8pPpOvF3WkP/Axd5K+0j+/K
TcB4+8lDurkL4kH2fc6+08Sp+K/zrZA/Ts42vYaZf4b/F+On6Yc0pIfQYL2h
4j3iZ2kGhiDJeu+qv6znFVzCeD1GmzsidxQ9TEfSEaixh1o5NcgR11t/s/qZ
1j8kL0W/ZGzlxflbnaZXMzqVNqfv8zvocUbuHDWzoh7iKeabmj/Nn8mbgTr+
3bwmmC5usNY0+jU/lhcT9RXf4U+h16JrzGuMyeLb/CJ6ld+IF1AovsWfFF07
foNz3MHE6J7wC+gV/m3eLUwQ52M88nDZ3GR7vWnulL2O5Y1DLor4E33XCukk
WumsN+RNEtfR66hHBX/1EyG8Q2e4Bt9xb1aJy1DjnVGLalRFar0c9Zn6f2y9
duKN6qr1yeZfpFX4Cm/zX9NjFS3Ut4W+O9Ws5DU3/lK/OHqBDlabao/pSEOZ
mqXyXqDNrdEMp+WdwmY9TtLGaptE9wRNsUD+QtR7530YvUdosfga3S3+mpao
Paz2CA7hIi9Pzh1/Sw24jVs4r19He7phfBNH/W0dQ5795MrPoBXiLdivzz7k
6f0R3Yv3+H/EEHlD5Q+gJ9zPD/zm2IVGeneRv8m+OtOn5Byyl13iw9H3iLdK
n/3GZVF/miKnBf+NaA1xmv7p6IuHzCVEz7LxMv1fxkvY5v0z2P5/jV9hq/da
rNwmqNSjmfzmiMMZ34bPvRfX22e22iwUqH/4l74NQ9xvpKv/gT5Z/Bfd4+F0
Kb2fH8efYTwTUzEd0xDDL9Z7pn2vtuYMuobOijxstOZsa5a75m/iF2oGRt8c
/uTofcIrxSO8rtE7nl/AXxz9nkNrXivM5z/HX+a5WOMb8phrOY9X633zmW/b
Dd+4m6jDddRjO7+/3P8Yp/hOnafJtJz/LX4vZ07CE0/KQz9cG+hvGF307mG9
477Hc+SfoPnWmoAM8RbxEJqJoeik9ic46lu/V/2pZ11/PVpFZ5GbLKeEptBd
cpL1GSluKR5F42lvZxth3CN6vv2+6Cqnr7hM3I820T8W2fpn4Zycpvp3Mnfc
++YkTmCu/p/QT5FtHzk4LLchetfLPcj/GH9Dgdzy6HcrXU+PRL8BrVthrhJb
sDV6l6Kz/cWob28/B+QlyKv1rJeKL9GO5quj94Xx2/Jr6EY6WO9VdDUS7aUn
3lf/hdxZ3gfVnsUa/Ntv9dni4+pa67lVzret0V/9Ad4DvHd4Z9Ut02uh/S6K
7q3n5BXxqzgob3l0tmhftKfaxXJ60RK6Sf09et6LHXJa6rmad1rPhfKHZ/7/
/4n/AeYVjlc=
         "]],
        "0.081`"],
       Annotation[#, 0.081, "Tooltip"]& ]}, 
     {GrayLevel[0], Opacity[0.4], 
      TagBox[
       TooltipBox[LineBox[CompressedData["
1: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
y1vFH8z71nlUrc3//wv9D2hzpy0=
         "]],
        "0.054`"],
       Annotation[#, 0.054, "Tooltip"]& ]}, 
     {GrayLevel[0], Opacity[0.4], 
      TagBox[
       TooltipBox[LineBox[CompressedData["
1:eJwl13d0V+Udx/GLQAh7lE0A2ciSIZQhIisLZARbQSEMoVVm6bFAWGFZZI/K
CDvICGGIUkhAphC1KBUUZFgZ9oDtQVuZHRTo6zn+8T6f+/18x3Pvzb33+aXG
kDEpo/NFUZSWP4qK9o+iRq9E0YupUXSubRT9ghbjFUdj/i/FX/Ffoms7RFEJ
folno6iJXF9eP6zjl+SX5D/Nf5n3CtbzS/FL8Zvy+/MGYAO/NL80vxk/lTcQ
mfxBtIzcz9BcbsvgKDpv/a30hcQo6oGoSxQVeDWKJraOop7iKbSy+iqohKqI
w1R+dVrWOtVoOfokTefH6N9svfK8Z6yTZf42bEc2epnbG/msVUjtND0p4lm0
XlhHX11ameZXU2VoFD1B+6jJMreA4yL63lT/Im8xTVbfDUmoq6+Qmjh9MbSv
mn6IdVxC3xL1L4tX0NLivWY20tPWue51fn9xT/bRVDVF9eQ43o9c7Av3nVfV
7JJ0mJrSNNecMvRD+Uq0mnxFOlK+Mt0vX4Wela9Fq8vXpOPka9MD8nXoDfnm
9KC4GZ0u/4D3tvh/dKTz7OQ8O6MLPncNi9Rcpg3VJOqp/7z7QBuJr/BXyj/F
azDEfeDXo0+hPrLl7ngudrpvu7ADW60xVF0r/ff056gZEGaqH8uPp4lIQJ5c
u4FRdFTfMRzBWf0fhll61pmxk/7IS3W+AzEITdtE0UO9jzDXzBFmjcJIVE/y
HJt52Ywr+AbXcBX7+fEdo+i24x7to+gW7Unv0DT+hvDs0lG88daZgDRMtV6V
Ae4FP108DdOxgN+Yf5S/QLwQi5DBT+InY614HSa3887wU3nFn/NM87KxHe/z
3+C34e8Wvxc8HOTP4Q/gfxBidO3kfXSeXegquVFyGXQ0XU0n89sNMt9xNrKw
A9vRm38swXvnGU0y45rai13dF+dWjndIzWlzzlrnHAp19vdUF0M/lbshd5Ke
wmfINC/W3yBBby91PdR9b94PSOT15vXkVfTsnVd/ERdwVV+cvtfV9FczU809
PfcxnDeAN4vXQV89781yx3XpMnrTuU5Qc8WcRPnrzvMGtsm9ry+Ltgjvp5ox
4hzxo3CNdI84l7aRf0d+nPhjcb74KPoT3Sv+hLaX3yU/WfyVOL/8BbpPfJ52
lN8nny6+Li4oP8P5zUQ6pmMaOqs7qK6cd6Q8ymKqc/5BT47e78Nsz/YHamaK
/yFO0BOPE7y3wjvEW2NWAc9oQ/0NsFocq++4mtlq7qpZYG6ivo95c3n/4a1X
F6NvvtzTYT8Qr0URvR+pm6Pu3+qS9SXhU97P1f1BfSu6lD6Sf4jN+jahsHlL
+C3l3xFvRHHzMsM5yT3DbxH2EnEx/kkz54fvjxndrdENX4ZnQ00KeqAXeuIL
/gvh+szvRlfR7vQMP5lmhGukK2kSPc1PoCvEXelyGk8/53ehy8Sd6Nu0M/0z
/3naEe3RAc/hFL8dfRat0RZt8Bl/V7Jng85zDTU8RzvFO/CEuKjry0cLue7F
4dur57+us7Lv8wO6iNeUt5A2o5+Yk613O540K9JbnW4TP/btKmzeI1rQvHl6
mui5b04l8/5F54a9hjeHNqZ55mXpPUxnmVXNrK3iLYhzXFtfVTpNfQX16bQi
PaR+o5ocOk1fJTU3zM/kVXBcK+w/9FJ4L53PfdxFWd46Nbcd38Et/Ih/ev/G
mH1R/RTz3jU3Q91mOkFcSt9JuZJ0vHgTf6l8Bh0b7h//gHwM/Y14ZXiG5WfT
YeLHvvHZ4T2mQ8W/D+ctP5EOFt/mr5C/RQeJ0/hvyI+gqeIb/IbO75JvRgP6
Nf3WN+gaXlN31DUcwxFcCfsw7W1eP7lkM/qYcYHfi3eepoiT+N3lW9PTvklX
3IPL+M43srC6LDWx9Ji1zvAOh30CRzDcunX0vmWdOZiN3PDbiZcfD3z388w6
geNYrn+qb/VGM6fQ9WaM4a2h68IegzgzT9j78rDFrK5qz5izWnyIznOOfzRr
D8ap/x328N/k7+TtQAkzB/K38jPFG7Ae1+1v3fir+EvFS7AYx/hN+Av5s8Qz
MSPsf/w4fjp/sngSJob9hBcT1uYPse5veWNxz/N+F/34KfwEe/ABe3Ui3efb
uheZ4i/D7wOcQUVrfEEv+X2QJjcJEzHEvMG45V06FX4PmtnAzMf+FrvUfuv+
/hUV+cnmNu/jOe3pniFXfQ4O6v3a/Ssgl6qntLkDaRmabHYSdqt7Fzf9xilp
flf5u96teHqPzjejoeMmYZ9V08qz3RINeI15V3k1rZ+n9iNsNGt0+I7SUfSx
57R+2I/U3fOMPRQvEz8Kv8Xl/07rig/L35T/TrxU/DeaIn+eVhfvlr8uf068
OOxn4Rspnxd+a4b9Uv6q/HHxIvEJ2lp+Py0T3kX5b+RzxAvD/hm+PfIvOc8m
tC/NUFPctYx3HRMwDhORhtqu+b3wf4jepeqKqqunbxuvaHiXeZfMf13tcNQP
/y/It3KPR4iz1RVTN1tdYb1FsIUXy5vOu6j3V+p+jRp6K+htqfc18VZ1hdXN
UFcrPDNyNWkd1MZMfqx5r6odiiFhT9NT0zlfCN+W8HcRl1VbRm8Lc4fxNvEK
mjtJf/nwP5FcuTA/rI/J4f8Ycwthjdr84ZvEOxu+JfqL9P/p/7v/A3W2uEI=

         "]],
        "0.027`"],
       Annotation[#, 0.027, "Tooltip"]& ]}, {}, {}}}],
  AspectRatio->1,
  Frame->True,
  PlotRange->{{-1, 1}, {-1, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.4080030297576*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
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
m6PiCBzz6Eshzw91uwhjCkX8Liz/fOeIKOL6ZyvL+kwXDFrFVoRHq+hkjoYW
JGMxzC5/S71Nw/FMWuAREtwLHSOMUuKRz6ws8Ps7gxFjAECtw4zjRWN7GCyC
qdiW+EztZNivTDMrReq8cv91eOb7V1b5A/UxPcgBWNTytSs1KZir1yMX6tFh
ikoUewdsyKPa+qTk0qCBX90ZlsWieO4HVhb+Qx0rasjW0M2Fa9I2fmqv2xzp
UEJv+LfV/C+QVe++YPSAE44HUOjfvj5rYX7G9QdXdvbZ+hiNXBJOy0txTUU1
teXrqRgA4qy3omOVbP2K/WarpQLlC7DV6CIACkbe1DmeSWGQ1b9YWfd/0zGi
QdXm+WHnYda9N7+BlRCfG99QXvAjXedoDLOYlv9mMtHEqvuxOiUDhSnw8K/q
NQ2ncdrNj66A4PNdjTPIo/mOn9l/bcQn/9uVqX+8Pqs5qVjyT+5fCwh9YWXe
n8jqlAqfsewvdDE77mjzL1em/qmuj+gTUF8BGg2vGnmIHf33K1NXSJ6qF61J
rx/KanvMQvzUyuw/V3UW/XTMrImOAtfP9FeMVgqu/8zKK/51fZxpBqwQcAU3
Ao3f3VeAW2iT8oRBUff/48or/tc6B6bDtIx2U7UVgq7uTTROoU/PnELZ6b9e
ec+/q2qUa9XzE4wfYA0f7MvRc7XMnRd59m9WXvUfukKko08Bx5MhQFAhoZrs
KrFshjC5PWbP43z1v19573+sWoVfq2JSjO9lbgJ7ACjrce1Lak9N3rPNLKPN
USr8v68s4T9XKBN83A6daKZvmzynCVEkbjGJa0j7kiqZ2hzroe2hefBiu/2n
lTX9v516qGx1bm3xrnonvL7b1SPU7lkska7PteAxFSt3VRb3f68s7heqeFEd
Hg51e7G2bcO/Qgv/xSqhMud3rKiV8t819+8fb/r6uKmc9CgHdNoZw43evnjO
am+enXm6fWc5jW38QZIveb6TIN+Px59f/VV9hedzY58wY588cMw9ux2JpdDE
afxy1PH3vS5H6W4Nt75KY9dfQ2v5WlrfP+Lw6399ezi8we9P1YHNN/z/tpLY
oA==\
\>"]],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJyE3X/o//9e33VZOcYQlDiEk2oMXCDRjCbC2vIrBrURucigQwyRZnCIjWpR
OcggkdYGjRBpsARZG52oUXPISeLQR9dmtc1ytplT5/To0eNXPWfQVrACO5/3
6365ffle3734fP55c/3cHs/n6/l8PO6354/H8/G4P37Tv/Kv/wv/6q/5gi/4
gh/6d77gC97+ffz7W2/8/dNf/B//nT/xPZ8df/Q3ftkv/VO/91fGf+9Xfvyn
P/2RXx7/ma/5qh/9Qz/4/vj3fP0P/KWv+JZfHP+6b3z7H58Zf+/v/4lP/P6f
+PnxN33rxz7/k58ef9Hbn/+anxt/33d92x/7hr/1qfE3vxzgz4y/5JNvC/z0
+A9+vvQf+PU/Nf6RT7z84Pgf+fzR/t0f/rHxt7/9ua/60fHf+MjbHf7v46/+
qpcNxv/Q29P/5F8e//Cn327wP42/7ct/13d8+e/6c+OPfX7jj/7G/378x97u
7aP/7fiTLxX6neNPfOELv4c/8h+9lB//F4/9jf/E4/fGn3scz/iffBzv+J9+
nM/4Vx7nO/7OR32Mf/ujvsafetTn+A8/6nv8pY/2GP++R3uNv//Rnh+c36O9
xx97xMP4k494GX/JI57G3/yIt/H3PeJx/EWPeB1/0yOex9/7iPfx/S3PF/3L
H5g/MH9g/sD8gfkD8wfmD8wfmD8wf2D+wPyB+QPzB+YPzB+YPzB/YP7A/IH5
A/MH5g/MH5g/MH9g/sD8gfkD8wfmD8wfmD8wf2D+wPyB+WPnd/5YfZ0/Vj/n
j7X3+WPxcP5YvJw/Fk/nj8Xb+WPxeP7IfaH8yge4f/kD8wfmD8wfmD8wf2D+
wPyB+QPzB+YPzB+YPzB/YP7A/IH5A/MH5g/MH5g/MH9g/sD8gfkD8wfmD8wf
mD8wf2D+wPyB+QPzB+YPzB+YP3Z+54/V1/lj9XP+WHufPxYP54/Fy/lj8XT+
WLydPxaP5488J5Vf3RfqA9y//IH5A/MH5g/MH5g/MH9g/sD8gfkD8wfmD8wf
mD8wf2D+wPyB+QPzB+YPzB+YPzB/YP7A/IH5A/MH5g/MH5g/MH9g/sD8gfkD
8wfmj53f+WP1df5Y/Zw/1t7nj8XD+WPxcv5YPJ0/Fm/nj8Xj+SPvDeVXz0m9
L9QHuH/5A/MH5g/MH5g/MH9g/sD8gfkD8wfmD8wfmD8wf2D+wPyB+QPzB+YP
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
8XXcUsdp9Lt0v8P1u0P7Wduv1Pfovjf0Oan3hfoA9y9/YP7A/IH5A/MH5g/M
H5g/MH9g/sD8gfkD8wfmD8wfmD8wf2D+wPyB+WPnd/5YfZ0/Vj/nj7X3+WPx
cP5YvJw/Fk/nj8Xb+WPxeP7IvOnyq3minRfXeUCd99Bx3h3X2nF8HbfUcRr9
Lt3vcP3u0H7W9iv1PbrvDX1OwuIVi1csXrF4xeIVi1csXrF4xeIVi1csXrF4
xeIVi1csXnd+F69YvGLxuvq/eF37XLyu/S5e174Xr2v/i9fFx8Vr5vWXX81j
7rzNzlPrvJzOQ+i4644z7bi6jiPquIl+J+53sX4HaL9n+3n6XovFIxaPWDxi
8YjFIxaPWDxi8YjFIxaPWDxi8YjFIxaPO7+LRywesXhc/V48rv4vHtc+F49r
v4vHte/F49r/4jF5Jcqv5tF33nDnSXZeWOfBdNx/xzl3XGfHsXXcTscp9Lts
v0O13739jFi8YfGGxRsWb1i8YfGGxRsWb1i8YfGGxRsWb1i8YfGGxRsWb6u/
i7fV78Xb6v/ibe1z8bb2u3hb+168JW9J+VWehs5L7zzczjvsPKvOK+k4+o4b
7jjJjgvrOJh+9+93zn7XweILiy8svrD4wuILiy8svrD4wuILiy8svrD4wuIL
iy8svrD4Wn1dfK0+L75W3xdfa4+Lr7XXxdfa8+IreXDKr/J+NM9B53V3Hmvn
7XWeUudldBx6x912nGHHVXUcSb+b9zshFk9YPGHxhMUTFk9YPGHxhMUTFk9Y
PGHxhMUTFk9YPGHxtPq5eFr9XTytfi+eVv8XT2ufi6e138VT8iiVX+WNaZ6M
5gXoPOjO++w8t87r6TyGjtvuONWOy+s4pI676HdmLJ6weMLiCYsnLJ6weMLi
CYsnLJ6weMLiCYsnLJ6weMLiafVz8bT6u3ha/V48rf4vntY+F09rv4un5OEq
v8o71DwrzSvRefSdN9x5kp0X1nkwHfffcc4d19lxbB2303EK2P0Piy8svrD4
wuILiy8svrD4wuILiy8svrD4wuILiy8svrD4Wn1dfK0+L75W3xdfa4+Lr7XX
xdfa8+Ired3Kr/JYNW9P85Q0L0PnoXfebecZdl5V55F03HzHCXdcZMeBddxL
v/Pj/hVvWLxh8YbFGxZvWLxh8YbFGxZvWLxh8YbF23xz8bb3lIs3LN5Wfxdv
q9+Lt9X/xdva5+Jt7Xfxtva9eEvewPKrPGnNC9U8OM370TwHndfdeaydt9d5
Sp2X0XHoHXfbcYYdV9VxJP1u3uta4w73r3jE4hGLRywesXjE4hGLRywesXjE
4hGLx53fxePeky8e9xx68bj6vXhc/V88rn0uHtd+F49r34vHtf/FY/JWll/l
6WtesuZhat6Z5tloXoHOo+680c6T67ygzoPouO+Oc+24vo5j6riNfqfuc1zv
u70uNi5x/4pXLF6xeMXiFYtXLF6xeMXiFYtXLF53fhev68e5eN170sXr6v/i
de1z8br2u3hd+168rv0vXhcfF6/Jq1p+lUeyefOaJ6x5kZoHpnkvOs+/85o7
j7Pz1jpPp/MSOg674047zq7jijqOot+N+52s3yHaD9x+uvar9L247zV9Du1z
Qq/T9QHuX/7A/IH5A/MH5g/MH5g/MH9g/tj5nT9WX+eP1c/5Y+19/lg8nD8W
L+ePxdP5Y/F2/lg8nj+SZ7j8Kq9q80g2b17zhDUvUvPANO9F5/l3XnPncXbe
WufpdF5Cx2F33GnH2XVcUcdR9Ltxv8v1u0j7rdvP2H6ivuf3vazPzX1u6X2h
PsD9yx+YPzB/YP7A/IH5A/MH5o+d3/lj9XX+WP2cP9be54/Fw/lj8XL+WDyd
PxZv54/F4/kjebfLr/IMN69q80g2b17zhDUvUvPANO9F5/l3XnPncXbeWufp
dF5Cx2F33GnH2XVcUcdR9Dt1vxP2O0773dtv2n6v9lP0PbLP8X1O6n2hPsD9
yx+YPzB/YP7A/IH5A/PHzu/8sfo6f6x+zh9r7/PH4uH8sXg5fyyezh+Lt/PH
4vH8kTz05Vd5t5tnuHlVm0eyefOaJ6x5kZoHpnkvOs+/85o7j7Pz1jpPp/MS
Og674047zq7jijpuo9/N+12z36H6HaH9wO23a79K32v73tDnpN4X6gPcv/yB
+QPzB+YPzB+YP3Z+54/V1/lj9XP+WHufPxYP54/Fy/lj8XT+WLydPxaP54+s
y1B+lYe+ebebZ7h5VZtHsnnzmieseZGaB6Z5LzrPv/OaO4+z89Y6T6fzEjoO
u+NOO86u45g6jqTf+ftdtt/V+l2k/djtZ2w/T9+j+97Q56TeF+oD3L/8gfkD
8wfmD8wfO7/zx+rr/LH6OX+svc8fi4fzx+Ll/LF4On8s3s4fi8fzR9YpKb9a
l6F56Jt3u3mGm1e1eSSbN695wpoXqXlgmvei8/w7r7nzODtvrfN0Oi+h47A7
7rTj+jququNeOk6h35n7nbDfddrv3n7P9iv1PbrvDX1O6n2hPsD9yx+YPzB/
YP7Y+Z0/Vl/nj9XP+WPtff5YPJw/Fi/nj8XT+WPxdv5YPJ4/sm5P+dU6JV2X
oXnom3e7eYabV7V5JJs3r3nCmhepeWCa96Lz/DuvufM4O2+t83Q6L6HjsDvO
teMMOw6s43Y67qLfzfuds9+h+h2g/aztV+p7dN8b+pzU+0J9gPuXPzB/YP7Y
+Z0/Vl/nj9XP+WPtff5YPJw/Fi/nj8XT+WPxdv5YPJ4/so5V+dW6PV2npOsy
NA998243z3DzqjaPZPPmNU9Y8yI1D0zzXnSef+c1dx5n5611nk7nJXTcd8fd
dlxkx7F1HFLHkfS7f7/L9rtYvzu0n7X9Sn2P7ntDn5N6X6gPcP/yB+aPnd/5
Y/V1/lj9nD/W3uePxcP5Y/Fy/lg8nT8Wb+ePxeP5I+u6lV+tY9V1e7pOSddl
aB765t1unuHmVW0eyebNa56w5kVqHpjmveg8/85r7jzOzlvrPJ3Og+g49I4T
7rjOjsvruKqOg+k4hX4n7ne4fndoP2v7lfoe3feGPif1vlAf4P7lj53f+WP1
df5Y/Zw/1t7nj8XD+WPxcv5YPJ0/Fm/nj8Xj+SPrHJZfrevWday6bk/XKem6
DM1D37zbzTPcvKrNI9m8ec0T1rxIzQPTvBed5995zZ3H2XlrnRfUeRkdN99x
zh2n2nGGHRfWcTsdN9Hv0v0O1+8O7Wdtv1Lfo/ve0Oek3hfqA9y//LH6On+s
fs4fa+/zx+Lh/LF4OX8sns4fi7fzx+Lx/JF1P8uv1jnsum5dx6rr9nSdkq7L
0Dz0zbvdPMPNq9o8ks2b1zxhzYvUPDDNe9F5/p3X3HmcnSfXeUqdR9Jx/x23
3XG3HSfZcWwdR9RxGv0u3e9w/e7Qftb2K/U9uu8NfU7qfaE+2Pnl78aDqh/j
QbW38aDiwXhQ8WI8qHgyHlS8GQ8qHo0HPd540A/zq3U/u85h13XrOlZdt6fr
lHRdhuahb97t5hluXtXmkWzevOYJa16k5oFp3ovO8++85s4b7by9zqvqPJjO
Y+g49I4b7rjOjqvruKWO0+h36X6H63eH9rO2X6nv0X1v6HNS7wv1weorfzcf
TXubjyYezEcTL+ajiafzx+LNfDTxaD7aMX88WyeaP7ruZ9c57LpuXceq6/Z0
nZKuy9A89M273TzDzavaPJLNm9c8Yc2L1DwwzXvRef6dR915rJ1n2HlhndfT
eRkdR99xzh1n2nF8HbfUcRr9Lt3vcP3u0H7W9iv1PbrvDX1O6n2hPlj95O/m
P4kH85/Ei/lP4sn8J/Fm/pN4NP/pmD+erZvOH10Ht+t+dp3DruvWday6bk/X
Kem6DM1D37zbzTPcvKrNI9m8ec0T1rxIzQPTvBfNK9B53Z1323mSnefWeUqd
V9Jx/x133XGtHcfXcUsdp9Hv0v0O1+8O7Wdtv1Lfo/ve0Oek3hfqg7V3/i6/
tHg5fyyezh+LN/mlxeP5A/NH+NU66V0Xuuvgdt3PrnPYdd26jlXX7ek6JV2X
oXnom3e7eYabV7V5JJs3r3nCmhepeWCaZ6N5DjoPvfOGO++z8/Y6z6rzYDoP
oeO8O6614/g6bqnjNPpdut/h+t2h/aztV+p7dN8b+pzU+0J9sHjI361PIJ7O
H4s36xOIx/MH5o/w5uXyR9dJ77rQXQe36352ncOu69Z1rLpuT9cp6boMzUPf
vNvNM9y8qs0j2bx5zRPWvEjNO9O8H83L0Hn0nQfdeaydd9h5YZ2X03kPHefd
ca0dx9dxSx2n0e/S/Q7X7w7tZ22/Ut+j+97Q56TeF+qDxUv+bn0b8WZ9G/F4
/sD8Ed48df7AWx/tuOumd53orovbdUC77mHXeeu6Vl3Hp+uWdJ2G5qVvHu7m
HW6e1eaVbB695g1rXqbmxWnekuaZaJ6AzvPuvNzOm+y8tc4L6jyIjvvuONeO
6+s4po7b6Hfqfpfrd4j2u7afqe/VfY/oc1PvE/VF/259NPF4/sD8EV7eBv7A
W1/zeOtrZp30rgvddXC77mfXOey6bl3Hquv2dJ2SrsvQPPTNu908w82r2jyS
zZvXvGTNC9W8Pc2z0jwZzXPQeemdN9x5m50X13lAnffQcd4d19pxfB231HEa
/S7d73D97tB+1vYr9T267w19Tup9oT5YvOXv1tc85o/w8pjwB976zMdbn/l4
6zMfd930rhPddXG7DmjXPew6b13Xquv4dN2SrtPQvPTNw928w82z2rySzdvX
vGnNa9U8RM0j0zwgzdvQefWd19x5o50n13lBnQfRcd8d59pxfR3H1HEb/U7d
73L9DtF+1/Yz9b267xF9bup9or7oX/4IL68Pf2D+wPyB+QPzB+666V0nuuvi
dh3QrnvYdd66rlXX8em6JV2noXnpm4e7eYebZ7V5LJtHsHnempereZWaF6d5
TJpnovP8O4+680Y7T67zgjoPouO+O8614/o6jqnjNvqdut/l+h2i/a7tZ+p7
dd8j+tzU+0R90b8vp//Rz73x9/5//OOPv+9Ff7WdcrbHz/52P92ux9HjVu7z
J/v5Gv3cG39/5fH36f/3r99puf5/f7+/ozy9///kd9/7sZd4/j/e/PhL3P3S
m3/sxR9/dfxHXuL/R8Z/4eW8/7fxX37hv/nmP3zxzftv/uEXP/zk+N9/+fvj
Y7+Hv+Ll9/78+BMv+3sz/qMvv/+pN//4S0N85s0/8eKvnx77fez3sd/Hfh87
X+x88Ve/6D/35qdetvuFN5968fPPjh0fdnzY8WHHh//dl+P7i2P1gV+a6Wvf
/A78R16uHz+/v44POz7s+LDjw44POz6s/rD6w+pvx3X1h8ULdr74y162/97x
3325Xv+p8Ucf+ntYPfS8cf+qD6w+sPrA6gOrD6w+sPrA6mPHd/WB1QdWH1j8
Y/WDv+Xl7596D4vTxmXjoPWA+1f9YPWD1Q9WP1j9YPWD1c+O7+oHqx+sfjB/
YPWF1RfmH/yfPvb3Hn52namv66PGUesN96/6xOoTq0+sPrH6xOpzx3f1idUn
Vp9YfWL1idUn5k+sfjG/4t/52P9Yffc63utmr1P1aeOy9Yr7V31j9Y3VN1bf
WH3v+K6+sfrG6hurb6y+sfrG6hurX/zsPtz7Yu9Dve73ulefN05bj7h/1S9W
v1j9YvW747v6xeoXq1+sfrH6xeoXq18snrHrLVb/WP33uafPIb3v9z7b+0yv
q70uNG5bz7h/1T9W/1j97/iu/rH6x+ofq3+s/rH6x+of/5aXv7+841S/fY7s
cx1Wv31u6X2796leZ3sdaNy2HnH/ql+sfnd8V79Y/WL1i9UvVr9Y/WL1i8U3
Ft9YfGPt0feEPsf3uRprjz439rmpzwm9z/U63OtG47j1jvtXe+z4rj2w9sDa
A2sPrD2w9sDaA2sPrD2w9sCfefwdf/XjfMff9tJf8Nmdl/brex3Wfn0Pwtqv
z/l9zu1zXZ9Let/sdb7Xnfqk7YT7V/th7Ye1H9Z+WPth7Ye1H9Z+WPth7Ye1
j+PUPn3Pxtqn76V474V57+p7R5+z+5zY55jed3sf6HWrvmk77Pjyd++Hx3s/
PNY+WPvgvT8e7/3xWPtg7YP3fnn8xx9/x1/7OP4x/+GffNTPWPs6L+3bfhOs
fbH2xdq379F9j+x7U5/7+1za56je13sf6nWwvmo74v7Vvlj7Yu2LtS/Wvlj7
Yu2LtS/2/od/7vF3rP1Xv3d9xdrXeWhfrH2x9sXat/0+7Rdpv0Dfg/se1/eM
Phf3Oa3PFb2v9TpZX7YdsfbB2gdrH+z9EGsfrH2w9sH8iflz9fM4v7H2xF/3
qK+x/l5xqb2x9sbau/2YWHu3X2/XtWtvrL3bz9H39L5H9r2nz+F9buxzS++D
+G8//Pge1l5Ye2HthbUX1l5Ye+38rr2w9nBd0B5Ye2Dt0X5krD2w9th95dqj
/XDtZ2o/Sd/j+97Z96A+t/e5Ebt+Ye2BtQfWHlh7YO2BtQfWHtj9bft/nO9Y
+7hOax+sfbD2wdoHax+sfdpP3H7R9vu136r9Ku0H6Htp36Ow+sfqH6t/rP6x
+sfqH6v/Hf/5Yed71y+sffb71z5Y+7guax+sfbD2wdoHax+sfdpvj7UP1j7t
R2w/V/tl2k/Q91qsfbD2wdoHax+sfbD2wdpnx3/ts/O99sHaZ79/7YM/9H3x
8/dJ7YO1D9Y+WPtg7dPvRnsOvvbB2qf95O3Xxdqn/WRY+7SfAWsfrH2w9sHa
B2sfrH2w9tnxX/vsfK99sPbZ71/7YO3juUX7YO2DtQ/WPlj7YO2z95Jrn37n
wdoHax+sfdpvibVP+32w9sHaB2sfrH2w9sHaB2ufHf+1z8732gdrn/3+tQ/W
Pu6T2gdrH6x9sPbB2gdrn36HxNoHa59+B2m/ffuRsfZpPxzWPlj7YO2DtQ/W
Plj7YO2z47/22fle+2Dts9+/9sHax3FrH6x9sPbB2gdrH6x9sPbB2gdrH6x9
sPbB2gdrn7YD7l/tg7UP1j5Y+2Dtg7XPjv/aZ+d77YO1z37/2qft4Ti1B9Ye
WHtg7YG1B9YeWHtg7dHvhFh7YO2BtQf2/tLrVn3SdsH9q72w9sLaC2svrL12
ftdeq49rL6y9sPfTHc+1H9Z+jlP7Ye2HtR/Wflj7Ye2HtV+/o2Pth7Ufdj3D
3new9tvvX39D+236HNfnht6nel2sD9vOuH+1P9b+WPtj7b/6ufZffV77Y+2N
ta/f1b5Y+2Lti7Uv1r5Y+2Lti/kNaz+s/bD22/6v/drP1n6d9hv0vbXvUX1u
73Nin0t6H+x1t75uO+P+1f5Y+2Ptj7X/6vvaH/M/Fg9YPPhd8YDFA9b+69e+
9sbaF7ueYu2NtTfW3u03bz9q++3aL9R+ib4n972s7wF97uxzTu+rvW7Xx21X
3L/aG2tvrL2x9sbau+1pv9oT8zfWvvtOce2LtS/Wvlj7Yu2LtW+/g2Dt237Y
9vO1n6n9Hn3P7ntd3yP63NrnpN6He12uT9uOuH+1L9a+WPti7Yu1r/1oT+x+
ibUf1n5Y+/W7MNZ+/W6FtV/7zdsv237B9lO1X6Tv4X3v63tGn2v73NT7aK+r
9V3bCfev9sL8pl03PvB44/uON77veOPQjjdu6njjeI437uR44x6O9x39eN9t
j/ed77jfPdqvvn7r4/Yztl+r/Sh9b+97Yt9L+tzb56DeF3vdrM+00+o/f7Un
1p7+f+Pcjjfu6njjhD7+4XEVeOMejved/eMf/k7Y70x433mO953h4x/u120/
Yvut2k/S9/K+B/Y9o8+dfQ7pfarXtfqm9T4+f7gO8gfWHlh7YO2BtQfWHv0O
j7UH1h5Ye/Q7R/vV24/bfsP2U7VfpO/hfc/D2qPPgX1O6H0Faw/s+uU50vMC
1j5Ye2DtgbUH1h5Ye2DtgbVHv7ti7YG1B9YeWHtg7YG1B9YeWHv0PbvvYX0O
x9oDa4/Wr/d29YvVL9778fHej4/3fny89+PjvR8f77v68b7b5jtevxv1O0X7
xdsP236/9jO13wLv/fp4713Hey4/Vp/vP+7Dq0+sPrH6xOoTq0+sPrH6xOoT
q0+sPrH6xOoTq0+sPrH6xOoTq0+sPrH6xN7vv+bxd/WJ1SdWn1h9YvWJ1SdW
n1h9YvWJ1SdWn1h9YvWJ1SdWn1h9YvWJ1Wfr5zse71WrH6x+sPrB6gerH6x+
sPrB6gerH6x+sPrB6gerH6x+sPrB6gd7/v35Rz/S6gM7fuz4sePHjh87Xux4
sePFm9/xuK+t/vHGDR9vHOrxxj0eb5zc8cYNHO879fGHn+ffz/P8+3kefz/P
4+/nefz9PI+/v+N9zAv+pR0v3ri/440TOzb/uuO2zSs3H3vPyTcfu+PYno1r
Mx+8807MUzc/nG5+ODa/G5vf3XEhz8aJmK/eeVvL6/jJx/x1uuPpvAzlHR9d
/WH11XGaz8ZtvmvchPn4nde4PGI3P5/ufDpPSnntQTefHqvvjnt6Ng7K/Pl+
p3723Vq+gc5TXR60O5/OS1wewWtPuvPtPDDlnS9d+2LtibUn1p6bR3rxj9Vf
x+k9G7cnHwFdPoKOu3g2DkM+gn7HfPZdU7t3nvLyBF09db7s8mzdX7r26TzR
5XW89qFrn87LU1770LUP1j5Y+2Dts3m91z5Y+2DxjV1POq5yecCvvTpO6dm4
Jfkj+t3/2TiAd3333Pp7x64Ty1tz7dv5vcuLdufR+b3LK3h/O893eTmvPf3/
1us71p7Kb/2+07d+3/HW7zve+n3H7j/2t/X8HP+1b+cpKL/1/U7f+n7HW9/v
eOv7ab+7vtnf1vs7fev9HWt/5d81Dudd4wy2/t/pns/LyruPdv6sdhM/nb+8
PGDn/85fXh69i5/OZ14eyjvvzm9eHtf7Sxc/nYernPihi5/Oa1RePNHFExY/
O/6LHyxesHjB4qXjqrcOwMUPXbx0XOnyol/8bFzwXS+ejaNzvX82jks+Grp8
NM/GrbzrO/z6V0/HdPHV56blybrrUedrL8/cxVvnby9P48Vb53Mvz+nFW+d3
L0/w1TPd/3eet/8Xb52nTBd/dPHWeZ/Kiz+6+Nv5XPxh8YfFX+dp2L94pIu/
jitXXjzSxV/H0SovHjuOc+vAXDx2HCFdPHZczrNxUx234/qmfMcZ6D+j9zum
95bOv9bOrpedD093vez8+OV9u/jufPnlTbz47vz55R29+O58+uXtvfju/Prl
vb747nz75Y2/duj8e7q/dPHdeeHKiffOa6aLd7p43/ldvGPxjsV75yHZv3in
i/fOm1BevHfc/taduPjf9hfvz8Ypi/dn42TF+7Nxmq7Hz8YJuv4+G7dG77iL
Z+My3vVdmD8wf4gD/mi+Ajp/NH/B8iCeP5rPYHlEzx/Nb7A8vOeP5jtYHuvz
R/MfLA/8+aP5ELaOwvmj+RHo4qT5Euj+Nm+C/+eXzvun8wudX3a+5xfML5hf
MH90HtfWHTq/dF4RnV86r2XrspxfOq+Czj8d1791wc4/HVdO55+Oa6bzT8fV
qlfPyx3n2XFo9VP1jnN5Ng7mXd/p5WdsfgRxwW+Y35q/gs5vzWexPKPnt+a3
WJ7e81vzXSzP9fmt+S+WJ/781nwYW2fh/Nb8GFun5PzWfBl0fmv+DLo4aD4N
ur/Nq+H/+c3/81vzBqyf4fxH57/Oc1aeH+n8iPmv8/hsz3+dR7Z1kM5/ncdE
57/Oo9k6fOe/zuOg81/nEdD5j85/3tP5j85/dPkvn43r7TjCjhvtuMJn45rW
fh///x+nQedP++NPceL+2HwmdH5tfhM6vzbfyfIAn1+b/2R5tM+vzYeyPPTn
1+ZH2ToO59fmS9k6KOfX5k/ZOkLn1+ZTofNr86vQ+bX5VujaoflX6P42D4v/
59+d//kV8yvmz+U/OX9i/uy8Wr/Hn83XsnXJzp/N30Lnz+Zz2bqY58/md6Hz
Z/O90PmTzp+ua/xJ7zwI/nw2zl6+2mfjuDsutON+O0604w47bkq+4+ZD0e78
ivm1+Wvo/In5s/lslpf7/Nn8Nstrf/5svputC3H+bP6braty/mw+nK1LdP5s
fpyt63X+bL4cOn82fw6dP5tPh86fza9DF3fNt0P3t3l31k9/fvX//Ir5de1/
fsX82nw89s+vzc+zdQPPr83XQ+fX5u/ZurXn1+bzofNr8/vQ+ZW+7zfXj82v
nadE59dn82D49dk8C/mmOy7f8ck/Xf+uH/Wed+vn6h1n13F4yvO3uHB/bv4j
Or83HxLd/bn5kej8/yqP7+n83/xJW8fC98vT+12Q/5tfaeso+b7pO32+a+z7
pnG86bfe907jEtKvuO+dp7cfZt8/T+97576Hnr7nqNP3ffT03of3vfT0XQd9
l/P99PR9Pz3e+Ngr53qw/El3PcD7nnq876nHGy97++P/5oOi83/zQ22dat9f
T9/42tP5v/mj6PxP53/nzf90/qfzf+e92T//d14VfeN1jztPo+P+n41jtn3H
0bp/Nx+SduZnzL+Yf5v/is6vWyfj/NpxFVtn5vza/Fhbp+n82nxZW+fs/Nr8
WVsn8PzafFpbZ/P82vxadH5tvi06vzb/Fp1fm4+Lzq/Nz0Xn1+br2nfza+fm
76L72zxe/p9/Fw/n3+b32rrW52c6Pzff19b5PT83/xedn5sPbOvMn5+bH4zO
z80Xpp+an+n8TOdnOj/bPz933iqdnzsvku5+3nl0dPfzzsPad8+7X9f/1RcP
53/8bNw2nf/Fgft786PR3d87rqzjwLD7efOnbd2cuz40n9rWnbrrQ/Orbd22
uz4039rWPbzrQ/Ovbd3Quz40H9vW3b3rQ/Oz0V0fmq+N7vrQ/G1014fmc6O7
PjS/G931ofneNo7mrg/N/7Z1t8+fdH7E/Nf8b64L/EfnPzr/0fnP7/Nf88nR
+a/55ej813nIdP7rvFU6v2H+2jiD89fq8/zVeQ7Y+kDNf+a66v7b/HR0fsP8
hd1/m6+Ozm/NX7d1qc5vzWe3dd3Obx0nt3URz28dN7d1Rc9vzX+3dXnPb82H
t3Wtz2/Nj0fnt+bLo/Nb8+fR+a359Oj81vx6dH5o/OPlsbny4r/5+Ojiv/n5
6OK/+fro4r/z7univ/O06e4/nedL54eNszk/eK9/Ng9L+WfzVuj84bmCH7D7
kd/jDzp/YH7A4h+L947z3DqfF99+r+NCxTe949TEN118b532i296x4mIb3q/
q++73unim77vDqf3O4d4pYtPLD6VF5908UkXn3TxSRefdPFJF49Y/GHra9le
PG7c512PV98Xn9Wx+MTiEYtHz7XiEYs/7Hmo+RHprtcdB093ve64+K0TeNfr
5lPcOpt3vW5+Rbr43brOF7/Nt7h10S9+m3+RLn6bj5Eufpufsd+x+10Ni0/b
i8/mb1RefDafI118Nr8jXXw2Lwnd9bN5LOiun82DQBevG3d48bn2ufjE4hOL
Tyw+PbeJTyw+sXjE4g+Lt84TWD9M5hG4PnacdcfddhwlFj/NF0kXP80fSXf9
az7JfofF4qf5Jenip/km6eIFiw8sHrD2x9p/9XHtj7U/1v77/Wt/rP09py+f
7vHy6R4vn+7x8ukeL5/u8eaR6GeTT/d4+XSPO66+42Y37vG447o27uV43+GP
ly/3ePlyj5cv93h5h46Xl+Z4eUyOlxfD8Xu+cb7uL8ebZ+73r32w9vGcqH2w
9sHaB2sfrH2w9uk8k60zfv5s/km69uq4ZcyfHcdM58/mp6TzZ8fhdZwD5s/m
r6TzZ/PA0bU/1v5Y+2Ptj7X/6uPaH2t/rP33+9f+WPu7j2l/rP2x54fmt6R7
fmi+S7rnh+a/3DrB9/zQfJhbZ/ueH5ofky5+sOeHzpOhe35o/ky6+Go+Tbr4
an7NjkPruBhx4/9tL76a51E58dW8gnTPD807R/f80LxkdM8PzWNF9/zQPEh0
8bl5BBefa5+LTyw+sfjE4rP5B9WT963m96SLTywesfjD4m3fVS6+sOtV58XR
xVvn5dDFW+fp0MVb51nQxVvHvdNdzzou+Nm4jmfjrBpXzT9qf/42D6n/F6/N
e0kXr82LSBevzZtHF59YPGLvY83zRLf+cfMI0cUnFp9Y/9nyfV5/WeNVPYhP
LD6x62fzn9JdP5sPdeuo3/Wz+VHprp/Nl0oX351HSBffnVdIF9/Nr0oX353H
QRffncchLsT3s3Ht+hM6btf+9Zc13jtOot9NP7QO99e++R3YfbT5X+n803yw
dHHU/LB0f5sn1v/zT/OI0vmneSbprvfNS0h3vW9eOzo/Yf7B1hNvHii69cSb
B4fOP87T9b75Z+meT5qPls5PmJ+an5bOT81XS+en5q+l81Pz2dL5qflttRM/
dZ4dnZ86747OT50X4vf5qfNCbM9PHedue37qOFy67z0dB0j3vafjjvods/3K
7cdrvwnue7H35m2f9zL+pve5nb/pe245nb/pu2+czt90cd58wHR/mxfY//N3
88bS+bt5Run8jPkZ8/Pa6/yL+XXPnXf/a/5Yx8mvmD+x+1/zCze/rPL82XzD
yvNn8w/bnj+bj9j2/Nl503T+7DxqOn92HiKdPzsv0fHxZ+ed0Pmz807o/Nlx
8HT+7DhcOn92nEDzKyvvu2O/67Qfvf2Wzbdsf+3H4t/106cfhX/pfc/mXzr/
Nl8znX+bv5nOv83nTOeL5nem+9s8z/6ff5sXmO7+3LyydM+/zVu69j0/4y99
xOurPIB0fvY77sfNJ+y43Y+bL5rO73R+p7s/1/90/qfzv+Pj/+ajtj3/bxzb
+d/2/E/nfzr/d547nf87753O/52H6fj4v/My6fzfeS90/u+8Fzr/d5w9veP8
+L/jEvqdtt/Jmm/b/vm/+bfp7bfmf3r7Tfmf3n41/qfzf/N30/ueyf90/m9+
bzr/N983na+a/5vu/7G4wfyMvc82ry2dn9fPc/fr5ot2XeHf5gdvPmnl+bX5
wpXnVzq/0vm1+cXp/Lq8sOdXOr/S+ZXOr8vze36l82vzAjg/fm2eADq/dt4n
nV87D5TOr50HQ+fXnX/G3fJnxwl1nES/Wzdfut/jz+ZPp/c7En/S+x2DP+nt
5+ZPOn82/zq9/T78SefP5men9zmYP+n82fzt9PqS7+j+Nq+7/3d/bt5wuvfn
5kGmu//ajn/5nn+bb9zvuv/Wz3R+pi/v3e2fn+n8TOfn5YM/P9P5eXmdz890
fqbzs+Pj5+XpPj/T+bn57un83DwHdH5u3gM6P3ceKZ2fO6+l89aU5+eOm+04
euU7DrDjoPi7+fRt3+/+/E3vd2H+3jiX83fz79P73Yq/6f1uwN90/m6+fnr7
ofib3vda/qbzd/P703uf5W+6/1/7nT8xfzY/vPv08m2dvvlFt5/l2zp984tO
5z/65hedvnxcp29+0enLx3X65hedvnxcp29+0enLx3X65hedvvxcp29+0enL
z3X68tRc/Sxf1+nL03H68nWdvrwCpy9/1+mdV7b8Xccdp95xtR1XuHGj93vL
33U6v9E7rmbjmk7vuIvlAzy93/35jd7vwssfd3q/y+276OnL93X6vmOd3n7e
fQc4vf1G69c8nd+6HgPdfa3rMdD97ToM/t/9Tnzxm+defqPzG53f6PxGX/7L
0/mNvvyXp/MbffkvT+c3+vJhns5v9OXDPJ3fPCcsP+bp/EZffszTlx/zmL+U
f5YHgb78madvXq7zM0/v4x+e54E7Tt24d/tfPs2Pf3hcZMdRKt9xavxF7zim
jpvhJ+U7roKf6P2uzU90fur6GHR+6noZ9Pa78hN97+mnuz/Re19yv6LzS/3R
9Rz0C/EHnT/o/EHnD/3E/LH1M84fdP6g8wedP+j8QecPOj90PRDl+aHrgzgf
/qDzQ9cLUZ4fOi9555N5jvyA+aHrh9g/P3RccNcTUb7jNDtuz/1F+Y4b4wd6
xxXxA73jOvodXfwrL/67Pgnd/aLrk9DdL7o+CX3rT953+60/eSxeG59bT+Ti
U3nxSd/6lKeLT/rWqzxdfNLFJ15ezSsvPuniseul+I4qPuniEYvHHf/FY+fZ
YfGIxV/nEfl98UgXf11PRXnxuPVXLv66vory4q/rrdDFH138df0V5fsdy/WV
7vra9Vforpfaa+uZJt6sh0HH+36c+MLiS/l9Lz5dfNH3vfj0fR8+Fl/K7/vw
6fsefLzvv8f73nusf+r7H8f1wfdex+/77rHvu8qLN7p467ybznvoejL213Ho
HZfseqd8x8V2nKT4Ur7j1DouSHwpv++7p+977bHrmfLur1sf5q4/jZ+td3I6
Fj+NFyxelBcvdPGCxYvy4oUuXrB4weIFi4+tD3PxgcUDFg9YPHQ9nI88znvx
QRcPWDx0fRzbiwe69u76OMpr366PQ3d9obvfqE/+b3ta/0R70rUn1p7Ka0+6
9sTaU3ntSdeeWHti7Ym1J9aeWHti7Ym1Z9fj+dijXtaedO259Xquvboej+35
mc6vXY9Heddb9YOt/6L+W99YfWP1bXv1TVffWH1j9Y3V947v6hurb6y+sfrs
ej6ffMTl6pfOL1h9dj0f2/NL49f5e18tW99G/dE935SVd75dD+hLHtfRnT9d
vGHn1/WAbC++6MsHfr+/vMhh6+ks3/fpy/d9vPzex8vvfbz83sfLv328fPCP
55D0p72f/rP3s97nB2z9ng/3d32wntD3Pd4T0//1fvq73t/52N/WWzjeegvH
W18h3PV/vKd23qzzX7/O7b/r47ivqr+uj0N3fl2fxnW7847EP335he467nrm
Ot95aq5X9OX7Od31id55ko6fz9Zfcbr7FX39Eae7X20e8Z1f15tw3XN8XW+C
7n7XcYx058tH9t9x8Xj9jXed8HxOX39ixl3RnW/zxXccMnb8HUdJ9z7QcRx0
59d5R50n0nH82Pk2f3fHcWLn3/zddO/Hzd/d3++4aqw+Os6649Kw+mm+Y7r+
qOY77ryFjuPuOFTs/JvvteNisProd4LOy+k48Y5z7bg67Pybv7Lf9ftdsP2o
2PG4jjqejqvtOD6svruuM10/YPMHuo5u3HbGGfQ75Yev6z/xKl/f8qHd9dR1
nh+w38eO33Vcv07zL7nu8hu2//Yzt1/j2Xce9dN+jn73cV7iqPOXXIfEYeff
dH5O8/w3L3nX9dl3l7sO9jpWH3c8PB+5r2184N0nsN/rdRf7vY4X5Av7X7/1
7X/jl27/2P573cWeE/jafR37Pey+iv0+9vv7DnW/j42vEJd+D/s97PfWD3+/
h9W/OLI/bH/z1e0Pb90038fu+Ped7I4fb52bY/Unzh0PdjzY8WDHgx0Pdjzd
no9tj22PbY8df/t3+dLxYvvH9o/tH9s/3vyQ9Ofpr3E+2P6x/WP7x54b27+j
/2DzpY83H/p4851T3vvs8r0cL3/LsefKvu96n1u+g2PPcX1/877kuaLva/St
n5T3Je8vH/6e/8H7ifeP/+blOH70zV94K3/ZL735z1/m3/3Um3/z17/9gV98
8wffns7f+Zk3/+DbYY3f+pk3/++LYX9y/JveHu53/Nyb/+UrvuW3feFX/sKb
3/z2z8d/evxvv+Cn9/eHXgZI/uxYeWw7+/X/2PbY9thxKWd/3Q73r/1h9YOf
1Qt2vNjvYfvBfg+rX9x6bb21Hnoe/at98b/4Eid/ffwsDrDzxY4POz7s+LDj
w86zx4XVB3a8+Lf+2rc/9+3v4R98ifP/aux87Mf5NI6x88HOBzsf7Hzabtj5
9Dxw/zo//KMv15v/cfwb3h7ux3555ZwPdj7Y+WDng50Pdj7Y+TRO2g49bty/
v/bluvpXx3/g5fr2v46/+OX69snxv/VyPfyz44++XN++e/yrL9ez/+49rH56
XcPqC6svrL6w+sLqq9cFrL6w+sLqC6sv7Dxw/6ofrH4wP2D1g1/+fOJX1g7q
B6sPrD6w+sDqA6sPrD6w+sDqA6uPxgl2Hrh/1Q9WP1j8YPWFxc83vTyv/JXV
DxY/WH1h9YXVF1ZfWH1h9YXVF1ZfWH1h9YXVF3aemP+w+sLqC6svLL6w+LJf
9YXVD1Y/WP1g9YPVD1Y/WP1g9dPrDFY/WP20XnD/uj5j8YfVJ1afWH1i8ffl
L89t//PiD4s3rD6x+sTqE6tPrD6x+sTqE6tPrD6x+sTqE6tP7PyxeML/wMvz
7Q+P3/7ab/vCz63exRsWb1h9YfWF1RdWX1h9YfWF1RdWX71vY/WF1Rf++pf3
g+9/D3/Xy3vED47ff3m//Etj9YPFjzh0Ptj5YOeDnQ92Ptj59D6NtR92Ptj5
YOeDnQ8W/3ykfbH2xdoXa1/s/LHzx84fO3/sfLDzwc4HOx/851/e935krH1c
F/w+9vtY/WPHgx0Ptn/Pxfbf52Rsf9j+sPrWzuobq1/cv/aP7R+rP6z+sPrD
/9rL+/ZfGzvf/g7uX7+P/T72+/jve3nv/rHx4z36x8fqw37FH3Z8WHti18vW
e+upx4371/lg54PVJ1af+Jte5jP+jfG/9Pm71Dd+/c+M+cfviC/s+oadH3Y/
wO6D9REW19j9A6uvxlHbtfWC+1d9YfWFtadyjr++x44fO37s+Bv3jcO2Y48T
96/jx9obi2/897x8EPjpseux/bgeYPGAXV+weMfuH1i8YPGC3Rd6HcXqF6tf
rH57HcHqt75ou7cesesB5n/1rD6w+sDqA6sP7Pyx88fOHzt/7Px73cTOv9cB
7PwbN9h54/4VX9j1Bbu/K+d6gtUfVn9Y/WHxg/kTq0+sPrH6xOoTq0+sPnuf
wOoTq8/6DqtP7P4qzvgNqy+svrD6wp4bsfrA6gOrD6w+sPrA6qP3Saw+sPrA
6gOLE9y/ex++uNp7x7Hzw3vfPd777bHzwXvfPXY+vU/i3eeOtSfWrlj7ue46
fuz4sfbAjh87fux4sePtdR6rbyxePAeoP+z3sd/Hfh+rH6x+sOeD//rtaX/X
p3b+2Pljv4f9HnZ+2Pn86stt7We3P7zn1+M9hx3b/hteXkw/vfPHfh87/o+/
/fr5h35+x4tdn/6fl8+jv7Djwer7d7997PjyX1x8/MmXD8Pvv/drHvH05j97
8Jv/61ff/vubb/6ZR/k3f/Jx3m/+z8f+3vzzj7gb/7OP43zz3Y/jefO7H+0w
9le5//tRD2Plsf0qZ3vcv7bH3/uIh1fv4fTf8qjf6c/OEzsubD/Y72P1icUj
/vce8fDqPZr+A4/4ma496Y8Jzd8+vfXeem099a/2xH/x4a9X/RR09df3Xvrv
fMTn9GdxhdU3dj7Y+WDng/0u9ru4f//Lx3X/FbvvOX86v2C68uqDrj0xXXnt
2/d05V0PsPbuezf9G17GG3737tvf82iPsfrXzuq/PsbqH6t/rP6xuGwc4f51
v8Xqv6yc+qZrD8xPyqtvuvbAdOW1B108Y7ry4ht/7u3p/sAv7bjVL1a/WP1i
9YvVL3adwuobuw5g9Y/54V1x/652wM/+eo7+lx/3//EXPe6fY+1lO9cXrH2w
9qtuf9qHrv0wXXntR+c/TFee/+j8ienK8yOdXzG93yPp/EsXX71PY+8/WPxh
8YfFHxZ/WPz1PobFFxZfWHxh8YXFFxZfWD1g9YD99Z4r3vy/9zcs/rDnJSye
sHir7vfEE128Ybry4oku3jC932Pp4osufujiC9P7PZcuvuhve///9Bf/yupR
fGHxg8UP1l+BxRMWT1g8YfGExQ8WP1j8YPGDxU+vQ40T3DjyVxxpf/8vPjBd
ee1PFx+Yrrz2p4sPTFdePNDFC6YrLx7o4gXTlRcfdPGD6cq7Pnnu1t+HxRN2
fcL6A7F4w+Kt7LlavNH7HiDesPtldfsTj3TxiMUjFo9YPGLxiMVjdb8vPuni
E9OV1y507YLpyrseYvGrvPjG4hWL5+r2J17p4hnTlRevdPGM6cqLV7p4xvSO
N6CLX/q/8fg7dj1UT+IVi7+y+4p4pOvvx+ITiz8s/rD4K/s98UcXT+Xe957d
F8ULHdPVI1bO33f9v+c/LP6weLKdeMN05cUTXbxhuvLiiS7eMF158UQXb5iu
vPiiiz9MV/7rHu8z0/VvYbry/8nj73T9U5iuvPim6y/DdOVdz713Ye9drud0
1+uy8vxBx3R+oWM6v9Dx+rHOP3TXd/ysX6Pv+X3PxPxT9vv8Q3e9xvyDXZ+r
2x9/0V2XsHbD2g3zCxb/mD+weMf8UN3xiXc6P2C68n/78X43XX8opisv3un8
gOkd70MX/3TxTRf/mK783/9on/HL7r7xs7tuYe+t7hd094uy8vxB9/0f8wf2
fI35A7u/YP4o+/32Q+L289ExnV/omP6sX6bv/Zh/MD9gfsH6x/E/93heWb+6
eKKLN0xXXjzRxRumKy++6OIP05UXX3Txh+nKiz+67ymYrvz/8LjejF2v3VfF
B24/OG4/NB3T2w+Mn/V7tl+0/XDtp2s/T9/D3U+x9sfio7r9a3+6+MB05bU/
XXxguvLany4+MF157U/H/c5Md//1HIRd911v6N6vsOsPdv3Brj9l+3f9oeOO
l6P3uwbudwM6posfOn7WT9t+XO1PFx+Yrrz2p4sPTFde+9PFB6Yrr/3p4gPT
lRcPdNcPTFfe9YHu+oHpyrt+dHyh5wbXh3LHH9K1D/a+jLVP+Vk/bPtptR9d
e2DtVd322oOOO/7Rc4zzLXd8ZL/DYPWhvPOluz9i+rN+4/Yr73vx6c4Xq4/q
tnf+dEzXn+O9xfUG63+u7jrt+kN3fep4ULrrE931h+55CNOVdz2i4443pbse
Ye8P1W3v+kTX/piuvPbvdzlMV1770zHd9Yqu/TFdee1NFw+Yrrz2p7ueYbry
rld01zNMV971iu56hunKu17RMd31i248u3rwPKSe+JvOz1h8VLe9eKCLF0xX
XjzQxQumKy8e6OIF05UXH3TXE0zv+GZ6/yr37P/Fi/8XT5iuvHihiydMV168
0MUTpisvXuiY/pjX/Nenf9FXvtTP2Puc4zY/BNOdp/c97PqnvOsbdv2rbnvX
P7rrX8eD013vOj6c7npHF7908Y3pyotfuvjGdOXFL118Y7ry4pcuvjG9493p
4pnuffHZde1ZXOL+tZ9n/y9e/b94xnTlxStdPGO68uKXjumuf3RMdz2k/9lH
/Y7/g0d7jl0vHbfrJXb/r+683e+xeFdePGPxXt324psu/jFdefFO5wdMV168
0/kB05UX/3Tx3/kLdPFO97xG9/0H0zv/ge79ly7e6fpHML3zJej6F9vPjD0X
Y/1/ttc/iOnK9zkSv+s54tlzR+8T9Vl96P/7l85v/p8fMb+Vbc9vdPcL+3V/
sF/3B7rrP50f6OIbi//qthfvdPFOdz2lu95iuvLikS5eMV158UkXv5iuvPik
i19MV1680sVzv4P0u8ez7yTP+unab9N+mr639z392Xs9P9G9Z2K68vxE5zdM
V56/6PjZc3if0/tc1fuSOH/mG//fv3T+8f+Yzk909y/s+Q3/o4/r7dj9y37d
r7D7Vecf0fmRzl90/sP0zlei81PnL9E9v9D5ic5vmK48P9H5DdOV5yc6v2H6
u74Ltp/yXf1Qz/qtxDudHzBdefFO5wdMV1780/G73jOfvUf0Oaz3hcZ1/3rf
wO4P+uXEKx94nqKLV7p4xOKx88Xo4rHzx+jisfPJ6OKv88vo4o0unujiDYsf
7Ppa/V39ls/6OcUPXXxhuvLihy6+MF158UTH9PZTYLr4evYcL756XcTiCPev
6yd2/cTeB7Drp+08r2Dx2Pl1dM+7nW9HF3+df0cXf52PRxd/dPFGF49Y/Cnv
etbvKMqLP0xXXny1nxzTlRdfdEwXT3TxhsVT2fbiid5+MPHV90AsvnqfxeKr
cYTdT82fEy/izPsU9j7V+Yd071Odj0gXX52fSBdfnc9HF1908UQXb5iuvHii
u55h8YXdL7HnTfsTX3Txh+nKiy+6+MN05cUb3fUP05UXj3RMF390TBePdPHY
fjcsHrF47HMeFo9YHK7+7/6K3U/9v3jB4gOLD/MpN37u9M1jON54zSu/cTrH
2lt57xdY+5Ztv/Fvp2985ekb73b6xrMdb7za8cajpd8Taw+88WjHe486dj1o
vWP+dp/hZ8zP5ofyL9Y+yqtvrD2q21570DFdfdMxXX3T1S92vcbqG/tuhtU/
Vv/tl8PqH4t/LP6x+PZeJJ7Nh1VfdPWBnT8WX9j5Y+eLnQ92Pn1Pw+IHa2/9
ku7v5tvyE137YMeHHR92fFj9YvWLPU/8tcd9bP0PWH1h9YX9Pvb7WH1g5/cV
j36c7Q+LH6x+se2/9fFesPrAfh87/r/y6Hfa8WL3s9/8eO/Y8eDNT33c9xdP
P/S47o6bh6zjVpqXqeOsvfe4n+ondjx09ze689Ov5v7qPcn50vn12bg71+9n
4+7Ut/KuD8qrf7rvD3Tn07xOHXfR79bKu9/2O0/zBnUcg/05f89h9H7XVP5d
30HFt/L6eZRXP+4D6q95puiOh/6u76r83TxDyvN7887Q5Vt2X7L+Cf7ES/u8
edPvWD2+Z99x3/UdTP3ZX/txXT/p3ivp1nGwP/mf3Rfku6c7P7rzw9Z3mf7C
37nj1Z507em6bj2Uzl9+Ng7m2TgI+ru+e2v/1rfy6lt58UG3ffvtmpdIeffj
5pmhy//tOUW+bizesHzcWHs6Hu1J15506yZ03K39WDeBju1P+2Ptj613g63/
gK3/gLUX1l6eS7QPXfv0u0Pb69l3tXd9x+Cf5lHqe2Hz3rS9PKdoL6ye/Z72
omsvOqZbB4SO6dbdoGO69ZmaZ9HvuD/K8669lcf2Z72jzp+2P/dz+xMvymP7
s/5S8zPbn/3bn3hTHtufeMPW/dj+b/0RLB6VF4+e+8QjXTw2Lx1d/LUfvvH4
7DvZu/r1XV/6Htp83vL0i0f9FuIPq1f7V+90+6FjuvhqfmnlxJf1c8ST8tj+
xFfzU9uf+LI/8aQ87nxZ5cUL3f2r86n9nusZHXe+rP2LP7r4s737l/LikY5t
Lz6x+GyeR7r4bJ7EZ+ME3vUd1vWx8fnsO9K7+v3dD+nieXmlr1+j88m3XtLd
L72HiW8svrF4xurd72lnut+hY7p4b75w5cQzHdtefDe/uO3FLx3b3vWy+cht
73kLi3flsf2J/+Yz7/6sTyX+lcedT2t7/rD91ue78uIbi2/f9cU3XXw37ydd
fNPfNW6g/bju78rrV2m+e+tpee/E3hvL1tvy3kPHdM8Lzc+uvOt187XTxTtd
vHd+uPLin67dOj/c8Xm+WH77Y+XEd/PB+z3Xb/sT38pj+xPvzSdvf+ITu97b
v3i3/dZnvP2L/+antz/x29+z/60XedvjzgdWXvzT3R86P93v8ZPt3R9WH8f2
x0+Yn/Sb8BOdnzr/2O/xC3a9x6739ud63zyZdNf7zQu/5xfno9+18+nFGbYe
nX6NrTP7st0H+fzdHzB/YX7C/IP5p/Pl/T7/0LF+L9e9zqe3Pb/Rse3Vc+fb
216c0HHnA6sff/v/yntf7Px8v+f9kO5+iPm/6xf4Hf7E/K48djz83/UPbM+P
mL+Vx/bH710/wfb82v07f/62PbZ/fu3+bM//LY/5v7p+U/6m83fnS/t9/vb7
1o/s/Gjlba+89Sw7P1p5rHy/e+rXbz4B/Uz6aTF/V7cepH7SlqdbN7f5ApS3
vfJ0rB9Qef1q2PXD/l0vsOsF5nfbe47AdL/P/7bHfCgebS+eux4GXfxh8YT1
v9m/+1HX01AeK29/nW+tvHjCdOcrHju/mi7+6Nax7Hx/+xePWHzbn/VYO9+a
7v6F+x3Xd7TO/3dd9N0C+66Avc9g9y8sHrHnw+qu0/qpW56uH5iufPX2Eypv
3dOuL0Lf96dj1yP7s67q4uNYv4B1U7teif2Jh/6e/Ysf22P7t65q1z+xP/HR
37N/8Wd73PncthdP3b/9ib/O7+/2yr9rnIj3E/vz3XLjDO56qLx4814qnrD4
weKluvt+v4MoT+93BOWrY9cfx+t6Y3vxheneK8Sr7cWr8uKn+/P74tP22P7F
K1282p/46e/Zv/i0PbZ/8UoXr/Ynnvp79i8+bS8+lRdf3Z/txaftlad7Xqf7
juu5zfswdv3D7tfY/Rhbz7T5A+jiD4s3LL76naq651Q6Fg/Ki6eu30PXvlg8
YO3T8n5P+9s/9pwsHrqOif1pv/6e/YsH27t/dl0R22tvLB66Tgbd9Wvv7Xe9
6fx5z+GuN9jzFfbdDGuffmfC2qf5AOjqG2sfrL6w4/Wc7nix48XW1+16SHTH
j8Wf76D9TqY83fnQnQ92Peo6P3Tn1+3tX7zZHndelvLiiS4+Ot9fv8TGZRxb
X7nz/emuD9j1AbseYNcD7HpQ3X1F/bc8ffknTle+er8ruW70O6dynWdt//76
f/HcdaeUW/6KbOd33K823/94898vXroOlP0t/0V+z/7Fh+1x53PbfvOcsn/7
E0+d36385oVkf7YXf7a3Dn3X5bH95gFk//b3A7c+YMfNqMeNqzne/Ojo2nHz
oVOevnEfpytP3ziF05Wn648SJ+LR8YtH7ew7Dt32dPXQ/ACNI+w4ui4affOm
s73t/P+z7cRr1ylTbvM+s539i8/liTlWzv2163rZ3+bB5ffsX/zaHtu/+23X
3bK/zSvK79m/+O68I7r3T+fl/RO7vmL9KerV+yjd9Zfuft78AspvXNqx67Xt
xXvL07dOxOnLF3Tsfqre6dppefivfMf98I/y+ms6P9rx6G9xvlh5/X29TjYu
ur5e4w773a67R19+omxvO//fdej8/+aVZn+2F6+2F69dF872m5eX/dufeG1+
gm6vPB3rH3Rc4hWLTyzeqvO1eKN7fnDcdOep/0/5jmMUz8p7HlQeKy++lfc9
ouOYsHhVXrzS9S/2u77fdz13/r5HKI/tz/eJrq9of/Zvf/ygPO53on6Xtb3v
E3Tcfmg6bp5F+2s/S99rvQf1venZe5TvDc13oD68J9Dxfv/6Y7u+pO31x2L7
dz6uL7bH9u85vPkTun/789yvvPt5n+OVdz1T3vWseU1sz7fNt9D7oP27DrQ8
3XZdh9L/u36UbW/8k//3PtL53K5T7o/Ku960vOui+5/tse1dj2zvekN3vaG7
nnQcMqYr7/pCd32hu17Q+R3za+dzOx/fXZ0v/239znz34a+uV2p/+jGwfi77
579n/RD82PVP7Y9/+nv2z5+2x+sHO792PVX746f+nv3zp+2x/fNr8y90//bH
ry1P589n70n82Dwmfs91BNPt335avjqW78R93PiYP/64ru/9H/MT5j/b859x
BfxF5y86f9gfvynPb8p/88vxf+AXflPe/pTnNzq/0fX/2J/7O/a9sPkfHK/x
anTjEbq+rfL8Tfc80HF5yvM/nf/Lzk8/L939tKw8/3c9Xb/Pz8/6Dfm76+/a
nt8w/yqP7Y+fu36v7fmt+9dvwL+2x53frzy/dj1g++eHzpc2LoY/6N7f6PxB
5w+697evfbTjWHl+U56f6PzU9WHp/EPnFzq/TD8/8Ac/YH7A4h+LfyzesXgu
Ox7x2/WO1Y/vaN/58M3iWXlsf+K76yXbn/uZ/Ylv5bH9ifeut2x/4hG7n9m/
eN/xXrx3vWbbi186djzuT81XYXvx7vfFe8vT3Y92fsd+T34J3zE9r33m0Y7z
A50ffAflBzo/0MU/XfzTxT9d/NONHxPP5nc0vrH4xuIbi28snsuOx/WYjjef
/Z6/6Jgu/rs+tfoV/7/94bPFu/LY/sR/17e2P/Fvf+Jdedx8A8qLZ+Wx8uKb
Lh79vnjcetsXb40v3y29DxjXId7o4o0u3ujijS7e6FuP6vSt93O6eKP73in+
XH+Vd/1V3vNL82cov/Wrrrx4bj4N5T3PKC++lRffWHxj8Y3Fs/13HIP39089
9rP3dzq2vXju+uJ/9PE7i1e6eG3+C+X3nfl01+OuT668eKSLR+x6isUjdv83
TkM8YvFo3Kt4pItHuniki0e6eKSLR7p4pItHuvijiz/6xqdfvGh/rP1tbxwW
XXti7Yc3HvxY/dqf+sXqwzhD54+dv3Fbzp/u/OnOn+786fykPvhJeX5S3vkr
73yxeDBuR/tj7S//gfOjOx/sfJR3PnTnQ3f8dMdPF1/Y8clXoP7x8rU/fmfH
R3c82PEo73joy59++vK7H2983eU/2Pi6483zf9TLfp++efCn+3365p2fbv/y
J9gftj22vfXZtQ9WP/It2B67nlu/3fVe/gX9xXTvl/Sti/2Io31Pka9h67o+
rkP7Pih/A/91XAMWz13vzHhg92Pjh+3P+E162XVe/3TzUet/MB/M+5f51a6/
dOx5rtzrp3bSHli8iRvtj5XvOkvauePy+Ml52R+2P6x9uk6l7bDnCvVIx3T3
u42rOKY77q1LeMfd4xXn4q/rvytvnIk4xp5r1P+eS17eIz5gx7N1Ee94sOMR
9+IU60/pulW2F4fqHbvud10a9ak8Vt7zqvLez5THyncdEUz3PMH37h/O5/e8
nN8HLL7wr3vx+wcsnreu6Y3PwdoDaw+sPbYu5bUH1s6O13nQnSdd+3R9d+2I
Paeqbzqmdx0a7y/KY+W9fyvfdVtch5pPwvbaw/Frj7aXcRnah659sPbZurLX
Plj7LG/ZtQ/WPlsX9NoH88vy4p3vMV9iz39tL+fTcb3aw3UB24/6p2O66xEd
0/mHjun8Q8d0/XXNN0L3/b75RugdZ9B1CrDyHbeA6fpHup67fjHxor7FS+PJ
9uJn6w5f/GDxszx2Fz9Y/CwP3sVPdb8nfujiiy6e6K4PdNeH6eer5j/B4k/9
+H7deX3Y+2jjFXt/xN4Plw/l3v+weHMc2O95Huo6Tcpj5TuOsOO4Os4L277r
CIi/5ldRvnncxaPyWHnflZrPgu7+pD3/zMt+3/8gX8npvlOIVyxet+71xSsW
r1v3+uK1uu8i4tP+xWfjEYtH5cUj3f2KLj6b7wV7XnM84q35VLD7D3a9W36I
4+XTuHhUXvzRxR9dvNkfVl78Nd9JxxnaHtu+61R03CFWvusCdN0LrLx4Uv/i
yXuCeMLiaeuiXzw1v4RxKq5vdNevxk9124unxg8WP1t//uKHLn6anwW7vjk/
8UTve5P4oru/0l3f6OKLLr7o4ovu+wFdPDlOrLz4Ut79VnmsvPhrPhTlsfId
1yfemi9F+a4z0XFQWHn3Z+33Un0f+YDdr7Hnv+rGWYhPuvjE63++8utvPnZ9
a/xiunFZ4rfxunjUn3z7F7/09R+fLn7p4hcvv+6VF8/05TE6nc/prgN07YLF
f/OrNF8KFt/qQ3zTxTfd9ZMunr1nY+XFt/LimS6em//E/rDyXadH/DY/SvM1
dF2f5ktR3v27+VLoxneo75fL3e/9gF1/9e+I38Y3Xfxi8bm8ob5/3PbiFdOV
F7+Lx4tf/U/id3lML37pywedeMZ0vye+6eKbLr7p4psuvunq3fF4XsWu51h8
2971nC7e114X73TxThfvdNdzuvh2XFj55Y++8uJdeaz88ktfefGuPFZ+49Cv
vHhvPhPlxTcd08U3HdOXz/p+T7+i8lh5/tCP5P6gvd0fsOcT7P2tuv3xE52f
Nj/9nn/rLzp/YX6q3/we/2B+mX7+sD1/NK8knT/8Pn/Q+cP2/EF3/ae7Dzc/
CuaP5g9p/g8s/h2f+KeLd/1OWHnx3/wddONn6eK7+TyUF+/Ki2/lsfKu98qL
d+Wx8uIdi2flMV08Gzfg+UV7eL5Znvt7/mhe5H0Hvviji7/Nb7/reeOR7nre
+KSLT7r4pIvH5r1UXjw2b2HjD+sfbD4MLF70+2P1IX6UFz/KY+XFk/Lihy5+
6OKFLh6w7yjKiw+6eHA8xvVg17fGh35y16OtS3Htr7z29xyn/dee1/621/50
7b885Nf+dO1Pd31q+2Pth82Hw9rD8WoPuvagaw+69qAbt07XPnTt03wTq68b
50L3POZ8vS9j95OtI3H3j60rcvXf+sbq23VWfdPVN33zs64ffvMsr7z6w+rP
9uqPrv7oxmF23af26/t97Y83j+rY9av9/s073jzWuP3Mzs/2zk955/NsHJ7v
/11fXRz63t710On8Ruc37cBfymO686VjuvOn4857xuqj65XTOw+VP7oOKJ0/
uo4h3bjErge+PHnX3q7D7leOs3nuMV190TG9eeAxXX3RMb15svsdAivffmFM
F5ed1/1snXjbdd1v/88/Xf+brv06P5yuvbD7jd/nB+y7vf0ZR4atp9f1ux0X
v3Q9bjp2XsaPKO/5m25cAJ3/6OIJix+/h+niZ98Vj+nih47p/S6J6f2uIH7o
7fftdwOsfPt1Md3zNXads3/x2LwAdPFo+80bP73ryiv3bJ1u8fhsnWDxaD/u
L8qLT+VdX+jG83W9bL8jfsqOS/zQMd31qutbK4+VF190TDcuoetk0N3/6OKN
3nUSxJvfw8r3u2m/g2Llm1e936Ww8v0O8SwvsPLe65t3qXl3Nj/y+lOw98mu
h00X73Tx3jwWXf+6eQDo4r3zrp+tM+84nq177f75bB1f8U8X/12/Gns+6XrX
fke8d71ruutp17tWHitvnJXy4p9u3FHnY2Px3vnftvf8+2wdFqw8Pygv3jvf
2/bY9v0u2++sWPl+R3P9VR4r3+8ezQOPlW+/svfC5g3rfOvOp+561/bPP13f
ms4/dP5p3hY6/9ief+j80/mSdP7pvGI6/3Qe5LN1rj2/0N0vsHkL2LwI7H7S
9az50vMM3fMLnZ+6fjUfY+X5SXn3i85nVr7rKLlfYP7o/GXb84vy/IL5AYv3
rjtgf67fWDx2PWq6+Oz603Tx2fWm6eKTLj71I4vPri9NF5908dm8GPTm1RCf
dPFJ77xd8dP1psWleLK9eOr608qLr65HTXc97nxeuuuz7V1/N7/2WPl3rXuF
lRdfXb+661Vj8dV1L+zP9a7zXzuftetNm/8mnrq+tP2LJ7p4sr14avxg8bP5
phc/dPFDFy/Y9avxg/kY8wHWDth5LZ5v/mvnA7oOYtdBzxddj5ouXunis/Nr
lRevnd+KxWfny9re9a/zZemuh/Ynfjt/Vnnx3PWvu941dj3sOkD253qIPd9i
8dv5rZ2f2njt+tT6HcUrfeO5TxevdPGKxavy4hOLTyw+bS8+G7+dP9r5gF2v
Wj+CeOh61F1/uutNd31p7H7W9aX9Pvb77dd1PzMfTnt1/We69ut6z3TtSdee
dO1J15507dn1nenrVzveehPH2rPzMbH7kflf+A8/+nHnn81XPKa7/tMxfeOg
7/f2Pf9Ye9ge2953MvPPPA93vmLz5Cq/7/enaz/6vt+nvdo+bQ/MX61/+xfP
2PWr8/++9PHes3jv+sLKY+XVZ9dnVh4rrz7Nn1N/tld/dPXR9Zfp6qfrL9PF
K139YfGL1Wfrq/MFf9/ju8muB37P9bvrG9se255flRcP2Pl0fmDnD3a+3vc/
vgPseDs/kM4vnR9I9zxEx3T9K+bvNS+59qQ7X6w9ldfe2P2+8w87H/Ajj36y
nR8d0/d9I/MP6Y6/8wk737DzAz/2+K62/XV+Id18Nd/lzH/G5l/7Trf5tMdb
3+h46wMdf/UL/9y+a9kfNn8Xbz2nY7+Hm+d56xkdb77dfXfa/PHjzRc/lt8A
bz74sTxf2P59p7R/vHwKx/KD4OVTOJZ/Di+fwrHzx5940d+Ml6/gWH4zbHyE
eYaeN8SB8T90fqWrL/1Qzgc7H+x8Nl/szgerX6w9sfr03dTvYb+H/R72e9jv
YfXV/btv2D+2f2z/uOuy+N4tDjw/uO/4Pc/RXVfN/rDjx47Pe6LtsePD9oft
Dxs/Yb/efzzHix+6+KH7ff16fh/7fez3sfGc9uN7meu4/9cPaH/Y/jae9vyB
vR/aj/dH+3f+jtv5e2/Rnlu/6tqTzj/0rhPveDcf+c7X/ztfzyHqm66+6d5n
6d536c5HvTgf9xHnQ3c+dO9pdO+N9Gd5M+gv1fo9n107/MDls3bfdf505093
fHTHR1c/dPVD1x507UF3X6O7X9Pdt+jup+3Xo4sn+rO8TnT147qnfjyHqx+6
+qFrX7r23XtY7pP6Dzqvkd55j8/y6NAdv+uo4/cc5fjpjp/u+OmOn6796dqf
rv3p2p+u/enL/3+69qcv///pfa7R/p2XTu+89d6XvR/2u13zuPa7RPNGtl+4
eejoz/J00Z/lPaJrX3kStK/nYu1L17507UvXvnTtS9e+dO1L17507UvXvnTt
S9e+dO1L177rhzj/0PmHrv3p2n/9Utf+dO3fefb0zsP3XNK8F51XTO+8Y++L
dO+THQdB937e78bNA9zvYs072u8SzWPYfubmhaOLT7r4pItPz/3i03up+KSL
T7r4pItPuviki0+6+KSLT7r4pItPuviki8/N67n4pItPuviji7/msdj6MMlz
8SwvM/1ZHlj6s7yT9Gd5+ujat3nT6NrXe6T21W+ifenal6596dp3/YTnbzp/
d949vfPyHT/d8dMd/9btuuPfOip3/HTHTxd/dPFHF3908UcXf3Txt3WuL/7o
4m/zwC7+6OKPvvFIp2t/+sYjna796drHe6r2cR1y/nTnT1f/dPVP93xK93y6
dWau/r3Xq38+UL909Uv33M1Hzld556u885XP2PnylfOlO1+69qRrT7r3Gr51
fNhz+sY73HPp8jlffcgXqz60q/1rd+852O9hv4f9tX/79Vf9yPepftSj9qBr
D7r3Uu3geLHj7XsTdrzY+7k4sz9s+74nYe0pf5/2FIf2L04dP/Z72PFjv4/1
l/g+YP/Y/rH9Y/vHzgd7TsT6v/Sf6x/Cfh/7fez3sd/Hfh97D8Guu1h8fN2j
/2rxoX+bf+j8Q3c++r/VJ9aPg50fdn7Y+WHnh7Uf5kesvtcff+eL1bf+bseH
/R72e1j9YvWLPXdhv9/f0z+tPrD6wOoDOz7s+LD6wI4POz6s/fRnOz7s+LDj
w44P+31s/5983DdX/9j5YPHzJY+42/dc91l682D5ruB5H5sXZXvH4z7ue5rv
Ap73cPNoOf7mcVLe807Xve+8arp+Ltx5oOa14M4TMR7Cc5jz8xzi/JRzfrh5
wJp3Sjw0r5Dt9cti8dK8LnTfm7B4Ul4eB7p+UizelDc+eHl5r18SN89C562L
V/szD8v2+p2weUq2Ny+oefaax655uvDy7d5ztfoV9+oXq1/l1S9d/WL127wo
dPWLmxdFfTcvxfIaX31j9Y3FN1b/uOu8d16p9vH72kd57YO1D9bvhl3/7E++
Hrr3ZGzcdPM68tGzPHnKuR5g7d08W3TtjZ/l2WqeI9w8IK4/zcNg/9pn+SFP
t737S+edK6/9ML3z0On6uXHniXYdYe2pvPbcunR3fbT98jnf9tpXee3bdUc7
z47uvXTrRN48Eb/neck4C89H2HbYdnj5XY/dv7B40s8lHujiBYsP7HpQvXmw
6K4H+Fneo+X3PP/jZ3lm6OJt+T9PV178NJ8nfjZvvPk8cee9ipetM3v9tl13
Vj+QeFge44sH7H6rX1J797qAm9dU+/p/1wusvbD2rG5/2ouuPTFdee21/KDX
nssnenrzrNC15/KHnt68EnT+b/7WzvNuvs+tK3ntp7z2Uv/aS3nt1fpX720H
9YnVd3XtpD7p6hvTlVefy/d59b38oKc37xJdfW8c3OnNY4PVr/LqH6vPrZt8
fsDev113jPcruw6pH7r6w3Tl1Q9d/S3f5dXH8ltefVVvHiq6+sLqB7u+VG9e
k55f8wNi5+P/Hd/yHd7xLz/i6c2ThR2P8o4XP8uzQtfemK68/qKto3rju8va
xf2ObvxaWXn/3/x3y+d354/VT/XmDaNrX9w8Y+qHrv4wXXn1Q1d/mK68/j7H
af5y2XktT9z9fdf/Ox//73zx8nYdO7/q9re8RKc7P0xX3v0V63dU3ryAsvLt
VzTOmy7+nKd4a36y6uph449Px/StD3O6foFy67X5vbD6xOq7uv0tr87pyx9/
rH6x5xfcfkzjgu1f/Pld8VZ2nPxL59ey8v7f3/6/fmSsfcu2az+wceh08aDe
tDcWD9XVq/anY7rvHfSua+N7k3Z5qeZv/OxYfVfXbuqbjumOn+74mn+nuu21
D118Y7ry4puuHwzTldcPRdfPhOntF3nWb+J6QXd9wOKnuu3FDx3T9avrJ+i4
c+3puVJ7Ye1Z3XOn9qOLT0xXXjzSMV0/UfspnvVbeI6je04pKy++lw/o/FVW
3vVl44Lv+kJXv3T1S1e/niPVH1a/1T1nqj+6+sV05dUnnZ+WD+h05fmHzl+Y
rjz/0PkL05XnHzp/Ybry/NN+XUxXnp/ouOt+dJ2O9otU73vvs/firUd/+taj
P9768tFtv/XmT3c9wJ23u/XmT3d9wM/mZdLFP6ZvfNnFP73zrPjBdyR+oIt3
/UriGYv36vqdxDNdvGP6xhtdPNPFO6YrL57p4h3TlRfPdPGO6cqLZ7p4x3Tl
xTNdvGO68uKb7nqJ6e2npfPDs35d8U/nj2f9hPxA14+Euy6M/gW6/oWuS6K8
92y66z2mK+96T+86BsaJ0PVXYuM4qttefzed/3HzpPA73fUANy8Ev9NdD3Dn
6fM73fUAdx42v9NdD/CzebD0zqt0Pdh3g7se0F0PfAfid+x6UN14LX6nux5g
uvL8Tnc9wHTl+Z3ueoDpyvM73fUA05Xnd7rrAaYrv/XcTt/8q2O68vxOx3R+
p/Mv5u/qtt/6cFnniS7+6eIZi/fqzXNCF+/4Wd4JunjHz/IK0LvO6rN53fTO
Exbvmxd28U4X7/pZxTMW79X1w4rn5vPD9OUNu3imY7r7A931vtx1grquS1l5
9UlXX2Xl1Z9+afVH9zxN9zxNV7/y4ak/rH6ru+6rv+bTo7te0Pkfuz5Utz3/
010fMF15/qe7PmC68vxPd33AdOVdD+iYzm90/sH8Vb15OOjNe6A9jdfsPGTx
7T4rfrH2qO4+rf6bn44uPptfsfkT3bfFQ9l1TvvTtWdZ+eatVp/Kq6+y8vqD
jP9s3gj1t3xpVz9Y/VV3XVZfzcdEF7908VhWXv8gdv7K68dqXm/lm6e5eYFd
P4xXdf2ga0/3De1Xbj8tXX8mpivfvPmOX3nnh+nKOz+6fjdMb78QXb8NVg7z
Z1k5/c3Gy4o3unhqPpuyOOYHuvgvK+87AX7WL95+c+XVP10/b9c1aL8rXfvg
9tOqf7r2wXTlfTdynXF+6tV3EOx82s9f3f6cD935vqsfuXr7denOD9OVd/1w
3XF9KLuubt2x031Hw1tH78pv3anjrdtz5dUPpiu/dVSOt25K+s0xvf3adPXR
/DfypTh+1519lzzed8wrv+9up+873fG+6135fV85fd9Xjvf968o7/373wPtO
c+X3feb0fZ853vetK68fCHs/kO9E/TR/CvZ+rrz6oas/TFde/dDVH6Yrr37o
6g/TlVc/dPWH6cqrH7p4wXTl9Stj9am8fjPsubnrp8uP4n6MtYfx5toDq//m
Z2n+FuXVP137YLry6p+ufTBdefVP1z6Yrrz6p2sfTFdefGPtobz2wu6vymsv
un58rP2U115Ye8jn4v0aax/ML1h7yT+jfejGWWC68tqHrv2w9sDaC6t/rH2w
+sbao7rj0R501xtMV157Ye3T/DpYeymvfej8hfVjKa/9tv3N6zIfwnuC7b1X
YOPbzF/Q/vL3aH9sfL7y4oEuHrB4wPyL9z7+eI9f+2Pjm/2e9re99sdbt/C2
3zpvx1sH63jrAh1rv+ZHwltn5MprP/z/EXbnYVsP7f/APZGtLClZky2hhxKy
xSV7dqFoeaLIFg8lhcha2ULWRCGytFDRouXTvpdudd/ate/IVna/vvc1r7mO
7/yOju9f1/G+znPmM3POzHvO2ZUPbNwj/cZJ4jMOgt0H5PyG8a77jMyHwHE+
LK8Xy0d45UNf+cDOO9BXXuTKC1Zevqe8YPaH2R9mf/Fpf7DygLU3mP3Fx/7k
+A42zyV/5sXIzXul9vwgPw8R7em8C3s+lJ+3iPaE2U94+YXtixCf/Aovv7B1
Kvr4gRw/RBzmnejjB3LzULD7rZzPMZ9WlJ/HifOvsPz/kR83x/NSwms/9LUf
2L5880Tih58uDb8mrgMpD/NEMD37Qsnd0yS88iE3v6Qdwdrd0lL7rC2cfwjn
Ruinv+xHX3rIpYdcesjdZwBrb7D2AbsnB1Zf0nfkIk+E8oHNd7A7LB+1S+Nb
F+0snPSn+bavXnz+T89RkLMPzD702YecfWD2kR6Y3L1NsPM04tdfkLtnKT0P
A7MvzL6pXL7Vd3L3T6bnXWB8Bbt/MpWLP71XxfwEO8P69fTc2PbOidkPrx2Q
K19YOtLzDml5+1Xe6bmIFPu++kCuPqT1g9x9BLD+LD0/Qe6eMJh/Cas/sPoC
qy/xntPgX8Lu1YK13/TdU1j9gdUvWH2C1adUrnzjfECwp/afnp8Q3n2e6T4S
8aXvjtknlO4jEd59mOm9LrD7IlO5723vnav0HSz66rt1e1i9w2fk+C7F9PE/
edqv6C/I4Xi/X+iXyNN+QHsjh4XX/sjV+xSLT3tMzz/Qh+krN3LY9+mR41+Y
P5SeZ0nPL6VYvNofufNy6fkXcu0R1h5h7THeKxzaI6w9wtpj+s5w+o6q9PLX
yLU3WHtM3zkUHt+T4/P0nT5Ye4K1p1Qufu1V+ekf0nfx6Kf3KvGP/6935FJ5
el+memE+FU/D6lHn0vgKcvNBwmu/5LF/C+G1Z/L03Pj2zokLr32nfqHw2jN5
PDcewmvfqR8nfOp3xv42hNe+t9evweJL/UZYfNp/eq4wxeLDm8Yp6g195Zqe
n0rPUaVYevS/5No7rD+WHu0/PY9FX/uHtX9Y+4e1f1j7h7V/OH1nXP8L65+l
Fx+Q4wMYH8D6V1j/Kz78QK49k+tv43m40P5h/JDuQxNe+4e39w5k+k4k/e29
e5i+i5i2f/0CrF7gCxgf6CfwAbn2Lz6Y34cPyPGB8No/OSw8PiBP74HY3r0P
8f7bwAfpuE147Z8cFh4fpOMY4dNxDiy89k+e+sHbO6cuPD5I+/HUjyaHhccX
5NpxisW3vXOw4lOP0vDk4iHHLzB+oYdf0vOK9PELjF9g/ALjFxi/wPgFxi8w
PknfXU/l0o8/yPEHOf4gT9/15W/QT+81xR8wfqHPnyDnv6f3KtJP713c3ru7
9Pkf5PgovVeOfnrvHD5K312lb74Vtv4f38kMWD1aWFrPCnJ8k2L1Cr8Jj7/I
8ZN5UvxEjo/ED4sPP5HjJ+HxETkc788O/JTeMwKn98CQw9u7B0b8+Isclt/t
3XshfvyV3muQ3ntAH1+l5+bpw/SFl158RR+/pDgdlwiPn1J9cvWM3P+wX/Hj
I//jIxj/xHdPAv9Eewf+gfENjE9gfAPzX2D+SyqXXu2fXPsn53/INz6gDys/
/ECOH8Rn/hrGF/Tt20v1fR9fpO/m0scPsH1dMH6I7+YGbF7R/hIYf6TnpYWH
6eMPclg94B+R44cUiw/f+D6+IacvfvyS3tsE4xvh03ug8A19ON6/H/gnvbco
xeLDH+k9ReT0xY8/0ntQ0nk94cnTeWH6sPjxDTmc3sOR3tshfnyT3iOR3jtB
X3jfxzfpPQspFl58wuOjVJ885SH/w9Itfv4ROX6C8ROMn2D+EYyvYHwF46tU
Lj34iRx/wfwbmH8jPL6C+Tv08ROMn+jjGxg/0cdP5PwVcv4KOX6C8ROMn+Dt
vSObvjNL3/5R5Qgrx1I3alThfQv8Zh0e/9HHV/RhcvxFjn9SLH78KDz+IqdP
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
Puz7sO+l8+Pk7JnGZ/wtPlh85mfERy4+mL2N34WH6cPyb7wYxwUBx/sIAmYP
4y9ymF/7R97OcT4HNl8gnvTdetg6iPDKLa6/hnlc47v0HWPy7d2bJ564Xhf0
jfPiOm34n12EU89g+vH+9BBOfmK7DXqwcZP/5Sd9V5k83j8e4t/eO4zpu2Yw
Pzt95yO9p1n86T30/Mz03kHY/Knw27snLb0Hid2Mn9kNlv+43hji5z+m9/LA
cT9PWEdXr/Ce8saLcT9P0Pdd5a28yCN/Bj3jUvrKE1aewis/9Uv50Vd+6TtR
6btT4lOe6T396T3XsPJL76VL76X6v+7NYRdYevi16T0Y9GH61lvZTfnB2jF9
7U/5qRew7wivfJSb/9N3i8nxT/rOaPoOqXiUFzn7p/eAp/f6wuyf3sOW3guW
3lMEp/c2GEeQKw84+kch/eq/fkZ7gdnTPhLhyNkrfbeZPvuk7yKSq9/pOzzp
uw/pPenpvcaw+g2zb3qPXXpPV3rPU5yfCvbU77Hn/3UPhXYPy6/9zuzGnsZ9
6mv6bj3sN313Nn3nMX1XUjj2Tt8pSt/FgNk7vecZZm+YvWH2Tu+pS+9Fg9N7
uMynsJ9xbTpOho0703P76iXMHsqDHfER7LvpO+Hpu5npO5zCs3f6rlP6zkh6
L396L3Z6Ty7Mvuk8QHrOWbq3N07/v84x4z1Y/pzvTN+PhfXrMD6B1XfYb/rO
X/quFcx+MPvB7Jfew5bO+6TzODB7wuwFm59kD/ME5Oy5vXOOxunqDcwO7MsO
6iusvsLsD7M/zN4wfoF91zyV/9N3w2D2h9k/vXc9vUcZxgfpe6qw8knnzdJ7
dGDlk57Dkq/tnSuF3c8gn/wNWP2F2Q9mL/PR/ofZC2YvmL1g9oLZA2YPmD1g
9oDNh7oH4P/aZ63+Sbf6B8f9uAHH/bYBx/20Acf9sgHH/asBx/2pAafvlKfv
BqfvdEq3+fX0nTq/5Oyf3usPsz+sfsLKI33/Lb23CVYecHpO2TzZ9s71dSo1
T3HuklL/oyjOt9vH8H+dk1G/5Vt5wsoTVn6w8oPxC6x9wPrd9B359J1nWPkZ
h0o3TA9WXrDyguO90QHHewsDVl4wPkjfb/Id7QFmP1j9h9kDVt9h9R1mr/Sd
6/QdWZg9rMfIH6y+wek5T/Vne+ekjirNz/zc783+5/+pkT/sa/y/zlGUDsvL
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
UvtP90tpn/hAvpWH9MPyq/8wvjT/FfcXBJy+A0tfObEHbPyonMwvmX+gH+/t
CvraOX3r2eaLlD9+hNN3oPClequct/eOiHaAT6x34gvrldavzK/A5jP4VfpX
fhWsnabvwMDKTz3hJ5tPNG6F4/3wYb5dPo0nrK/B+m/jC/0YOWw+kj+Y93s3
Jfcubsrh/3Z5+2T8Mf2D/gPG/9Y9+X/6B/0HrL4ab+Ej7Ze9+An8Ke2XPVJ/
m//Cj96aP9cY88N/lt70/nX7fPGx7ysv871xP21SPuyLX5SHdq88pJdcP6I8
jJ9h+Tksz4NRX3lZbyAv+1Dje19dXhT3R/htcVWL18t2npHhkfGLJw+6/NcZ
cf/PnTsd/96/Pp0R57N2fKf+8YvLjsuub1lhQFGVBfHeoktXdn+4xtgRsb2N
6fjdOd+MWhD3MVkPGFD3ncYN3u2fjQ5yPHtNiM86b6tpP1/2VDYirvtq92+d
vP9uzdoOzq3tmM9P3CcUePHEwefOeOfmqZEXx+bzE9vTyHca33b5F1Nz92TF
T51Tvyi74M+KY1+uOjVrcPbeh+/65Lzszgd/eLPmkROzMo1H3PjLLguyo68+
ZkODrp9mBx60+3eznhqRa/T91Tf8VO/TLDdi5dv79VyQ/fPGfUd9PeHt7PGZ
F1RfNX1BNvyRv1sfW6VdblqLC2rOrrsgO+yIrz47+fd+ueErj9tlQPGI3Cnj
/33L/ZMG5nqf1vr1e9/tn9vpxcH3P9dzXO68RqMadmnaNTdg+hsHf3TH5Nza
4s//9UGVCdn8X9re133tjNy/J/31W9uyo7JF1Ztftcu0GbncQUNaXnXWnCzb
r8lOXf6Ymn1Z8bbbbl06Pf72WHLGs/1+n5pd+8mIfXc+b0Y2KcS3KB9f1qPR
Yy99v+OQ7JQqRY2v2ntGNrT7sztcVfJ+tmvLPl/UXTktO/iHS9ed8sPg3ANt
V51x9E2jsy9DftofXpqfmN8vOpbmN6sb7HFbz1J75MqE8L3y4XMXB/t2zNs3
17vqZ7ccUfbd3FeXXNlo0HETcztlK49tcuKcrMGc39q1rTAtV+XdHaZMXT07
+27ZSW9d2X9abmjIV3H+N/db+VPrXv7kuOyz5798/qxt5VvhpXz6986nP7ep
16qK75W8m+1z3NH9n+o5La7fzPzX7ZfsUjIjO2CPfPjP8+HjfHDtfP2J63h3
n/zTHZv3npKd80uu/IMdZ8X7Xet1++unalM/jFj9GpWvX9k3IX8T8vnLXux0
2fkL/p4b990137n1qFp/vRnTdfvIhptGPTkoztc0fLVRjypfDc3tn//d5v+V
u/iIUcMir8z559O9Thw+LK5j+T3k786Nn2j0Re7o+beN+fWwr7OTrzpwp3ol
o2M7Gjvgm1mT543N1Q3fM18S7yWt881uZz8zIc4j3JXPf/TvhjXbp7j+x5Ny
R5bNp58fcMZd09ptufbG2B7x48vHD7zmgGZTol87pcn8trc3nZ5b+XPenvwC
dpiVL59oh0E917UfunFG5JXVK/d/5vi+03PTns/bX3j6g/P62erm+fTgOel5
KZ+eLMlv9H8OyNsvzs8vq/FqywH3Tso9EMpPfne+v+r7t//xWa7y6Rtnrzjp
i6xeKC+/m8sWVa1f6/PcnpOvu27zvBG5rhX3vTEbPzd7u8zymo3rTsq12VL+
hIeeuzVXbfCVU1odOiW3S5/7Dt24cWbWafwL5WpeMT33wK9lT7ns9dFZ7+Y7
7DR30Yzc9NBez8q311ztj5648+r9BmX17y9Xf/a86bmqIXyHfPjszhoN6k9p
MzkbualK21z/GdmKMq1aVFs3Kbv5o4+OnTNiRrbzgHmvdh84LGv9xqypgx6f
kc3at9+zW1sMyyb2OrztUw/NyJ4M8V+Tjz/rd0ylT4uGD8h+bPZBn+u6TM/q
z1hx6J6fPJsN6bHpu1uumZq9FPL3cj5/2dkXPPFGp1+/yl656P1hr543Oetf
76Lrr/zqq+y5fpWPP//uydkPHfL2y+Xtl2sV+PiKPB/nRvXPp++WfPpyZSrn
0zctn75chWPz6fk1n57cizPz6RmdT08cD/2VbT7xiiEzsp8m5vlzfp4/s3HB
vn3y9o3+w38rHjris218efkvJ7ZfP3hovL/5yevy/PxOnp+zr5bny++6fPll
SwKf//xCKZ9nZ+ycL/8nJ5WWf7bbuQNvr9RiSJx/rBPs807ePrmiYJ8b8/bJ
XRHKb3S+/HK77Jgvv+b58ov5+yOfv+j/tc7317kkP7nBW/L5MZ4+MaSHn3hk
yzNuObvs3OjHx/X8N3a89tq5M2I/vybf/uL4Z/Rdb1bPnp8c28vKfHvJzgrx
Seew1p3r7n7367ndflywoFqjSVmbelUeufzhD3KPDnli17O/H5/dXXRAg3v2
+zj228Yra75+v/FBF47PBm1cvdOkYZ/mBr525LjKtcdmn7zyfd2fdvk85vu5
gPkZJ4X4X8jHH8ejo/LpTfMX/fetPSvuNnq3GZHXf83j3H3DH3n2k9tmZlU/
b3zsmHumZy+su6nhn59PzU6ZdvEdwxvMyHoH+b55eRznn1ml/tGbL5scz1cd
22jxmlM/nhjHV3ue1LDlC5ePyV4O+cvy+Yvz2nvn5bmbf+49475P3ovzNuI/
Kx9/7shg38p5+0b/uUb+e7m1Ibxx8cTgH1yc9w9y7UJ+zsjnJ87r3JD3D3Mv
rFm/dGzFqbH+4PPJeT7PGq7Ny7WXpL/IXi9a+PiEm56L9VZ/ND7fH2UL9jr3
7zPnD4zzWz/MydcH83jqw6p8fYj+4Gt5fzBbt+/uey9+rvD+0Uu3tls2pNb8
7Ly9B516Zq9huWVBjue7LR9eYXS1kXE9o8KK4i47/fJFbs4Zqyud+mLfbMaB
Ld/bf8LI3OXXzvn5m3t7Zp+X616l3A0jc4sf2GHPjje9mz1/Z+3Nq88cFfu5
WYfOO/2zQ0fl6p360j+rxz6VDdlv1u87nzAqd3eX7pff89wj2dQg/8/ppfLc
p0Fe/6lSeay37+X949yjIX36qYkhPcc1LE1P7sOQnnsfLE1PrmxI/yl1S9Of
++v6vP96Td5/za1/dOVOlWd9Hf1647v6n3ZtNW3SyOyLf6q1mjfw62zzcbn7
T5nzRXb+lpvueLTN8NyIk3rU2+20Idlt1bbu2fCr4XHcZf14fKPrzt/zhs+z
Wi2bjvjp15HRzz42YPXgllC+5km6zc7XB3xT5pIO4+6dVxLPWTQ4oPviiU+V
ZO2fOXfuvY3GZr8emPe/h+f971ztkL5V+fTlloX8saP87dfhkd57DhuZ+zzk
76DjS/OXu2Vah4OPWlec3TJzyy0/fToul4xvcr9cnE8P/+jSkJ6n8unJTZ6R
Xdfz1eI4z2z8tbDrq8e802FC7ooXy0z77bTi7Ju6m4sb/jA+zvPN6vfAuQ93
nJZbOninpw9sMSdbPaFR8Q7fTY318MAz+p1/zZfTcosaHbT5infezGrXXbJ2
Q/Vpud/229rw7prbxj+zhu1Ts8ew7MHL6u45ue78bHH1Zl2H1BkWz0fPzscf
z5cckI8vKwnpxa9JerPrQnqL8unN/lOp2uzv1hRndVpcMeOJgeOyE2/tve7D
lbOz1X3njqn18bTsk955/7pa3r/OTgrpPTqf3qxm8D/3yfuf2R17/zD/rEaF
9ab3W415aHHJiNwrUy67Zv6Ugdkha3u+WrvP/Ozw+p3WZsd/ltty2J+njH59
atyXZ17s2v3+3rlBq8L+i8pdDv296fgN0c+bWml+r+qfbYj5HLTLO2MuOr1w
P/Ndf7R6s1Lj9dmaBm8d0m7zojgfqH+renL3Wz9bsi47qXKfY7u/8XqUT2pf
Y2KH61fF/RbWV47u/uh3Ty9ZG/cXvjVxy7xyq9fG/SMdOnbaueKfa2P6Dnz4
+fce67U2q/fN2kW/XzY6xqfdDP/w9zcWHrAuu/CTXVscOLFvnF80j9hwxwmT
j164Jtpj7qqRR73Uak20x5TDxpZd+vSaOF4/6r9t9pvefU3sn5vvNPql5Y+u
ieOdrOvy615uvCY798kyJ35Vp3API5544LGpdz0zbE3k66vv7Pp7q2fXZAue
7dFp9xcK+0b8rt51Rfv7zl8d0/v2RbdV6Hja6uzLJl+cfcddy6Ke8llYoVOd
Fzquzt7sWKFzp67jo7x+01tbz648Oc6nfnXRhsNParMu2v3Id/sNuOWPQjnU
vqRH56VdC/fiyv81Q0+s+smPK2P+t5x2+aODf1qZja3bddCfOxRF/Zie+8a0
fv30VbE8jjrlwc8q7LUqK/tYpb9r9nkr6hvnDLh8TO1d/7Uqazd+wXc/PLg+
5rtJ/46rLzthXeHe0mDXb69+eeoxY1bE8rtzl5uGzXp3RSy/B547/7Sp81fE
8rnk26/bHrrte+pTxYdrdThw1opYPk+3nbHhghkrYnpf/XLOjCuLVhTKq2vz
J18btSLy1H1TfjihyZAVsd51W/1p/T27FdJXru3Hz41sUHgXtPURf02e03h5
rN+P7Jg7omzz5dG+rQ9t9fIXly+P9q1de8AfR22TS/9Jk6++9JGGy7M3m9W/
5F9jC/eMsveBozs/c+Bdy7MeqzcWX9dsVJRrj7sct+74bs2Wx/yUO3vX927f
pt/tz+nvbN1rYJxPxxPFOx58xPxOhXvWbx/z/byhOxbuVX/xw8G56w9fFvN/
zIWP1h1bZVnM74vXNZ84pkHhPuU1xYeecUOZZdm6z389s9P7hXdBld/xL/Qf
OfDgZdmPu33QqtG386Nce7/4P1W++8+5y2J5NVky/pxzT1+WHTVnVMtDp38a
9fWTj+5zba8d91oW83vzOQef0fmCZbG+3Te56nG9t6VnSL8Dy3b7c0acR9xr
+rPvbfqpwJOxfM9df/6iDkti+VYo++b5U+9dEr/btPYLLz2wfkmBXy+cXenb
W5ZktZv+tm/fyxbE/5Xv02f0+WCP1kti+Y69ZM7V7Vouifl9Zud65TevXBLz
W7XKg2tbv70klufRO999z2Mbl2T79K1a5fZJn8b4nzvitkoPDn894tuv/6vb
Z32fjesh5mF7nvRCswmfLMl+PmXdyV1fmxPl7rPrMqNi583LFmbjpr92e42R
62O7Yo+7bpw6td3shdEeO1Yo02Htnosi73zfr8zGK05alHX9YVGfdv9dFcPH
+9PLf7N7Uf1Fsb5UGTng1VVXLor1pWPu6JV3nFe4D7t71d2ur37wopivql9+
3fWELxfG9rO88ZSOWfHCaN8zB1Xp/Nw+i7J/T9233hmHF+5lZu+ND2444Opt
cnywuduotZUWbsvvNy+NGvDtrKivfS1q1KLSP6sWxvI46dvPcp8fvyiWx6ie
D/xx1bb0449T3z/u1JOuWBTr47xyL//WoNai7Ihhw86rOvKF6HfH+1Z7bK1z
728Ls17dxo97sMe4KLdvo3qbAzb9vcO2+rPw2LtuPndTzHfs19/aZ+5fL8zP
7m09ZM0BT62PcuXVYkzrjXNPmh/Lq8WrF9+2JZufrW8+sd0VA1ZH/aL/9Htg
1zUFXlIeZfa7dtKwVoV2OWv3X6p81n5+LI/Pj7t24eJr58dwr4xbdnLlbelh
3xdXfHVl+YnzY/3efd86l5xz1/xs56kXPvTWfq/FcOy1Z7NP3rm2X8E+RdXr
7/1N7W143Jp2F1/RP/qZ+Lj9Dk0WXfn4/KzF3e23zNhzSpSfetZps8p2mR/x
LSPPrXnm60sidh/nc3sf2O2BjfOy15+65bEn3v421qPb+294oNr+hXcv1i68
6N0ybQrvOrBvzYWfTan8bnF27KFFP9wwe3WUq+8be5Yb1GS3gj0f79H2tF97
F0d7/jZ4/ZBqq4ujPS/b8OX1d2wsjvXw5auaLXl9aHFhv+tL/1z42LjiWJ+7
fbLjxOFbiqO9q64YfvKuvxZHe7/cY+O/X5leHOtvmZOa7njTtvTOuuC9Uy/s
OTLGqz4PXTjkx1N7FGfdD5lSPPDsQVEez389fsgj848slNd7jQ7/fXj/4uzV
3kN3funBznG9XvkNm9vi/GY/F2d9W17fdpdBH0c5Pi76z4F/LN1anJWv1Oe1
tQNnRLn9C59PrL7T5WOL4/624685slObjsXZ/DcfWPrNzMI+ZP3ViPoX19mh
8tzsvDsOL1v/0sK9SMqrRnH7VqftNjfy1W9PXjZv9eVzs/febVrxy+aroj5+
uqXP6InjX56brX9w/B2HdV8W5crv4aq1dtqhwdxYfp1m1ZzW6PG52XEr7569
18uLor7yPGrCrh2HtJubNZg2+dF3t/UP5Orlqinrunxx6tyswrKzej40vCTK
d6vfdPz48XMj9nthnRfrbq0/N5b/0x33r37Aw3Nj+V+w77PXdt6G8dmX2ee7
V71kbqwPX+3bpPr5TxTKv+Hl3a4t6VAo76Pum9B1RvW5sbyn9+97yNbzCuX7
9nF/dO930tys3pfZI33uHBjXkYwjj97You1FO87Nvh45e2uNJ8dF+cGPHdK4
+RFzIy6/4YOjT7qocD75/o7dDpnZ+9uYr+KX9//uj0/XR6w8j//24CkrG23z
w1/q3Kdjl1VRrv1NXvR7+8OXzMkurtBn2PB/r4zy6Gd2+eTkDnfPyfrVabG6
48zlhXu8uv7T/OWGyyJW3k9vrTTvun5zsvFbH+68oU+hH4n9+TNL2x/41Zzs
vNVzfll+eVGU+1295KBKlZ+Zk/21+viit4fOiv8rr+fKdWm154w5sbxq7HzT
5hunzonl9ezi0+pM7TQnGzfip3a/7Dkyhld+ldd83Xj39nOy2hdsLXPQ5Z9G
ufKc373qh/0+nhPL8+iWezd9qPuc7OOjf7uw52/Px3kp5Tt3j/LNGq2Zk30z
e/fDZz8xIMqV71Xv1xj24PVzspeP/XVB1nV4lOPnB/9ZNvPZV+dkzR7d4e0n
9xkX5U/8d9eRu0wuzIPZz3Jt6+Km2bb88kfWlGzosVPXmdljuVOrXLW2ME7l
j1atMf2/v7Wamd199t3f/7x0dZQrrw4fX/zDhoEzstVjWv2ePV/wK4cdeMDu
O/x3UcTa55W/v/jAHfcV1mvndXil3hMnzMwW1Om9cL9nSqI+njrh8569bh9Y
KN+pJa89VL3PjKg3YL9hVWZ8NLNwH8Q7x704cGChvO5o+VqrP3sX5od3veOZ
G477oFBer9aYt2/3rwrzgW/1uOruY26Ymf3Z6JvZK1p3ifOMyuuNP+74eVaL
mdlXN70/ec19A6Ncef14abdKU3+fkd3/9SXn/fvgL6L81ybrF2blx0Vc7fqv
n13w9uSID5pz0v1dbp0TcYVXHn7oxEHFEa/ff/O0y4YtifiMDvv9sKZJ4V1i
5/POn3lI+Q73T8kaHLbfEy02fRfr+fSJdwy7tc23EePzyt2WLKjbYXI29tiP
jtp7wvooH3bxjNu7XLcu4v9WaH7pdWXWRvz+nQvO3JStjrjO8COvPOSZwrhZ
eY9Y8cQZmx6YnD17aqf9D5xbEuXKt/2vZb7sUW9KtP/DgxpWXj+mMP86ovyr
n71x5bb6sH+tMhW+Hhjn39n74ze/e+TrR7b1w99cPvOxkuFR3vSYey5r+tfY
iKcNaXbxZdXGR3z80J+avvvL5IjvO7LpGSubzSzgQVc/uuqNORH//ly1dvU6
z494vzOr5hrtUtjXpf8cvqXdza82m5Rds/aeA15/79tYL3eoMKX25hM2RTyl
3LuX33/TqohHL7l2+E/1VkaMPz/4Ptf1wOfHRf/m2F9q/FQya1xsf51P6NHq
7S7jYv/YcN/N/3q74riszkUPLtv9rkUxvnOOLPfozO/mR8y+Y1ZNat+sWsGe
lRrcvVPWYlw258KzNtXYe0Rcv8A3K15rW3N8ufHZMWvqV871Ghfl/I2dDp/0
8qhjxmUVuj//dMmmyVFufLRn6z+fX37ruOzzqRX2vKtvYV2oV80hK3q8Nyfi
a5q/eOakxnMjHjnip5NaZMWF9y9yU1ovbrQptmv++uyKL69+ePrwbHWn8+pf
tXFDlA9otu/a27qsj/iqbn82qXhyYV7tl9e+bDp365qI+fNNPz2x3r8mjsgG
fNTriTdmFt7BWnrTU7e3LLuyMA+w84V9z1y9PEvfu9jy9OZDz71jRCyv5md2
GFzu1xHR3hde8sd9K/cYnj016Z0NS7qMi+vILzadO/DvmyZHfEa5I57+8PYp
Ef/r8Xe//XB2Yd35+a8+uGD+g3MifvM/bXc+6u5vCvJOc96aucPGyHs3D3i4
+pjehXt8lvdfurTmlesi3mNF2/uf3ndtxM+cfXyPnucX5p0e/7Ps03Vqroz4
gotX3Htg42URD3zt03PbX7k0YvVzS59G8xZPHJCdUHPJL0M3F8Z1Ux4874Mz
u42L8/Pq07ur3v21yeMDsmxxjXcOP2VylJ9xVoc7D6o9JeIPutyzz9iHZkZ8
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
jP1+66Jonx8fPaFfi86FebEvqu1ySclOi3O9wn4C8XUM+wPgyP+bLtxtznWF
9HRcf8hlr+9d+P5ljz/486IHlsbyuuPoFfN3+WhpLK+TLzp56aW9lsb0det5
4UN1mi7NHfmf/P4O8+Dx/pMV7St/0mlpru6a/P4OcuVz9bDyZQcdtrRwP0qb
2X8eddnSyB/H9fvwtDbb0jPpj/x+D+FvDPtt+K3Xhf02MH/yrMWPlun76LKY
31O+XNLizlbLYn4H7NzgnrovF87pzt06ulLZDwrrOIeX7dd/ce9lMb9/7vDF
R1MeLtxL822Hn2q91alw39lJlWZcV/zSssgvIwcfe0/FD5bH/rvlgbd1nvXx
8tw+9fP7mdwXc0jYzwRb/7mtzYihY4uXx/I75bSGe12xdnluj7Dfib7+vFe3
nj13HrY85vecnc469teftvnxZ+X3O9FXn2p2Oujsh7PCO7btW7635swly2P5
vHXTExv3GL089+wT+f1PwsvvHeuO3e+SzYVxwo5t690+cGLhfbM/xvxywoN7
r8wtCfvF3E8jf3+NGvbUV4eujPnrdcQJ417ZcWXuvqb5/WL0ldeNVU449vkt
K2J5XdSmw8zr/y7ct/NRuWZX9qq5Mlcc9pMJ/2ST/H4yWP/d6oYvDrlh95WR
76/9sOl759YrpG/WpT88NLDbqpi+Sft0zh100apov8vObNHumGdX5RY+kd8/
5zy5+lunzYC/9rl0Va5D2D/ofhrxVV9R7rup2erCPcS56nutK16d22N5fn8g
feXxyJQyrd5+c3Xurf75/YHkyuOGA86695MvCu9tjW1dccqZm9fkRoT9js5X
9q+U398Iqz9nNN99/jGnrYv157s+d7xW9s510f4NLml2/7Gd1kX7d+vwVZf+
d6+L7eWEPZ+a+fw563K9D8/v33T+Uf268a0zb765x/oYX63rv+1+/o4bY3x9
9zj9/nurbYzxXb57tZ+fOWpjbH9VKvcr7lBmY27Vf/sccnXPkmzZH5+V3+f3
DVnFMlsnvlk0K7uz+LdZ68ttzK7r9/zlnT5dml163Te/15yxPru8woPtTz16
VDai0Ytjzx+xPvvg94pX7PbT8uyS/g0e/+aBddn1j15a677Oi7JLJoy+o0ad
ddmmQ9qc0/DCBdltj53b6beb1mW3T9ll12/ml2R/XPDopoM6rsuGf37bIdcc
Ny+77/hqj3127zY8/8RfjjupKKtf66/2nS5Yl9108dIRd1+8KitfY+Lsf69d
k+180DX3DByxOv7+vO8pB2/ssCw77+syF7QcvDqbuL72m/1ufz3r+ubeO9X5
aHVWY2nlSzbtvTZ7/K9adWrduyp74uLKz7Xptjqr1bjPY5XOXpWNqNmoYfkj
VmZ7HDr9htvvWZW9P2na/r0aL8veefXwU4efvyo7r+0jN//nqQG567+rP+PD
Jquyc7au+2jvq9ZlP55c5ZHX91uZlV/RsU23jWuyvSscefW9O6zMqo6Z9Gnz
vQq/o068sv/GG5dlN1WqM+6Dv1dkdW7s+Wf5s0uyFxv8M+r0LSuybY3rwlFD
5mZ7fLWu9d3b5G1+++WEJg+szx5odN5PR723PPt07R5vrzhuXVa+zpd3lO+7
PHuh5sw/WlZYmdXNXf9D2QnLs7126fvmRZ2XZS237v9B33nLs9fPu7PvpS8s
yi5s+3ybs4cszybtcXLR280XZCdc1Kr7ReuXZ/d0q/D0VftOzZ4t6Tb23cnL
swbdcl9OOLFnNqjWlX1v2hZ+86LRTf6qtjK76I+vL6j31LJs3sBm/51xxdJs
zJTDxp9737Js6NnH7v/95vlZwx/u7Pdiy212n/rGAXd+VJLdXa3H0OO7Lcsu
ev2+L8qePi+b/Nf9FRa8tyx7a92mm2/qWZSdV/nDe9b0WZYt+LnmLT8+Oivr
9PzmFXs+uSxbN6Nl9eblB2eVZi1u9GrvZVmLWVd0HrDHxmzxZ09fOeb1pdm6
1i+dc8CS5dkj+zdp8sUj29JRY/AbT23js3n3PXxoo7OXZnMarq638Z9FWftT
ZjT84M2l2Q5PlHulYsn87PLzvx7zzF5Ls+O/XvzBY6+XZIff323N0LuWZo0v
bHjZU7XmZVumffv2/X2WZmdUrDzg11eKsofue2nf999fmn04eOv0Ce1nZWdW
+abFxbcuzd75Zfxzj78wIdv1kb3vOnzg0mzLO6NOnLLgtezSew6+ftBpS7Mu
Lzzf5spJT+auKFe7fd+Pl2ZHb3zujYdWbsjG7XXYTe9+sCjr3bHKz23Hrs8a
VTzq35f8vShb2mzl5SWbCr+P7FTvrKfWz8+qrz7q6vO3tZsTt0zc+vywkuzR
YS8ctusP2/Aj9Yc+u2VW1vSIdyf8uPvi7J/FZ+143Ngp2e2Dy/zz8LOLss6D
x62b+s76rFOvrjucduSCbHal2i8/3nBVNnD1Dv167bAgO+TKtm0HHboy21L3
toeHnrAg+/CwPZ6tvW38M2jsYxPvvX5BdvU9VRq8t62cPj37qZsrtV2Q3djh
s/ZF29p7xWHrLru+/YLs/ca/7l7zt0XZX/fvs6VN0wXZmV/sWtyycuH3i7vv
q9/7nbnZrrXPabvfovnZS2Prd9pv36KsS4s/Rl+ycX72xfrXT+zefHw2ZXjN
105YPD/7eeSDl73ZZ2TWreKH75ervSB7cc3zd/d4b1C2+O8GO+5yxYJs5ddD
GzWa2SNrdvULJ7SouiC7ZOCWsU1O3pTt8/PZbY5tV5K916pX6389vj6rdFTT
n76tX5I9ds7ND1S5Y13WfsyXR6wYWpI91bXvrCG9VmfF5Q75uXOjkuyA3A2D
dn14Vdbr+vZzNg0uye7oOO3VdmOXZ91f2XfSWfeUZHVbHtf+rxeXZUvOnfDG
7oNKsjO+alZjhwFLswtr9d80o6Qku/6TCus2V1yclfvu/DEdFpZkxYsfvXbc
tnTW/LPn2WWHlGSvPXfR5CuuL/z2X9xj9IL952XXjO701Sufl2QN79ly8Yr2
U7MLR+5z//KBJdmiw189ZsxV47NB91700DOnlmRjn9rro8MuHpk1PuqDtZsf
LsnG3V5u+ILiT7Nz/rlkh57bcI3OL55acc3wXJ/zR+33wmMl2c13fT51zAvf
ZlsG/9iow49zs++3PLrql783ZI2fbDTiP7vOy4afWvx490brsjOnTzts75/m
ZrcsrDdszDZe3DD7rsHLVszNWh55+nErq67Mah9ZY+o7W+Zm9/w976LTHt/m
L/T49zGTt+HqL1/3+7Xb8v9MhXF9b97Wjnd5epdud48qyZp/dNj9n1Wdly3+
4KqhR02ZG397X/bltD0eLsrOP/7zpdMOnJf9ecUlXRrWmJC9ceyZr/Xclp7J
Ncuv31rcM3tu7YK9n9h5Xrbxtxntuv8/Ks07nurw/f9CKSJ7lShpaBghRDeR
SlNGGkSSskJWRqFSIZJVIXvvPcJ1bI51HI5xjMOxV0oKZfzeH3w+38fvr+tx
ud/jft/v6369ruf70J0GerxgtqBHK+RfFD/E0TAJyurNR/roWuEfk/RqitI4
7P4Qs+XN4VZgUJL7tFg+Aq+LHO59etAK1kMkmjWNYVgbCD5nuK8VMqLIt86P
DELDXvN9pu6tkCQ1+uew9QA8EnlsNSHdCo2SUg7N2L72asln2R/cCkzXt3Nv
d+mBJ01WFTw7WsHyhaqC0FIXPOv7uDK1vxXaSeFNDrod4MlJjFnb2wqDf7s/
GGH1Lc8/75xA3woeAUw/+Dz/L/ZfFLaklW+C4NcLl0rlsOeZrbexM6mDI0Xi
Q5IWrTAUfNdSXaQSTGYodt2PMB2MY7DUeVcMM2Z8s+ewfVI1cDqwbTAD7lLo
e0aZWiFCL4/LVC8Mqj6X7UU2rRCW/MYGDb9DimO5wbROrXD4S43gr9MDiMvR
48ou0Vag2ZFylzFgBsquHEg94dwE48deFAhjenBlX1fg8r0mGEtm9jStHwF5
PbvLbmlNcG3F9vuq2TAce9TPo27dBGcyXrqzcQ6BzM/h9zsvNQGbsE7kl6JB
aHP/K5nE3wTvzlmvCWkPAH2TZLd8RSPs+cH4ZsWrH4x1r3GIljaBTlpIuN+r
HqxupExrJhqhKfAsp6JoN1ZnOu6fLZvAQOqsknlRB3Qe2EdnVdMEx97w2+2U
bYdS7/DgwytN8OM1XsydtRU+qtdLe401wmJ8uBf97P9FY0bb55Wv6yCnASWe
hiaIpxRtF/1QAWfva9zlp2sCxgGiwX6TEpjNaUxbojTBqGpSg7daNqQm0L0/
uKMZ+LQUY7rngoHR+v7W3JVG8BRc5LK4Mw1dCbr+RWF1cJElPYdpYBJOHliW
SB2vhXN6ev4SAmPAEbvnYOo7rKN8HLOzrHoEhkJoFHWM66DPnO+LwLNh4DCO
DbtsXgfhZglp8uJDYLQvkVPOow605IvV0ocwfRGA6BfY+cmPp88P+GC8EabZ
Clhd/JT/V7qA+Snu2IOb8cx1IPZWelDLsge838bWdr2shcfUW1/FlLvhymqh
2TajOuBz0A5fxnRsadw5gBdfC4lFewJysX1mItaRSINdP9E8XVRt5B0qpVyz
pHevg8uJ5SfwE0VoxVaC+UF4LRhYfW1L8+xDB6Re/D7oVQcGE1asJsPfQdO7
a0WWsxJe6PJa7rOaAcEdZ79+camAhcuHGSZzJmBm78gLEdlKOGmkISh/dRyO
y2kz9pMr4NYjcf+dS6PAtSv8XwRUwE8es13VmL7U+Gru/UupAItz55qj7IZh
27a3KiMHKkFd6g8+XX4I8B48Bv42lTCjE3CQivla4YPAw84alXA3+5Ken3g3
jPQS4Mr2SnBS2X2bDtM5S9zpobThCkh06PJ/OlqOnFuLPpJSKuCVzFDDmWs1
6Hubk4eHSyW4vUg8mMbYiNBldw2fvxVQsk3uVcRNAgp58fKzjV8l1GaPfqwz
7kJmZt5LbwUroWw1wTS2n4zqA9ufXjSphL124aX84TPwxZbLeNf3b6D5ejVM
4cQ09Dvm5bBMFgNHrZXsvruYfwS3vyIxfoPOZrz7zhNDoH9TQViIuQQWWnJV
p7F+f1mUx/6EUDFwy3OKMA11AZfOsUtfTIqB9RRjR3RUAVrVnmpgCS+BqkNG
nAfpy9F+XE2jdlIJuHJ6FG99W4OuPBZq9+QsgU+9ZjNfnxOQkEis/MKuErij
WKXJrdqGcg6Q53dYfIPJVWPpgM8kxBY1Wb7NqwQYyvk/qN2YhqG2tUWLkCxY
Fqz5PjI2CUeuzinfKsgEvacue7peT0CbmQJdD18mfDjJNNh4chxYBwL+UBcz
4KPooNn1+VEoFfUXef40E/zFdu5eqxwBLZLb3JAR5svzamqDW4Zglt7zF0k2
Exg/94pEdw3CYiJepckwCzRpM+93Yf3DqN2K6xOZbPCzCr10Tboc/UgpY+Ro
x8b1ZcVf3a9FW+NlRU92ZwBBxV1+zBvbzIz72yuxvm+4Z/cBLz0C0o67vPP2
vmxoMs+iqTeZht5S+0TVsxHgyJJ1Igjzt4KVunzvsVB4RW/dy/p1AtLrRUor
oj+DRj7NVyOsPkeZnRR7HT9D80e8tTf7GGxJ5Nj6qT4UKka4Hx7F+nj73beP
8uUFQQvz87IC0SH4cijc01gyDCRSo4ee3xqAse0ztY3RQSA1nM3FdrEfnhCE
VypaMK5bEMA9GuyBz9tPzq0KhcG7owl3g+zKkVvTGa3bHqGg4bY9+OKRWpQl
8bHzWWYIKHMoMX13aEThsSddeBhC4ILCIc/KKgIKfLW3glXtE0B9PCQfaENJ
BS8d9TnC4H20cOIp2ik4x/ma2EjxQoonCyeIkRMg2RZLeBblh8q0Ob/fxnhj
RWBgz58xP8R06vlWd54x8M9LiZup8UI3LRoTRrHn01y+MY3WApBpPG+oiuQQ
/Pza8wh37R3a+zvy8VuMZ34PJdRUMgSiRxcnvIna/VA52jYzKvYB3TFnyGda
xnjt9qF/IlveovNej8Q9v5SjZmMt8Z5BX/Q60cay9mINqpaStzU/44kq55yD
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
rq47nurvjZe0pJ2kkopUmqLQeqQ9VdpTCWU0pIVEW6ISokmRKBEi89hc+17X
3q49Iw2ifvfnDK9v/rmvx3nO+axznnPO87yf94mCNG7+MJf2eiRXGcxNaY+E
LQ9sh0o51KGk7VVj4o5FwkfiD6qX7vUHQWXF7sTnGrVI8mTGFu6+SPhG/ENb
sX8InFxy5jSI1KCtbjppczMiQY/4i05ifxE8Hh6x3zq9ChWmzH+Q6xQFn4l/
6OiOXv8QeBP/0WzsP4KPxD/Ujv1DYLpiq55OVwWaqVn7NKkyAhSIP8kA+5NA
TcN9VHN4OWr8OWXVwOORcJ34kyZhfxI8c/LLHSIoRQuQgYG/dST0J/6lE9i/
BEPd4mSioBjdMNxZeUE/EgKIv2l0Qq+/Cc4Rf9Fwi15/EUgQ/w/9RcT/Q3/X
EX8SF/uT4DPx92Rgfw9MIP6ex9jfA7uJv6gZ+4vAlvh3yrB/B7w81p9pEk+F
7NS5Ud5XI0GF+If2Y/8QTCH+nZPYvwNSxB+UgP1BsI74czyxPwfEiP9H6lmv
/wc2EH+OpHivPwcOEX9OPPbnQCjx55zC/hzQJ/6cqyN6/TmQQvzjs7F/HCqJ
/zwJ+89hxKADyc1Pm1CK1TjFNcfioeCx1wGLGY1o3ZXxHj/i42ByMPaf7xDp
9Z+DD/GXh37t9ZfDPuJPf4T96fCe+Mt1NHv95fBNBfvTt2B/OtS8Mq/4eLkW
GTRzls+OiofkLom1S2fVoFUT/3ZkfI4HOwd5/UeCKvRm6XCvN8Xx0E785YOx
vxzsiT+9E/vTwY34y/9ifzlUnhzPH/e7ArmOP/HR3TcORhL/+lbsX4fdW/c6
9f9UjoJPKZWkRcXBF+JfB+xfh/sDag4FBJai5G5jwzfP4sCI+NttsL8drMyr
bumEF6Nu3yW1V6vioZb404OxPx3C0/RaEi09QOpnt+rEtHi48OX+uZqTgZBb
evi+zsx4qAlZuEQyOAgelPq1/E6PByXiX6/F/nW4Rvzrdti/DprEf05/LxH/
Of2dQfzjedg/DqLEPx6M/eOQQvzr4y73+tfhbyz2j+tg/zgYE394K/aHQynx
l0djfzncJf7wPOwPh2ziL5+2p9dfDl1KAbrLc5uRqeqFt5bbOPCOxD8tcPwT
tpN4ZySOdwKNh1rieCis6ZYPeNpVjx68eL9b+z4H9kSZbtx1sw7J638sjmpK
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
3x9SLzbxHmgqQKW9z1mL6Hlp62ZvcLp2thbtl5L7el+2nJUv7X3eclT9ze+L
zuxa5Dc9u6hZJZGV0/PdnmdJlPqVV6N7vdevQdbmUPthUzWi5729yM7dO3R6
DRpuHZukyK1kepdNu28n5glYO5W971uA7l84OvDul2p2/aF7n92VtK5m77vm
4hXPbmF7m892S8+8UMLao+eZteQ+vftVpgbR8wTfHLr1XWxBDVq7ZI9j81h/
pv8o+EPGplfWIP7lFO/w3GrE794VsaIrEGi598Tzx2b5R0Nl1yK3LPlqRM/f
s3wV5dPtXYX695hYTnxZg5b0nrNYxd6LyeH2MVE9AvY8ys3T88MUqtjzeFi+
0ZkuXsWeJ85l2wuOVxUaqHFW8cyDItYefZ5DgU8fDE+rQrN7/x+PnOfobpPU
q0Kyw5PN1u18ClT/DwSHGT8PBpXuubArQ4BciD1JwfaE9aM7ByquJa0RoI2i
4qWHymvZfbZbV3lYmlQxmbYbfy9of7VG3/NsVr+XbRZVyZ5HTe3RqqiESvY8
d9SeisToCxAdTw0/FJv1G4Tfvbf/8tCzXxsfd3ZWIno+n7hs2jq+pQAF934v
hOZ71vuN6ydg38/nZ5hW4BEB6uo9r88DKfhJ+fEnCtDxUjzfXMXzDXpkjedj
TTwfo0oy/6jj+QfdVs4fXxDHAfocxsp6yTH1meA/8lOCtnElyvaYnNS+sYqN
M3X9jiMP5lSzcUrfh92E28Wb8ivY+1A6tH/ny3MVaIh8eP5BkQqmz8aPwbiP
Kz0r0E5n07tnt5ey9un4VTI8k3HTvoKN3+OCTbpeEyqZ/dlwyiJXdUYlsz9G
dwUuThMrWf8Yukiv4+qvCkTPa6zINS8etKYSKa35+cDxSSy7XsIhzp5K0wR2
f7Q/CbJC0AfXCjRh+PIdFZof+54/QV8dDfnM9Cf26gehqnOdVvvcKhA9X3Tc
aL+zbnMrkeuh+weu978PtP6k7WdMXZSvw6U2r3qX1RXoFFlvFuD1JorgrrDP
rIkGnzzxLdobK5CUkc2LvbEp8Kykc+lt2Qr0U1I1xC2VB3W+W5+KLq9AHcGz
PBL0Gpjdonb1uNLiX/ujylH7PbAI29A3zlZF3yk6MqOa6dPv53Kn7dH+2+XM
PjmGTT8q7l3Ovue5mDtxt9XLWb2LEQPMn9aXIx837tBm+XLWPv19tFnz7KPX
5cz+d6SKbhu/rhzR8x839bcyfldRjix777cQqbm+fySxthx13p2ff/RaEmvn
Um95CgqJ0Bi58UQ5+55+yptldbzK0d5P31uGaYcyfTpeagVj3y4zFb5Pcp7l
WR9JJ4n4ctQ05/jb+OXe7Dno+En+0K/BQakcia85vO/yTVeg7fX7/586Wn76
a3OslLGwXAyv/w3x+h+d/d1Q/dA7Gu7oiC3QzStDQVLLZpovyAL7wy89BEVl
iG9kNlPGKge0W0ebj/xWhkJuPbN7wmtg70VysEKKTHDfPKmQueb60pkNzG7Q
7/nyu/GX99NL0Qbt01+rh9azcjovtm/ZwI97XYoSB627lXCyirWnffpVzk7V
vnmCfu+DaYU/Ch1L2ffelV5x6emcMnRXxE/JLrWy77sZRNwelyhg9Wl/qLNz
M9DcWsrGwfqzUWkiMX3juOZEqc/x/qXsu2jvCp/aE1SC9iorHy1XKWXt0/6Q
b7U75EJSKRv/l9dyF3drlyKeTmBE9KgCpk/7i6VtTFpQfAmzl0js9Mzpc8tY
f/H1m3PUWr4U0fNA+7voz3PtKWX9Y4XWxbYCiVK0bkDw9ETrj6x9Op71h3nc
/WVWigrX39JVVrWAlREXQ77PLUEvFbE/4hH2R6BHi4fPbHJ6B7ONi3ePX1SC
6oh/Igj7JxA9L1XGSqR5YWQpclraM9YxNxguKI+LWaVaglqJ/yIN+y8QPR/7
pYe773alMsTdU3n0ZEMM0PuL9yl3SeBEg+2BV+fjNpUgG+Lv2Iz9HUiF7M8n
4/052kH8H++x/wOZEv+HE/Z/oDzlmx1rsnmgEzJpw+J1JWiaVn+e5Oh8ODou
/fcDYfsD3uqeaXnYwL7Lg4DZIWFW9Uym/dOc511gmV2I9qVoFTQc61uHHamy
nWhcWse+M+2v95Zxas49LkKvrY1eZaBaVk7XC22RFvtL+hcjntqm08XqAtZe
1aLZ0ueE8wyVQ2KUB107VM5k2k+3Pn21rcO8GNmXqlQ76pWwcvoe3yoFGc9s
KGLX3T9MYeCu8cWIOz090GxNCfs/racie8k343UR6n6xu+7Q0AL2f9ofw1a+
HxS9pIjNT5MGvIu5LOwfdH5qvnbi4u7Fxay/vt0jXpzyoRiV9v+z1EEqmbVH
55+ZE7T03i8rYv03fXzAoW8Hi1n/HTZicNCjV0VsPfB8dKJz4wNh/5lYrX9h
wyfWHu3PY/5W7BlYXMTs4Uhvh+zRXsVIdc94fdWrT5g+tYeBrcdW3f5exOYz
iWAv5z/vitEJu13+p0odgOpT+yg2fdDuWe1FiJ5HLOIbPkf3VTGar+l+Um7A
R6Z/ubc9D8gd9ZwTkF/ExkdMgNfmMy7C+1+1wrnxeCjT34fvH2Y4mJqdDyhi
40Nd8tDwn97FqOD5qhFDpsQy/Xzizw3B/lz0nLdC3r1/MivfRPy7fxV7/bto
2n3s/1uD/X/C/oT9vSOwvxc1En+vCPb3oidTbR4pb86BnIpd4R9uFiKTbd9f
BpoVwnH8i6rrZbZ+X9PE+sU3p1PTZno1InrOMT2vm2N/wcPTqwBtrA+eOW1H
PdM3fvOBZ7aqjsl0vETtuaTheEdYv9/GzlT5WlbeZpuUdu5DLWufjh+NhPi5
e1YUMPseP//XjglXC5j99tWOq3lwMp/Z700ff07dGVyA7ia9eV+/vYK1T+35
RNFbyis4+WzeHOVp8qMftwB1n/7o7DCsbx53Kpg7cpB8Bbsfav/t/aenzBaO
Gzo+J6hvOmCYWIBSw6J1HFrKmD4dn80H37Stml7AxuHA9l8RiQ8K0Pitjo2x
G0uYPv2u82OjD94fUcDu4/buUeFThPdL148GU2rep/kVsPGZqDB+nfK3ArSw
t3/xUY7Njnv9ovLZeNWe13b2QWcBW08+5Pg1aHMKUELv/WUiafWfo/1K8tl6
5G2C55XjeQVsvA5IGrnt8vhCZCu7ycP2fhi7Lzp+E+K+PVl5Ix/t44Hz7Psf
+97fd9tX/mNC2PPR8eu/t+zdHPd8Nn5nj26KVhC2f/LJZZn6sc6s/uVz8Y3b
grxZfTqeY37rzzvwIJ+NZ8dB+iNOlRSgQu7c7ObLtkDr0/E8ecqWKDX9Aibv
67jp4LAtn43vI/1jx/lbF7DxfORC2eGxwnl6l6ric02nQHauNx2/fBuJOBvH
fJS46Pzog/3j2PUu3/d27lgQDZJiX5KPx+chbxK/G4jjd+jiggkeh/KSmP5S
Es/j4ngeWj9pcIbTinRWHkTie/o4voc6SXymBMdn0JT3e+ZseZfL7q/39Yxr
Qplmgm3HB+ahQolp3iK/Gtk+7YLa/f2fh/fJhb39sRFNlZzKX9aVg+oDPxyf
O6OeldP9pO4xQ48hl/PQ1TFT/WTk61j5ZxuxLTLTa5l8RfKc8cQXtayf0vE7
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
7Z9xuIdP0jwuk3f8FCz89DSL2UPDgr2axcL6l5d11K9Y/RxofWr/dkW6/xiz
hstkT51LB1OE/WO/zQdfu23+TJ/auze3rtiFS3CZbLj/z4xSgyzmP6lrnbJ3
4Tge+qWyYODkKaGsftHsvw3qaoFA3z+1fz/f3NCZeZbL5CLll/VVwutT/0rW
c38vTeH7TpPebiDyO5q1N4tzavnqNXFMdjo37/zvvwicujuX6H3IRDIaMT/s
G6Phu8aYsN+bs5BYEc7X2I7zNZBjkzPSlk1m9f1enFwZdiYB5kzt5+BTmYks
SD5H59vefA5kaH+o/8KQdKbvjP27MEq1n8NOYf+x+RAwR8Usi5VX4f4FXtO+
5WyT4yKRfeExu841s35nP2S1/a/8pr44IvHHVM4f1rGgJQOteT1X8qtRPdOv
2DSyYU5tHdOn/pjBfk9r4++no/GFD8QsxWqZPrVHfzVOnC+/nsrs0bf1M6aG
bcpE0lq2aT/vVTN9ur+7LHZeLuNuBgr9oqPeOqmKlY+6ez9DUqWaXZ+uvzxH
iXwZNioD2ZSLm374VMn03z9QUhcUCJj+jrzi3GWWfXExao/y85o8t2Wno6k5
as12F8tZ/baNys8OSVQwfboeuxr6Z/NY5XRmvybNse7QcchAFiKPg8bblrD6
1F455nmabFqbhlqu6qnu9yhi5dRefVhlsGOT8PrM72Xhmbt4eRqzT3OVBou2
qWeggjGzDy8Kz2P3Q+3TPMNNC8Z0pjH7dNml9NywSxnMHu18AW3WRulMHi4h
Uq5hlcrskECyyVPVKoON60+n7vbEfUhn8uL1898Hiqax66b4SiQWaGWw54hI
cb0e/CWdydkL5z8dszGN2TMfScWOhxKZzJ7dfb+3a5RMBpOH3Si9vgQymb/3
93Z30xFNacy+WTzTnVaQntG3nxQd4zMuJoPZq6Xf34j6bkxn8ugN+w5tV0/r
8w+tCdszeVQmWr1hSV7xpafsPqm9WiRSM7SzOI3JKgsPBco3pjP5W5RKjz0v
ldmzbhcvtwOfM5CcV6TGH6c7QNtTtCgbfFT/OZPnzZ+x//wxBfbeqH17PPaX
UXhOOpN3x376e9stlclDW+ef43xJY/vVetOe004Dhfe7yNgl/r4va5/aP5cX
ZxuCxNOZPK5TXdolN5XZw1CttCD3cZnoZNlLL5k7oay+jwLOV81Q6s1XRf13
OyQfaw2CLac/HJOSS0Ftmk8Lfh8LhnjDhQZ6JSmoiOS7quF8V2YfZ+aOKvs0
S/j8tQ3x1ybHsva/bt/iMGxgNBhnC6p/X0pBHvF13WVZ0TB1vdX2rNWpqJvk
x3Yn9ebHIm+SH7sT58ci0coRGdcLk1h78SYFM74fjwf6Pjfg/gLl201HKU5I
Qyvw/+GvXesqW6H9UBwz7Pzr+Wms/jppxdMvhftlWp/aT+n0vPIG4Xij603e
hx0WJ+cJ7fNU2aHh7lms/rmJcpfayrKZ7IjHJ+zwm3vy3YkMVB+n4bm2M4eV
D9vXJmZmy2fXG59l6jo/rJjJS/D4B93zMtOtAtKQGcmf88L5c2jxqRcj20vL
mb4Gtj+w+eokzbGuwveHtoU4r2picT7/lf9XaEDudx65qC7noBMBKzbyghpY
uUFI2i1Xn0Y2Ls03+HZslGtgMt1/y1ReFo+JSUKuqfbHuHp1rP5rtaLYw201
TP5zXvKewcNqJlP7fXQAjDshnYLi7MJvGQllWl62ouLzVLVqdr3CFYc1pNsq
WTldPyYN7nB/9YeDZJHJwJ/PKlg59cfpfy1/IW7JQX/eV+g5LOyLiw+MzuJq
OBQx+Qkv5432oL64KLW3djV6jhfGJrP97dph9xc6D+Iw+7treQtv+q9EZn/n
qbRdmz4pBYVYWdq/WZjL2qf21xlFBHmeT2b2d82XDNW28RzUfOt1U0Q7n12f
2t+rt8uGJzkkMfurfPLwvRUVHCRpeuKv/4cs1j61vydENncN/pTM7FnMnffL
9UM5aKZC29K5r58zfWqfSru5Oy26k5l8yfbso4PC++/OaVHdGSCUiT61L9NG
Oa59nMNB5xoEA0e0+rLyUxlvfLP6BTDZsPRwZtR4L9ALX6o4wSQBLRad1DDR
zxvyRRtUFkxIRH8I/4MY5n9g9gfsxihsF96PUkfS/WE1Iay9hGEHV/qlhzF5
244BcbVDg0FujtTiqksJyFxlJfCPhMDSl0vOH5ieiB4RPolEzCeBBnzBfBLX
MJ8Es0fh3/Jbdl/joMrUmU/GJsew9mucn8hx18Ux+dW40tlFcRFAv08H9h9A
h1G0oZd9EkqZlLzNRjuR6Ws/vOijJJLM5EWe7ZN3JMWx+tQevdcZ80SvKQmt
iT2w+rRlKtOX/DbDe75+OpNL9TWXRr3nsPrUHi0rUghaEprI7FG8+SjVFEcO
mjZB3P5cXharnxrhJL8wP4PVp+u99bnuJ49dS0TNuD/CjQHhGp7+HKRoJm17
2zKb1a/D/Ve4/18rV3kgGdnj/g+xNc8+SgjHR+L7zi/crBY2L69acOBF+s5m
Ji86fnhsz/wWNo9Tf9/m862DeRExKHfrgOiTzvVMn/rzninmhfcExiPZKVkv
y2fUsfKMnrY7d4bVs/Yoni7sr4Z+obTw+3astvnJqWH65nf620b71DJ9ur4s
GuMvn3U6Hh17ZXPMwrqa6Sftv2r480gN0+er7HEvXNuHmzN4fHqRplw1K/8z
M9SrfriAld+LbEp/kdmHi6Lrx8zA1BbThTFIyoGTlWNVzsrpenHEGMWqiNgY
5CG943KiUikrp+tDrVdj8jOCY5h/7pKoVlTbReH1ft7UvKpWxPSp/Qr6/Mcs
c0sMs18rnPrf7UmIQxMuXnDYviSf6VP7FXx85ifzU3Ho6I7M3IUol5W/UHO8
paaVw2SxRaLnv8zsi+NR+7aqvEHumn0ck/s5JeWOSItm9sO5vPLkvMR4tCfl
TdycvI/A2jNWH3ykfwCTqT0Yx3HsOXQ9Hq0sLn5nbxnKyp2V0hLetIczeem5
fcsVlYOA3g/dn1lHLDPbsDmOyTLlqZPECmPY+I8ZrWu97Gcckstdsnj4+xjW
nt8Aoz2/G2OZHLc0r2fmyUjWPh3/P0fe7eTfi0WteFyBcbBUrp1vHJKYm1z1
kJ/I6o/W9g3zUk5mctg+337rrONZe9QeBC848fv1/Ri2Pql7LvcXCd8X1+6v
popvGqv/pKlsVK09h9Wn9kBxQ0OohlgMKuhStXQT4TJ9Ot7fmGlLPXsai9Id
RS+tXZnNyun6ZN0zlwIl4Xgzv/bYonFOLitXx/MRuEq591hKxaF3yuKd3w63
sHV37vQD8R8lm5hf9ePIKwOPNjaxcll5GcfblxuZTOOBb88ts9FYFsHWAxFG
SlNsxaLQ72Wvu+cpVrH2RN7cKLj5o4rVp/6nnocqN7r/hqOZqf2ang3pw31G
R78xXJUtYPrhjz3edxVUsPKrOyeMaH7Rh3uj4y/cqWFFz7svaIad3cPp7n24
Jzr+DroELViTFYo+TO5WkG0tYuV0vMkPGyS3YXAYG289VUNV6lPCkMqu/ba2
6wqY/itdzdH7Zxey+6PrCZ/Ro1vTj4Shs7Hfqu6IfQGqn2vxaYLGojAmR3k9
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
eqFqjw2W0gauOvzznbw/xqvCEZ5oOo3tk8N/v2eydk5jnSFp28VenbbZWJSj
KujfVaf+XQwMiPkif+AGxlmvXz1h6xscN6r3i8HF7jB0edpyxddZ+Lt8XNjO
9ifQ8/RsQcbFLByRqLP5YOYz6Ddq2lDVedmoM9r6ufR2V/BtS/k4ITcTFy9s
2doW7gdtzi9eyRRm4cYGA7MZdwIhYHGq1mFH/nzyL1r8yvU+PHVtX7cgJh0N
daqKvn92g6k3Mz1gTwbmqs1eskTnHnztkRk/eHgmxo2OWFsbngxOMfuuD7+W
hZnvF3pMfpICT2+/q9Uz53/+Bk+T8rIkGP9l87PBQZn4w0PMJCkmDeRMSq+r
8+e/jbrEmfhtSRD8u/zp3LvpeGe68b3r8smQ1DED++7OwHsndg2dVJgB4zau
kKs+noWj18Wv13/3Bp4oPNs7nH+8X0MztH7mpcN550CDiCOZ6HZ+6iu5Gdlw
jra4yXrOoS1N6TCXtnjx0R/7wR8yoFViWL82/nqllrTBzOFYPvRLLo114a8P
aaw/+TT1JyPeKxwY05ENG4tE6zRC0jFm4/OdBZALv2Xm67m5ZWCEJ296TAQP
Nj3/NGLJvSzk5c9x8ZEphKbx+VU7krLwFutvnkv9zTjnpKmv1BYevDRZ2aOh
moGXT796EvqhEER8Ryd1q2RgL7XsLctD3qPstaGLZ9ikY8KQAyHJ09+jxUC3
+/vTknDcrnMBpgveYcvbh6m6pWk486uCyvZ177AqpNLxoloq9sgkNq840I6G
UiNkR2qlo8n8r3en9bTh8ue/skp7JeP4H+WLz3e34vR1WoE7ctIw4FG2XSF/
Pb/ff/7DxD8p6M70Dhmkd8DWKwGL65+24KNVRqWHXNJw+gRjLxVswU0w8VO2
XioWMf1D12eB/gGP3trsfHxTM/ZTSNUf656GcRv/6nafbcb4oFIphfmpuJTp
IX4vF+ghcDbTQ/iRHgJHRUxQ7SvRhD8vvxrSimm4JPWM14ayRvzSrBqyc00y
Bq57rrPhTQP6Bjyxdm5Jw9nrs042uDXg34INUmPvJuPT1912W6zqMVHhjdvY
r2lo/MRZXfpYPd43UKu6J5WMInongx7p16OL3yslm/hkPJ+iZXhqWh1ai4aM
H1KQhtsO+kUcnViH249LpGWNTMaoJb+LRUXrME3S96tHWDK2mpWlRl+uxpfu
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
0vYm9LpfZFc8KA6Gs3ygAuUDYRjLF8pSvhBKczNtxBUa8an+oikTB8eDBeMX
fiB+IVSw/GMF5R/hBss/dlH+EexZPvEI5ROhgfENe7sL+IYwg+UfD1H+EXqU
KL+YRflFcGD5xdGfBPlFqGH8wyvEP4Qolp98R/lJmMryjd2Ub4QUlm90oXwj
7GZ8xDUpAj4i3GL5yseUrwRtln882SPIP8ICln98T/lH+JYXvuzt0UpUmTn6
tMLEWChnPMVy4inCVJbP/En5TAieP6jkmUcUuOt1Zkk8iocVjK94j/iKkMD4
ihIvBXxF+NJAfMWlxFeEpSx/KNzuYvlD4bYyjPKFSPlCsGX5RClnQT4RfKaZ
jJDrmwjuCWnZW3zj4QvjNT4gXiNIMF5jLvEaYRnjNaoTrxF+yFI+VJvyobCM
5UPfUD4U8lk+VXKOIJ8Ke1k+dRvlU+GnJOUT9SifCCNYPvE65ROhluUPz1L+
EF6x/GI85RfhwAjb2H4OaRB+cGLRlRHxoMP4kc+JHwlXGD9ySqqAHwm+jB95
gPiR4MXyo78oPwruLD/aRflRiGT51SETBflV+Mbyq+sovwqLWb5Rk/KN8Jzl
G4fHC/KNsIrlGxfbCPKNkMr4lH2/C/iUsIDxKTuITwm1jE+pSnxKWM3yoXqU
D4WLLH96jfKnkMXypyWUP4XnLB95hvKR4MnykacoHwmPWT5SOVmQj4TbVYff
PbbKhwtTvdS/S8YDMB5mOfEwYRXjYZ4gHiYAy492U34UnFj+VJfyp2DC8pdj
sgT5S7Bj+ctuyl+CBct3JlC+Ew6wfOgSyofC1uzf58yky2HCk0xv1aVxEHni
9LPu2jIYICN+7c1YhJ49xT95DyphzMWHq1LTY6GN1UdVBwnqo2BpIHVskuk7
nD5Q87Hr+SRoWkD11BxHQT0VlrL66b13gvopLGL102iqn8LvNfKiHWHtOH5C
88WpC5LBk/F1FYYI+LpgzOqpW6ieCoomGyaor2vDxWpbBtVUJMGgMVR/fU71
V9h1QMlJ/GcLbpF89PsJJoEUq78qU/0VrrP6q6qooP4KH0YflkwNbcbKm5vG
/6pNglpWf3Wl+isMZfXXEqq/gsny5bke5k34u5+DVjN/3o5jPN++ywU8XzjO
6rGzqR4L+awea0/1WBDWVyVbBPVVWD23KzNQvRE7bUfvdDJLBknGA+4gHjCM
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
xI3/hLvO3HO7gLv+nnVOO3lMqQhna6+ZsU4+jnt/4fVXq2JedFi8mBunKtzM
O7uliLu+jIYoDdpx5t+4q9/F9VIWBdz1liLjfUV3ahHeqYwbsOtTMPf+wuvt
6peyoPyhxdzYd2uxz8ttRdz15XPO3iL0+r/x2dSZL1LuFHD3E9HP5eN6Sgtx
pFje6rLop9z3FN5fIuYG3r1UVoQ3om/c7pd+ltsPgr+3Q9U0+20ay/6Nl3r0
H3eTP3+F16tt+RWf2buK0LIzf+urxc+44xfuzyqqVOqzuwDHOOCbC1qe3O8v
vL4jPxheG9G/CL9WVbfrO10H4d/P6S/4PFDquBJWPruYG1ur+d/ZvLMIvd4q
WDyY7IDVgri1kDs+c81jtqLXC7nrX/vN4tLNkUXYZ01+RLnlJe74hPv908V0
bW8UYN3KOSY8Z1sQHp/w+l6/9m/3Vbsibjzkc/WzrIv/1o9vF46dE/Eu5NaP
VnWpja0XCzC0XapzTfUL7v3ggOySy2cSwT/S93OoQiHqs36WydTPgt9ZP8sq
6mdBxT41Cgs90uCC58QSnlwhOrL+lpnU34LH6+o6H8/IhtPK8U/S1xWihCL1
u6RSvwsOWEv9LmOo3wU9TZoL7s+qgIwzPNdljvz1wYjq0VdAUI/G/mODndp2
dKKj4HsWoNilVV29c9u48af5Z9WOaLVw4+C+ixqO+rfgfMF9Jh+f/Leq27dg
+pESn29mPPSZdViqZm0D9/oP1hJ2A5sauNd7/ne5uDdgVqL1pd1PeFyc/uqY
UrX8UB4Xx9+PcXn49COPu7/O4V088Hguj4tz9i5WbXkt8W99KJsmJWqQyMNn
eqVy7jsqcKf/fw9YPO6+cy1ffuemmTzuPjD38aKU4SYF3HphVTgxfvZrHj54
GRF/MKuU+3vL9asH2ScUcWPx/6bdpnx8t95uxs0v+Vx8WhPy2CipiMeNFwZk
x6duyEeJ1ZbntizP4/5OeP1Hncy1lRLlceO+Gw6+OODGQwh6Xp82MJj7POH1
r7r6S9+qvQXc+Gb2595eWTxs2rR7z5R10dzvK7w/Zyg5TdlymceNwzs350bv
+rf/84L0MtNP+dz64dTtJNL/O48b//U7UDJ9fx43vrY020AC8nGE1ge/ytOR
3PcRrjceVl7Nb5byUFox/XKP9FXu+K29Xvksb3rGzQfh+hMZEdvXLeXfeL7k
PhXjyQXc9az39pdDytx/4wAtjZSgqgIc5ephaT4hkPu+wniizW+95Z79PG58
1tP3wN3CfG492lOQJ7EqlYcmdm9rJvd9xh2fcH+Dg8NCfbF8bn2aefXCw2Xz
eKjivFZTZIsbCF//GgzHPH5uDcLvI1yfVLQT+v1t+Te+8+fyzb4LCrj1wu+z
7M/fs/6NNw2+nvSiqQA7vs9xk/h0mfs+wu97T/eMnaozjxu7vFv986/xv/1z
n/z0H/M9n1vPihw6418087Cz5Q2v57Q1d7zC/du7Dt/6LpmPhm3J5gXBNtz5
C5fsOHpW0w6E4/G/ir95TnID4fEIj1fLoqnp73keNy4d7Dr+Cv/3Fa5/5TWZ
u5465mHU063JBd3PufcTxk/BV4xvFyvzMPNIbXO1aDR3fEb14+RtZ8dz4x6a
nxA2pmHOxUcF3Li/TeQ2n1c8bj1ODrqz6ov8v/GDPd8HVfzXN8vireLxj+W3
LC3A7g1Kji9qw7j3F+4fkfiwXDo3D8d9GPVEMiGUO95Zm3smH7GO5MbXxAO8
StoSYab8AKcnmfkoJkn97Buonx1vsH72YdTPjrerp40d4JgG/YNrVc9b5eNG
1t+eR/3taMf623tTfzs2Y12/l23p3O+tKdhkwCqHM8XNB/PRN+9XgVVmNrf/
UUh1eIs+jxub0veCfNk4zbW2/PnQe2nyYrdieKZh/jCVf72HfvQcnhRdDCk6
u8Y0T8vHh6x//Sz1r2M+61//GyXoX0eLlOZp97TK4OTkue07j+Zj7hKTtIYT
ZbC+0v6CNf/6SGL97RbU346KrH/yEvVPouTkxW/TV9fBVJHRhtM6+dffht63
F+m0cOuimGXigzyPFhwviJuyufvHpUV71XfZ5WCf/Ep10YIm7vVDBOehDoNk
xgw6m5GNd40Df5n0rkMz/t3VbFAuF08u8FpQJauZx91PRE8sMJk0MIe7f8wr
UnK5WZCDE37NmTfxcRn398L7R2v918oxUbm4e8T72DT/Cm7/zpUVPd7HS7ix
8LlZM22nzCnI5u4f3w29V+ZNz+PG6moR63+/ykR344Q7KZ0lmCk4rixcY8eL
vSxXxL1fU2nV0dEvirnfQ3h/KpsyvDq4OJuLy4yyLzZF6eWh8q356lE/irj3
E84D3ajf2o+/ZqPowY0ejVcKufcTxiEDQ+QKF87J4cYWas9Mx5/L4tZlr+MR
t87w3//u25CR+vE87viE+9/GjFNatz0Td/QbMeeefS53foSv86ovMV9z8t94
xswDhV2D/r3OIqROPXxmHvauUT/yQDyXe51w/+Xzg33nVmZy+b0wh85px/rk
YMfh4+8eNKVx30eYz3OY0/huQf6/ccuJoTXfu3O4fN7Dycs+7ByWy43zhvYL
Xb04Dz9KR/RX3p3Kfb4w3jexGLXGMD6Hux9vOpZcIx+ag2oxuyebHQnnjlN4
/70x4cvyi6PzubG4zMVDEdJ56HdkXOj78b7c64X3oxi5fLXl23O5sWX4ntn+
x/7tV/ZO++2r9e9+7Fy1/YWRXi42xs88/XxDKHe8wvuthevY12EN2dzYYcBr
mdCuHHz99n3T+733udcL769/DhvcXv8wjxu385zW6trk4vDqmgl/x1hwxyu8
v8j7FQ2aYpnLjYMS5W4W8/9eeL/MH9PdS/tvLo5dOnmfs6E393nC/QGRcX62
mZl4tnaK9YrUp9x8Fd5fn5v4mk9yyMFTbs4eL25cA+Hfr09cquno+YgbC++n
Cn9FcnqfyOPG3y26H3atz+fG9cUD9DRX5HL3J++REcsWTszjxlsttnxyUMzH
828+Oy1ddoebT8Lvl+Nm4BttnMONTxd9GXxrZTZ3/zyd3z779Xf+emF9K2lW
7SHu+wr319xp/vzXMRO9H7Zs8hu8H4Tft2dgyuiOw6Eg/H2F96vJy1ZsDt6X
h0EqqzPLJj4B4fEIj7fm1vdHHW053Lj8Uddo12tZ3Lh4X+2IoKhs7v4ruczS
/LBXJk6/tuJmpOFT7vMLtL8/tJrm8+94mH76k7tAP435TG9dQXprPMP01rNJ
b4071JJWBJZFgcXOZR7okoUzNz4SyTaKgbq3IRfWGWbjI6YHdyU9ON5nevBR
pAfHYE+bTxd9EmGWnPRyU5lsrGd67WOk10afJU4Kop/fcL+P8P5XYxLUZTU8
Fy2HFUhKRyZxv89XwXNfMpgvnPXoWVAON142XLr8QUAW9l1X+nVmVjL3fc+e
+HDZ8VAqN9Y44Kdn9TCX+7zbdB5BrV1zTPSofOzqy7sd3prOfZ7weI6WrrbO
NMvCcm/3iMtFGdz73RvdfVDCL5Mb6/pttwyZVMC9v8iXI26n9/K49xPer+XS
t25wrchCI6YPMyF9GOozfdgbb4E+DB+Yt92MONfJ1aXqcgyfnPNt5cYiit7z
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
8amDU3jdUvmijPnCqHzZ01Fw0OxLGZUnkzB/GApi+MNIeyJPnmocqX0RUYaO
v73Pu35vFS0n8mQp5g9DY/jCKL6H+cTo+udeqzfe2KsMLYld1zStI4r2N8v3
//EV/YtjxXxGyPQ75hNzxnKKxumrYj4xKi8Y/jBk9h/mF0vAfFdUfoRXh37b
8LIMhbVYPnytGUifT+TFB8xnRPEDzHdEz6NZmF+Myg9+zCeGHtdjvjHyPCJP
NtkK2VSKjI5X5nxU+Dh3+jyV6Zj/iMwfyj+C+Y/Q+0TMf0TKyXpTwHxHaAwf
ElKPxnxm5PuQ82UE5jNDY/jMqPzw1l06FPWxDG3UlHWq3P0CkfGN4TeieDXm
P6LrWQ/zmaGaUMxnRtqT8h+Y/4ye1yJLDJWOfC9DRYZWxweHP9PnjeEzQmP4
jqh8qMf8aFQ+OGB+NCTN8KON7e8i5kOj56k6zHdGMcOPhu4w/Gjk99v1cP8j
9fOdMGGmh9XdE1Vo/DrMx9eG5zWSiVu18z+bNtg6VT4lx6IKDfNckXzwuw32
aT2e9YKPhT45WKyd9rUVJAUikuR+VqP5BxY+nBnRAh8edtn+XMpCOXyyzrY6
TRDTzBXwhqsKuXqlh4haNsM+7hVtjVtYiPBLzOPXTos8UYkGJdpWbL7Dhv+w
HRcRPswzmA+TyoOMqT8Ewy5XopUKBeNNvetofSIPpDFfJpUHn6S0q2u0K9HJ
6Vyvt9WxaH0iH/Zg/ky63r9hvkyKRTCfJt3vozBfJhrDp0n1Uw3Ml0mxLubT
RKsbH+3++iqGPt+hBvMLku9N5MEczC+I5MIwn+YmLKeoPGD4NKk86MF8mRT7
YH5NFMPC/JrG+JyEznmGnK5tC6LPnzGA+QbJ88fwDVJ5EIP5Nf/FZWP+TIq9
MN8mMtuJ+TbJ88bwZ6Ix/JhoDJ8m0vyF+TRJe7J+Zx0J8tQOqKTrYwrmH6Tr
g+HXRGuGMb8meb8x/JnI+brg9wuJ7aA1R0xyzx8W+taq5PLLqR2mXqzYd+5e
Dbo05edvSbkO8Oc96JJdV4tCZhQfPb+hHeTmWQqMe1iLbBd/6av+0wrWix5r
O4XVoutGj4z4R/c/AdvwXekptaiwTfVww/FmOHV2kfq8uFoU9XcfbwSe6fVT
i3ax0Lb6yz0N05qgd9OBxyXva+l5XDD2k0vTPhYKm9Qce/NTI9wym78xy64W
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
CJ4/1h+XX1KT9A9zQXBe9c3tluKuyjyCf/uvsv5rwSXP58PEj7p+k3kE9xb3
7JhjyCXPJzRL+Oh0zhgOCRB2GFbgEj3yA7xSyZfTeQRv+tK/bbwul8wv8Yk6
n/P47RfgV0qViUHTuSA4F37rhcrZ6xEP1hjdi0v83gkCnW1jxrWWiAldIKx3
JEySx4GvYVGhcZ87SHnOUUV0PK8DStJPj9Pq55Dn29gZ5mKcPIZzIqK58vVN
ZPxmtD6wvXKNQ/C7/VVGrCdNZPwclSwDR6I4BP82SU0fbGsi47fxqOtQEf89
FODqAeOK7B9NZPyy6iU/nQ3gEJx99WINs6yJzKfzQYb3V7A4BLdLi8aXzOaQ
+W7xq/dYQd4Yru/P2v2Wf3/B/BnMG3Gz6W4kWEfDd6HqCTbpT/PS3wkbjBsJ
XnctZ+G6SWzSH/n11gkpjxoJdvAXEmMcZpP+lM9VkrR800jwD8uuNY+c2KQ/
Quk/zO57NRKsa3ZIp8yITfrz11Hm+/zGRoI9rN18DIPZ5PmHeLYFJpU2Euxw
M7TAa89Y++O0JQ7X0uoJXhU342v3kzrS3hy6olulagPBEZOE0seN1JH2nttR
csFRr4HgOWF2wrfk60l7V9g4XZfhf7cF2Gu1k/Oe0Toyv9d1JXzsz68nOHC2
bLlYXB0sGnpefcqkm7ynHrcaturt6yJYWZJ+lGHWDVJns2p9f9aS9i93tf7E
cBnDC8o6uSa7a0j7UnrPr8ruGsNepYVy7SO1BEd3eqSqcKtJe/IG5MvsImsJ
vqH0MvbEm7Fy7fakrtwnNWT8h0Q3GS1TqyX4XNluA40VNWPzgcdljQurInih
kHT3Wz8W+f3bdo7Gsk1VBC8en5q/qb+S4G9XfVc3N7PIeB7iBbya3V1F8PEr
L2s48mPlsZH3TTVGWaS94fEuNKP8KoKrS1MMJaaPlevOuJi/v4NF2v/pZES0
6fkqgnuTM/du31lN8I+0vNVWMSxgvsttsb/dQ/pV0tfI1HjTTbCbvdtRpZAe
KPa1fPTjcSXottR+TmzpJOXS9+TuzvjVQfDb3TdNp/7shOsKW+N3ho71P0da
mH5cZAzHZ936b8NsJunvMs1Pwr56lQSHJVQP/33MIHjY18J6xWkm6a+wjhPX
zrCSYNic8HhxMYNg28lOrgM3mKS/SHzKnCnKlQR/iUBXprHH8ODPrEQVYBDs
+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
GhEvZmqocmBq9fQO8MoBh4pFcU788cr6EX5kSXIOrFy9Wvs1fzzL+oOnmUwp
gOK73jGv5jRBRVLsuZU1qcAOZaxMVOdA8EolZ5P2ZOB8GL11SoYDZxuTlvoJ
J4BLX53q4TNNZH444/0taB/uf57HS0Aaa06zSzQ54Cg1USU+8D06z16lc1ac
A43a92zljThwO/3vrKllDfDrjdT+VxsbYfha8J11TDasP2f9bCWvETqvfQut
CWDDhI6Wt1WZNWAU5PlndWkDjM+xvXzpaRW8cH6RYKLBhurnpi1PXtXAwrbI
9GmB9bD1XN9wCKsa9DZvm5mYWQ/c4qTygy9YUEQvK/xlwIb9AwGneOsrYVya
m7KMFRtiz964tU+vEr6JxNLbLdmgPEtdJvc+C/KKbbc9mtEAfX+eWa3/w4A7
Hus/ajqyYQdj+5FNLQxI6dyzYB8fL/XefszrER089DlySXZsaC52bhuIpQNT
10MfnWZDZmjMwtWzmCCuWexYrNsApR6p8PoIDR4cHo1bcogNToFJT+a+LIOK
x8XZ8jps2F1a6b3yNA02oqbWG5oNwFFYfyWrqATO/gFfTls9mGgdaawdKAbU
NefEhap60PA9ePTBnAJQtf+RZV/DhuXTGAcvROeB87TrD1XfsEExxORd34Mc
iGNXcO5ZsyFRUatoMDoH4OkeoVFbNuwbOqS/5V4cnB1/01WIzgb1jQt3H656
Cd/fTg87eZcNPpT/bAX2n4FLoFeJfUQXRKq31mvP49vt6stV9T26QO/xr3P0
B7WgPFprJ3O7BrwjXmrq2dTBifq50Z8ZVWD+xjWLlV4HhzRKnyUf4a/nVzd3
bNCvBSXb6+pt4jVw9uCP5foHa4GxXlQ1JI4Fc0crTKTa6yDw/rDiM0sWnNF6
Zvmtrw6WPZ9jrTfMBLcFEtI/JevhEleew7xcCbMDDk1/JVoPoZ+L7c4jJtw7
cjn2hWw9tMvfDVsVwQCXTHXG05n1UPi85+PZvXTQ0z8QK8EvrxfdrnnsOx2U
Hzq4fOWXJ0a5bla/y4R924uV9jbUQOQG66GTDkzYOPBMY+2PWmh9qy8reYIB
Xsc9t/M6a+BuyKllRx7RQE1ByHvn5HoYUMgM9pblr++NUtkP+e0xudjjuD6v
DNaU28xQ7qyDT7GfVo0eLYfSgnbXnV/qYF3GStbDcyUw8GnXIbncOtDyaDd/
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
PpwtzLyRwQPn1efKbh+up+Nn7TZHpfOWTTkP9A8FLDm+gQf2JbwVTl08+P7n
/3+1oGWfKNQwqg60n6iM36VcB7JT+0Xl7vEgeKD/6yqvOvp87PfeaGR+Q9yK
/753Kfks+8yj47HkWx9T4RrYVmU7zN+WBy+CXsyo31YFZouj5UJTeSA/eKYw
zqGCji/w/9eVXgEevT8fD3zjUXugll+tb3yCB4dIPmMrzmdQf/F6xA6TlU48
OE/yE+dxfoL6i9IfCRKC/PFwj8zeV3K6iI7vNsk/OOL8AyxhxlEAcoIhr6o8
eVD4b/4ApJn1cQ4MDokPyrjGo9/v9D7Xp0GtPHAy+7pXZGIq7BbboDqO//5V
/80fQGe+cY2xZjLtn/0+DZZ5Wkk38eAJyRfU4XwBuDDr03D4fKlnobs1D1pz
Hm0+fc4V+uSiFl0u4UHp6NTKq1H3aXvBiUvlje960/e5l7nfEwoHeUt5n3jU
PrzKbcxX2c+DnXeZcrQvsThlC3/+s+vnTbXTNiWE8X/fOoUIzxA/xLYfY5au
OXvFGzQt2GHJmg88+v2vkPi4t/gJD5Q9vLSrVr+l9TedNLw451AMYsfDfv8q
En1hh3J5YMKfPUkf20Dz9a8bvVNqYWLGzYE5su3w/JnhenGJGjjhXTr6YXcb
+Iz9f+FZA6I8X4U/dq1Ud1WK73UNrrZCpfYw4eRLtXD89u8l+V9aofbHas7U
LTXUfnASnn37lsSPU0/8KVj1sZW299NDvHbqhr86rllz/x94C5Tn7nNQeVAL
q04sebghsgUWP3vqlGlUAws4S15mVLTQec3aE02r+9sNJWuoPXknJXFjVEkN
zLvjcvaxYwvtz2H38bSUlibaH2tPln4zFft5vBZa3/scGn68GVRn797063QN
RN9IKV7p3Ez7Y+3JzxvKMk1yNdSe8CSCjkzKrgHDuZ93Fqxppv2x9uSehdnk
75Nr4dArS5GRok2Q1dT6Jkm3htqTw78FxG1H1sDD4+aLuooa6f0lcgpqj+vr
YeRzydVbVtX+XUeeND6i6FgLQvsnv9gU0gDJM8Z0D1tUQ9fNVb+mm3C4/Pdd
82Ppp60NtD2LpYtcys/XwVd3kbGu32ugb5RW7MUxdfR9sPbkvVyslxF/vKyd
Mfi0YVTB3ho4oLTzZZ9mHWz/f7llUA3Cz/Zc1RKupX9jKgdzpH5XgVCOSemV
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
q7IMfmdzvG/IF8KXMzd4cb/58+lfPBK8I3ikfoxHouvDCVxLxyr+9dAhHWoB
nZmwrsFU0OZ2OdgTfNF0jC+i9kxay1XU05A/v28Iua7ZkEnHbUvwQ3+OM/gh
4BH8UD7GD9H14uwfpyOulZfBBPuG/XdcU+nzs/kqabVWwd1DK+BA/9lyHU1P
xLbP2jNvubou49UVUDuubF9EjgN9r+x6UOpck22nXxn0DhfZ2KN4hI7vnt84
r75X5xE7vyaWzxubmRpO2/f9oHjvy+8Aei4Iax/j/+x6tbmHb0++WOhdN42m
5RHYPqO1i3gu+25WwOVJgxIbRibQ8q3YnqOqNfubxyr9re93YdoE59H871tQ
T3Lk1Dg6nm/4+ZFk7rV9rZXl1J6a/hnoyvQph0dMXJGHOot/nSkK59sDwRPn
Ng79BCqOjuUGB0ohrZ/54GHssBh3jk4pWL9r1e6+3QH7mX2JYliq/n1Zu0Yb
OHy89lRqWunf/O+wzKb7N0vB23pWwcp97RBv2BM+IrAErHZdH+Vj0U79LLt+
dby+Z7WGJn9eMs/ZDu2iw2prLpfC8blzPi3e3A5hjPsvgXSfg+4B8q2w65zK
xV3XSmGF8YsRO/nx6WqBCM2QnSU0v6b1eebeFJNi8PpZfj85s5WOl7XXRWrL
lSWPllL7PMW5SFaZXx5kMe2W9NEW2t9R0yuDJ7Y3QUX+8iObR5WCcvQv4d3T
mum5E6y91tHa7FwhXAbDnNqC/j+Hgy1n7d/C2U6J8stLQUlh8PiSC82Qe2j/
lAWRJXByq7zAzpfN9H2w9rxoZr+b6tUSas+H6t/J2bWpFFwVmnZL6zfT8bnb
e/jcUGiE/sYTCWv2l4LguxECkq8bIFt9qY3B8ZK/+0CnP3bEc0qh2PFoQKxA
E30f7Pp1iHWAIHd+Ka2vZtOsjbqLQdlsb/BUkwban9lz3V0Hj9ZBf5LPpjND
S0E4Muf0IbF6+rzsenXe5K+to16Vgtzd6t/OgnW0nLWPev2fpK/y58vdrxJ6
q+zr4dJjtfXn40vgsKhu9Yuyevo+WHv+xKgo2tG9hK5ng5TmcrvnlMJzKbli
uUv1dHw6mV99bvLL2eeLvbnww/p5PJC1WKnSp8If7+rq6tW2tZAc8sbplV4J
HGqXP3jgf110Mj7W3v6453JT1qgUvFIcYiQKq+HPOB3b1fz3HzhvkpxtXxWM
uFL+OdikBO7EtQwRO1RN72ft89Q5kx4stPnb3vqXnPym0SXAScp0855dCaWf
z1ndWVEKh7kTFl7ZWAHHh38QO3qoBK449nVJ6lfQ9tg47rraxIzTh0uh0Hmm
w5mL1fT9sP01Dku+JbeqhNZf1uOhoaFUQuv5XY1aHX6khL4Xy2E3zR8+LgVf
gkceh/HI1P67hyY7WqSUgLrIMdubIRxwyFEK+dVYAg4Ej2yN8chwbZKm9q5p
eaAaxj1+iF/+4l/8MSBxheibr3Lo72NO8MW3ML4YJhB8cQzGF1N/UNb4tP+p
Vwld3+q3VIn4upRC+y3jwuVHU0FtdjRn45pSqCL4YEWMD4YlBB98DeODqX+Q
nM6Z/25pCViPmr1vzFYHOh6tNUoxL9R96ftm179xh/dlq/Lt3YfRD8/o6F6m
5aw/kA4alZLhUwozxA7P3/gmgLZnkB4v5+v1GrHXDiVLTLgXgug5UKz93zc4
jidsVgqTinbP4D6NouWsPZ+pZbX/IJTCqnWjX0jMfknbY+3/g33mP0P4cYs3
fj6klf7xcFZhCSjXSo39uTiZ1k9vNbAwSEyk7bPr68Uh0U0H+fN7fOwcPbvz
qbSc9RfrdxtbVfPXX6y/cAi5aW3Kn/99Q22e8DoL0P2oDxmx/PGLb9Wc2WLI
of35d0w98y79E+S4LwrKf1UEW602GL8N/gQjmH13LrwZEnR/eE8HnWctC56/
KlrYDh5N/TsvxRfB8T9NPb1j22l9gbZFK2UmtcLcqT9f3Enmwq57e5zN7Fog
66D6NlW/Ipjz7aKmm24bbY+17zlch1D5OC6sSxM0jNnTQtsTPLtD+5RRE1xp
Htbh7MGFyZOC5R26GsF3eaR7bWARtdc5LhUCL8cVg7rdjOmVl5th88p3lu9k
uXB60+YZfSHNtD/WXt+Qsm5S/VNE7bW4574clwYu9I5o99to0kz7Z8srZ3da
bjIvhMZLc3h3hJshmtnnLKTr7z8fLbt8bnGh0+zyr+jXjfR+rWuFgpty6vl2
Lu9GrjsXLtf5vQ87Ug/RD82+PE0vAp/Opcezbv8914i179H+qQGPThdTe1oV
Mw++f+dC18gMifG8Buj9xbH3nsOFQYeW1K8yjfT5WH/QFmCbcGMsl+YruhTU
ErVTuADO199AcQMdn1yY9rIOfjn7PKw/KKpafrb0Ppf2f/Gz1ZqP2kVgMGbm
+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
P4v54hSfJj+7KaNWjAMcieHf2jhv6XOz+ylL0xK3HDxUSK9d35j/TEzmUP9t
4KTy3JNfX/axyazGXeGIvT9VO2NA1j6AnvvL+mv98Suiskv+Xj/4GdR2kv/+
Xgys7p/+PprWZ/3t6Fu6HwX49pa99r9hMOrph0KKf1ljm7hySAYHNAI04ipe
+dP+DQct3LnXE2h7rD+/t2d1s4UZ3z4Ni2yI3ZZM67P+VyHP4Yo6vz7rfy1S
DWW9+fOf9b957dvMpZdxYEsBShqTl07vt3/4PbnJN432x/pjW+k9fsZ9HOp/
Jy35nlrPtzer8HxCC3cNiPoKcKD/6R44VfSRtndNo2eeRH42ba+d8Scfkeps
nkBbA4f675S+QkM9sUJo3XvUYvTyLHq/Jp7vKEhesNzfjgNfl3zS+NJeQMtZ
fz5z3WaTqTaF4OY950xGcB4tv0z0LDywngXMIXoWc7CeBZQ9Nn/sXPgJ0nSW
OU2ckAvMttb7TyB9/tdIec08eBG1YM+LxE9giscJW6wevOsT+0S/I9Y/vh9x
8FdcaTaUbJozVEW/A7Lxc8IUeKa/93wbfNgkq3tfLR+m3kqVj+O1QqJ+0akR
Azkw5Yjt7xVW7bQ91h9vnO98cvvMXBh1yzvoWkor7Z/1b7bNXTzl1XngOVl/
6b3prfR+y9l9wiNvtdD+65/VaKbeb4L8Xo9jvjvzQbJz3sa7k5vguWaZcdS9
XOrfnsU8PvfpQjY8kc5bECPZTO9/llwbNUuhEXoPnlvrOiIf6i2sDMugAaRU
6sXOHMyl/qolUXpN/5IC6q8c919sFQ3JoftD0uVb1oZV5IGMRMOUuSOa6POw
5ePmrnw6b0Y2aG+dXWLwppH2H7RDJG1xbj3cPdz2el9OHvgm7Z/rb8iPR6fK
r526JBfUahzvTzZsoOe4sv7QNZJTs0W4gMavWd6HjS8n5dPxuhW/vhiunfMX
tz3FfupXrTzITLmrf8yngY6PLV9dWmk3ZmY2tF9R6FY41kDH99lIsu7DmTr4
frV60/cbeaAaXFktOKoOhKy/rxrfmwMtxz/8ceiro+Nj4+vXn2IOW5/Oh4JF
NWjyyr/lrP9b8zP7UtKofDr+yoqk993jc6COpzZ59+p6Oj6Kw6vP4X12yaP3
Dzm9a3F26EcQfeK9VzeLR+tfrzYPPlBUDSXio8/5tOeBgJFWt4FINVQqvP4Z
uT8XRrZsXOy/uZaOh8W1HFg+916q4l//N3lyo4WZUz4s7bkmezCtlr4Pdl94
467u8nfJeeC0YEe1+NlqOj/Z+6+KvvpdkZsDW3u4EnlPq+j4WP95K/6exayR
HyFB9nqd+7Uq2v6WfS29Ro/L6fjYfZuXStY6ty7mw4SMWoORsRW0fuq25Gnd
20ppfTbv1WpqXinBnw9ep3pPTG7g0nIat2n1dI3k5IOCx1KbxesLaTlrV447
/ziYFvf3+nPrvYFLU/Poc/qL/7H605cDihubf273zgJL4ciZWfz533MY6wH5
YD0g2En0gNZiPSDqX8cLh0m9rM6l/ilm524b79e5YGb19u69i6GIfV8Pn471
EVocSa/vBTkYmYv403PmWf9UJz1mx87vf6+/SB3dkOOfR/3PopbTQxfx5/8Z
w+iZOZv8aXts/LnqSOmn3uu5IHfuiqdW3xta/nH+982w8z29/jp6qmTI7xja
PxuPxl49odotVUCvCzNARS4qD8puXvVVGJtA67P+Ld3Mti/NJp/Gn3Mczhyz
VMuF4I9eQuMfJNH+apSXL1+5MYVeJ5wdbK7RTqTtsf5Q7ejT3I51BfSau9NA
8HpAHlwV9DN/2ptC67P+cmq7r+TalHzqL+tfjph7cF0ulAlpS+W0p9P+BE6J
zg2uTqP3s/5yeN2RNsnuPGD5ks/ea7oOQ3nwriFJ6PS4NHr/mFGdE8XG5dJr
1j8qxmfwxPnrWZavpyy3fO2bKfz5/rhv1/yGbFr/9e7gbzGlmfTa/Yr42uWC
HHrN+kd9kSniXvIF8HLesrQpLbmInaes/52CnIJ2Xc+BRvwc6O67mAdLFPNA
Xc54kZNxPm2PLde561M4b3M2bNrUuflpVB5ivzc23r31MdX+68c8aE26teGz
dSG9385dLsxtdAkKL83tuSeSDxfWGXg7biqh5eJH7s4WD+aiVL0njZYaObAG
x9motN3/m/eyj3Bnafq4YRVc2p+0z0WF064l9Hk+4O8b1fWJpEQ9+AjeRE9s
HdYTA8a9CndBsJTiWHWzNBh+1vz8tKFdNC+0MPQOJ2lBJ/0OFx2Nc5z5th2s
twulpLRlQaWIzM9Zs9pBdsBvb9bjDPi830Hzx6h2uu/B4k+k9tfLblXNAk0X
g6jRBm1/2yPx62Sx8+Ym59JgxbOrr08ktdL+WX9j8NhvafDVNHhn5hxfatNA
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
ShsOgmjLY+8sbynY31+8R73AH24c2m0JllJ6H+jU+RnZfZAC1u/6/bHbN9/f
JeC4yP7WHA0JGysTucRWlUDx1bCogXliFlAkLm43REb327ul+3ucmyUD58qt
0X/lsBa3c8DoSR6PFcvk90uK1oJWrWSQ8dVGb9ugHNZL0e9Yz84yuPHl2lfL
fiImMz3ZcW9/GTzbce1Rvn0Wiw94bjtpoAwu3E2dITPNYH1YwbbCfjLoY5ii
KP6VzvIm+UstlWSguWdjX5V2aWy7wdiSvLYy6Bqxbki7MalsXGJ1fYs/JURf
cY/zanfOyaD8QMTKN78+ML+lNR9eTpGBx8tTbdrABzbmYvDELGUZ/PFruXmD
XN4d18rK9MnzUvp9Sq3Do8bmlsLN8hGV/27ms+INF9xiV5ZCl5VX1e3D8tgk
dRUDr22lMOCF4c8uasks6NOPozVzS2HMjQ3mm5dFsIIlhfVnt5axovhdrf7O
C2ft5na137O4jNm0qNl2UCOM8s7nfMy31WoRy/TP9zcwrZaxp7Wj3h/y+l+e
zQLVjuUyysNZDmO6lWfK2IiCe23XzI2huptnE1ZVzPtiz8rvLMlWTmjKo3Mr
utUe+8cy1jvdJSVmly+kDTj27qJCKbu+sKV0Tcx7aBspua9X0ZQXwqjf/BNu
ATIWVFg0zGeSH8lJjsEdxwyZ7832nht3ujylhOUNqxo0cYcHO9FhcK99biXs
/e+3S/eruFIdlrfzrNzWjHQCy2KTe4/Mm/KOLDjm8rfnyhI2PFNj+l2Pu6AX
OGFYsam0qZ72iX7jvWykbJQV36/3+H6lvA9afL+yNcvPH3g4Mh6+fO7/TXWj
lBV1+hq0xDgeOqqE9kxeIqW4tIM7Agbv6ChlHVP9LOKvxZPexW4Gv2/r+H3L
IJ7fp/iO+dyN35d4j0iE+244v++YSLjfsP3cw0c6eZyNhB5xM41rR0iY8vX7
RztqRcHAxDcN8LcpTrrD8QWGrhFiNst2cM9WJk1x3Eo3ufy7gcu/zEuQd1FO
fDmd6xfsuH6B6d/h+gPU8zwQ9AUFXF/AnFy5PgDxRsL7/19y4/ufXRTe94if
K7znV/D3PDMW3u+I9xD0j8h3zQX9IsK7BP0hwpsEewregygf/Ob2FMqzYMLt
JcxRsJfgOxDxbtzewl4I9hb0Q9kj2EuwvYZgH0H4lWAfQVgm+Bsg38f5DOX+
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
T/JFN4aazYsqzQAlQl/BNPo/jrfqew==
   "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, 
     {GrayLevel[0], Opacity[0.4], 
      TagBox[
       TooltipBox[LineBox[CompressedData["
1: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
         "]],
        RowBox[{"-", "0.0033`"}]],
       Annotation[#, -0.0033, "Tooltip"]& ]}, 
     {GrayLevel[0], Opacity[0.4], 
      TagBox[
       TooltipBox[LineBox[CompressedData["
1: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
oNOe
         "]],
        RowBox[{"-", "0.0066`"}]],
       Annotation[#, -0.0066, "Tooltip"]& ]}, 
     {GrayLevel[0], Opacity[0.4], 
      TagBox[
       TooltipBox[LineBox[CompressedData["
1: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
         "]],
        RowBox[{"-", "0.009899999999999999`"}]],
       Annotation[#, -0.009899999999999999, "Tooltip"]& ]}, 
     {GrayLevel[0], Opacity[0.4], 
      TagBox[
       TooltipBox[LineBox[CompressedData["
1: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
UKevOv35fc3niDoZ/NWT/v8/4H84JpXx
         "]],
        RowBox[{"-", "0.0132`"}]],
       Annotation[#, -0.0132, "Tooltip"]& ]}, 
     {GrayLevel[0], Opacity[0.4], 
      TagBox[
       TooltipBox[LineBox[CompressedData["
1:eJwl1nlwVtUZx/EDhATGwVYs6RQsuHQq1NoJsWJCAggELGskERKDWJasIqEh
BKcVLAVsSaqdFtOpla2OhdIECJAIFAgoSYCRgtZpyEyHRZYosiRQICDMSD93
+sd3fvf5Pc95zrn3vfec96GZczOKO4UQTnUOYcv0EA5OC2FqXggvYOXwELby
NqSGcIg/jTdpbghTFoSQQU+VhnASma5r1dXw/652m+sqWkefk9tOq8Xv053Y
geSkEHbR3fgH6rEHg/kf0v34ABuNa6BZ+jTSTeIPrGUzbRJn8w9Ec4v387fQ
mdY5CzOwxj0clN/KPyyfy8tDAfIxalwIo7FWXUp2CKkYgnTeM9bSZmw7LqNJ
jyu0xJxpanYYs0KPA/zP9K50nTwvhJbBIfzRdYYe68tC+Bv6F4cw6CchDKB7
jIvJCOF1fZ7X55i4WX09PUZbMI3/IrKsYZE+eTR1hrUhBR3m7JcfwoP4Lu4Y
25d+Q99D5htvrmRzTaCDaRgRwjz5gbRG3wT6iNouNFU+W10d/31sx0i5Rutr
wEnxXHWHjB9ER6mfpf4s/xxaUaz+jNrT6Pu8OaL5eCWYpP4l9VP5s2mGuFZ+
dUEId+lK+jVdRderf2h+CA/jPfE6/BU7h7inF0OYiHTE/8z755l0nuCeXCcg
NsezHul3y/SbIlWPKvGfCkP4M95G/6HeAePzUYDRxvVJthZ91uCJNPPqk0iz
ikL4Cy+HDp/pEeItY5boMdJ1rpqFcq9hETbxN8hXoRqv6L1R3Ul+q/gLnEc5
/9FZIfQY5p5+6p6QjpX8Mv4w/m/E5ajABv7v+SX8VeI1iH0phDh0Rfwo75T8
Wvndcntd1yNNbnG63FQ+CvE7tcVjvWMpIXzkvlv0blbbYWyzsS3oNjuE7ojF
efVxNOdZvx+SR7tncRJd7fl+rU8n73uPkhC+neuZPi32jXTBTXW3cB0duIHb
elx8IYQL+BJH9Zn0snfJmjLpJ+KJ9GOaQRMn+U3Q8xn7ivg+2mTeRO9/vjnz
8KBv735+rXyL+W/QYeLrdCg9oT5NfYXacoxT/zS/Q/6a+gr9Z/PGYB4/ZY53
wjc3lM4Xp9JSOoSuU7tM3VIsQZxvLRa/lJsQ7VeeQTUWirPMucCz2WzOX6l9
jbcI8b7VLXSPnjV0Nx1gvv6oE9eLt9JabItic76pzyV9G+0vl2meuQbo0yJ/
TH2CNTTTKntwdbQP45hcsbqL6i+gWZxrTSes5zjetaZ/G3NA/ya8bY6b/G72
nyS95xj7VHQG6BXH65Abbp4RuOG6hH+dtuv7itpBamPVterZxruMMv6T/K78
c/xLvIvRc+XH8LrggrjIut7S78voWct15nfCeXGh3Aq5L1zPk/uxfnfcz1n9
Pue1ooT/BP82/wz/DO8cziKRXyg/kH4lf82ab9EE8Q16Ex2ojO4/y7dHV3o2
7+BT+9VV3hU06vVPvRvoATShtx6Zen+HHtXjX3q/Hv1W6iuML8dyHNGnt72x
IlqbXDUtN34jraDLaS/5Q+q+RQ/S77vnj9Vmyi+Tz6CT8RwyxN3UdUcc+qnt
i/fUd5LvjIAYdEE/9Vfsu3v1baf19F71pep3+A76yG+nD9Cd9LTvr0Tulm/0
JnaoP21cJX+W/Cl6jT/e/aa437u+6+/ReL9Vd88jDnN8W+W++VFql9M0uniK
d8aeskQ8QlymRy89Yoydocfn9qQ2e8pJ+9Bx3LUv/cf+dMI+tc/+VWtP24bD
/K56fUR/bY9L17NJ3XrxPuMaXO+P9li1rRNDuIf2VpOgRx96jncWlebbaL5K
Y1ZgqTFLsIy/hp/Dy8Yg3pN40zrewHX7+DVcjfZ0+/su+/wv+K9isXHb+XWY
w38ZE/Qr5a/lrY7OschDEr+Qf3yMOZwn050967Ae7zp74pwrvdTFo8i4RHP1
dF3rXOsqf8e5+KGz7jZ92Pn2CLY5Zx+wjinqJyMTp/1n+AwNzsx+5nvUntgf
m5yt9+i1mS6Pztjx9iVn8UBxPU2kjxv/GFYY/wdURueuHt80/j4c8b/g52qP
0kQ9FtJh4n3+F9R5N+93bz3xKn8ofw+/Hnuxyp73OL8H/4f0XvojGqP+B/Qx
/FbdGygy71L17faFK2jDf3EVX3k/L9HL0f86tQUoRL76LbxG32cNbYr2s2ic
+s20QTxW3ThMVnvY+1vGr+KP4OVafx4+9X6W8ufjE+/2LnVHfdcLovnks31L
BbTd/+E2FLouwhg9x+Id/Z7S71lekvs4ol+OsTXT//+/+3+yIILv
         "]],
        RowBox[{"-", "0.0165`"}]],
       Annotation[#, -0.0165, "Tooltip"]& ]}, 
     {GrayLevel[0], Opacity[0.4], 
      TagBox[
       TooltipBox[LineBox[CompressedData["
1:eJwl1mlwV+UVx/ETFIHSVkdppY1snSnYaWuwLiSAVQiKGKJAWQRCQJIWE2IS
WURIaXiBBGSRxdGpA5RRHG0By16yYAViESGEEASmUJYQJVStSgSnli6fO33x
nd895/zOee79/+997u0xuWREcUpEHGgT8edJEe9PiJj4y4gXnomo7xsxyfHA
rIhMrBkQkfF4RF/0S4/IlnuQntV3DmfQhPN4SP5D+hGa0YKLKC2JKMHHjvf2
jzhkvX10iXW2m7+YbqOfqNfKn1FflpwPVmA5hll3Fd3FN8q5VNJJchMxyrrz
ze/8RMQp/ef1n6ZH+RtxJFH+Btp2RMQNOCEeZ8545KDMnHxz1pgzT3zbryJS
ccWcTuIYEpGCrnq7oJz/LzMj9qNPcUTWwxHp9Jq5pfruGBixQd9PaQ/+FNpP
fQzfZvkt2IoBanutuQenxEV8+/XfTQfxT+Y/K38O55M6/znes0gdG7GR78dT
IqbRYfwF/N3ku6MHXuX/ivcqcsT/4nuFfztdrzaD/w35mXSK/siM+P6TEcPp
RvnvOe6MdUPdE79QRkq2efdF1Dj+iq5SfxHtxkW0RweM4xmPVnNyxJdpFERM
kOs4MuKbWO145M/9f45H0bHqdw9yXvy5pRH3T/ZfyK/MNR/T+kUMzYhIezSi
N1byfs77ir7f4i65NfQP+jagSc9bdBN2yv8wL6InhkyM+BG9HXXy0+kMzJef
RZ9Bs3yTea8m6413Xej0YMTgR9x7zuM1+V18lajSV4PdCc67gHcI78BC98j9
rnu0/5SWPxZxvePr0Oz4lpyIm1HJf5F/qdmfmn3FjC/RSa3tVD249wH/u74+
dOywiAuOm7DTcQ/P7B95n0LFQ35r/vfMaqWLxC10If0n7yr9jxV5BsXZ9CCt
nuG3cZ8PeTriYbSYUyc/TH07/2Z642Br0G/TWv47+fN589DN83aT/Bb14/yX
aX/xF7QfPc2fyb+QtwKP8N8n36p+mX/R8IhCucEolb/3Kfeg56svfVrch2Yg
Het5Z7reebyvOW7neTszxjNN56iXYTbaei6vx2jrbrLmRpTrWWvedn3bsFK8
AsvRjbcr3tKbbx/6jnmH8vWJNyDXnF7OqUr/78WVdBOtMWeJ8zll/iX+2/Xl
6e9FW8R/lV9nfiN/mvnH9BSp91S/qH5UvlEuz/x3p4kdT032ULUP0SCerLbC
3nzEcWGy78qfRb34CbXnrX/COr+zTkPy/zinfXhZ/r98Yd+7Rv+Df+Ml+b3q
a/nXYDWO6KuSq8RhcyeZu9yadY4LrHlc3wc4KD6E93EAU9S6uJYjaofN2C9X
T9+jtyV7tXoqrU+u1TkusPY//F+fod6ek2pfOkzTrPWR3DJ9L2AplmCE/o76
d+kt5qmki+VT/ZZVjqtxXl+payhBMQ6Yd1SuAWN4Fzif0bSCPk5H0o7WreX7
Bt1Hu5u9PrmP1Nsl9w86oD2681+2N7biC9zEeyNm8Fe5h6tRia58NbTZs3OB
r9LcJrqLduBP4++Nc+pXPWPZzv1R3CH3J/FO7MAxPY0o9my0d/1d/XZdsNhz
nO8Zfo4uwHxkmlVBW+0f5faDzvpvRVWyPtqY8Tf7Ugo9ba/aYU/ajkX2n+fx
kr637T+n7DenUSFXbW87aB+q1bcXr9u7apNe9TfFbyQ5/Fr+E/vkJfvwx7SF
LuAbKr9KPYs+J35Xvj+9VTxW/rs0Q7xN/h1789/t8Zft1ZfobvHL8tOTPVu8
Q34HLRUXyA+ni8Rr5RfSYeJ0+VzrZ9CJdK5aGXLUf6Ce5bxLxMUoQie5W9DG
dQ52nYPsT1u8n9Z5h22l7byXbkBPcS80+67Y6z03Uu8eui15fyLf+/Ga+2eC
74IcbJX7lv7J8nmoTb6XvDfvkV9lxov4SXJeZhz3jj+BT73T65JnANc5l5ud
yxzv5mNqZfSkPecEysUDxL+hA+k82smac+kD4nfM2YM5yTcM/8/k78KduCf5
nkBb/jTaG0t5l6Ew+Xbiv2KPuOA5+5I206v0a/dtK20SFyReTMUU/iexX36o
eJZzfxYnPdtXpnvnyW9Nvu2S7zocspfUey7r6Nfu59m82dYdbcYc9Q38s+lG
+pk1G82ZJX4WDfzV+o7oLxMX6p3rWdrE+7m1poqP8myWq+E7wLebNsoVqWVa
54Nk/8IxnMQJDJLPsv5QrDYr3XWM4h+d/BfWz7XW25P+/338Px4Kc+4=
         "]],
        RowBox[{"-", "0.019799999999999998`"}]],
       Annotation[#, -0.019799999999999998`, "Tooltip"]& ]}, 
     {GrayLevel[0], Opacity[0.4], 
      TagBox[
       TooltipBox[LineBox[CompressedData["
1:eJwl1nlwV9UZxvEXHfcoLiSoiAIiuEzdAsgiCC4FBYLsYAhLUBQ1ARTRylaE
hFBKo9J2sKIIYoIsEamQEIVE4wYqiCRIIstAgACOC5WoiI5+ftM/vvOc9znP
ee/N/d1zbppnjuuX3SAilp0SUTMy4ouMiKkPRLR9LKKqY8Q04+n4ytzGWyMq
zf9VPQNvdIvYxS/j7+A/w5uJ1fzd/HL+Tv4sXg7e5Nfy3+XX8HN5s7GGn0eP
mDuKXebmqNu7hx3u4W/GaT0j5tG1sn2HRKyjw3jp6N8+InlURAr2Wlutf2Pj
meMiBsluk/3M2hr+D+a3GHfVe6/eW41H6VFJK+Umy1fRp3l/wUI9XsR0/qVj
Ii7BcX0uVF+E33tEfK1Pk36elfz7T0R8gLbZEfeYa0dP6Jdt3XW3RxRacy1t
Jv8bfwL/BvVK/ioUJe5Xn3LXLEON+n2ZCtws11W/btjF341n/e0P6/Uq3SOf
MlT/ByOuwXj53rJpuIzfFEvlXpEvo/WJ58N7QXYBVsuPlr0fGfzhKJfbL588
PqIRlvH63OE6D0U0oE1oP7qKX4Tfe3k+nSP+zi/gn3JfxGt0rvrU3hEb+nuP
MNS4VZeI0wdEtKYNxsoiQ344RmCBzAu46c6IxeoB5vtjEW8I7ZwZ0QX5w72P
enQ1zpT9U1rECvUhvVfShbLz+cf0mORvKJTbzd9nXS0OII/fYnRE0m0RPUb4
7dAT/+GP53fhz1TnIBeF/LPS9dC3Vv9x5scOlKX7XD/5rohi615WF8u/bVyK
bg97T/pEbOoQUWL9GMyTzbrHu94J+lahlL9c9nUc12PKIL8XrbV2mvFUDLk3
4tFhEY/gfLT7s/f2Eb+xXq8haYL3jn8LfzJ/TFfvKs1V19EcunKi39X73Mw7
fL18kfwxc9/jefnuj3oeuAulsuvRUr6dfHf5Ovle5nriv/KFdBmWokL2Pdwo
31s+U/5y+6/I3CpUyX9Lv8M36NDdOSN/u3yubA56yHfkf2/+mHxeX8+Zdyey
+Tdl2ZP2S1s6Tn0zbYNULJGd6Lqv0MXYPdi+wWn23STzT+IJvGjdqfbsQNdt
oddL6sf5C+lTdI210/XZfL9949z4hPZyTjXSZ7n5Ermm1hfTwkn+fsxOqLlM
uU3yH6NAneEarVxjnexS9drEGvq2a8x1jVq5Ctc4QEdZu5/uQ7VnsRN7jK9y
3RHmWibOWfUO/i56pTqD34J+pa7i19Dm6nR+M1qtrkz0oleoh/Ivp1+qt/Pn
uIftxuXuoZIOTnwT6DbkmStxn/me/T8wD6vd/0reCsz3d/wTz+M5DLA2Se9n
jd+Qmyv/jmsc9BvMVTd2/mx2RqbQqz2v1sjXJ13+Xs9psvo+4y76/Oi3H2o8
x7osfQr0+Vyfwepzrf9QnyT6AW1uXYG5c+T7mz+bnoskNFfXO99+xHFcKHsB
Jslv9I6VYQPeRTkO2iMH5Q7hAM6RPRup8mPMP4gHUCv3EP033SG3xn3U2xtv
0ir1Efv1KOabf4uf6v7b4B17+AzP9SneCnt2OerkOvt7U+zBxkhGvTNigb1x
xP4/iv+pU6z52VlxAod5W50pe4y3OW8+xxZ86szo5QzpJ7/BmdKXfuQcWsav
SJxj9EN1Q5nzsNh4CQrMLUqcX/jG+ZbnTDtCj+Iw6px7ObxZyHHdRc6uDGvS
0cmajnicn8//yflajzLn7kaM5M/gr+cV4zHeBPThT0zk7/Ys9f/Ceb0dafx9
zvyRrttKrjWmWNeSXokz+WfhYuM2zvUsc6m0sfot357Fvj1r6RI62two/Oob
dab5pp7Xft+4Nq7b1vMdKNdSbhB91bdsCUp8Gxuqi2kp1mO4ezzsuzhHnzSZ
q3z7luvTSJ8m+mz0LU2VK6MNzZ+Hat/wqeoqOo3W0Gv12UmnqL/1Pf8O/9Kn
2hkxi5+DmZiNXCTLz6DP4D3ZCkyWf1m+A68j2uNWdMLp8u3oLchP/L+A55Aj
/4v/eerszxP0MD1JT3pff8VB9U/qQ/Rnutd+bOJ/qqa4DMNcc6weJebWoxib
ZUvpD9Yfx8fqtepNdB3dosc2e3crPWlPP22/pukzWJ8hKJK7w71l8bNRaV9M
sa565P//N/0DhNZdog==
         "]],
        RowBox[{"-", "0.0231`"}]],
       Annotation[#, -0.0231, "Tooltip"]& ]}, 
     {GrayLevel[0], Opacity[0.4], 
      TagBox[
       TooltipBox[LineBox[CompressedData["
1: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

         "]],
        RowBox[{"-", "0.0264`"}]],
       Annotation[#, -0.0264, "Tooltip"]& ]}, 
     {GrayLevel[0], Opacity[0.4], 
      TagBox[
       TooltipBox[LineBox[CompressedData["
1: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
bbXb5P7//+4/j0UQcw==
         "]],
        RowBox[{"-", "0.0297`"}]],
       Annotation[#, -0.0297, "Tooltip"]& ]}, 
     {GrayLevel[0], Opacity[0.4], 
      TagBox[
       TooltipBox[LineBox[CompressedData["
1:eJwl1nds10UcxvEPioYhAkZSt4IDaYkQQQSki1UsCFgnG0oLhQJtFQH3CKho
E6EtkGrFIBCUaBrjQBQUkKUmgiQOlqClMioV3FKgvn7xj3eeu+ee+9x9+/ve
fds+tyhnRpOIGHdORH1mxDmTIpriXMwfHFHYMyJ9QkTmAxEZ9K8xEaf6RKRp
ryyKKLo/om3fiNvlm98ecQcdimwMwWCsVOdJdZbTFUjOieiEi1MjFhlfjAr0
U6fpzIg/e0esUfsDbFe/P3+J8e7yh+lT+rX0SdpO/rzbInbK7sAf8k/zjxgf
K997csRm/Z70M3qFfDv5t+znsPyNIzybsQy8KH/UvkrpnUMi6rSPYYV2jfy7
spMxop/9F0Q87nmfwFXFEe/zR/JT+GfN33RXRCNtfkfEFu3NyNPOx2m5FlMi
GuhQ+xlhP9f2UjPX3wbPjI2Yi3mYoHatOaVpEavvjvjHevPNfQHPoqh/xBxz
1hr/WP4j+qh+JX8LPa7/L7+ebtd/n585MeKydL/5uIjLaX/9bfwWoyJ2qfk1
hvGvvifi5uyIbqi2j5VyT/DfNq8a6+x7lX33GuZva3wTitW4a0BEKq8PPlVj
A0q1d5h7/r1+K7p+akSV3Eb5Tagz3jTDvgq9Y/xLR0P7EtQbm2vePOQP9+7J
HdFOp2XGy/Go/GNo5t1ZL9OjJOIWrOUtGaj2NO8i3TPD7zjI3vnr8Qm63+f3
lh2OBv2f5Yrll9IH6THayA/vfhP0vDOiRLYYyfpfyHyOdfbTyfuXjKbe8x7O
ySq10+STZnkWnLF+I87ihqyIi6ZHjKb3qDOKluRF7FOn63jnw1i1c5elTjvt
2eoc977UI0l/nHw5rwyzzZ+FCu1T5n9r3QY6QW6B3BxjL9Ey9U/zM9XPNTYR
Zfwl/DP8fvw8Xj7K+VX8s/wB/Em8yajgL+M38rP4BbwpWMR/2frhHjls/WsS
9wd/WmKv1n/T3+t185oYv828FdprPN9yWuJ3e8XcKhSokydfKf8yhnj+79Xb
jbmJv4F192onqd8psbZ8L/l8zDNeb/yQ3+MWfirvaTVGqp+uzgbzCmSmYKv2
FrRWp1a+h3ySfBrSMVWmEM35V+iPV2cCuiTq+A02ojLxnuBVvGPd6erNQBfz
bsJg63alGcYzcSv6oS9+dK5SaRre8H7VJN5F+b+9vz95p2vwDWpxCFvlD9CD
yJddjavk35P/wXk4gLu1u9vHHu1utME5O4NWsicTd4nzWufcltv7j87Z38Zq
6Cn6m3N5wFl7Uf9hWkobnd1p1m2gp/EQfybWqLNdnXd5A+U687JoCk3GVP6+
oRH7MVE7F9PV36N/0F0z3V2Sqv+Ye6QP/dKds4E/lV9pn1n8AeiLlsav5D/H
P+guq5Z7T36fO223/l76mrttIb+z+qv1f3JX1uBG/Y5Ypf2De/QAxsrtp1+N
dCfhO+1unifP8+xxvw6XHYbh6jSjJ93TZTIn6P30ev5p93yd/r3m97evAcgx
1ug70YQXmC/zPH73Hah2/5+g//iWZGino8a3pZXxC7Hc96MNbY1/fafGuR/G
o4o/ho7GMvkFvlMLkcMvp2VYLZ9tfDCy+YNoFgrlK9HWc/X2XFXar+A++2hv
Xge0kd/nO7jMvpvZ22531/f4DlPU3els7MCHvqd5+rv4+XStfoo6qeqlYbvM
NpSqs4XOTHzvZV/HDfKF8q3lK42111/K70AL+BfwL1OjJV1svNJYifnl2o9o
P4w5+MO9MZs3CxeZd9S7P8j90Va70fmsdy5v9X/JSbkH5dsk1sRxfiv1f6HF
5i7xvF3l6vRPmHeMdtFfzO9Mj+rX84/QFP1Fif8T6GH9X/g/0476FfzraK3+
Mf4heq1+GX+Y9X+1j/Otf9b3Jsn6NcaLrH+c3y7Rt/8zg/7/v+s/z7EFSw==

         "]],
        RowBox[{"-", "0.033`"}]],
       Annotation[#, -0.033, "Tooltip"]& ]}, 
     {GrayLevel[0], Opacity[0.4], 
      TagBox[
       TooltipBox[LineBox[CompressedData["
1:eJwl1ndsllUUBvCLsYxWKgVEUcMUFSiEoZYlSAu0FFmlZSijLdCKjEJZAokB
agKyh2Ipq8gGJURBIGzKSOAPjWAAAUVFtomgYMrS3xf/ePLc85znnPe+97v3
vl/t7Ly0UWVCCL2eCOHlrBD+GRBCuZwQEvND+L1VCOWN69MbQKlcBXGS3BW5
aONG9MbwQC5G3FHuqtxTxk3pzeCRXEVxstw1uVjj/C4hjIU77UMY1zeE8TAB
5tNGtzAfdekQBobQG3dWm4G/yAthCyziq/BmCNXTzAPn6JkLRXrUTAyhUL4i
fRitrngVvRjG6r1fbjY+jEugjR6toT5/Js7ir9vZGJ+Uj6fv1SdHfEqP0zBP
fZm39cRRuCzkqB0K6fw1c0OoBXH9QlijroZxDE+R/EZxB+NNOAUnwx3vdBu6
8N+mz+HfgvuNslYp1oOeDhlwUY+40SFUghXilCTr/V4I9/nz+afwr6Wvg/XQ
ppccLo3As1byb6PdMc9Z6h7S1tB6dFWH98jVbus3lbsh7vOOeuNS6MNTLj2E
hXgxJBt3gp786bhJhxDOW7tiNWflp9BX0z+Hu/TRrUNIbal/txDqwFz+2FTv
i3/maUgrHGaO2XrAWb//WrwGvqZXHxzC89B2kDXGNeAEPQfnwhT6CDwcfqGf
06/Ru/rCaePYjvav5+00j2LzqNfdvocdGSFsh15y6TCUfwI9hX83vaRdCH/j
u/ABfSI8Nv4JX9Ynpr8ean7lL33fuuoxqbczJL4Y8eC0HtZartlb1kiuWSfP
ozXF58SPzCl6jH0NOfo1p08cHsIQ/jN4qvg0/hBvHhdC5Tbei7cBbOKfRr8g
v4C/1Qj7W/wGPoR38tfhv2ReR8R3PbcED+9jfXpaU2e0OlzSZ7maZfCYd5n8
cojnaQBLjRvrk+ocD/Lc59SUT/ab8X/vubk8rWlZ+DX6If5YZ+gwLoGh9MGw
17itPn31mapPKzXN+X/T55Y+BTzZtAR4ZaTfCKrp86O6m/LT5XP569G76PON
++El41aZIcwcEsIMqCNOlSvU/zPI1CtHzVK1hZDn2av4dqgtxi3VrsQrYJRc
Ed4utwwnyC3FhTBS7lP8ldwS/LrcJ3gxjJBbgLfJLcTN5ebjeTA8Uhd5fzzQ
XAZAtvlMoU2GU97tNFT1nlXgB+OL3rWa9xjI149/kfcYx3ue/p21epX+LT7r
9z0D7eU2q0vw3lGRu8td1RD28Z/kq8sfr0++PmMj685fVhwFT8Ite6JFpB7G
8F8TP7YnruN88YrIHnPH7HDH3Kdvx+fFf9i/UfJL5ffQi3BZcSo+Lr+Fbxd9
M57J+9B5WGCvdpafTH82spci+96+rCWuCTXgRZ4XoJz5T1NXFt9ynqKNK8Bi
4z3OVJF+B52/ZXgebS5MEI+HPvZxb9jvvG5xjivxx0GeXA3+ze6KafSt7o6N
xhvgtrtjnvtiPtyM3FG8X7pvt8LHtBnO/GrndbCaLEhSkwjj6Qvpj9xbD+C4
e+sYZNML6Ado+2AybRL0pE+g9/fbjfScGZ47Cl91d16BIeImfE2hQN0g92kj
48ATI/c0xMJhd2tl92eCfI66yu7fKpCi90a5ne7x7e7/SrQ4iObp5p7vDuvc
/0d9C7oaH8EHfXsOwTD+x75J/0JtfRpG7hx99slVwQfwXP409cd8e1qKj+Mk
3M4zE/FR8V/2X329GkBl3hu+pQX0K/gjfBPH81/H08XH+e/CPThvD1+AZPoJ
8S5z2Q33nKEo8+kY+dar64SL8DPm09D3MR42qFsPU32jN+Je8umQBlX5M3C0
58ZE1k7cXVwF98QPnJ9qejzEs9Qu8ewR+sw2ngN/+t+ST1tsLpn0y5H5qKuX
9f//qP8AlUvi7g==
         "]],
        RowBox[{"-", "0.0363`"}]],
       Annotation[#, -0.0363, "Tooltip"]& ]}, 
     {GrayLevel[0], Opacity[0.4], 
      TagBox[
       TooltipBox[LineBox[CompressedData["
1:eJwl1nmQz3Ucx/E3auWqJkcqwqgxzkLMqrbEWtZ9W+tody0KYVmSZB2TcUQ0
uY9GxyLViMaVpQk5appQIbnqj1LjiiRnj9/0x3Nen8/r/fq8v5/f9/f7fr6/
Gjkjug4vFhEpxSPubxHReVBEJdqTrm0XMTk5Yg39EA26RtRHpZSI5erpcktp
G5qUH/HPk3qkR7QzX8xvS1fQ49ZezVDHPpzjnUV92cv0b1zEJfyF8u0jPnbd
er0j6qL14Ig0NJdvTzsgHe3QFt3k98gPlR2C3bxdyJbfRyu2jNhOK9C9tFB+
Ffqa13shog9tav9NnoqoPjKiGjbp85haA8QzETu7RRSjZTroYbwHg41fwG3r
y74YcYt20idTn0eaWZujB6b1j5iOGcjR+4w1s/Va2z3iX3ucZe0bmI681IgJ
1nyuvl1+Gy0wX8LfR8+b3+BfoN+Yb+S3GhBR5Vm9n4+oStuY7+WX6xPxvZ6H
0Jlfo0fEE219VqyzjzVyk/jrrFuPIvtebd9PdXIP1XchX4/urdx73rP4Uo+d
mGt8wNqSPSMO0h1DIr7ALvnd+ApnZa7rcQ1V+/qs+lzkXcC24RHvtYl4hf8+
LTK/rr54qM+KBViEhZjhGrfH+B7G+lxyX2M/OqZFlB7mO0FJlMJdOC9/p2wS
jsudwkmslB+jPhYl+kX8aZ5vXLxLxKv0rHld/jmawnsaY/Jk0ID/aGv3XG57
c7/PXhGfIMlvO/npiI+MU+UPqNeWy5CvQ8cmeqCPeSbGGZ+wfr38SVr5Jb9T
ub5qWYl8rv3yG2VFPKD2IAbwX+H/yn+C/xDv01G+Z9etYjxB7TU0VatqvkEt
Xe1h42qYrPabtcnq1c1rIFfPCfbyO/+wvVT0OWryB/Jfl1/gM09UP6O+Wf0P
WmCebZ+DPeeTjCfjcflk3kT5AqS47hb5fmr9scN4O8rqXw4N5XP5jWgR/4C+
C+ki5PCz0Fv/QXS+e7kAcxPfr/xCesNv9ybuNK8rk0SXWLtOnybqX/juTvtN
pdpLI31q2E+u+kBc7qwvfVN2WOL+65NsTTO8b80vaGzNFbkjfndH8S2O4Sfs
lv+RFrhGjmwhVmGD/Gh+PgZgLMZgpXweHYVScrkI/bvIv+w3Og4/exbG04ue
oZH0Ai30HK3GRs/QIc/O9wk8m0P1m+YZGW7NerXPMNp4k+dxM2obL7V+rfES
OojeK1+L30A21foWyOJn41BH5x//IJ3nuV/jGhOdA+OR7WzISpwP/GX85rwU
VOCVxwj+bP4xZ9FhLHYWLUJ/fgH/hLOtnGudpqewynlV03W+y3R/nXlZzqdC
/gT+Mjqe/uBc7GbcFfONW9K6ckfk69E5iXMTmXr0RgZuOZ9voqb1/zqTq9Ot
tJPcFroZ1531k2Qm47pzfSqdgg7O69HOhXxc4ufRkTjtHVdaPU19ReL9Q8uY
X/E+y1Tvg0X8DNoL78hP916Zgfb8WXQmpibek2pT6FGaZh9p6kXeVc2N36Xl
ze/DB3rXtKaH7FuyK81LypRVK0678ou8Gwcn3rW8z423Yr9n6nn5SLxz3KcB
xjmoI59J+8nvkjngvbuD1uI34z+JIvNtmGkfW+hymWVYiurWzee9jUayjXGP
/nejqfFd+sxTqyKXYx9V6UBakl9ZPYnOSfxvGOG7yI64w/yWc6IE7Wi+hj/C
ddsZpzmv2tMb6m1pOoarpdFUtdb0Wr/EnxTvOuPV1ragtz3bV/m36HPmhfw8
e69sLxn2Us5eG9rLTfXZ9lKR/5j5Oc9g2fT//+/8B6wS1k4=
         "]],
        RowBox[{"-", "0.039599999999999996`"}]],
       Annotation[#, -0.039599999999999996`, "Tooltip"]& ]}, 
     {GrayLevel[0], Opacity[0.4], 
      TagBox[
       TooltipBox[LineBox[CompressedData["
1:eJwl1nmQz2UcB/BPJGdjIlcRoWKySFab5D5WWHbJtVh2kbRuOWosuZvKzbiS
RJhQhjZTkqPkGNF0CWlqVBhmFZVx9vpNf7zn/Xnen/fn832+z+/7PM/vwewR
GcPviIikQhGtB0QU7hfRa3BEh9ERlxpH9BZnQqrcHU9HFJHvY9wX7msZ0Yle
iF6U3o+WBffTu9CL0IvT+9PS9PtTvwHidLkMKCmXY9xF7i+5geJ5HSIaZkQk
w3bxA3p9hPPh1ZSIYz0jdohr6p3C8xDuijP5qrU3X7xHvha9D70vVKff1r+X
eL/cAJzNd12cg2/hm3ByRMQJKNorovJz3gO66rOQ/wk9UmC+eB4U7xixBK9V
31T8Ll5qPIV/hroWtDb6tMEX5Y7LTZebI3c5sW5yadAZVvH85N1Kj4xYZlx8
SEQx+JfvheERufAWfTWc5nuyq/nievxXaJN58yCtlWfgGXCDfhNuQcdOntNb
HtLFf/Bd06N6U+vC2412gfYavogLdzM/uda4DfzgvVvinKciGjzpN+BLxYf1
+16c2dra4eU8J/A6nEWrmmZd9PnReAM+g+fSSz8TMcbcl2fL0b/3HZyAUzCT
Xi7HGjSLaJIV0QxawFJ6Nr0xfaLxJJgMa+nfec7P+lZ51nrJZ+JcfJxeuk3E
IOMandVn+m5wK1otvJG+Hr70XvneJ5e2jWcYvkz/C4aa61U8W81o+ix8Aq8f
GlHgGaO6+01oJ2mn8Ajj8/pdMq8CKNEn4h/ev+Gx5hHPvRAxBLJh5diIFXCD
/7bnFxtljflHyo2AHP6j+BgcgY28G+CeJhG1eWvBOv5JbSO+kZ+T6N8j4lPj
y10iduLT5t8w1/eFh8p9RvtTbhceYlw7PaK9vVG+b8Qj4vf1yKFvwQvVLYK5
UKidWs9O8uzret1pXJO/MF7MnyXuoU8m7gOLaAvhmD69jRvp3x3X4/+YXtJ+
+wQfle9J3y7eBk30LyFXly+Dnk/7ECaJB+s/faC5OS9m4nr9I6bhqTBIbjLe
LDcFJ8n9rneeeLF1ehn/Zvwo/Qx+yXgRfQL+1bg2/Rc83nghfaB+Y8Ub9XsR
PyI/Bo+GbLmJ5pOOk71XQ6hjvqm0dok1NN8PoJj3KApbE+uu9xHr+BXU5x/n
GeOhGX9zuOT3SKIX4DyeIrTx6ibAOet9FiaKlyXmKD8h8ZvwZyR6mEcjuYfx
Pt/DXshP9ds7N9L1K8W7Eu+mP8GfAhd8p1ONX4EpsIn/IP9t3/CKxLcJefRK
vMX1ncV/1jdagzbXXObATFox8/nct/0FVJZbrX6PeIn9sAu/abzPnlqFF9Dm
w059JtJ66dET9thfm+ylMvxlYYxcVf4t9vs0+lb7fJP4PbjyvN/Hvq6m5oI9
n6z+In6D9jrM1nuN/TRYzUBop6YtjKMvoAftlnPmsLPnEOTQp9P30nZDHm0S
ZNDH0685+0bqf9a59q3z7js4Lx5kHsl8jWBW4o5zjjUQF+a9W64slIF96ss6
91Lkn1dXXv2derfXe6PcDudtvjP6Xno5KMXzuDM5i56Ek6EhTObt4sze7w7Z
4L7IVXPAHVBdnzqJfQl73S1fwn6Yw5eGD7lD6vKeda+dg/L8VXgP0FvLH8Sp
OIv/H/fvDONr7tiveZfqfxd/ef4KcEH+EhRAMn+qO60RPu0bv65mGf/P4nfk
O+mzMnHv44rmftU3VFSPjsZv0dfA21BBfX19KuJNag/rM1WfzeItUClxr9LW
m88weoE+PdS1GvD//5X/AEh0ygM=
         "]],
        RowBox[{"-", "0.0429`"}]],
       Annotation[#, -0.0429, "Tooltip"]& ]}, 
     {GrayLevel[0], Opacity[0.4], 
      TagBox[
       TooltipBox[LineBox[CompressedData["
1:eJwl1muQj2UYBvB7UW1qG82QQxFrGCNZhwZLKStp12rXOYddh10rLZZiJosk
jSbjkKZxKockpRyK2TRtjhU5JRRWDquaPvChrFNrUv12+nDNdd/3dT33+/yf
93me999kVFHfCQkRUbdaRJ+0iNUFEdl4Lb7QK2J5p4h/no0oF3d6LCK9b0RH
XEm/CTdgDn+9yRF3dIk4XhRxDG4Z87p6ncyI2tBmcEQKVKofVM8aE9Et3TPx
YXkPfAhn4/78E3jHw8NwX/eIA+qj+A/ievKvcV28nnef+bR7LiJX3gbn4I7m
08F8fjP/JhMjvtCnI60DVOsasbdfRHWc1DuilP+g/HlxIVR7MqLW2IgEnK3P
UH2apUa0HxXxCMzNjZgH8yFP7/VDIsbwF8ACPTf0j1iIL+n1oh6vGLNdvpt/
B54tf0f9ML4s/1f9Cj4i36aenhfR6PGI0cMjGuNe8v3qbz5jveTJAyL64mue
dx1qDY34zDw28r2qvtW4Ethh3uvNu2uWNaLvhZd4B/SIeFKte1Vdr2flb4uP
G5s4MOJHvOd5awz7+Q/AD/r8wXNLj78heZj3b1zDQnsFJxn3wdMRM9TX4R0T
7Bv1lfTeT0XMVM/EK+TzeA/RN/LtVN+ED8uz6feMswfxbvVVOEl+mb8C1sj3
qX8H+yGhj70yKaIfJOZEFPNOheVPREwfFHExwzuAaeJiSOSfVdVPnxT+Ctxd
LQ3aydtCD/Eu42fx78bH+I9De9pDPSOG5VsX9eYjrJP6T3ASTkAOLRda0E7J
P34hIvXRiDLxaPUCaEk7Lf+E1pn2s3iM+nPQinZGvoHWhXZWfA4KaYc8szX9
vLwcHjaXPuZ6WH2bud7pfF5Q/wWK+GdYk/707+nz6PNhkHwADOwcMRgvUgt9
GosTcKW1auW5C9T/tTZN1Tcav1h+k7ZI77egzNrXth51oBlPcyjlb4HP0s5B
Y31yjMuFP7M9X5+x4jP6tKtaT1jFdx7amk8Fz1F7Y5o+3+Lp+Bj+hr9l1fuT
b+Z5j/992CIupKeoD8Nt8Hi8mr8At5bfzjccRkI2/2R76Lw9eco+LsdT5G/w
X7XPz8o32+eJvL/a62U8152NGzBJXIn3OBeX8G78Kd4CRbQ84/Jhr/P2UdXZ
1DNNvwdoI9VL9EsW59NOOMMn4S76Udyi6mzhcuf4nDM+2hnuov8U5zcV58p3
qtfDNeUd1BPxvfJN6ivcGafdHUfdIafwYvkC9SX6NdP3hLuoOZ6r1hg3grVq
Ze6mpXgZVLhXh9CPqh1wlx3BK/C7UEbrxZMBWfqn4kxcDc/lS8AB/cRX3K1X
Idu4392p18QNeUvcravlGTyr8BZ5VyimL5Vfdzcvw9PlGbjIXVDsTrioPhWP
lZ/33Ukxphu92JzSqu56eYm7f6FvwVXfjoX8FXi+PN134VU8G3qqz8GvwUz+
JXq9jB/n6U4r9Y3oIr5HnASp+q/Rp4Zadahn3Ep5Iq2BuD5kG5+vTxb+29mr
QbsNboj/guH813AuHsq3S9wX/2OvN9F/kHggNDe+lDaYb6tv6Tb4HJqqd6Qn
4xL6dt/UiSO9Q/nd3vWDuEj+lfrr5j9enOXemIBr0sfhQphDK8C9aWNwIm00
zofXaKNwJi0P304biUfAbFqp3jni+z2rBq0BHib/Un2J7/iH5rkOGvg9meZa
n77ZXLP8lgx5pd9aP/3//xX/AdtLu9A=
         "]],
        RowBox[{"-", "0.0462`"}]],
       Annotation[#, -0.0462, "Tooltip"]& ]}, 
     {GrayLevel[0], Opacity[0.4], 
      TagBox[
       TooltipBox[LineBox[CompressedData["
1:eJwl1WdsllUYxvGbFRUMLQiFRkotojgCplEiLTLCMJRRoAPKpgWFFqisYFkq
EhGQsCIKllgjosgotKCGfjAOVhEQJWoiiSbOIEsQKREBf40f/rnOuc59rnPe
53nOedOKnskpbRARDRpGTCiMSBwfse3piPeR2ydiz6CIdj0isnMi7s7SRh6/
WG0K/y71O9TuxAh+tfr2/GHqU9S2x0j+LPVp/Nbqd6vdg2pUYbaxOWhrbJ9+
3uyIG5kRH2jXyMuTlY+L2mNlXaaX0GhURENc1R4se7yaIXQ5XYGu1n5DfQyO
GM5PmRJRoX+HOU1R0S3iUWM1tBvNwAbzXsVC9SfpH+oL5JyhfY0v4b8s56L+
ABlZ+Nj8TcZO0+YzI9bxmky1P3yk/rHciDIZ6XQ+7UI74wf5U0sjSnDGnFI6
A1l9rW/uYvzNn0/L0MOcKuxF1hDPirbrGVFHU+lVNXXIGe2ZITkjYpm6Tdob
sUr7gX4RmXnep/rBdC2vM+847UKzeWXGyukle62gV+hx87Pktc2WixVqmw2M
+Mb4KXTkvVbs+RVFvI6T3uVmWo5qfuKkiJboOiGiDU1CLX8cnYC5/Ml0En7k
fynvTet1GqNOu2n/iN7W+7C7PfEf4rcfam6+39YrYjsdbryS9lebZqwfnUar
eJ+oOUeX8mbyltDf9U/JOyzva++tSubWkogtOK9+xoiIC3Qe/c6cOXQ2hg6L
uGnOxLHeM56aZu+osP50WooxKEExqtSn+J7fVlup/eDIiKLeMmUV0lo1R3EA
782NeBeJT3i35nSaFfGWefOfjDhmfJX6izJO887QGv5EeaetXVifi/P8s8jV
TpXziJy+cr43Z7/69OnOq5wOw53fcfZG16pdg2ty1tMdxlP5N9Qv039YTp2x
m/rJ/JW8FcjVzpdfOtm+nduZNG2iZ0enI8/YImuXaH9Rn2nsKC3WX8gfan6t
/kuyjtBs/QX8ScYP67dTf4gW6s/nDzJ+UH+p+gM0S7+MP8b4Z/rJ6kdrj8Iw
az9pPMFvbI4/7f+K/d/Ja4bFMp6rf178c3heu1zGIs9nMZqaky97BBqpb4yt
5t/Gf4cmqfnUc06giTjk+bakLZBr/KSz/BVOoOE8dyxW139TaOh57rTm/QUR
96GB+rP8oCtpR969SNRO9d7vQXt0QBq2+H53ya1EmnU3D3AGtMt9p5tRYXwj
PeybPoIN2gvpAoy17mgc9P3v8n239r0n4Vljaea10q52Dvdin3NZRXejrv58
O4uX6V9IUH/BPbCet67+TnAmtjhPxeZMQarsgeatdrYa6zdCA1x2v5xwLyzi
H3JPHMTneJG3BHlyyuRcd+/Mlr/N3fMtcvnn3FNTrZ2hLhOvmNeNPo5W/Cbq
W9AktMYBGa3cTxnWnGFuGzltMVB+rXtzv7s2kV9DE2hz9HCHFumn017oiRfk
ZNLu2O9OrsGv7vvt7v3z7vELGKm91n1/TnsN3Ul3YQQ/H7XqC+go/x+jUYCx
GIM+9f+rNB//eu/p8ivVJ6m/5X9whf+ba3Ql7aL2dvtPdk8s17/Ov4kbyLDu
IGtm0p/8L96SVS7nZ+1fkKP+N3qMfxz/OCNbzRtf+P///3+GtZ27
         "]],
        RowBox[{"-", "0.0495`"}]],
       Annotation[#, -0.0495, "Tooltip"]& ]}, 
     {GrayLevel[0], Opacity[0.4], 
      TagBox[
       TooltipBox[LineBox[CompressedData["
1:eJwl1X9wz3UcB/CXmpzoDnVhakj51SWXCZvfhLENGzZjbJKQRoXpOj+bNoao
jgtF0Sn51blT13XXXTg/msllU53+qdP5Obt0cX722PXH8/t8v56v5+v1/nze
3/f7/Wk7ZXZWUb2IuONnZmFEs0kRu6dFZL0ecTslYo/xVyMi9kPuwIjWaREn
cyPKekZcoX2El6hbCs3VluBstW/jj+VKcRm0lBvaJ2KF8a+zI2rVpolzsyKG
46V4GXTTf4N5bspn0stpm8XP05uk6ie+J7car4Gu6RFb5ZNxo/ERz+F+uC+k
GB/jOQIL9TqNx+lzCufUvQeuhIF8v+EafdYb1+Kz4v1q6k2P2Eh7aE7E2rq+
gyISaAfkumdHDBa/pddGuU3wD+8t792F/5K4mHc+jOBbWBSxCK7Tb8Bdvt16
DM2LGAIjMiL+5LtBS+qL1V0Qj5bLhlL5e3Jpcj3GRHQYHFFl7va4u/hd+WE4
DSqMM3Ax71r8Jt6K83mvqanQLzEzYhv9DP0XeHC4NcKLrHN+r4j3pkS8Dyf9
dz/DKnoRveGLvJA8OaIXbKIvpo+n5cEbtGL4nL6WfsQ87SdEHMV5Y/mgn7kG
QCf64yOt7wsRk+gb+kVswR/ivbiN3G68C2Ya7+HfBVONl6m5SJ+uTy2egU9Z
933yy+W2z4y4rE/ROHtOXK3mDJ4lvuDZ/vBsNfwNJloT3r+ha/+IglciCiEP
Ns71LHCLfxJfPuwbFfHMEGumTwH/j3zzxQfxvDr2HEeNf8AdcyIW0HapKcbt
xTXGXZ2ts3qdN55MK9fnSbwS5+BcuCz3tZoxxkm97dPX7FM9v6Gdk5tAz4O2
o/3v+j2Gk+CAfBZ9p16txM3yIx7FZbRS+FePcvyFfAv6bf41s5wpaFPgjEyN
GAvl4s7m/cx5XmmcJJdJT4cycSe5weZtqv8ofW7qk4HTIZs+hW+72qm4ldoC
PBmy5IbzDMJN1F7zPNfVNqU1gRK9O+q9re4eMW6hNlVdCiwTX+O9qqYGlniP
zd5jMX0JNNYvxzrlwgN6NYAd/A3pLet6wUFr10tdClTqcQJSjefo87D8I3DY
f9NLjw6esdb/vFK8Aspg7zBnwjmur+8W//NIXEJP5G8F5fxPiztDJ9jB/z3/
DnuvHf8d/BT9rr13Dxrzn7IXT9i3FXX7m/dLqLZ3G8lV4Q327nF7/BgMMz6E
x+kzwbPn4IG0AbBTn2Q90ujD4FW+EvU3ZngPZ3+f83kVr3cWx9LbyWfjD8TV
PFWQyTMSpjvDGTgdvq3LuQuq4T76KfwTfEJ/B5fCIXfEclwCq+lroMY9tM4d
s9u9shZfEfc2fypPHzyD53f3UYF8ofyn8tPcTe29x0Rn7rBcAt8s+lT6S1Bk
XOEePAFNjeurO26cgPu7MwfAd+7XJ6ztX+7YHvr0dIYL3KU95Qpxb3zUHX7y
Zf+ZeA5/8NeDdvxd+FvSK+QTcSVex5+PK30fuvFf9B27BM35k/hbQ5Z8DoyD
Av4FviOFuLnvQrKavZ6nhXGCfH247fu6Sr9nvWdDfRL1KBeH3P1wH6Sqz9Cn
Nz7n23fanFUw17d0HjS17sV4tPMyH282x3m+CzBWr0u40jd7Of2W/bzTnNML
///e/wclsZ6y
         "]],
        RowBox[{"-", "0.0528`"}]],
       Annotation[#, -0.0528, "Tooltip"]& ]}, 
     {GrayLevel[0], Opacity[0.4], 
      TagBox[
       TooltipBox[LineBox[CompressedData["
1:eJwl1Wtsj2cYBvCbiJgRC+1KHUbmsI0Pc4hTqUNbU3VqUamhtBKrLQ6NLAzb
nIaZ2WzGWIvWcWJMLFkyCxItmYwNpQ5fbAsdZiMsk23s1+zD9b/u+7qv+36f
9/2/z/O2K5iVM7NORFzz8/7giDrTI9bg+rjl8IgDvSNa4GR4IydiPhT0j5ii
/gPfZHwGt50b0TwlIi0z4qx8DP1HPBXn6S3Oi5gD3eAc7SwU8lbjS/A9XIQL
sJf/hut+yzsLMl6JSIfF/Jl4WlpEH1yIh+KmI6xvgnXCN/yH6Z/zZllPr9kR
PaGV2m7eXdA3NSJxbEQKnqW3uTgJysXbISU9Ygfui/PpReb06RORU+C+YOvk
iDIoh5lm9xgZccSsGt6mwyKawSL6ed779Pr5EQ2gIaylT+BvNyDiIf+zvO2h
lL6iMGIsfT3fBtjnuutd9zp/95c9O6gRt82IuI1vwexxnitkjIr4Qm+leD/O
nmG9sEjPm/AWfMqzCcr0n5Jvw5U8pbT9MyNKhlrLRDk+IN+p3vHViE7wHL0D
bg8JuRFH1Y/BUnoFPg71hpipXgYr6DnyreIZo83C4+TH6bn4KO0IpMzxnOEU
vZye+Jp3ZWBE//ERqXDGs0nqF9FPXMHfSn0335OTIvbghtkRT8DAvhGNaY3F
JfrT+EtxE3me+anTIh7wL9e/hb5E/a7Z9+BPerr6NnrylIh3eFbAX/Sm+rfT
l/Hf530AD+kj+HfQW/Ov4n0P/qYPo09yvWy8Uz1JfRceI59MTzBvtzzLvIP8
SfJEeMn6k/Fo+iH6Vff6Fa52vdbufzh9BPxCX6l/oviS2jicC9fo1Z7hDZwn
X8XTAc814yatRC3ZNZqY1YKeDHvpbXA+byd8zLxK/9MJGF/7HkBLPfv4zvnP
O5s1XNwFV8lL+fN5X5A/9j5N4J8II3nueK8ue39+xlfwH3gl/y1cLd/DX5e3
HlR5/+54b5fRi8R3xb/DdP4a/CsU0vfpKcCH7IkKe2MT/TN4hjZAb0s8mScZ
T6I3op22R2bYD6PlRTgZt4Lv6OX23Dz77HUohl7qJ4vcg324QS2F1hu6Q321
RvTl9Cr7/gDfWXwaquzxj+31YrVG1nzVvr4CO+iVuKz2vHG9ic6TUvk5Z8sa
fB7n0k7jE86nIe6rUtwVF7i/HrUe51hv3BOGmvPvmIhHsJSvxjn3j3hkbexc
uybPNOcnfFO+GS+2L5fYz4Poi/ECeYqeYvV16r85Lz/Cc+V3nOu91TLk95zB
abibfIv4kXP5Mazjr8sbcJD/iu/Bl7gN30a+1eqXnd0fig/jdHmee7jlW1DF
u5D3JO6vfr32O6FWKa+o/baorcXzcFf1FL1fm9FZ3AVK+J/Hm/G7fA+zIt7G
TWqflTkb6cvlWfrvq30iT7TmBOjofxpKXz3Vf0V/irYeN8ND6E+rZ+Al6tWz
PAv9afJs8wbj2/KL9IXqg+QJ/APxAvkF+k31AfJR/Km4gbkfmD9ffS3uZn1d
4c3ae1e/wb9QvAAaWv+Lmf9/f/8D1OCGYw==
         "]],
        RowBox[{"-", "0.0561`"}]],
       Annotation[#, -0.0561, "Tooltip"]& ]}, 
     {GrayLevel[0], Opacity[0.4], 
      TagBox[
       TooltipBox[LineBox[CompressedData["
1:eJwl1Xt0z3Ucx/G3Ojhuc8QxYoU40h906hhmbMbGWjNjwy7mNpfkaHOpjkPK
taQ6UTqpnZPLUZE5Tp3+jCMjc3S0LTslR1EkcyR1SrfT43f64/l7fT6v9+vz
/n6+39/30nfOE5OXtIqIC35Wzo64uyKi3YKI4qURHUdGtDdezX8GvdU6mHfE
1qyINbxxoyLu5XfiJWEbvzPdoLYR/dS6mJfo10m/u4w387dggFp38zK1JLVk
41t5EesmR6xHv0cj3tRvAO2Pj4dHDC+JeMB4heNukXmSHqGX5ApzIy7SVPWV
/Hr+KRTzx1iX4hjHzNPVG2gjXjZusabZ+KA1vaY4N95m+TfoyLHW8T5Sa7Mw
oi1eU9uOb+ynReY2/Zk+LHeTDqOpuG7NMvkVaJGvplVIU1u5JGIVMksjnqVr
sMOxrqpfwwT+FXoZ+fkRf1mzlr7O30AHFUUMRN7oiFF0NM46zx3qb6FO5jg9
QYvHRdxQK6Jb5Bp4NbTbRMeSSaYnzOuwR7/zNIX3ovwU2sT7nddMax9zndDk
v1tf5X6YG9E6I+Khmc4badjOL+OfkKtDqnrHYv8dXaffeX3raC/eQl4BLcRp
Xj49Rctpz4KIGWV6oavx6OyISY84P7Vj/stZ/JmYp7aXtweH9fue/pDozf+W
zqfXaRP9bkTEneUR71n30yLXG5v0vEFv4iKuowX5kyL+kS+T/1e+4nH7QY18
01TXG3kyDTSXnqR/2tff1rStds9bVyI/HRWZnpNpEUtzIvbJVtMj+qTwDtP7
6DLeXrW+xn1w2XhwmnOgO/S6RHvwk7FJvwvmZ/lf0Q+tLeA361VIN6qf42cb
j0PvdFm1Q3JN/FzeBHQtjMhxjMmVEbs8h0W0+yzXmRYgWy2X7lTLo93UJtDx
KHeOZcgx3u14XdR20WzzUv5Y+o55Ej/LeAyy9MugNfpl0g5qo2h6oq6WZD+N
zqkBTfa7335P2u9nyLDfTHzBP4Mxxsv1T17susmdtibdcY8mri//fde9hF+f
+L+N38VitVv+p19Rq8cB/GacKb9bfQ82yvfWp739vKR2zf85hDcYn3pOj2Kf
e/F+2UEYyA/5q3Kd5RvoGfdLtd5VSOI1uy+nu6dKUIy1yyOeQ557clLC12+V
NaV0PC8Hw82HIRU9ZXpgoz5L3Msb6BXPyS+epc2etWnm2z17Lxg/j2bP3Qz1
CtTLlNM/POu3UWL8lD1uc6+2s6Y1GufYNyr5G/hXPO9vWzdMtoam0qF4Rd9i
uanY6R2w1TuhyDhDZq/3ylzz2dbOocmyPbDIMfO9EyZiht7HvYvayPfiL8BC
VFn7gXfdAezHQdQmxrKfe/e10a+rzCfeoz8mvgP6jHD90pAlNx45OOmd+7Xv
yDksl73DMevl+8sPkX0QZ9S+RFPiOyZf692/jZYmvivWnJIvM56nPh8zE3nf
iAV0nP1ko9F8TqIHraRzrV+tTyXtbe1QfQ7pk2J8D16V60OD3wod7KetdU/P
/v+7+x9NAIOQ
         "]],
        RowBox[{"-", "0.0594`"}]],
       Annotation[#, -0.0594, "Tooltip"]& ]}, 
     {GrayLevel[0], Opacity[0.4], 
      TagBox[
       TooltipBox[LineBox[CompressedData["
1:eJwl1XtM12UUBvBjmrqampGmQjjB+yWzzXnJC0JqIoozRVPSvOIdr2Vbo/JS
Wa1c3gsQbSwBDbTcWluYzrmWbKaWmCvRyryl1irTVlsf1x8PzznPc97zPd8v
7/v+2k3PH7uoXkQc9ac2PWJGXsRCWABTsyJq+kbk4ilQNTaiEjYOjDjLfygj
4juchHstj+jwWMTMERFt5cfpybgO77b286ciDsAymEXPnBOxSm0WzpNn4Nl4
JH5gVEQLqJaXyT/DQ/XP0r/f4oi+kDwpYi+vCgYMimg5LmIgXmJdkjgRPhBX
qCuHuTDocXN75jx9+vczF+2Gmg3WVar/h/cv5Ov/+vSIZ9Wvn2t2/mX+Qdx3
dEQxvZb/p7zR1Iib+Iz8E/pkfsrgiL/Vp+LT1h+lL1S3Xd+t/Bx6+/ERfTL1
g4TJEZvNc5l3BVKHRvSmpeAH55mRtlz9ChiR7Z2t/0K8D+fwJ8DL6lfBaihS
c86z6uCYvFSfHbQS2LvIHE9EdMyV433yMn63+RH1h0X0oN+Fu8r/UP8obiRf
S2+M546JmAPJS/z/4U36OHqpuvS0iFs5EbehynvVH+DbiBerL+dXQI36XPW7
xcvUH+YN1OcYPXFBRBtYQU+fEHFCj5NQrr7tzIiV9Hue8Vw1hUsjWumfLO7A
6whNeKnyYl5rXntxV3p3uI/XSb6d14bXWdyT3gsSeN3kJbxEXndxH3o/aMHr
KX8EKs1x0ryrzZFpvm/MNhxX0Y/Tv/YOtXgNvwl9LR6NT9NqeT36R3wvPguL
rfkBb6Vvg6ae21RtMyilJ+CnrU/B1Z6TiJNgB+899YWwS3zM9y3DXfSbSLvb
t2wIt+3xL3kd6Zn8GvFR6KnnRfvlEtRTf80eOWfvXVK/3hl7B87zLsBPcNUe
K8E7ocJe+kr9EfUn1NfZgy/YO3n2SQH+WV6tvhRPo6XRWuEheCct23sU4WK4
n56rX3NcpN9+/bLoDdTW2O8N8RF8GFrTX8KN8SrcBN8LvT3riPNVQKt2xprN
sFdpPZy1BriRfA99In+vulPO6U3n8haMp/3l/I/FZ+7cFzgJXlXfEl/iXYGm
4uHmyzffG+quux/exm/Bcv2G4K7WHHKPdMHr8GBaJq/znTuAtubOHaPXRigQ
t9JvlHgkXHd/XYMid9yP+AJk0DN855bqyp90L7mDf3Nv3oDnndeVcMMdXMQr
ht/dr+d45+GqeAveBBtgsL5FtC7qCnFr3J+2wnskidvAh3qdcq/vwc3l69Wt
tfZbz31NnC5Og3HWXPQb0YfWG6qtOQBj6AdxNj6En9PnYf5ZtaNodfhT+jL6
K3gpTuX/mu/+meYsyDtNcY7ElbDfcyvwJOdxD27PK8O74GPe+3girxS34+3A
JfAR7108gVeIk3nb8FbYx9uMc3hbcCIvz3M3iX8xR1vzzJa/aL5ZeJ7frfkw
B06Zf7j3GAaL8v7/nfwPzTl2Xw==
         "]],
        RowBox[{"-", "0.0627`"}]],
       Annotation[#, -0.0627, "Tooltip"]& ]}, 
     {GrayLevel[0], Opacity[0.4], 
      TagBox[
       TooltipBox[LineBox[CompressedData["
1:eJwl1XtMl3UUx/HTyrAMTTPJNpeopBle2nLeyNTUFC0MEC3B8JoggqJhrhDt
YlJL19LalJymzUKhtDId9oethbpE6TYvuVlaKaahf1RrtfX6rT/efM75nPM9
z/d5fs/zJXVWWXbpdRHR4M/J0RFFT0UsQhnmTYpoGhIxk87GnuyI3djwQESh
vOLxiALa/aGIVv7cCRE/WZcqP0N/xFnU62kx53P9BzF5fkQWXtCfkxNxxLw6
PdnixzB0eMRF/V0eiUjBcd4x7NL/qXX7UIu9+ATlekqeiFiAbkgaE9G1KKJR
/yFkLYoo5bfl38mfMyJiVq790vesnZeI0Sq+iqf1XaNLaT1/uf1MGRqxZlZE
NRpnRBzGav5c/gneSbR7MiIZ6/nP8CfPdj8o5pVgO/8V/luPRnSaHtERG8VX
XWczfRu9p0T0wWXxyw/6HcTVtFtxRNrYiGHWDEdmlt+Cn8vP56/kTac58iy1
fFqAJv5MWogT+jvmuTbKMyNO28839nObvIWm57tva28aGXE772Y6YEHEQKSj
P/ohRe1+OgivWtNuXMQQ8Sj9f6pNk39g/lS6eHLEGP4//H+xh39DRsTf4gq1
Ouvq0WTODP2NvC/RLD+OI+IK66+fGrGMfiUfsTiixxzvXUnEXVjOv6XQeyfu
gV3m3Kv+LL8DP413N+r4A/kr+J349/D6oj6xf35/cT9UqYf6SjqIP8r1jrnu
KnmSfTxPx9HjvO/sMX0YFX+PErNO0Q38FH6ye22rdyOvBmXqXeQHPIdO9DO6
kLddrZR25uWb3+j5HMI2fo5ZW2hX83bQo/wmjBX3saZZXJN43p5jb/lffvNc
a/LwsJ4i9fGJ/Xk/gnfJ9/AbfvX7v7404mv+We/Ht/QX2uI92UpXymvNOqZ3
nvmbeXPpOe9kpVqBd+Vd9R0oFG/hb0WKeBt905y1dAPNo9PQWa2X/jR87PoT
eSPMbGPeAe98A9Z5F3eotVFLwiread9IFa3EF77hZN9Ve6T7rtrSG1HHz1Of
ip36c+kfiXPBvInifFppbpLrrVbvwLuonkwP00NodV6s982/gQrnwyq6hI6k
B50JGXQ41oh70lRzmq3pQdPkY/VecyZVqU8yLxM/Ow9/59XQ8/QHOpo/ynMd
jfedbdeci624gqrxviPn4R3T7J8WW7PWmnNq62iJ/JIzM926kfILevqK+2BT
Yh29z32+pn+ZvfWS98SH1txKB1uzTt+L6tW0PW+n2lFn+AX/A1bzXsIJZ3AV
3U8z9GabdV59AK8f9unfj0n8BjqRHqBLzeqtfkZvlfN/BQY7LxfznxNXYvdM
z6TMt0pL+T3VF9Ja+RX+dloi785fQN+RX+ZvosXybvwiWm7WEmzmn3K9THuY
gL32MV89NXEf/I/kXT2T8RP+/z/3H2i9ZFo=
         "]],
        RowBox[{"-", "0.066`"}]],
       Annotation[#, -0.066, "Tooltip"]& ]}, 
     {GrayLevel[0], Opacity[0.4], 
      TagBox[
       TooltipBox[LineBox[CompressedData["
1:eJwl1WtMl2UYBvCbDhhps7a0PGyhomkup+kwxANLY+XAlDzjJJEQRDQNFU9k
tdTSoDbQmRmbbZQ2tYJqQquWbLWBjunKJpbHPuQyK7KTmf1YH67/dT/XdT33
+7zv877Pv1/+spylCRGx30/tgohh8yPKFkXkrYjokx6xUl1HfwuG81YZr4ZT
D0UcoC0bFzGSXk5bA+tgLdTzGiCVt9F4oX599XtWPSgrYjCc0WPKoxFpcyI+
etB82gm8Dq+H7/kb8Th+BX4ePweb1XtdtzUnYh++7fGI7rBCr9SJEd3U1TLJ
uAaPpa3ibTO3Es7T/nCdb9UX1TVyP+gzFF/EJUURpXCOX4yL4IrcXbMjekGd
3MZHPB/1dr1/MW7HTa5xEl82PgA/mnfB+MW5MuqfYdL4iJTpngG0yffHCzyX
4WnmZ/PxYflm9dRJ7pe/0pwa3EKbTbt1SsQcvINWy2vGiZMjjuAkfMn8XH0m
y11RZ+F98sm8ra5VyruWH3Edhua5NrxGr6CvlF0FJ+WHyyfOcL+8Sl6X3IhP
eHfTCifYOzxOZjpOeti6ebfg7o9FzKJVy1ThdFpP2kvqLXBYv3r9cml1es7D
5+hnoUC/3YvdF1TBM+a+jo/LXJO9CkfVx+mFMyM2yZfgr4yP0YvUiyBzqqxr
zJhnr82ZWaKGXfJt/GEZ7gVPkmvEh+BP68qRnwZ76AMzrQMf5r2Bd9C3ww71
HbMibocm/XrgXP120YvNSTLuNtb9yzZ2ro/2Kq8KbuJ15d05hsY/RiviH8VH
YCh9VEHETt9LKr5ub0biB+A+XsZya1dvcL1/eOvx/cYT6EPwWuO/6IPV98IQ
cwbgGv1S8O+8fjgZBvNaOtdlHZXwobU+YS0VtA3wr/u+2Vrr6QnWHZCp/2re
XLn36Ln4qtxEehV+BZbyS6Gr/iX4kn0Ypf9IGG0PUuGg/RqBE80fQU+w/hug
wx5+Y79OwNfwjtxR+5+Pv8Bvd+4z/exT3hmold9svAlegDyZ+dDg3WvxPrVC
tkwWlKs7vKO9+X0gTT5Fv77qLfI/8XrSenS+Z8URf8Mc+kDzZuOd/FbfxfSF
vl/jEs8yBecYfyzbBN/5pk5DN94p3A576G/Cy+pm3+uXzsTP8Vbjcv06fNc1
xu/6fqtxiewSOOjbLXCPZ5wTp2ExLUO+lL4f0j3XvebeY97TuAx6q3vBeH0O
OW8aIVl2jD7pkO0dzyyL+NS59D7vM9yAu8jn4MXGzc69AbIpMEY+Xb6Ins0v
xtNwi3PyvLP8ApTL3yh7xJk6SP6yc7nAefkk/KbugELr/xX3Nz+fvsacRXi7
Pg30D6DYuAja9FmCS6Hdf8AynCo/Gnrrv9w1dy/4///qP3MLX94=
         "]],
        RowBox[{"-", "0.0693`"}]],
       Annotation[#, -0.0693, "Tooltip"]& ]}, 
     {GrayLevel[0], Opacity[0.4], 
      TagBox[
       TooltipBox[LineBox[CompressedData["
1:eJwl1XtMl2UYxvHbpiBoZk3KVRvDw9xqhulaaB4qM7XlYYKI4CE8hKIDPKWz
0WrRwdRGKiKdlrZp66BLa6BG6g8tQVyhUf1RObe0Wa60NPEQ9XH98eV6nuu6
n+e93/f3Pi8Zs0onlXSIiHf9aZsUseDxiGKcN+73QMRXWREdyyKenhrRe2TE
qaKI5mERO9Qc4i3HAn72vIiKsRG5dKH5eDoZOeg5LqLT4IiM/IgG9Z/z6vGR
+gZ6ELuQwAEsU1+mthTpSHkk4o75EY3qmzBRP4v5qfw7+U8Oj5idEzEHH1j7
PuYbX6Dfq/sO27Fcfbv1K91Xrn7K7LNmlh6sb5rhvnAUz/B/5F/id5sZ0R03
o5KfPTui74iIEvMyLMI7/NX2e2N8xJu44Do9CiL+opf1t4V39+SIc/Q8lhgv
xmr7ZBR7zqMihqkfjvETPAt+AX8Gv4I3neabZ8u2lPit0MLfRreiUN4kP4JW
fiM9jGOusUv+CQZMi9g8JqLWeLv6QQs8v0cjBvJTaJu9uz4YMZR/o/n9/Cz8
4b5KJ8qG6JkuwbrciNcwSv0y87XqVtLp1v3LH8O/YYrrPhbxKWbyd9j3smd3
BRc9s4/NNyyOSBoasdP4Kv8ftMlqzTfKkmV1xh3nqMNV2V7zalln2WfXe+Xf
hHbZPvNNshTZfuMKPb2IItev00elPlNlnfQ2l1cpm6rXrua75V1oMX/t9XtU
W0Xz5bXuqQ415uP4G2lPz+Mtup+fwAjjPtYeul5nr3r6Os3gjZT1pvt4/e33
k9/mBK74rX717pzwjE97J/Pk+WjxWxTQM96DYvqCfebQuTgqu2ZdMz1kXYt1
Ly+NeAWv2nMD1qPe2mq/fw1mqs23Zqf6hPpVvCzvQBp/CO1O8+TdaLYsmZfw
nk42LrLPQ3QuTaO3oV6WpP5efd1inklT6SA1K2RV7qnctWpcK9Pvchfanadr
WMh/Xt7LmnRcdE6POWfH6DhrzzqnnfnN5kewWZagb9ONNEXNFOdqnXGj811O
m+gEXgM9YH0Ce4wzXava+Lgzf4+6/hhtn9HO5Fislk3TS391F7LdG83R8+/G
e6z5k55Dle/Z7XmeLf3N/D1kWdtD/SjXueIb+Yvv2imU+n6V4Kxv5AZ1q6w5
41v5g+xnuo53WtaPDpOd5PUyTsd64y50gB5eUr9UD7eap+FDa9bIB1pTxh9E
O/C38Rt8q7fScvmz1j2HFcZD6Ep68uGIp+gyfKvX44XeJ+eklQ72vWuhX6NV
1kRnyZrpfbLD9Et8IztIC2Vf0IGyBD2A47K99AlZPc2U7aG7kez5JqHEtTfp
sVav1fRv2tc9LOL3ofPcUxEuTfr//9B/EfBi8g==
         "]],
        RowBox[{"-", "0.0726`"}]],
       Annotation[#, -0.0726, "Tooltip"]& ]}, 
     {GrayLevel[0], Opacity[0.4], 
      TagBox[
       TooltipBox[LineBox[CompressedData["
1:eJwl1W1Ml1UYx/ErN58xVxbTFyLUsHpjWc1EEZV8QCZkqDzpLFErbaGWE1Na
W80SjNJAs1pFgx62fAEaNAsyMk1nijrnFrXSErJk1Sohm1of14svv3P9rutc
97nv8z+HlJKVeaXXRESVP7feG/H47IhVuJAnnhhxfHxE31URTxVFjJbfLbcL
h8QHsR7Fj0QUYeOsiIK5EYVoVNOAecYT9TmvT6o+X6ovVFuAARkRe+ln+ARZ
ayJmIld9v7SIdPU3F0cckNuPyepHzotIQllOxFokG++k6eob1K7G1GkRjy2P
OGM9P2CZPrv4mfxS/nZ9Gs17hV4w92XeVrxYEvESDi8S0y14l3+ansHQByK6
aCda+fOXRORjJb+QFuBrfgfeyvVdJvtm8yMW0Cu8Hs8fviBiBP6Qr+Qnr1Az
3fp5o4yT0Cu3wbw590Xcj6PGR9Csvr404h1UqK9Eq/dulztJf/SeJ3lH9PgK
y/RtUtuMDv43OKUuMT+im17QuwcjxMMxeErEhEftF8YtjEiYEZFmfFnNFQwV
p/Mn4Xfz18yJGDIhYh19EtfLV+szU59y8ajV+vsms8RnfaNsulu/D9GAxeov
yefwe+WbeM0o4fdd6v35//D38D7GEv61/Ln8y/xW3qdYyt/oefn8fgURH2VH
fM5/iH+j+lTrqJQvkP/A+grpIHUv8Kq9S6J3qDZukquhyebtoNlys9Hr97hT
Lp3XRjPoAfoFdnhWC73JnAn8XPVzMNX4QX4mPW4fLvr25+zPz+jUr0juCP+Y
79pOF4rP2d/v7OUGcTu/zpx6HFNf4Vys5VfZ13V0G21Rv0P9JPEi9UVqc62n
hpdDq2iaXH+5ArlGezbEOI+/128snbbRTDoFS/VLpHt43/qtltMbxNdhjH4D
6Z1qyvg13mOsPRiD29CHH/byGX6K2iT85Ywdd8baryqyzNuk7zB6VFwr10b3
IYHX5YwOoFvFB53L9bQc3c5wrnlPG68y5y7aIr9d/Qm5VLnbeTPkspyzkeJK
uWJrWYA/3UHTxdPQon5zlt9mofPvPvtF7hR9j46Tv+dqnd7n3FNdOIst8r+5
y2rV/Eq30Od5dXptolvFnZOsg47GaTUp9Hva497roBX6PIcnzBlvThVvmJrN
9F93bRivlOtDS2l/+r6ez8rfof7vh31veonW81vNqaNl8glXz/3iiLfF491d
tfSEeDD/MH1TfDf/DXpIPIi/n74uHst/je4TD+S30G7POI+fkCH/qvxe/i2e
v8LaluNi3v//L/4DfGhMiw==
         "]],
        RowBox[{"-", "0.0759`"}]],
       Annotation[#, -0.0759, "Tooltip"]& ]}, 
     {GrayLevel[0], Opacity[0.4], 
      TagBox[
       TooltipBox[LineBox[CompressedData["
1:eJwl1HtM11UYBvBXxZbDNBHWXJrhBaeWVsstRRQ0SpMkUGiJpoJNS8OMphmZ
xlxhiU3aupBNZaPLBk6nZeu2rHUx1FyWJq7MrEZWdhHBRKwP64/n97zv8z7n
Ped7fuec1OKl+aVdImKVnw/mR2TcHdG8MOKeByNGpEf8Ij4FZTkRmzIi2vMj
Fk+NWAIjJkccMGYzPcu403x/wLX0I/Raejb9b9oZGEVvotfRp9JbaR3QBqPV
2nGFeRJmRKzFN9KWmWe0dVw071O0JLVkOCweq34MV94VcRR/g4/AD+J1PE9C
s7lexFv1eRbX4mfwBvidb3OnBpNuj9ioX52434SIE4sivpaPmxXxFT4ur+8c
V2odU6yTvh5Xy79Tz743ov/NEVX0K/Fk+eN6jpwZMUS+W3yD+DpYqv9jeA38
aj3luNQ3Zo+N6Do94ic9TkKiuMLYJPweTx+8F38Ot4oP4oN6ncGHcB6tnv+f
4oguEyMGz43ohruXGE8vU79enlBgb3FfXE67HPeGt8SpRRFv48h2HvBF49LV
dlrfJuvrnhtRyHMJXk9/GnJus7f4OehJH29stXiWuJZ3C8yAFZ36fREl/DX4
EfkqvBK/gBv5W/la4GU4QP+Wvpa/uNC3yvfyzBXPgcw7Is5bU+5sZ0H8Du2a
TOvDI/F2vAMy1AbcEtEgbvUd0/if13MgbYzaLvpOqBanjPNNeAP0V1+HX1Wr
xGnL/JeQvCBiz+KIAnP8aY9n4iTaYLVEnC//jZ6He8gH0bviXHkzfToOeSq9
Qt8ceY05puE18qvpva2jzf9W5R6ewyeNO4tboJdaOd9fvn2Sb8mCPtaaQOsG
GdbWS55Onyie0JnrPdAcl+Hz9nCM2mnj28Qn7PX3cBy22+PD9rzJ+ahTq5cf
pTfgL+gL8OvO/EvO/iF6DX5NXsBbrD5XvZI+D5fI39AnXy2LlgnD6UPpVfTl
zsgKOOuctcAo8Sv4grvTAVfwn3X+ttK2QIc7cQHS/HdDod25H6bPPLWND/Db
oxToC+fchx/dg9X0FN5kOMX/MX0sf5M+x6DcefjXHVxpnh3yo3CnfWl1X5fw
N+BtsEi8sBPGX2VtPfmX8+bpv8/4RhhAT6QPopfBQ/CwsZ95Oz70RryLP8J7
8Tb+T/Ee+SferCG8/Xh76F9Ev5/eSE/TfxiMt84C708h7PJu7feuFYmf0Gc2
/xx4lH8f7Ic3eXbDcH1Wyy/V48ub5Pr87J19f/7/7/1/RfQ8uA==
         "]],
        RowBox[{"-", "0.07919999999999999`"}]],
       Annotation[#, -0.07919999999999999, "Tooltip"]& ]}, 
     {GrayLevel[0], Opacity[0.4], 
      TagBox[
       TooltipBox[LineBox[CompressedData["
1:eJwl1H1MllUYx/ELYemqGWFZS9cStRSw1VabQCQEMXAVjt6GFQxwormQMZzR
WkZMcQsn5NAKV0NZtdVGw4mtuf7JmnNivJTTGVTE5npx2ZJScdHnWX98n991
/67rXOc85z73WVSzubw+KSK2+skqjGh6LCKTXi2POCr+fWXEr9UR6xvFdFVl
xDd5Eb+IlzVEvFYRUbUhohI7SyOqn4w4Jf+ZsfX6VHjOy41ok2vwfJi/ma7l
L3w8Yk52xN1rI07oM6jHSfSpHZEfxQI1d2BYXKbPbPVL1Tfz8h+OWPSUceqX
btQH6ViCxehTk6f+kPotKCwyN/9n9ZNYb/2H+UX8Bv7b+vXrdwiXjf0HA+Kc
JyJy8b66XnUbmiLq0GY96/WfqNETaVUR89HFb+ZXGdNOe8wzbZ5B49fxajGj
70Hai4ynI5bjhVURs140t7oFz9kf/J3owV/CX/ao/ectFqfjmtxW63gZmZ7v
xQocUT+U6Lfae8EuY76wjmHed/RAmbnxredRnFU/YtwoxtUO0yF8pGbhM/bE
vFfEh+g1Oo2c5yOyEWsibsqPuEddKs3fFFGAfLnU4ogfaiNu4U/Yl0J+u3N0
0f4Uiecau8+4W9VtE8+nrbQFqTkR/xo7g/PGJq+L2G1sEr1Zbjadg9/kbqSd
ctfTNLnURA3+SLwPukduHp0n16Z3rzk/QIZ4gTm77NGUNXXz9uMB/gG63LoH
6F75Pnqn2vvkSvy3lbQ/0UPNs/Skvcnl/WX/xuzxpH6l/K/tVSU9TmtpNVr1
O2d/v8d+9VMYN+aEmr28fXgV3XgHNeo7aCfK1fbgmPoK9R3eXyduEHfRPd7l
DvoWLaGrMUcuPXFu0G9dObyH9Jxxzj51hu7id+t3RDxXrpm+gtPyTTRFvpF+
6ezP8j5SkG5vp535y/iEXyZ/0ZleQz80rpQW4zgvlX5OjyLFvC3yybxJ30QS
/YoewwXf5A4129HoW9xC6+n9dMC3mEUz8Lq4wJyPoN24YlqEMfdKR739QAt/
N92Fj90dY+6VcWTzJ+iPuF3vg3K9KNCzh+bTNHuRRy+7+8bdS73W9abe78qf
d7ftTKh77A3ee3KtdDtvQu42+hPdRs+oGTX+kj5D4hE8qPYUvU4+GS3iq3W+
Xe9lk3N6RVzijj3nfj2LKc8r5DbKXRIXyZ3hn8afnrPk6hLflDg/cTfzB3HB
c6bcS6X/3+v/AbsSOP8=
         "]],
        RowBox[{"-", "0.0825`"}]],
       Annotation[#, -0.0825, "Tooltip"]& ]}, 
     {GrayLevel[0], Opacity[0.4], 
      TagBox[
       TooltipBox[LineBox[CompressedData["
1:eJwl1H1olWUcxvHf8VCgUBFWyMRkUGxDU8igRHdmzm0ddS/tzEhd8y1wzlrN
ImpF1LJWS7O5oAJDBVdZoAYqrNFc9mL24ksk/TMxyLZ0uXRFa5ba59Af33Pd
9++6nt/9PPe5nyd35SPVjYmIWONnXXFE18KI5ZmIZZhcHjF2ZsQkejMeUKvF
uFTEkfqIo/gan7su/XhE1ayI1KMRhchfEvGF+jH+3fK5ayKunacnvYbeK18n
n5GtxpPy16nn8evlG2oi1uIj6+7Bw8aj9H730ye7F83yHfIxPyKBk2qFFRFf
un5Q/ia19/jvoxPb5QdW6sO/YVnERXrWvEv9omsPyPQgvyjikuvzXF+Ay7xO
fWvVEw0RI/I5S61rfEV+J2/6ooi/6SiajZ/CJvmpMlNKIkrkS1GGmsqIw575
K2wwX8V/UG4abaCrabv6ZnRgh/wvsqdx0vyEzA/o03/Sff4bPOY+++xnjvFu
+VvorbhivF+/MVXuHUW1/iNcbXz9nIjbZMbTkrXuDXMxvtR/wZ+g/hb/bbTr
f0H/e/j9qyJ+Rb89XGD+2rqIYd5C4zPqgzjLqzR/nfcHr8r4N/WhLLyM+Wbe
n7wa4zzrdVqngH5Ad6LDmlvpGzTHPc3gbTffhjz3Vkbz6S46nZf2XKPOx53G
GbXDnvug5/+GtugxbO9+tt583iG1Q7xK4woM2Ms2e7oBW+WO2OvP9Doq/6Kz
2oqneS14Ht3ys2kKi+S75ffIfyr/nP++BeP0v8M6rcbt8mmaVBujtt85SdJS
tVnuLUWLsFt9sn676Eb9OvWbyj/hzDWqJXhJNBkfdPYS9jOJ3Ox5dpZH8KF6
Bf93Z3iH6ya6/l06T60YS/R9Rt9ufpLXSw9gi/ehjWZkL3vXqmkvbVVr4j1B
y9W61Hq8E3P12Wc8jbabb0KFtcvxk3c/Redgvfpi+zNF7pzvx400pTYbLzfq
j4n6D/DOoFjP23kzshnjU4vl6UY9Z9I2+qZcv2/VC3Q93klHvES30DZ6utAz
0mfxo9z3ehynzeaneGOz3zF8p3YV/ZYO3+V9WRHxkHOZsI8L6nwHzP/FBd4o
beD9Q8t4I/QvnOedp/XZ94AW84boOQzxevTuxaVqvXDc+p+YF9iTQZkVvpHL
8ap7X+1ejvE/5jd5zjrzlP/qlfT/3+f/ACH4MB4=
         "]],
        RowBox[{"-", "0.0858`"}]],
       Annotation[#, -0.0858, "Tooltip"]& ]}, 
     {GrayLevel[0], Opacity[0.4], 
      TagBox[
       TooltipBox[LineBox[CompressedData["
1:eJwl1GtM1mUYx/ELlM3mu6bD6IVURgQ9qLVlZkBLHkQmKnjKw3I+ahIEHrFJ
NWdWI3GMucY8RW3N6QtfCBNNPFVb5lJxotW0tK2Gp6V5euGhWh/Xi9/zu6/v
dd3XfXj+//8TqcVV9WkRMcNPw9iI/RMiFk6JWEC5FREDR0dk8ydpuXwKH1gU
8SP/XjwMP8I7xkfsotPVEUfFx3gvnaJGNc/os2oWp/y3IvKoR/1wPoKyqYAS
1Km+SP0ete9QssTaeJ/6i7RoScTMVEQpvhLfZD+7p0Z00QNz79Ne46KJEbfN
v0WvGH+hPrM8ommMHvpf1uMKDZkbkUVteCM+T22KTqrPVd/D/9avGkubFrGd
76CE8XM0tziiX03EPXVb9Om0vwfyLXgunpeMKJnt7MY5NNKczfVqqRn/nLdT
Qt0i+Wpqxd/kC2m1+jpeT7/iteqWGv+i//ZJEb9jO3kH/vj0iAt4Du8SN9j/
eefKFneqeZbnU8bkiG75AuNHX3WXtREDsLFz/L98MDZCLpN/ytuoVa9BpRGX
5lsH73PW8eaVUyZ+FR+KX8ErsIk0BL+GP4VfwyuxKnoMz7XO0/gOvTfo/Rlv
p2H4OPtI8C/FOWrK+BH7fR677rwF/K7/6kVeKVdF3zjfD2qmGa/Rr4IfFR/A
b5jzHZ+MXXQ/ze6vQa4dP+7/OkE97unjFRFL8Eb5ZXwt71ZfyEeJp6rfp7ab
vla/xn8zEn9E7xd4f16pJp2XyKVhXZ6FccZJetm+Cvl8PTvwDLUJbLl183k/
uTOeozq5dLm3+XvOudFaOe4vm+54Zm9TDb4Ov+7ZzDJ3m3m3jE94HxbolzT3
kmc/Qy6dDsltkWvin9A/3pNKcz40PmS8lB/mE7Cv+AFzD9Ju4w28lVpoqPwk
791v3vNiniVei89wJ6/Tn74NxeJCGkNNZdbzfGdZ+7JcmX695u59+L3gfdhg
ua18vfgl+Y3GbdTne/QBTzrnuZneYXM+UtOM/VEY8T4/r2Y1tknuXfEquiA3
4GGOn5RP2Fe4s3Pi8jcizvJ/53l/8fv8Z3Ep/hO/K87Hb/Iz4tfw0/wvcR5+
WL9avWuoxZp1vFf+W3yFfazHUr5763j1lP+/q/8BPZ8XCg==
         "]],
        RowBox[{"-", "0.0891`"}]],
       Annotation[#, -0.0891, "Tooltip"]& ]}, 
     {GrayLevel[0], Opacity[0.4], 
      TagBox[
       TooltipBox[LineBox[CompressedData["
1:eJwl1HtolnUYxvHbA4iCoGji8rh5fhVywuY8Tpyz9NXSudlSUdxUXMrr1qaN
zJro1KiQ8NwSocQIRdGk8hAYKoqFIDh9PVXOA4iaGKKQkn1Gf1z7Pvd1X797
v+d5fu+TWbasKNUiIgr9qS2IODkl4hcqnxGRPyriYV7E+XciBk+NWKE/CBfp
DcAhs/iU6foy7xIdmhRxFa9Rf34a++BFnG5euxHmVkYkrGtczKfxY82qiOg4
IWIgdsCimoh58iWyxbRSfpheNlXI1+ByqqKZsiW0RD7f/LfLIkpp99yIPfQt
VZnxhxkrzd5szRkzHhRHnMX8NyO+4d+35rk6Y17EC/xLfZS/UH9QfsS/8gm8
Yf0FfsyO+NrcT8sj5vK3W/cl7bePbfbxj3V78UeZAtnEu+bQc2u/SkXspEn8
yZSkVSURv8qeo43qRYXuVX4oLsNK2sLfSifM3fOW547f4SVr9+JVvEI37Cdr
pmdPNZMjDpuR6fqgTAK/xyO8Wr075qXNaTMt4m9si+3ouH62bJdx/i+257Wq
imhyvxm8i+71Vbytbs3vpN9dnSvbE7uoC+dEdMNMdR4/C3uoJ/KzsK96DH8s
9Vfft5c++Mw+BuMQOt28D3yg95Camt+z/Dg64T4K8I77LcY695PEKXRM75H8
Yzrlep3nV23W+1iDG3C+fB1WqafK7aAGKpXP4+c0/2/MxZGYlK/3fIepX3q/
02QP2GuL5n3wD/Fy8DAOx1wqs7d96rT3nlPt/eB7zmvCrJb6r+mn1JUym7z7
gZ5rP+pFL53Dp87han4P+Qq5DHzsLP6mV66uN6+fuWuxjRk7+T/pH6FQNzn3
L/wG16h/xhRW0j2/1aQ11a6XWlPkXPdWH5XviUn1U7/bkdhVvY6fgaPVad+C
z5zfT96I+Ji/HuvVr5t/y5oL+j+Yf9f1bepsfgN2wps4Si7buo6eXa7ra74x
V2iXNWut/d036DrVyk7wvhv1GvRWq+vozzHOn/5Hslv5W+iVUmv45/gf8jfx
vqDl8mn+af4H/IW+OQtotu9CI//JfGeCv1F2qeznmJrx//fwP8RhBws=
         "]],
        RowBox[{"-", "0.0924`"}]],
       Annotation[#, -0.0924, "Tooltip"]& ]}, 
     {GrayLevel[0], Opacity[0.4], 
      TagBox[
       TooltipBox[LineBox[CompressedData["
1:eJwl1Ftsz2ccx/Gvi+3KErFgsdZIJmxxKFpVDStF6p86n6aEtRJaVZ1qWlsp
idpic0qRHq5G4gIhkZpziFPGXHSLQzWlaTFELLugu1ji8Gp28f5/nu/3+Xy/
z/P8/s/vN6igdO7aHhEx0U9XfkTesoiVhRGlZRGTMiNWGV/LjVg/L+I3WkHL
sWd6RC2qsiNuyrdNiOj7dUR1TkS9/J+LI7LVV/LeNn8XW3gbzd0x1zUuYtSM
iF4ZEWNoKn4wv5O/98SIdHFKXsR42iHXjn7ySdZIxll90szPs8Yjc9P4atbq
gWr5n+lPaNEzsyhiArbJZ9Bx6FKToLk4Kz+HzkaxNcrmOyOeW6OUllgj2z43
GC+mnfzvrLdlSsSHMyOWl0d8QPPpVrnP10cUGN/S63pFRDMtFh82l5RQ9631
CyLeyg9Yzo8hqJUv1ecCXwn/iK8ibqhPoeXiVH1bzK0zPsp3DG/ETTR1QcRo
nLDXRnt8IzdriTVojfxWJKydsdrzQArSMRaLZkVcUdPIn4vNctX4hv9Huh0V
2IYaXOV/wH+O1vNfpA/1b8MTe520MGIyLnX3naqfPtWYJndNfEb+FDLFnfbb
ptcLfQbPjrhsfhAdiH/lk+hzc5/RS+Yy1AzMiugvnrI0og9NFqfJp6O3OJX2
oq/VP17hDO7yX/S2Z9xJO/DKXE+eVvpU/yr7O6//r/Z1EkP1OC2ulK/AMHGH
s7U4/308UfPU//UMx/iPo4T/CF1D73oWC42LeQvF+/iL6BrxSHrA3WzwruyS
r6O/iDeqqaf7xDny+2mD+D//cR3dK54sX0t3O0O+/TQ40y7jHWh3f1f7v9vo
A7xzT/9Qu0puJaqctc7zTlbzKf52B1+iSH67/CfOeZC/Xd1rFMpnqduv1xK+
pTjk+9Do3uYZT+ctM5egG+gz70slzRF/r/40zqCp+/2W7yP/Be1L02gz/xj6
cXeebyM2oYq/1fv5u3d3sPEt2sQ71x4T7v5N8T3fpVbcR0/7KeL/iH7JP1yP
ERjWPcZ3/CNps+/OP747WfqsUPcq//9v3ntKVAwl
         "]],
        RowBox[{"-", "0.0957`"}]],
       Annotation[#, -0.0957, "Tooltip"]& ]}, 
     {GrayLevel[0], Opacity[0.4], 
      TagBox[
       TooltipBox[LineBox[CompressedData["
1:eJwl1NlPVWcUBfBt4qOitKbaRInaxBGlZWjRNgIOURunOFCHqqgPBbRAQdFL
uA5x6oNNTDRV/wM1Djw4XEoRUKN1AI2YqhTF4aGxiWmt8c0m/d34sO4631pr
72+fc75zR62vXlzVLyKG+0nOiLg2L6J2ScQPcLE+YuCUiIz1ETW1EYPwt2to
eEAavOKaiMnzedMiqtVk4E59bsP5uRHnoLc8osv6Af4DeuAXvcerb1SbhMdq
e2GG+iEzI3bxP8BlX0aMk1tnPdS6kr98c8QK+AZm0zbJFMuMqIvIgnqzboXV
/CR/tVkbccmCiBvqXy2NuImnW5+siDgBf8v8A8PXRvyLX0M7vQMq5CYWeUjL
IrLxRut7+v20IaIbV9unjL7HnnvhrHmOmudT+VP4O7P/PEftLDoutz5N385v
wxXWlbyUHg9oD2Ht156hPqOXm4NfWxlRBy9WRVTJbnbdJ9+00HPm34IU/Rkt
pzQiob4BeuQeQbdZ78M995eqithnzif6X1HXAblq8iBzUUSrPkPxEHhrvmH4
Y7hEz8J/mqGH3qf+stoW+BXa+Y32fMl/ypuq31dw0YzPzTXLdZJ/Re62/AVo
5s2kv+D3uu9qXivtiB4d9ujUZ7fnuwe2uI8EbINm+XxcAAtkU87hGfk2+YRs
A+Tw8iAXDsoX6j8FQv8RarKgST4vrZvrnXd500zH9DnpHdfokes85cF1+iQ9
NtE+s26RnYSDdo33n/OUbX2cPhZXynXRrvLGWH8CZbT++q7B2+Vu8HbghPP4
dKUzi9txG/zluxnl3Y+E7/VJOIcN0MIrd68l6XtVn41/pO2Hw97rIXjkW/tc
9gvYSS+VnyB3Sf5DnE9L6b/PWczS/yP9+3x7Rb7DO2o75e7iTPoB+mBcwMtR
Nyh9rl3/vsKzwbvkmtNnDzJ4rfhNoXr+EXsk7XHLf8pvUKPXdM/78Nz3/zX/
AzG176M=
         "]],
        RowBox[{"-", "0.099`"}]],
       Annotation[#, -0.099, "Tooltip"]& ]}, {}, {}}}],
  AspectRatio->1,
  Frame->True,
  PlotRange->{{-1, 1}, {-1, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.4080030687264*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
\:0421\:043f\:0435\:043a\:0442\:0440 \:043d\:0430 \:043a\:043e\:043c\:043f\
\:043b\:0435\:043a\:0441\:043d\:043e\:0439 \:043f\:043b\:043e\:0441\:043a\
\:043e\:0441\:0442\:0438\
\>", "Subsection",
 CellChangeTimes->{{3.403841185887*^9, 3.403841187376*^9}, {3.405939184942*^9,
   3.405939194337*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"incrs", "=", 
     RowBox[{"Sort", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"GetIncrementsM", "[", 
         RowBox[{"mat", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Kappa]", "\[Rule]", "\[Kappa]1"}], ",", 
            RowBox[{"\[Omega]", "\[Rule]", "\[Omega]1"}], ",", 
            RowBox[{"G", "\[Rule]", "4"}], ",", 
            RowBox[{"\[Epsilon]", "\[Rule]", "0"}], ",", 
            RowBox[{"Re", "\[Rule]", "Re1"}]}], "}"}]}], "]"}], "//", "N"}], 
       ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Re", "[", "#1", "]"}], ">", 
         RowBox[{"Re", "[", "#2", "]"}]}], "&"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"Print", "[", 
       RowBox[{"Max", "[", 
        RowBox[{"Re", "/@", "incrs"}], "]"}], "]"}], ";"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PointSize", "[", "0.04", "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Point", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Re", "[", "#", "]"}], ",", 
              RowBox[{"Im", "[", "#", "]"}]}], "}"}], "]"}], "&"}], "/@", 
          "incrs"}]}], "}"}], "]"}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Automatic", ",", "Automatic"}], "}"}]}]}], "]"}]}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"\[Kappa]1", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Re1", ",", "1", ",", "1000"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Omega]1", ",", "0"}], "}"}], ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.405938508762*^9, 3.405938550267*^9}, {3.405938594012*^9,
   3.405938642612*^9}, {3.405938702244*^9, 3.405938759939*^9}, {
  3.405938795005*^9, 3.4059388401289997`*^9}, {3.405939166532*^9, 
  3.405939176097*^9}, {3.405939206744*^9, 3.405939210668*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`Re1$$ = 194., $CellContext`\[Kappa]1$$ = 
    0.362, $CellContext`\[Omega]1$$ = -0.6199999999999999, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Kappa]1$$], 0, 1}, {
      Hold[$CellContext`Re1$$], 1, 1000}, {{
       Hold[$CellContext`\[Omega]1$$], 0}, -2, 2}}, Typeset`size$$ = {
    360., {177., 182.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Kappa]1$1141$$ = 
    0, $CellContext`Re1$1142$$ = 0, $CellContext`\[Omega]1$1143$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`Re1$$ = 1, $CellContext`\[Kappa]1$$ = 
        0, $CellContext`\[Omega]1$$ = 0}, "ControllerVariables" :> {
        Hold[$CellContext`\[Kappa]1$$, $CellContext`\[Kappa]1$1141$$, 0], 
        Hold[$CellContext`Re1$$, $CellContext`Re1$1142$$, 0], 
        Hold[$CellContext`\[Omega]1$$, $CellContext`\[Omega]1$1143$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ($CellContext`incrs = Sort[
          N[
           $CellContext`GetIncrementsM[$CellContext`mat, {$CellContext`\
\[Kappa] -> $CellContext`\[Kappa]1$$, $CellContext`\[Omega] -> $CellContext`\
\[Omega]1$$, $CellContext`G -> 4, $CellContext`\[Epsilon] -> 0, 
             Re -> $CellContext`Re1$$}]], Re[#] > Re[#2]& ]; Show[
         Graphics[{
           PointSize[0.04], 
           Map[Point[{
              Re[#], 
              Im[#]}]& , $CellContext`incrs]}], Axes -> True, 
         PlotRange -> {Automatic, Automatic}]), 
      "Specifications" :> {{$CellContext`\[Kappa]1$$, 0, 
         1}, {$CellContext`Re1$$, 1, 
         1000}, {{$CellContext`\[Omega]1$$, 0}, -2, 2}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{404., {246., 251.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.405938551059*^9, {3.405938594939*^9, 3.405938642959*^9}, {
   3.4059387049630003`*^9, 3.405938730385*^9}, {3.405938817241*^9, 
   3.405938840792*^9}, {3.40593921275*^9, 3.405939233182*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\:0417\:0430\:0432\:0438\:0441\:0438\:043c\:043e\:0441\:0442\:044c \
\:043e\:0442 Re", "Subsection",
 CellChangeTimes->{{3.405938365292*^9, 3.4059383655769997`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"maxLogRe", "=", "2"}], ";"}]], "Input",
 CellChangeTimes->{{3.405941978415*^9, 3.405941983474*^9}, {3.405942090034*^9,
   3.405942090667*^9}, {3.405942219318*^9, 3.405942219549*^9}}],

Cell[BoxData[
 RowBox[{"Monitor", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"lincRe", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"GetIncrementsM", "[", 
        RowBox[{"mat", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Kappa]", "\[Rule]", "0.5"}], ",", 
           RowBox[{"\[Omega]", "\[Rule]", "0"}], ",", 
           RowBox[{"G", "\[Rule]", "4"}], ",", 
           RowBox[{"\[Epsilon]", "\[Rule]", "0"}], ",", 
           RowBox[{"Re", "\[Rule]", 
            SuperscriptBox["10", "logRe"]}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"logRe", ",", "0", ",", "maxLogRe", ",", "0.1"}], "}"}]}], 
      "]"}]}], ";"}], ",", "logRe"}], "]"}]], "Input",
 CellChangeTimes->{{3.4059416004960003`*^9, 3.4059416523529997`*^9}, {
   3.405941887079*^9, 3.405941892104*^9}, 3.405941955633*^9, 
   3.405941993424*^9, 3.405942028795*^9, 3.405942062778*^9, 3.405942204176*^9,
    3.405942293234*^9}],

Cell[BoxData[
 RowBox[{"PrintRange", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", "maxLogRe", ",", "0.1"}], "]"}], ",", 
      RowBox[{"Log", "[", 
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", "lincRe", "]"}], "\[LeftDoubleBracket]", 
         RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "]"}], "]"}]}], "}"}],
     "]"}], "//", "Re"}], "]"}]], "Input",
 CellChangeTimes->{
  3.3914128555657997`*^9, {3.405941717383*^9, 3.405941794566*^9}, 
   3.4059418739820004`*^9, 3.4059419967720003`*^9}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"0", ",", "maxLogRe", ",", "0.1"}], "]"}], ",", "#"}], 
          "}"}], "&"}], "/@", 
        RowBox[{"Transpose", "[", 
         RowBox[{"Log", "[", 
          RowBox[{"Abs", "[", 
           RowBox[{"Re", "[", "lincRe", "]"}], "]"}], "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "2"}], "}"}]}], "]"}], ",", "1"}], "]"}], 
   ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.3914128525008*^9, {3.405941823874*^9, 3.40594186209*^9}, 
   3.4059420015690002`*^9}],

Cell[CellGroupData[{

Cell["\<\
\:0418\:043d\:043a\:0440\:0435\:043c\:0435\:043d\:0442\:044b Log[10, -incr] \
\:043e\:0442 Log[10, Re] \
\>", "Subsubsection",
 CellChangeTimes->{{3.405942115705*^9, 3.405942140541*^9}, {3.405942353986*^9,
   3.405942358684*^9}}],

Cell[CellGroupData[{

Cell["\[Kappa] = 0.5", "Text",
 CellChangeTimes->{{3.405942012803*^9, 3.405942017723*^9}, 3.405942170468*^9, 
   3.405942234717*^9, 3.405942342101*^9}],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   GraphicsBox[{{}, 
     {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1: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
       "]]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{Automatic, Automatic},
    ImageCache->GraphicsData["CompressedBitmap", "\<\
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\
\>"]], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<lg Re\>\"", ",", "\"\<-lg(-\[Lambda])\>\""}], "}"}]}], ",", 
   
   RowBox[{"TextStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.405942313825*^9, {3.405989354414*^9, 3.405989406137*^9}, {
   3.4059894447279997`*^9, 3.405989451835*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[Kappa] = 0.1", "Text",
 CellChangeTimes->{{3.405942012803*^9, 3.405942017723*^9}, 3.405942170468*^9, 
   3.405942234717*^9}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1: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
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.405942228074*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[Kappa] = 0.01", "Text",
 CellChangeTimes->{{3.405942012803*^9, 3.405942017723*^9}, 3.405942170468*^9}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1: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
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.405942099578*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
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
cidqscP7LQv4efOvD5W4qrbk/ycajEI=\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[Kappa] = 0.001", "Text",
 CellChangeTimes->{{3.405942012803*^9, 3.405942017723*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1: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
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.4059418476140003`*^9, 3.405941862894*^9}, 
   3.405942003106*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
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
AVaJfg==\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[Kappa] = 0.0", "Text",
 CellChangeTimes->{{3.405942012803*^9, 3.40594204646*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1: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
2ZflUW/NT+mYd3C7QQnqvUI6mAH1/ujhRUG9daoaL6LeW1WHMO+uGuZ+1JtN
aGI16m0s3HME9RY8yo15azROJ6DerOr94qi32EtpzHuZtRkP6n2nY3P/ccRb
Sf99Oup9cYg3yhrxFjZjSilBvA+xVGSg3k2JEVrTiPep5JbHqPfS8YEM1Jvu
TEMb6q37jHdl1Enk831YcEvdVUHwLlgqbMUTLADe16qWu+nF8YP35rsSYe7Z
fOBNayCd+fobL3i/Z5ap7GvlAe/xm/ub9Qa4wfvcgqVIphAXsZ7qcnyvNIUD
vJ37TwcGn2Ajvr9tXYpo7rKAt0ODG92Zt0zgPWzqrfW7mQG87Uv8LuxipQfv
ji33UrOUaMG76fz6aqNXCxSqd4fN1h1rGGfBu8/ENIdl3yR4u2+1VuqIGwXv
etvWndcHB8H7C4VGRSuoG7xzZMSWjSu3gPcWxotMhxIrwXuCsfygekYGeBuy
S6Z7RHwEb4WnVb67/WvBO+m8wSHHmDbwPvRM8fxrul7wbtzLst193TDx/O07
UfGsaQy8t5C86UneuSRv9//De3bX/997jOR9huTdT/J2JHm3k7xPkLw7Sd6W
JO9mkvd7kvdjkncAybtkM+5deBj3rtmMe9fx4t5h3a6Y92LAN8ybayPurcpZ
jXlLxOLe3u9xb2433Dvefg7zZuZd3/R8J+Et8pJ9rsWS8Pa4ICYs7Ex4/9Ez
U9vjQ3jbnbYy9QknvD/G8jp9SCG865y8A8Y/Et4bV183O5BKeCfdkgv8UssJ
3mzjc0XraQlvvYLtdDGyhHeuSrgWnwnhHc7Ye8HjMuH9fFVV6kAU4b3+nmnP
oRI68N5TKLyyZJQGvAu/uOec0yC8T1p3qhrdmgFvky6eWPlfE+C9br+mMIs8
4W3mEiz6dXIAvHNvrKXzCusC72EF8/mNms3gveBX9qorqwK8P30NP13aE0/k
NRkW7ZPuX8B721Hu5oIrv8A7Z0PWMZnH7eBdZej49MwM4b2ygMbAIonwvsy9
o8PdYhy821oeNaLeO3NKZlFvS4e8pai3C2/QetT7gk2gCer9MKrtDOpNZ3TR
H/V21LthgnqPVPYFoN5h+2W/oN77Lg3Qot7tEwmaqPcMv50L6t3TEpCCepvZ
imLeG1ccl0K9d7U9fYd6X1tltgb1jr6mH4N6l/ZrLkW9d30PFUS9OdzUaFHv
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
/h6Sy/P1Fgd4G3B82amezgbepde/ecf+YgHv3bPVH/jpmcG75NzvKU95RvDW
7WlXHjKlB+8vR/tOWbrRgveN9C7DsB2LFKq397OJfJdHs+DNFMSoZtI7Cd4+
1wSeK2qNgfcFRykx9oAh8NZ5Zytd/u4PePc99OLwPdwK3sPD2n88F6rBO79m
pOMbcw54W1qK1Z3sycmlenPUs8fJqNeAtwNbt339pVbw3qhU7LWi9g9487Hv
K1MNHwLv+v7tB8x3joF3uIFGx5XpSfC2NZY9G5EwC97yJO8hG9w7ieTtQPKW
I3n/IXnvIXl/I3nrkbyLSN47SN5F/4f3J5L3JZL3NZJ36x3cW5/k7UjytsnG
vX+SvIt6cW+R87i3vSvufbkV91ZeinubK+Petjtx76Bbepj3NMl7vT3uHeXk
+8vOh/DWXHJjMiKc8O6R8BX4mUJ4Fz30VOIqJLzDX2Tt3lZL7R9upoy9X1Y7
VctNrLdomvKeoCW8mfNW7qqWJbxTNgne1DUhvGfGVPLSLhPeJYZ6s+LRTEQ+
p+tSDSxhAG+r1JnTc6N04D0SuDHBfjnhbdVj+ynt1gJ4VyX3bgz8NQPes6U3
X9jLE94xZ+gk9NxGwds1tl1G79EgeL//clqYRqsbvCd09Sbf/m4Gb4GuE7lt
Cz/A+wtDmP0+1jTwTjyUKnl2rBC8nSX3vf+sVgfepynLzz+fbgPvhIWrd4b3
94L3yNkQs+UWw+C9LVa+ncI2Dt6xTaqnbbKmwHvDWs6Zm3Zz4J2wzgbzDqB1
xLz3nTmHeY85emDe0ZVGmPfFdUw1qPfTyN88qLcDuwjm/cltgzfqrfFK9gPq
HbRz5STqfcY7RAn1pvt85xTq7VpjGYd663zozUW9v/70Uka9H4QyPke9W3/E
i6LeEeEvVqDeGust6VDvr+fzxlDv53TiWai3udeRaTPEu2XIxgH1fhnw/g/q
LXEoLRD1/t3MH41610Q8sEC9IwNbMG+TC9nOqHeKfuEC6u2b/uY1vwjhrWDB
+mOnIuF9afXIgOcWwlvmogdH1j7Ce0rug+yQPeHNe4/ef/cCF3ivPEv3+f0q
TvA+fpuNRt6IHbybpPI0w1xZwfuL1e7zzJHU+Z8hik7E6mSXIkbw3hyq09s2
RA/ekg8cVpgIE94OqR+O5OnQgPfEsmLFw1Vz4C3+pCVyw8pp8Nbc/VJA6MI4
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
SODeB2xx73CSdyPJW5Tkbenyn/f/A37N420=
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.405942037803*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
\:041f\:043e\:0434\:0431\:043e\:0440 \:043f\:0430\:0440\:0430\:043c\:0435\
\:0442\:0440\:043e\:0432 \:044d\:043a\:0441\:043f\:043e\:043d\:0435\:043d\
\:0446\:0438\:0430\:043b\:044c\:043d\:043e\:0433\:043e \:0437\:0430\:0442\
\:0443\:0445\:0430\:043d\:0438\:044f\
\>", "Subsubsection",
 CellChangeTimes->{{3.4059425844849997`*^9, 3.4059425942980003`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"linc", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"R", ",", 
       RowBox[{"GetMainIncrement", "[", 
        RowBox[{"100", ",", "0", ",", "1", ",", "R", ",", "2"}], "]"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"R", ",", "1", ",", "20001", ",", "100"}], "}"}]}], "]"}]}], 
  ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"linc", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{"(", 
         RowBox[{"GetMainIncrement", "[", 
          RowBox[{"n", ",", "0", ",", "1", ",", "1000", ",", "2"}], "]"}], 
         ")"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "10", ",", "250", ",", "10"}], "}"}]}], "]"}]}], 
   ";"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"gr", "=", 
   RowBox[{"PrintRange", "[", 
    RowBox[{"Last", "/@", "linc"}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", 
     RowBox[{"NumericQ", "[", "E", "]"}]}], ",", 
    RowBox[{"Remove", "[", "E", "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cutout", "=", "6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ltest", "=", 
   RowBox[{"Last", "/@", 
    RowBox[{"Drop", "[", 
     RowBox[{"linc", ",", "cutout"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"lna\[Lambda]", ",", "\[Lambda]"}], "}"}], "=", 
   RowBox[{"CoefficientList", "[", 
    RowBox[{
     RowBox[{"Fit", "[", 
      RowBox[{
       RowBox[{"Log", "[", 
        RowBox[{"-", 
         RowBox[{"dif", "[", "ltest", "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "x"}], "}"}], ",", "x"}], "]"}], ",", "x"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["E", "lna\[Lambda]"]}], "/", "\[Lambda]"}]}], ";", 
  RowBox[{"Print", "[", 
   RowBox[{"{", 
    RowBox[{"a", ",", "\[Lambda]"}], "}"}], "]"}], ";"}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ListPlot", "[", 
   RowBox[{"ltest", "-", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"a", " ", 
       SuperscriptBox["E", 
        RowBox[{"\[Lambda]", " ", "x"}]]}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "1", ",", 
        RowBox[{"Length", "[", "ltest", "]"}]}], "}"}]}], "]"}]}], "]"}], 
  ";"}]], "Input"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\:0417\:0430\:0432\:0438\:0441\:0438\:043c\:043e\:0441\:0442\:044c \
\:043e\:0442 \:0442\:043e\:0440\:043e\:0438\:0434\:0430\:043b\:044c\:043d\
\:043e\:0441\:0442\:0438", "Subsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{"linc\[Kappa]", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"GetIncrementsM", "[", 
      RowBox[{"mat", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Kappa]", "\[Rule]", "kval"}], ",", 
         RowBox[{"\[Omega]", "\[Rule]", "0"}], ",", 
         RowBox[{"G", "\[Rule]", "4"}], ",", 
         RowBox[{"\[Epsilon]", "\[Rule]", "0"}], ",", 
         RowBox[{"Re", "\[Rule]", "1"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"kval", ",", "0", ",", "1", ",", "0.01"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.407896531118*^9, 3.407896537219*^9}}],

Cell[BoxData[
 RowBox[{"PrintRange", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", "1", ",", "0.01"}], "]"}], ",", 
      RowBox[{
       RowBox[{"Transpose", "[", "linc\[Kappa]", "]"}], 
       "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "}"}], "]"}],
    "//", "Re"}], "]"}]], "Input",
 CellChangeTimes->{
  3.3914128555657997`*^9, {3.4078960249700003`*^9, 3.4078960255629997`*^9}, {
   3.407896550877*^9, 3.407896551049*^9}, 3.407897984189*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Quadratic", "[", "l_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"f", ",", "tmp"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"f", "=", 
      RowBox[{"Fit", "[", 
       RowBox[{
        RowBox[{"Chop", "[", "l", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "k", ",", 
          SuperscriptBox["k", "2"]}], "}"}], ",", "k"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"tmp", "=", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"k", "/.", 
         RowBox[{"Solve", "[", 
          RowBox[{
           RowBox[{"f", "\[Equal]", "0"}], ",", "k"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"#", "\[Element]", "Reals"}], "\[And]", 
           RowBox[{"0", "\[LessEqual]", "#", "<", "1"}]}], ")"}], "&"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "tmp", "]"}], ">", "0"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Coefficient", "[", 
           RowBox[{"f", ",", 
            SuperscriptBox["k", "2"]}], "]"}], ",", "tmp"}], "}"}], ",", 
        RowBox[{"Coefficient", "[", 
         RowBox[{"f", ",", 
          SuperscriptBox["k", "2"]}], "]"}]}], "]"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.407897500934*^9, 3.40789758494*^9}, {
  3.4078976705959997`*^9, 3.407897672285*^9}, {3.407897741601*^9, 
  3.407897758604*^9}, {3.407897817299*^9, 3.407897834098*^9}, {
  3.40789786863*^9, 3.407897882273*^9}, {3.4078984457320004`*^9, 
  3.4078984912799997`*^9}}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"0", ",", "0.1", ",", "0.01"}], "]"}], ",", "#"}], "}"}], 
         "&"}], "/@", 
        RowBox[{"Transpose", "[", 
         RowBox[{"Re", "[", "linc\[Kappa]", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "2"}], "}"}]}], "]"}], ",", "1"}], "]"}], 
   ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{3.3914128525008*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"GetIncrementsM", "[", 
    RowBox[{"mat", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Kappa]", "\[Rule]", "0"}], ",", 
       RowBox[{"\[Omega]", "\[Rule]", "0"}], ",", 
       RowBox[{"G", "\[Rule]", "4"}], ",", 
       RowBox[{"\[Epsilon]", "\[Rule]", "0"}], ",", 
       RowBox[{"Re", "\[Rule]", "1000"}]}], "}"}]}], "]"}], ";"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.3918669947102003`*^9, 3.3918670365532*^9}, 
   3.3918671272841997`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.04600000000000001`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.3918670372032003`*^9, 3.3918671276122*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ProgressIndicator", "[", 
  RowBox[{
   RowBox[{"Dynamic", "[", "k1", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.3918673854652*^9, 3.3918673979812*^9}, 
   3.3918676154412003`*^9, 3.3918679632042*^9}],

Cell[CellGroupData[{

Cell["\[Omega] = 0, G=4", "Subsubsection",
 CellChangeTimes->{{3.39193441062*^9, 3.3919344113900003`*^9}, {
  3.403841391001*^9, 3.403841395659*^9}}],

Cell[CellGroupData[{

Cell["Re=1", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Kappa]max", "=", "1"}], ";", 
  RowBox[{"d\[Kappa]", "=", "0.01"}], ";"}]], "Input",
 CellChangeTimes->{{3.407896569236*^9, 3.407896572324*^9}, {3.407898217191*^9,
   3.407898222105*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"incsRe1", "=", 
   RowBox[{"Monitor", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Take", "[", 
        RowBox[{
         RowBox[{"Sort", "[", 
          RowBox[{"Re", "/@", 
           RowBox[{"GetIncrementsM", "[", 
            RowBox[{"mat", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\[Kappa]", "\[Rule]", "k1"}], ",", 
               RowBox[{"Re", "\[Rule]", "1"}], ",", 
               RowBox[{"G", "\[Rule]", "4"}], ",", 
               RowBox[{"\[Omega]", "\[Rule]", "0"}], ",", 
               RowBox[{"\[Epsilon]", "\[Rule]", "0"}]}], "}"}]}], "]"}]}], 
          "]"}], ",", 
         RowBox[{"-", "10"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k1", ",", "0", ",", "\[Kappa]max", ",", "d\[Kappa]"}], 
        "}"}]}], "]"}], ",", "k1"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.3918671489342003`*^9, 3.3918671597522*^9}, {
   3.3918674039161997`*^9, 3.3918674115652*^9}, {3.3918675198992*^9, 
   3.3918676012472*^9}, 3.3918676424242*^9, {3.3918677601272*^9, 
   3.3918677621582003`*^9}, 3.3918679703932*^9, 3.407895165237*^9, 
   3.407895265352*^9, 3.4078965761429996`*^9, 3.407898227981*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PrintRange", "[", 
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", "\[Kappa]max", ",", "d\[Kappa]"}], "]"}], ",", 
     RowBox[{"Last", "/@", "incsRe1"}]}], "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.3918678217321997`*^9, 3.3918678281172*^9}, {
   3.407895144507*^9, 3.4078951467320004`*^9}, {3.407896583791*^9, 
   3.407896603865*^9}, 3.407898232032*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJw9kgtQlFUYhkknLMSBiWX+8w+C4SVBchlZoEVbXi+gTLgJm9Jg5oVEHEQB
dVKwCUgJUYLNIJJEERhNdLCyCEPxpJJcFrmYC6JyE9hlYQGNxcRb7HZO38w/
/5z/8n3v+z6fa0SsKnKSlZVV5MRlvvOiHsuTn7oKdJ+kdEVX4gFownfvmDqT
n7NBtk33WzRxLndJHQgtPw5Rmtt56P/3xRiJ2Bs5PnHOO2quM5j0Z2Z1+iz+
fSlWZ/TY+M0W6GCo+clP+Hpv5fzX5vD/f8Fi+TGvxxNnm5aiOIXNb9AEy52s
5/J+F/H39bR+bzeBuq/Lumpyu4Qs+e8n9rvz/pWoyPJb/GieQIsn/m4poqhp
O1Of/Daf9wf+eav/PU+pQGWWuoY4f7uK5558/nVo07a7Di4Q6DWT28SEKnxa
kpkyLuN6buDKZt8ON1+BqiwDq5Hntcl/j5zrqwF8A4p6Fwq0K9HcsBZBBSvf
2K3gejVQfzVDPXOxQOPN8uLq4XXlqOvDpVz/TTg6NdR1BAr0PxqNqFtlkz0U
xP00YqRQk+S8UqBBlgFNyFbWZ8es4v6a0LbsSetdlUDN09ZlNcOteKdqWxj3
ewv5YeopTmsFarHTcgv+efdfGD7m/v+C924RdzcJdIZZjsttNIf4NgxE8jxu
YzgmvGx6tECjtphLi8LVbU+37+D5tGCZcunpjp0CNXeTlLYgtj2Yxu/hebXC
Wtr9/uzPBDpmbmdqxeXtb370OJnndwfOfqFGQ6pA/S0N21DiMDTt5SGeZxvs
co9XydQCtchLvYuT4+84p+fwfO/hYOgl55d5Aq3XmOseIjThjTkFPO/7KJgb
7a88JVBHi8B2GCbvjJ9zjuffjsIbM3a5/CxQS7t1HQiPD1bKyzmPTjxKML2+
q5L76UR1feCFm9c5n04MDR7+ILiO++vEfInCpG/ivLogsRotPN3K/XYh7Els
VFoH59eFz0e+UR7s4/67of4hcmOJkfPshqbN9qxxlOfRjZjAZrnqGef7AEu0
Lo6tkwnL5wH2lyQGJ00ljPcDlLtn6FY4EJZXD/REMC1wIox/D3ZkPU1SzCIs
vx6sd/DJjvYgbB964Z53R3FRRlievXhlK0l3f5ew/ejFQ1+/LyoCCMu3D1Ps
v/eJVRK2L304EnThfEAYYXn3oXKf7fNFGwjbHx3K1gbOW7OVsPx1qKd2Aep4
wvZJh8oUzw+NiYTx0GONIiEu5gBhPPSQbG06Ni2TMB56SK09+htzCeOhR2HG
lxFlJwnj0Q/b6hHHyrOE8ejHtswUe/2vhPHoR+3VtRu8KWE8DPB5ccquqJZQ
tYWHAVrJd1Lv24TxMCChdEuNroMwHgOQu4QYLxs4jwFEncs5XWbiPAYwJtv3
arOVyHgMYkwTKLG3FRmPQWgLF3bFCSLjMYgTBfkJozNFxsOIYzY/GvKkIuNh
hC7i/JLNC0XGw4jw9luHQ5aLjMcQZFil3aASGY8hfKIKlh5ZLzIeQyhu0hfo
okXGYxgNVYpFG/eIjMcwpitX2zzbLzIew/CSuTtVqEXGYwTzvy1JzM8X6b/P
vwTw
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, -6.4},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.3918678286452*^9, 3.3918679807111998`*^9, {3.407895144924*^9, 
   3.4078951476219997`*^9}, 3.407895180034*^9, 3.4078966048310003`*^9, 
   3.407896674898*^9, 3.4080023989048*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"0", ",", "\[Kappa]max", ",", "d\[Kappa]"}], "]"}], ",", 
           "#"}], "}"}], "&"}], "/@", 
        RowBox[{"Transpose", "[", 
         RowBox[{"Re", "[", "incsRe1", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "2"}], "}"}]}], "]"}], ",", "1"}], "]"}], 
   ",", 
   RowBox[{"PlotRange", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.3918676696212*^9, 3.3918676814692*^9}, {
   3.3918677304552*^9, 3.3918677316562*^9}, 3.3918679915962*^9, {
   3.407898058804*^9, 3.407898059625*^9}, 3.40789823571*^9}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1:eJxd2nk4VO0bB3BtKq1vqplBiYRihiLLmdd5VNMqQtmKiFbxSmkRsqVCIamE
IkT2SqJNk8gSkuxLSEKRElrVT+/vOvd5n3P+cX3NzHOe5/6e6/r8MSNj62S8
Y7SIiEj/GBGRP3+py/tnvYfjZoHQbWb66rajx9EA+mzrDDkM+bftlvEYyTlz
/d4b5VxBUmyL2yHwejzKlhKVSh3JEZf+XElIM7LU/Dm8Px0tS5i/9/tI7jH6
85+byCklaiN3C/X52+i+dfuM3SNZrDZun45YNvJKe5iUvIVa7y76GTmJMziS
F1oG5w0qPkClSwu3rbak1s9FtXvH+l0dyfEjn66NEyL5/o++Y6yo+z1GD6Sr
rB1Hstq/1xOk/nSqRIsVdf98ZC4qedt8q0D4ZFBx5A4FSHPBaZWGrdR+CtGs
zVOD7KwFQuN/b1iEeiJ3vhiwpvZXjDbb7/9xxkYgbDv6Z8ESdOicwlSVbdR+
S9GHoXOT6kay85/t7StDm1Y2D56ypfZfjg4/0H2+zE4g/H8bFciubUbE6O3U
eSpQq9oj82cjec2/N3iBNrQXTonaQZ3vBSrxKLjvslMg/HM3y+BKpBK5c4fJ
Luq8L9FDb6cp5G6B8N/j1L5ES6vv3uHtoc5fhZapqm9XsBcIpf9sZ241aito
YyvupeZRjcb+rK9VdRAId+38c9WgcWPXxC9zpOZTi7bss/fe/I9A+Ge1mem1
SPdx6H43J2pedSj0q5xb/D6BcOjPcoN1aI70xSvVztT86lFH2b7WqQcEQvLf
BRvQ7JvrBIYu1DwbkNjE8rJLBwXCf7fn14hmyN/2en+Imm8TKn1dYLPyiEBY
VvrnakL6nEbnRFdq3s2ofHZD9l9uAuGsfzf4Cp2alK1x3J2a/ytUcfBA/y8P
gfDf5SxbkHngnD5vT6qPVlQc/Vx1ijd1nlZ060TG/Rgfqp9WtKS/99zfx6nz
taLqioKHrX5UX23o5jU3nTMnqfO2Id4rS9Zyf6q/NhQv/2jD7wDq/K+R2L3f
7/JPU32+RkWpPr2hQdQ8XiNbnVtb9oRQ/bYj59m/tNeEUvNpR9EXG06rhFF9
t6PI2UJz6QvUvN6g3nmLYlnhVP9v0FDOBUd2BDW/N0g/zO+RTBT1PHSgm0aH
o9SuUPPsQGq3eyYYxFDPRweSq9sx0TmWmu9b5L57W2xUPPW8vEUrKrbUVSRQ
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
k8gO7fnPjqiAJ0mVpUMPfFXAE92exOuFQSrgyfppj2a9v6QCnowpq5BQuKYC
nmgwPPlrC+7Jl7vOmCc9ybgnh9bjnrz3xz2ZKoJ78vca3BOvt7gncpq4J9JJ
uCdoIe7Jc1ncEysR3BMfFu5J8hPck4kbcU/ca3FPjH5nYZ546+OeONfhnhx+
g3vi24R70qeEezLGE/dkjBnuSfhW3JOZj3BPxlringgX4Z4Eb8I9cffEPdFo
xj05uxX3RFCGe/KI4YmAxD1pK8I9kXPAPbGwxT1RWoh7EnUF96RQEvfk1Hnc
k+QU3JOwXtyT9o+4J2JncU+MEO6Jx9+4Jx9n4J6YMjyZVId7otmDe1Iuh3vy
9TzuidFP3JPmQNwTl4+4J+cNcE96LXFPbKJwT1RScE8+3MA9qXiPe3LFAPdE
ajvuifEM3BP527gn+xbjnig9xj1By3FPbgz7Yp5Ep+OenAzDPRm2xT2R2IF7
4lWPe+Kij3syTwn3JG0C7onjatyTV564J5bNuCcP83FP/Anck3sncU98p+Ge
fJfBPWmah3syLxX3JK8P96SOi3tSpYZ7MszHPZmWhXtSWod7kn8T98SqDffE
Sgz3JKoY90RWeZXXDxkWeHL56tMwCVkWeJJJaLw4PJIpT/Zcsl4iPp8FnuzP
677VM5IpTySPmuuNXcACTxJmT+m3kGeBJwu/r4zsVWCBJ3r50tqPFrLAk+7U
8/fLlVjgSYmhz3QpHgs8ibOPmZ+oygJPRBsDXzmpsejfCyflKR7SYIEno1qu
dd7VZoEnpQvcfhE6LPBE9KmjwTddFnhitTbkzoCABZ6oznglzl3LAk/8zvy9
LFafBZ7Yl3uwNhmzwBPTnG2Oy81Y4Im0WTjL0ZIFnnwak9/1chsLPDG64Hbz
0C4WeLL+w3pdE0cWeDKo/2ib0wEWeHJohWlrvisLPNmrGXbcxIsFnhTHDs+U
OckCT+RmSJkqBLHAk8W23mK7z7PAkwriWf/rKBZ4kr4noexiPAs8aemrNDuR
ygJPJuUqrE+/zQJPxsZfsJv2kAWeRGWpmiQVsMCTrMhFNW7lLPCkRK7t0ola
FngS09psVNzKAk/KBE1pK96xwBP/6PItg59Z4Mk21fbxr4ZZ4InSpADL4fFs
8CRV/ejojTPY4Mn5J9kxr6TY4MnCkktN0Qps8MRtXYXFhSVs8ERj6d57j3XY
4Im0XOsVmbVs8CRx3V8JWZvY4MmYiSaOHjZs8ERcxj3kiAMbPImPqU9KOMIG
TyIerTUe78cGT4Z/a8tEnGWDJ+olN1K3XmGDJ89dTPw3pbDBk/6tR9a55bDB
kzgLSZ/KAjZ4grq/CS1essGTyWahF6a3scGTAEXe2aEPbPCELfdeZ9IwGzwZ
iM9XNJjEAU9Ez0U15XI44Im6+Mp2S0UOeBJe4F+goMkBT7quak+SXsUBT3bX
q/KXm3DAE29X28aQ7RzwxOfc631iLhzwJHHfR890Xw548ttV5LT7OQ54YipX
yHKJ49C/7zq9/FpYJgc8CThRkNX8hAOeZNSPKjGo4oAno9pm2Ha+4YAn7qtP
DScMcsATufB9kmdEJcCT9/O2E5dYEuBJ++jguhJFCfDklerDAzKEBHjSIL3d
P0pPAjyRf5J2gW8lAZ7In/Vl//pHAjyxGw4PbPeSAE+MFx1yeB8qAZ6seeaj
OeuaBHjyzHL6HptsCfBEasIOj9JiCfBkamfBR/MmCfBkxRVvNK5PAjypc/ze
UTFKEjxxjblhc3+mJHgy/dZ65XwFSfBEqJpU8I6QBE/iC5qSeAaS4MmmoRWm
wdskwROhEu5JqYXLP5P+4wl7r5Q2/z+ecHgXWwNkaU8+2h7Z8V2W9mT006Ai
//m0J5tOvxHTlqM9OXsklzthAe2JrlbUki8LaE9K9bQkRRVoTz7nn+xWV6Q9
Cda6F+27kPbkfrC2bv8i2pPihqQyL2Xak6/y3etUeLQn+8hp94dVaE9qTjrK
9CymPTmUHOT9XY325NF2jRZFDdqTiCXbyMNatCdIQxDXQdCerIlZP8NFh/Yk
5Ix0iKwu7cmSR5dkPi2nPZkl+fxZy0rak2cbxMI+rKE9+Rhb6jlnPe1JmH5Z
mMMG2pOGFd/qGo1pTxTj9xvvNaU9uWwaMl5yM+0JGdH8650V7Ym6Cwc1bqM9
qTTUeP5+B+1Jn4PFHSl72pPYTQ0/HP+hPVmhvzyxZT/tidMrPaHzYdoTUd5r
Azl32pOHjvO2fPGiPZmjbdT7zo/2JFn8w5TfAbQn0y5eKVALoT25+l1zjv95
2pNTRg/m/I5ggSe2pRYV52NY4EmMgj2pn8ACT96N2e+8IJUFnsQWSh+Ye4tF
fx/vrKevlcMCT/pdByceyGWBJ0VlKzPL81ngyYeewI16z1jgCXemzmDXCxb9
fbzIQGxiHQs8Mf3mtOtkCws8OfbxnP6ptyzwJOT6DpvkXhZ4UtowOaV3gAWe
OKys1DL+yQJPltXMnVU3hvbEN/monuck2pOchac7V4vTnnSxWYOLJWlP/gn+
4akzn/Zkq/jSMHslNniyMKJe564aGzwZtZvtv/BvNnjySUPb576ADZ6Mnx65
1EmfDZ6ErsnMEJiywZNct8nDfGs2eHJn88pFJrvZ4EmZcJogxJkNnuR6q5j1
HmWDJyY6rvscjrPBk5m7X0RNCWKDJzxRpe6Ki2zwJPb0Cds7V9ngyeSij7Ny
U9jgyd4g7+ldWWzwpCRvs7W6kA2eLP2VMC2uhA2e1MwM56lXs8ET1/SdxZ0t
bPBEa65h78N3bPBkV+r5xDuDbPBkSM1tXKUIBzwZKl05c/pkDnhSE0u07WNx
wJPomMuuA7Ic8CRK7Ma7CB4HPOm0zVi2neCAJxavXgYaruKAJ2poQ421MQc8
sTPW44Vu5YAn8S+6YjrtOeDJ8wIdvs1hDngipb9J7Cf43oeWqC2UvB/CAU+4
F5KPXr7MEf4Poqs23A==
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0., 1.}, {-41.944531238314276`, 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.408002406736*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reverse", "[", 
  RowBox[{"Quadratic", "/@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", "\[Kappa]max", ",", "d\[Kappa]"}], "]"}], ",", 
         "#"}], "}"}], "]"}], "&"}], "/@", 
     RowBox[{"Transpose", "[", "incsRe1", "]"}]}], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.407898208859*^9, 3.40789825027*^9}, {3.407898388375*^9, 
  3.407898395547*^9}, {3.407898564023*^9, 3.4078985653459997`*^9}, {
  3.40789859744*^9, 3.407898600709*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.6299926344117734`"}], ",", 
   RowBox[{"-", "0.9740610982415921`"}], ",", 
   RowBox[{"-", "1.1161976180540505`"}], ",", 
   RowBox[{"-", "1.1161976181118536`"}], ",", 
   RowBox[{"-", "1.1689074296586623`"}], ",", 
   RowBox[{"-", "1.1689076256043167`"}], ",", 
   RowBox[{"-", "0.7702650357882419`"}], ",", 
   RowBox[{"-", "1.6468093845096539`"}], ",", 
   RowBox[{"-", "1.26858421124595`"}], ",", 
   RowBox[{"-", "1.2685845507905043`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.4080024148324003`*^9, 3.4080024330844*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Re=10", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Kappa]max", "=", "1"}], ";", 
  RowBox[{"d\[Kappa]", "=", "0.01"}], ";"}]], "Input",
 CellChangeTimes->{{3.407896569236*^9, 3.407896572324*^9}, {3.407898217191*^9,
   3.407898222105*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"incsRe10", "=", 
   RowBox[{"Monitor", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Take", "[", 
        RowBox[{
         RowBox[{"Sort", "[", 
          RowBox[{"Re", "/@", 
           RowBox[{"GetIncrementsM", "[", 
            RowBox[{"mat", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\[Kappa]", "\[Rule]", "k1"}], ",", 
               RowBox[{"Re", "\[Rule]", "10"}], ",", 
               RowBox[{"G", "\[Rule]", "4"}], ",", 
               RowBox[{"\[Omega]", "\[Rule]", "0"}], ",", 
               RowBox[{"\[Epsilon]", "\[Rule]", "0"}]}], "}"}]}], "]"}]}], 
          "]"}], ",", 
         RowBox[{"-", "10"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k1", ",", "0", ",", "\[Kappa]max", ",", "d\[Kappa]"}], 
        "}"}]}], "]"}], ",", "k1"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.3918671489342003`*^9, 3.3918671597522*^9}, {
   3.3918674039161997`*^9, 3.3918674115652*^9}, {3.3918675198992*^9, 
   3.3918676012472*^9}, 3.3918676424242*^9, {3.3918677601272*^9, 
   3.3918677621582003`*^9}, {3.3918680008032*^9, 3.3918680193082*^9}, {
   3.407900363601*^9, 3.4079003914890003`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PrintRange", "[", 
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", "\[Kappa]max", ",", "d\[Kappa]"}], "]"}], ",", 
     RowBox[{"Last", "/@", "incsRe10"}]}], "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.3918678217321997`*^9, 3.3918678281172*^9}, 
   3.3918680241212*^9, {3.3918680659672003`*^9, 3.3918680767972*^9}, {
   3.4079007220030003`*^9, 3.407900730473*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJw9kgtQ1FUUxkktc8k0gzJwsJLGVdQQH6Qpn2Zo5tAgpo6zmCQDiorQKIxR
WCgEGgqzgW9ZdQFFEzXbUF5XWBEkkJeArq4s9yqvZUEQaWR0jN3u6cz85z/3
/zjn+77f+WB9mF/QEDs7u6DBy3qn6v/wE7sDMZz94JC9pDkqFvk7uPHk/+cU
LPDlESWD5ysuceblV9IQp55bYreL3qdD49JzY8Xg+chha2UhI3j09sJd9H02
IvKz9At2c9a53PrkEm6PunPWsJv+/xNL4/XjEmM5UzRqw+crcrBzU4ZiZRz1
u4oUr8rAWb9wNsk/qfipMh8hxgzHqfHUvxCrA3Pt5yVwlj74d6P2GvTvsI/X
76F5RVAPpIZo9nI2w1Z6JFxcrXnyK82/jm83qnTf7ONM/1Q5OKEEe8Kx37Sf
9JSiKqZX8X0yZ362gWVIDSxQKNWk7ybKR/hstvzGWXOUtWE5sh0LXr+ZSnor
UJipLcg9yNl3Vnnhlbie6BxYfJj034LJqaa66Shn/9GoxvT2kcYxaeSnGtvO
lfirTnD2hW1ADS73n5pw9RT5q0H/SYdhUzI4s07zT6oFf01Vdfk0+a3D589T
V/qe5cxmp7EOKl1t0Cvnyf9tHEh+79aNC5yNt8pxqUd0YLTqxB+URz2mPVca
9uk42xBsrQYkq7Y6Jl2hfBpRNb++UZvHmbWbQ3YjtvRMMv9dSHndQf7UxLHD
iznrt7Z7egfrR+9Uriyh/O5iRlMv15Vx5mVraIClfe2oSRWUpwFu24q2Z1dx
ZpMXdw/6OQV3veso3/vo8zk+rLuBs8oKa90HQjfmZRkobyOUKV36iAecOdoE
PoDnXw3Cj1P+D6B/87xpQQtntnb+TWiI7fkJHcTDBF971/ivusiPCcbC2rzQ
XuJjQkxOpjjWT/5MGFkWfv3eAPFqxtbxs10nvyS/zfBxm3czfqiQ/Jrhq3GI
6hsupH+OY/zMi7A3hOTJEeTq7TwwWsg8OGa5ao+oHYXkK+B5tG/RHCch8xGI
9LY0WVyE5C0wd3mF58UJQub1EFXZQY4/K4Xk/xA3PnVbtHaqkPk9hMe6mYlL
PITch0co1i3O9/IUMs9HGNAZNZ/NE3I/HiE1yn3YioVC5tsCTdrcnLDFQu5L
C5akFsUfWiZk3i3YbV7jXekr5P60oi4z9NrIVULm3wqN08LyNSoh96kV4Sf+
mXkpQEgebUipPlj3drCQPNqwKnZUVMxmIXm0ISDA88WzcCF5tCG3tN4jOlJI
Hu2INpzsUfwoJI92aM56v6WNIR7tWBcdsMk7nnh0YN2UhIaeRMGSbTw64L9m
mfsZNfHoQMi701dsPEQ8zFCH5Dp7pBEPM77eFbjh1XTiYcaO1acceBbx6MTj
qNYhZReIRycm+B0fk6MjHp14Ejfxowt5xMMC+3F83MUi4mHBFLf3jVdLiYcF
fZGTv6yoJB5dGOvktbS1jnh0wd1n7zWFgXh0obZg2sHZJuLRjZcL5+g2tRCP
bvweoh16upN4dCNrmu8Wcy/xeIxzE0cYPJ8J9i+d0Wfj
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, -0.62},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.3918678286452*^9, {3.3918680142642*^9, 3.3918680307752*^9}, {
   3.3918680710902*^9, 3.3918680776792*^9}, {3.4078952857279997`*^9, 
   3.407895312427*^9}, 3.407900415815*^9, 3.4079007315*^9, 3.4080024881368*^9}
  ]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"0", ",", "\[Kappa]max", ",", "d\[Kappa]"}], "]"}], ",", 
           "#"}], "}"}], "&"}], "/@", 
        RowBox[{"Transpose", "[", 
         RowBox[{"Re", "[", "incsRe10", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "2"}], "}"}]}], "]"}], ",", "1"}], "]"}], 
   ",", 
   RowBox[{"PlotRange", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.3918676696212*^9, 3.3918676814692*^9}, {
  3.3918677304552*^9, 3.3918677316562*^9}, {3.3918680355811996`*^9, 
  3.3918680463101997`*^9}, {3.407900423449*^9, 3.407900427275*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1:eJyF2Xk8Ff37P3DU1ByVVLQR3a0kcVvbJ7klS6KFRGXJVtkKWZJ9zZaUEC2y
tNgqJWFOlkJEi6ISzliLIsqS6lf37/G+5p754/uZfzwuc8573tf1msfjeeac
vywcd1gJ8PHxfZnAx/fnLzqWZDxIMNoqzPUSydZs8wwkLEyzw/ZCHUc8377r
sOXvukAi6KNBQQqRLL9lzVE4f5WwUdUfCv5dJyb8Oa4RO97EJF+G12cTXaYe
KqW/616DP//JI7JinnK74f13iHVHrm0U1RLmCr5OddogeI+Q83C/pamF1rtP
3C3jk/T9XUubRpd+lSoidAUOhJRoofVLiHZpzmcBbWHu1d/vfp3KJWo664y3
aaPrPSSWarU+Sf5dK/57lBHL/Cq0hrTR9csJvPhQo76OMLfsq9TvK1QQ3+cs
8L6tg/bzmPC4GLlBXFeYu+PfC1YSCk4vJE/pov1VEeL19iv4tglz2zz/LFhN
nDDfctBrG9pvDZG85/bL8d+185/tOdUSxbc8AgL10P6fEi4Ode4ztwtz/38a
9cRCcl9x+nbUTz3xRll9r5q+MHfrvxd4Rli3iBrz9FF/z4g4vY6yMANh7p+r
mUY/J6RPr09T3YH6fUHYcpbgvb/rf9t5/YIoW754JH0n6v8lUfBLzc92lzBX
8s92JBqIbXcEc+V3o3k0EKtvh5/+9bu2sf5zvCI+c3cqNhii+bwmtCpPpOYZ
CXP/rCaS/ZpocrnSH7cHzauRUPHqkvYxFuZ++7Pc10biYsHQfqe9aH5NRF/P
yEVbE2Huxn8XfEPIrsj8YWOK5vmGmDtnXZjDPmHuv9sLektkXrXfdWI/mu87
ovm8t/PpA8Lc2po/xztCOltqMMsMzbuZiN17vfeZuTBX9N8Nvidy1t13/mGB
5v+eWL008Jz8QWHuv8uZthBvnmU7HrZCebQSecp6M7OtUT+tRJln+5kRG5RP
K9GVbCqoY4f6ayVECrCItEMorzbCdTBSDj+C+m0jDsv/mHLMHuXXRkia5azu
dED98wiPRL1acyeUJ4+IH6xp63BG8+AReWL7o44eQ/lSBO+J08fJrmg+FHFt
auaMdDeUN0V0mryct80dzaudkCjuFf/hgfJvJ+4WT1a664Xm107cdN7l7u6N
7ocOwiho1oR/fNA8OwjZ7TF9c/3Q/dFBLJo232DYH823k1it/mNLSyC6XzqJ
rdu8u+uD0bw7CSnZp3o1oej+6SLGLgmdeRaO5t9FhAdtftoage6nLqIxYdu8
sSiURzchm/QpYsFplEc3kfy8UE3nDMqjm4gUnq8fcBbl0U2kLFSvr4hHefQQ
YoWr38xMRHn0ENMGHwUduoDy6CF0V/t9qElBeXwgrj/hSq69LMyN+TePD8Tk
p6nrb6WiPD4Q5XVT9yinozw+Evx9V0LLMlEeH4lk++ftpjdQHh+J4Z5af/5s
lEcvsXIw2j0vF+XRS0TINb89chvl0Uv86N9SqngX5dFHrF+9Sm3SfZRHH2Ei
/ti+/QHKo4+oiBXf97QE5fGJqA8TWVL+EOXxiViv4/K6ohzl8YmoWN5x6sVj
lMdnwn3r6O6+apTHZ+LgPXntWU9RHp+J+yd/ntB4hvLoJ7Y01QoEvkQ1H5+U
5kjkfz2ZyfLEgeXJdpYnlSpMT7RZnmSbMD0pPMz0pHUX05NN7kxPSkuZntTx
Mz1ZL8X05B7Lk8UsT/hZnnwtYnrSw/JkJ8sTMZYn/CxPjrE8cWV5ks7yxIbl
Ccby5On/8CTmf3hizfKkgOVJFsuTrSxPVFietLA8UWd5MvUY0xNllidJLE94
LE8kWZ7MYHlyleVJAcuT8SymJ3tYnliwPMFZnjSxPMlmeXKb5clLlieTWJ5Y
sDzRY3mygOXJapYnNixP0v6HJ4ksT8JYnkQUMT1pKWJ6YsXyZAPLExGWJxjL
Ez6WJ1NZnrxeyfSkI4XpCcHyJI7lyVAi05PzLE/CWZ4k/g9POCxPtrI8SWB5
MlzL9OQhy5MfvUxP1rI8ec7yZCnLEz+WJ+9ZnqxlebKT5UkBy5PeUKYnHdpM
T0iWJ64sT4xZnhixPFFneSInJlYQYIaDJ9a355hGQR1HSF7bujX7d408OX/8
gDcF568SvJ2B47LmOHiyOM/wcaQ5Dp70zv/UImCBgyfiMm+3Rlrg4An1UgqT
tcTBE8W2fXN5ljh48rXgZPDNgzh4Mrp/+q4IKxw8aSwVDfazxsGTUjXxRRE2
OHjiG6606qYtDp50lozlttnh4Eni+/N5Kw/j4EldbLVq5BEcPLmk3KYzwQEH
T5S3VH6LcsTBkxkSgpvlnXHw5PP0BtWuozh4MljDR912wcGTfiWR7efccPAk
xE0nNModB0/Oh6YkXfDEwZNE/spz3BM4ePLPOt3QsZM4ePKlwddH2w8HTx76
xEXkBuDgSahwPHdlMA6e5Hb6yZKhOHii4b+p0+YUDp44G9//uSwKB09mdr06
NR6DgycSBTGp3Wdw8CSwaMj04zkcPAmPlq+fmIiDJ7yBxNnKyTh4knmpSPvE
JRw88Wk0Dn2TioMnE0W8erdn4OCJTZnr2XfXcfBEKHPoim82Dp48qPylvP4W
TnvSMMF5+l0cPBGQbzo+dh8HT4yWVjv+KMbBE1nH8z5zS3HwZITjX6fzCAdP
6vg1wuKrcfDkkO2ixu9PcfCkZmNrt/sLHDz5uqG6R6gRB09O+OYJlrzDwZOX
3R9OBLfh4EmTvu4x204cPAnaI7Xo4EccPLnRupX06MfBE53l3X7XvuLgSYl9
5pXBMRw8UVULN9nDxwFP3mu3db3GOOBJUJFm4NEpHPDEzCDGQWoGBzyp7L/b
MTqbA55sH6qT7hLngCflUt+8+hdxwJPwAFWJ2dIc8EQzz3fnHjkOeNLhHXLg
njIHPDFWuhOsuJ4DnhT85AjVbuaAJ3nWQusCtTjgyT9Y7k5jfQ544uy5MkXX
iAOeTC/7arZ/Pwc8OSkaz4uy4oAnV5cl2L0/wgFPSjdZr9/mwgFPmkZkL7/1
4tCeVFQ2hwVwwBNBpyTVPac44MmdaM/BLWc44Mlywajdhkkc8OTBXaXLwakc
8GShUvfcxhsc8GTbxL9+at/hgCd1vWtPtxRxwJM8rvGMcxUc8KQsQK/I4SkH
PHk80/up3WsOeFKpVOof0soBT75t2DuzsocDnnxRrrwjM8gBT8rjii/eGueA
JxNjBSbvmyQInhjNOiAuIywInnSsD5y+YL4gePLm8rdpiksEwZNIidHN9qsE
wZOWOUxP3p0gBQP/44mmaYdA0H88WdOscjn4P57Y4PWdoWa0J4U7iIZTZrQn
By8EO0Sb0Z6M/y2ef8aM9iRnY++N82a0J716ew1TzGhPyizVC66a0Z7Itv9q
uGFGe7JazPrObTPak+2PavYUmdGe6M0Qqqowoz3xSQufUm9Ge2KyWHb5WzPa
E5Vc+8VdZrQnXR9340NmtCefsaD3/Oa0J/GiSjnC5rQnD3LWBi40pz05fnGW
7d/mtCcrOtus1M1pT9qfuYYZmtOeiGrtaDlkTnviInPLxdec9sSsNNIo3pz2
RNTw0rkcc9qT4Yf2alXmtCcH32jatpvTnlwW2CXOb0F7kuAU4yhpQXviodfk
QljQniy800eYW9CebJjl0hFoQXtChvz0vG5Be/LWVWjOcwvak3kL5j77bkF7
QrgHPlxuSXsic/c2v6El7Ykq5+eNYEvak7TW22/vW9KeHFi0IOuzJe2Jj/3x
DVIHaU+kv3+5bnmQ9iS8PFvkykHaExm+24nUQdqTYvsP+6SsaE/cjs73dbKi
PYn1a1pcZEV7onk88MgUa9oThT0KJ/db056s5KZ751vTniziU48RtqE9Cev+
+tbRhvbE22JFyAsb2hPNgTsF62xpT7IUufGZtrQnpQEFOvPtaE8k+1TGY+xo
T6qiPtZPPYSDJ3dzQwYiD+HgCZaWESRyGAdPgsqK7lw6jIMnssnDaQpHcPBk
7S0F3+ojOHgi8KzZztYeB0/KzT6ETnXAwZONJQUC9xxw8ITzbtK4jSMOnjzZ
13pe0gkHT1rXx4w3O+HgiadsnFaqMw6ebGs4fdnxKA6eHG7ftlT9GA6ezJRM
G1rggoMn0m4hq/hccfDEumOov8cVB09e+YzveeuGgydv1xT7vzyOgycRobZh
De44eKJcuiXkvQcOnlyZUnz2sycOnsg83lWLn8DBkzMG5RorvHHwpLljRHTX
SRw8uR72165gHxw88XxaKPrQFwdPzNSSHCf64/T3XcZ8bvoBOHiiVJW0Pi0Q
B0+6flx6JRCMgyf5N58b2oXg4MlT/Zi6xlAcPNl5lNphEI6DJ3XnI748P4WD
J4Jd07n7InHwpGbuw5qBKBw8GZ5aJx0dg4MnG8/qdSvH4uBJt/JV76B5GHhS
VPXiTATUccTLjQteX/5dI08eb+TTrIDzV4mfGvOob79r5Imb5rvrKvMx8CR+
8Exy4O8aeZJXYVbYOh8DT6R4qnw6Yhh4ElHcZl8mhoEnYrEj/NriGHiildlZ
+F4cA096dNvP+S3A6OeTtq9nFCQw8OT5kZ6cgd818qRQYVd3iSQGnnR9iV6b
uBADTxwMC1ID/sLAk9JXGQu9FmH07ydxQ1m+izHwRCyyTzNuCQaeGH489yF/
KQaeaA2kn+5YhoEnu738Vy+WwsAToZQ1bxykMfDk0qZA58oVGHiSXlwyIrcS
A09mJ3bapcli4EnI3vgSKTkMPLHzmNx/Xx4DT0xuYMN7FDDwZLLatyeYEgae
mAzUW3OVMfCkWUCSDFXFwBOPxtEn+9dg4MnoL07g5nUYeDLaEtysuAEDT3r7
VZ4qEBh4cvyBkw6hhoEnVxLFtY3VMfCk3Oheia8GBp5Mzt2dnK+JgSeaLZlN
w1oYeOK7ZqKNpi4GnpRTlquv6mHgydwyl01CBhh4Mi8t2TloJwaezHvAKeEY
YuDJOYs7c5L2YOBJqZ6b0xoTDDyZN1eksH0fBp44zdbrvGCGgSfbCwc6zS0x
8GTsr94sRWsMPJnL2S870w4DT7YP5Br9OIyBJwJHsyS/OmDgyUhyrPuoMwae
/NqzylDQFQNPtpz4dnO5OwaeqNxedNTACwNPqmsfJYWcxMATZee+hdV+GHjy
rfvW6NwgDDyR7T8g6RKKgSd8coERb09h4MnVf4Q3bI/GwBOVBY6r6mIx8GS3
acoBk3MYeELc1Hg2mICBJ04ZNUHnkzHwxHCHo5/WZQw8+VKlXz0pDQNPHD+c
sq3PxMATbNFm6/SbGHjy8GVGXWguBp5keQrdPn4HA0+Kid6Fxwow8KRuTpuM
VxEGnrxTuN8dzcXAE6OiIw555Rh4Iv9J/FVLJQaevDwktE6sFgNPpJouFVo+
w8CTyA51l/sNGHhiFm0XJv4GA0/k+10XRL7HwJPMwJu7p1AYeNKEixnHd2Hg
icU0f/2/ezHw5J8966yb+jHwxFhF4lH0Vww8cXtnnrxrDANPdIe850v9wsAT
y0COveDESfTzybbzFd/xSeBJcPW53ePTJoEn+X1Ltk+dNQk8mdLwuV1m7iTw
JDNMUNtkwSTwZN73irzERZPAk8Hg+QxP7rM8ucfyJILlyTmWJ3YsT9xYnpix
PPFtY3qSVcT0ZMJppidvE5meBGgwPbFoZnpSxfJkeBnTk5csTzRZnsg9Ynqy
4gzTE/1TTE+qPjA9OdrP8sST6YlyMtMTB5YnnixP1iUwPQk1YnoiwfJEm+VJ
KsH05Eo/05MrLE9EXzE9yWN58orliRLLk9bC/9uTcyxP3HKYnsizPFFgeXKR
5UljKdOTO1eZnpQUMj0RZXmS8g/Tk5Q5TE80WJ58u8/0JIDlyQjO9GQjy5Mx
Z6Ynr1me3GB5IszyhI/lyV6WJ0ftmZ7UsjyZwfIkeRXTE3+WJ4PiTE92sDwR
zGR6suAq0xM/A6YnTSxP7FmeRPzF9OQ6y5PDLE8yWJ7EsjypZXkiz/JEhOWJ
MsuTn41MTzRZnixieTLymenJAZYnBSxPKqcyPflsxPRkN8sTa5Ynk1meECxP
brE8UWN5os7ypP0l05PtLE84LE+SBRyUiryHSeTJnPAMiUao4whSxuedzMlh
EnmyzP344Xsn0fmrRIm3+WNPn2ESedL22O6Dqy96fTbRpYjVZvoNk8iTX7Jf
rWYFoPffIQwzN13PDxwmkSePRVZFRgej9e4TSqHr+S6HDpPIE8NxscGecLR+
CeGSfnXnochhEnkytrx22qIYdL2HRFPq5SkzzgyTyJNMLSVl1XPo+uWErHSC
U1zCMIk8WSX4/LJUMtrPY+JmWvn1wUvDJPLkndzKw1+vov1VEYMbwrmy14ZJ
5ImC95zgC1lovzXEosl34tRuDZPIE/OkV6Xi99D+nxJbH3i1yxYNk8iTK5tE
nrg8RP3UE27OxzQGHg2TyJOihiLJ1BrU3zPCJ9JgcfjzYRJ50ni9eHZ6I+r3
BcGPpRV/ez9MIk/8VuQ2enWg/l8S7jM8lir3DpPIE07l8f2LBtE8fj+faHxe
qz42TCJPepTeOMTzj5DIk52Dr69LcEZI5MmSZ/MuNAqPkMiTxBz93vK5IyTy
xKA2UY1aOEIiT/ylj25UlB4hkSfVnkl+d/4eIZEnZUGi6dZrR0jkybr9HHUt
9RESeTJ77YOPJrojJPJkX5+XXMruERJ58nM4KWH6gRESeSJyan9eju0IiTyp
N/w06n10hESeyOvu/OJxYoREnty8YCuaGoz6aSXy3V81jcSMkMiTsDzOLc8k
1F8rYaorN1UqfYREnoQfl9/Bl4f6bSMMZXJ7BIpGSOTJ3q2CSnKPUf+/n0e2
74oKfD5CIk/MCw4YCLxH8+AR8u+Ln2X0jJDIE8W2igMuX9F8KGJ1W5KmDf8o
iTzJ0Vn7zGfaKIk8eV55YlPxvFESefJqgmyDxLJREnmSsWbGk1SFURJ5Upoz
bqxDjJLIE6y5LV9Ed5REnhjFdAr92jNKwu8nRR6nOdajJPKkdsNha8VjoyTy
JGcHdtvLd5REnlgNLU9oixwlkSf9HVaqB5NGSeTJsojF1wSujZLIk7e+9yYV
3R0lkScL30dYRZePksgTXEGz0ev5KIk8MZfrdvBtHSWRJwVt31QufBolkScS
SZnrno6PksiT2ENTgkWnjJHIk02iCguc542RyJP+TPNJrcvHSOTJg8BNGuYq
YyTypPr9pHeD/4yRyJPTeblPzu0cI5EnjQv+FtGyGCORJ0UrM+5wnMdI5MmG
L2duvPYZI5En9pNmDudFjZHIE3KK0Nn45DESeVIx0y8g5OYYiTw5mXCD6/tg
jESeVNoa6PhXj5HIEymHkUWnmsZI5Mns8aVbE7vHSOTJbfmLRdnDYyTyJDo9
M+DxpO8k8mT1+61XKNHvJPLkvFy4pMBSVPPxxfIzPZE8xPTEt/8kw5Ml61wY
njzyZHqyOoXpyaw5TE84i5meaFxielIsxPREO4TpyYuvTE8CnJmeZMxkejKo
eInhyeBapicB85me4APPGJ4kpTI9MZZhejJpGdOTvz2ZnkRhTE/izjE9uXSX
6Yn0eqYnMk5MT6JqmJ4oRDA9EbnG9CRHgOnJIZYnn6YwPakoZ3ryfBPTkyY5
pie6nUxPEuqYnniwPMGqmJ70LGd6cted6YljINOTZaZMT8ZWMD3R+cj0xOor
0xPXcKYns3czPfkhzvTEnuWJB8uTLzlMTxp1mJ70ujI9aZFmejKF5cnlVUxP
hC4wPQl+y/RkewvTE9dWpieV2v+3JwYCTE9cVjM9ac5ielLyjumJBsuT9kKm
JzrrmJ7oGTA92cnyhL+d6cnbU0xPRn2Ynow3Mz1J/ZvpScIqpifcVqYncxOZ
nlTZMT3pm8n0ZH8G05N1LE+iWZ5sz2J6cm0e05M1MkxP5rA8Sf00g+HJXpYn
81ierLBmehLA8sTRnukJ9zvTk4ThFIYnfm5MT74/YXqyWoLpSdzi1Xzn/Hjg
iYOF3mQu1HHEi1P5Yhv9eeCJ4rS3a4UDeOCJYZ2rmUogDzw5pRQSnBvEA09M
ZEzTTobwwJOjY1G3L4XxwJORcTx9dgQPPAnhYE6tUTzwRHlsxoSfp3ngiUOg
6HbHszzw5Pxc/c1KCTzw5NGOA1W6yTzw5MUU9bqCyzzwpOGj2Qb3dB54kj0t
7Hv4DR548o0a+9yfywNPkpUP/bp2lweezAydOO1uEQ88sctxGxMp44EnR0q/
ZDyq4oEnTT3KQ9X1PPBEbUl00V+NPPDkSGjHu+oWHniSNY2Ue9TFA0+u+2pG
zerngSelkUb1t0Z44Ekk34maVH4KPFFV/GHUKUiBJ9mhnVs8RSj6+eThtCMH
JCjw5PUc8YSzUhR4csT4TIq4IgWeeBk06gxtoMCTGp81juJaFHjSKT7cELeL
Ak+qZXR095lR4InYZudk1yMUePLTLvtMszsFngTPMR6JC6LAk/LM1jNJsRR4
Yr27QXbgIgWeBCZ8jjibRYEnatfmHA99QIEn/K+O5FVVUeCJ3A5dPuNGCjwR
+st4uUoXBZ5scfHvMftGgSciNjinCWsHT5z3BWmmiLaDJzfcvljlLm0HT5zD
s5ZMV2kHTzy6T6oXbmkHTzb7pPjlGbWDJ4oT7icP2baDJ5+dh3YHeLaDJx+9
h2z2RbSDJ7oB72P8U9rBE3zDvsgvue3gCf/31HlZZe3gyQcf54G8V+3giUvQ
zHq+D+3gyX21g04JP9rBk+GqlxFeMzrAE+lY65b0pR3giYpazl9iazvAE3+9
xqmNeh3gicexK8bNlh3gyenXB7grPDrAk/l/sIvqAE+0v78tvHC1AzxZ5S1W
zC3soJ9PpmjflXnWAZ4ELwwzbe7qAE8iDvpbNfzsAE8UNQ4Gz5rdCZ6YPmw+
Fi/bCZ5MMJjPM9PoBE+W3S8KdNzXCZ4UjDYJlbl2gif5WwcVTKI6wRMln/4r
qhmd4Im35xzhPdxO8MTVHZcpauoET7qE8lMtBzvBE4Fbu6X1pnWBJ6aXrA55
Le8CT7QH4kU+qnWBJ3GDT19eMO0CTwJrZxrFHO8CT4LjQrZUxHaBJ2K6ltvW
ZXeBJ1tXUyJfqrrAkyYhNY2eji7wZF9jRtBCgW76+URZ6kS8RDd4Iv3gZu22
dd3gSXNG3wL1Pd3giX70wenHXbvBE0FXQr0nths8+baI6UmRO6/58n882aTP
c63woz0Jil1bwedPe3JRYuDRTn/akzRrYZcSf9oT16JrZZsCaE9eTm+8/iaA
9kQrpEw8IpD25OShNMHdQbQncRtrLZWDaU/smtNEZUNoT4wsC6esD6U9KZtN
ylmE0Z7Ejp21uxhOexKaa3Rx8BTtibmtSf7+SNqTMCci6o9nyJM6vy+CHjG0
J2ctiwWlYmlPqjnbDvedoT3JFi3Gq87SnpSkpxYXxtOelEeIWZYm0J60zn9W
35JEe/J3z7TmmSm0J8duVJiaXKI9uf3tyuL7V2hPvl0WmbgyjQee8CaZ1N3O
4IEn/4yf3a1/nQeemOQ/t+LP4oEn52LmPX2UwwNPvC29TS7d4oEnq8al3kTm
88CTGBMH0egCHnhSt6HhdeoDHnhyZED645MSHnhSJBsxd3IpDzyxED4ptbuC
B54otnzh5VfywJO+nn3TpWt44InMsYcu2XU88KRsTXGTxgseeDK0LXni51c8
8ISwt31w7Q0PPJGK+1Tm+p4HnqjefUXt4PHAkzKhrNZNnTzw5FXggA/xgQee
6E9ZEqL3iQeeNJc8f2D/hQee+N1Lpy5844En0yqdyt+O8cATB0mVJSt+8cCT
bTLrq0ImUOCJ/kURz6HJFHhygZf5w3EqBZ5YLdEQGxOmwBPlJamJsaIUeKKa
NKS+Zj4Fnrhp9LX0SVDgyVqDGtXcxRR4UpdtJeorRYEnj9bJqO+TpcAThQNK
EZoKFP19V/6Woo2qFHgylt98cfN6Cjw56yk/cacaBZ5cTFl7z3ELBZ5onn0Y
cl6HAk8CPhpr1OpT4MmLdHvuNEMKPLk4X63a2IQCT5wuDSvl/f58gjyJq49/
McuaAk8MA6d7+h2mwBMzM9Ufo04UeFL4uEHB240CT7zfXB4QPEGBJxeva8xI
9aPAkwPeZoc0Qijw5MDK0FcDERR4YmqsI58Jn3c+EHZz/t5pe54CT2LtCsUU
UijwZJe/pQ12lQJP3I2uiPCuUeBJv2eXQGUOBZ4s3pE8814+BZ4MBi1fmvOA
Ak+miPPEcx9S4MlKmYXN9x9T4MmQ2wrtmloKPJk7f6NW1wsKPJHfFs4VfEOB
J8+LV8WrtFLgyS+1NfmHOinw5KZd6oSMXgo8ubZK/8jHLxR4cmM5543qKEX+
P/qavsc=
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0., 1.}, {-4.207534831823358, 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.4080024936591997`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reverse", "[", 
  RowBox[{"Quadratic", "/@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", "\[Kappa]max", ",", "d\[Kappa]"}], "]"}], ",", 
         "#"}], "}"}], "]"}], "&"}], "/@", 
     RowBox[{"Transpose", "[", "incsRe10", "]"}]}], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.407898208859*^9, 3.40789825027*^9}, {3.407898388375*^9, 
   3.407898395547*^9}, {3.407898564023*^9, 3.4078985653459997`*^9}, {
   3.40789859744*^9, 3.407898600709*^9}, 3.407900438925*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.038632501903204094`"}], ",", 
   RowBox[{"-", "0.18213655942045956`"}], ",", 
   RowBox[{"-", "0.19965797622709747`"}], ",", 
   RowBox[{"-", "0.19965797624387882`"}], ",", 
   RowBox[{"-", "0.12485483568821004`"}], ",", 
   RowBox[{"-", "0.12485483682119682`"}], ",", 
   RowBox[{"-", "0.03805421325789133`"}], ",", 
   RowBox[{"-", "0.2429767883837204`"}], ",", 
   RowBox[{"-", "0.1547389200852594`"}], ",", 
   RowBox[{"-", "0.1547389696449336`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.407898398363*^9, 3.4078984964709997`*^9, 
  3.407898565705*^9, 3.407900439649*^9, 3.4080025019896*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Re=100", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Kappa]max", "=", "0.04"}], ";", 
  RowBox[{"d\[Kappa]", "=", "0.001"}], ";"}]], "Input",
 CellChangeTimes->{{3.407896569236*^9, 3.407896572324*^9}, {3.407898217191*^9,
   3.407898222105*^9}, {3.407900661203*^9, 3.4079006644709997`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"incsRe100", "=", 
   RowBox[{"Monitor", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Take", "[", 
        RowBox[{
         RowBox[{"Sort", "[", 
          RowBox[{"Re", "/@", 
           RowBox[{"GetIncrementsM", "[", 
            RowBox[{"mat", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\[Kappa]", "\[Rule]", "k1"}], ",", 
               RowBox[{"Re", "\[Rule]", "100"}], ",", 
               RowBox[{"G", "\[Rule]", "4"}], ",", 
               RowBox[{"\[Omega]", "\[Rule]", "0"}], ",", 
               RowBox[{"\[Epsilon]", "\[Rule]", "0"}]}], "}"}]}], "]"}]}], 
          "]"}], ",", 
         RowBox[{"-", "10"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k1", ",", "0", ",", "\[Kappa]max", ",", "d\[Kappa]"}], 
        "}"}]}], "]"}], ",", "k1"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.3918671489342003`*^9, 3.3918671597522*^9}, {
   3.3918674039161997`*^9, 3.3918674115652*^9}, {3.3918675198992*^9, 
   3.3918676012472*^9}, 3.3918676424242*^9, {3.3918677601272*^9, 
   3.3918677621582003`*^9}, {3.3918680008032*^9, 3.3918680193082*^9}, {
   3.3918681005362*^9, 3.3918681291562*^9}, {3.407900667493*^9, 
   3.407900670525*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PrintRange", "[", 
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", "\[Kappa]max", ",", "d\[Kappa]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"-", "1"}], "]"}], "]"}], "&"}], "/@", "incsRe100"}]}], 
    "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.3918678217321997`*^9, 3.3918678281172*^9}, 
   3.3918680241212*^9, {3.3918680659672003`*^9, 3.3918680767972*^9}, 
   3.3918681408311996`*^9, {3.407900742014*^9, 3.407900744539*^9}, {
   3.408002588086*^9, 3.4080026035456*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], 
    LineBox[{{0., -0.05783185962946778}, {0.001, -0.057829044542768146`}, {
     0.002, -0.05782062535410394}, {0.003, -0.0578066801266666}, {
     0.004, -0.05778733846912721}, {0.005, -0.05776278079747758}, {
     0.006, -0.05773323731816017}, {0.007, -0.05769898674740255}, {
     0.008, -0.05766035478644896}, {
     0.009000000000000001, -0.057617712375735465`}, {
     0.01, -0.057571473753918884`}, {0.011, -0.05752209435000219}, {
     0.012, -0.05747006853768553}, {
     0.013000000000000001`, -0.05741592728135496}, {
     0.014, -0.057360235702099596`}, {0.015, -0.05730359058898806}, {
     0.016, -0.057246617879365296`}, {0.017, -0.05718997012533501}, {
     0.018000000000000002`, -0.05713432396045105}, {
     0.019, -0.057080377574951734`}, {0.02, -0.05702884820280923}, {
     0.021, -0.05698046961981037}, {0.022, -0.056935989648581986`}, {
     0.023, -0.05689616766392014}, {0.024, -0.056861772091586514`}, {
     0.025, -0.05683357789453706}, {
     0.026000000000000002`, -0.05681236404251687}, {
     0.027, -0.0567989109632465}, {0.028, -0.056793997983228886`}, {
     0.029, -0.056798400758915665`}, {0.03, -0.056812888718020586`}, {
     0.031, -0.05683822252411423}, {0.032, -0.056875151584937354`}, {
     0.033, -0.05692441162746683}, {0.034, -0.05698672236094771}, {
     0.035, -0.05706278525394615}, {
     0.036000000000000004`, -0.05715328144191606}, {
     0.037, -0.05725886978769254}, {0.038, -0.057380185110060974`}, {
     0.039, -0.05751783658858151}, {0.04, -0.057672406358275634`}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, -0.057800000000000004`},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.3918678286452*^9, {3.3918680142642*^9, 3.3918680307752*^9}, {
   3.3918680710902*^9, 3.3918680776792*^9}, 3.3918681412172003`*^9, 
   3.407895329875*^9, 3.4079006859779997`*^9, {3.407900744973*^9, 
   3.4079007521029997`*^9}, 3.4079007851359997`*^9, 3.4080025302412*^9, {
   3.4080025928752003`*^9, 3.4080026041228*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"0", ",", "\[Kappa]max", ",", "d\[Kappa]"}], "]"}], ",", 
           "#"}], "}"}], "&"}], "/@", 
        RowBox[{"Transpose", "[", 
         RowBox[{"Re", "[", "incsRe100", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "2"}], "}"}]}], "]"}], ",", "1"}], "]"}], 
   ",", 
   RowBox[{"PlotRange", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.3918676696212*^9, 3.3918676814692*^9}, {
   3.3918677304552*^9, 3.3918677316562*^9}, {3.3918680355811996`*^9, 
   3.3918680463101997`*^9}, {3.3918681485332003`*^9, 3.3918681625252*^9}, 
   3.4079008017650003`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1: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
9aAez9ehHlVEPKY5oR6nGvzh8f9Ban5A
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0., 0.04}, {-0.48842730606810214`, 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.4080025386496*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reverse", "[", 
  RowBox[{"Quadratic", "/@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", "\[Kappa]max", ",", "d\[Kappa]"}], "]"}], ",", 
         "#"}], "}"}], "]"}], "&"}], "/@", 
     RowBox[{"Transpose", "[", "incsRe100", "]"}]}], ")"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.407898208859*^9, 3.40789825027*^9}, {3.407898388375*^9, 
  3.407898395547*^9}, {3.407898564023*^9, 3.4078985653459997`*^9}, {
  3.40789859744*^9, 3.407898600709*^9}, {3.4079004701280003`*^9, 
  3.407900470308*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1.7846003776459543`"}], ",", 
   RowBox[{"-", "1.784600377640007`"}], ",", 
   RowBox[{"-", "32.7062624629843`"}], ",", 
   RowBox[{"{", 
    RowBox[{"68.52300433048431`", ",", 
     RowBox[{"{", "0.08363834693670862`", "}"}]}], "}"}], ",", 
   RowBox[{"-", "100.27701482525535`"}], ",", 
   RowBox[{"{", 
    RowBox[{"60.3830377030803`", ",", 
     RowBox[{"{", "0.09409214501804422`", "}"}]}], "}"}], ",", 
   RowBox[{"-", "3.2878276497223347`"}], ",", 
   RowBox[{"{", 
    RowBox[{"26.464374943893468`", ",", 
     RowBox[{"{", "0.16666538746239346`", "}"}]}], "}"}], ",", 
   RowBox[{"-", "129.1542232746231`"}], ",", 
   RowBox[{"{", 
    RowBox[{"128.63942643057848`", ",", 
     RowBox[{"{", "0.0826152937544693`", "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.407898398363*^9, 3.4078984964709997`*^9, 3.407898565705*^9, 
   3.407900808865*^9, {3.4080026541364*^9, 3.4080026605636*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Re=1000", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Kappa]max", "=", "0.0004485124679"}], ";", 
  RowBox[{"d\[Kappa]", "=", "0.00001"}], ";"}]], "Input",
 CellChangeTimes->{{3.407896569236*^9, 3.407896572324*^9}, {3.407898217191*^9,
   3.407898222105*^9}, {3.407900954553*^9, 3.407900957976*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"incsRe1000", "=", 
   RowBox[{"Monitor", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Take", "[", 
        RowBox[{
         RowBox[{"Sort", "[", 
          RowBox[{"Re", "/@", 
           RowBox[{"GetIncrementsM", "[", 
            RowBox[{"mat", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\[Kappa]", "\[Rule]", "k1"}], ",", 
               RowBox[{"Re", "\[Rule]", "1000"}], ",", 
               RowBox[{"G", "\[Rule]", "4"}], ",", 
               RowBox[{"\[Omega]", "\[Rule]", "0"}], ",", 
               RowBox[{"\[Epsilon]", "\[Rule]", "0"}]}], "}"}]}], "]"}]}], 
          "]"}], ",", 
         RowBox[{"-", "10"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k1", ",", "0", ",", "\[Kappa]max", ",", "d\[Kappa]"}], 
        "}"}]}], "]"}], ",", "k1"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.3918671489342003`*^9, 3.3918671597522*^9}, {
   3.3918674039161997`*^9, 3.3918674115652*^9}, {3.3918675198992*^9, 
   3.3918676012472*^9}, 3.3918676424242*^9, {3.3918677601272*^9, 
   3.3918677621582003`*^9}, {3.3918680008032*^9, 3.3918680193082*^9}, {
   3.3918681005362*^9, 3.3918681291562*^9}, {3.3918682208192*^9, 
   3.3918682395592003`*^9}, {3.407900962421*^9, 3.4079009654969997`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PrintRange", "[", 
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", "\[Kappa]max", ",", "d\[Kappa]"}], "]"}], ",", 
     RowBox[{"Last", "/@", "incsRe1000"}]}], "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.3918678217321997`*^9, 3.3918678281172*^9}, 
   3.3918680241212*^9, {3.3918680659672003`*^9, 3.3918680767972*^9}, 
   3.3918681408311996`*^9, 3.3918682568922*^9, {3.407900975707*^9, 
   3.4079009778599997`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], 
    LineBox[{{0., -0.005783185962946773}, {0.00001, -0.005782861477610457}, {
     0.00002, -0.005781890560417044}, {
     0.000030000000000000004`, -0.0057802808137446034`}, {
     0.00004, -0.005778044861778734}, {0.00005, -0.005775200281130734}, {
     0.00006000000000000001, -0.00577176950484954}, {
     0.00007000000000000001, -0.005767779700556647}, {
     0.00008, -0.005763262624085332}, {0.00009, -0.0057582544502811465`}, {
     0.0001, -0.005752795582729317}, {0.00011, -0.0057469304447886555`}, {
     0.00012000000000000002`, -0.005740707254261723}, {
     0.00013000000000000002`, -0.005734177784408718}, {
     0.00014000000000000001`, -0.005727397114024032}, {
     0.00015000000000000001`, -0.005720423369339896}, {
     0.00016, -0.005713317460363274}, {0.00017, -0.005706142814268901}, {
     0.00018, -0.005698965107738545}, {0.00019, -0.005691852000322675}, {
     0.0002, -0.0056848728699744715`}, {0.00021, -0.005678098551890939}, {
     0.00022, -0.0056716010810108075`}, {0.00023, -0.005665453438535966}, {
     0.00024000000000000003`, -0.005659729302166482}, {
     0.00025, -0.0056545027999904}, {
     0.00026000000000000003`, -0.005649848267531518}, {
     0.00027, -0.005645840007676949}, {
     0.00028000000000000003`, -0.005642552053404828}, {
     0.00029, -0.005640057933327897}, {
     0.00030000000000000003`, -0.0056384304404358794`}, {
     0.00031, -0.005637741404674257}, {0.00032, -0.005638061470273651}, {
     0.00033000000000000005`, -0.005639459879063441}, {
     0.00034, -0.005642004261074788}, {
     0.00035000000000000005`, -0.005645760433927265}, {
     0.00036, -0.005650792212491969}, {
     0.00037000000000000005`, -0.005657161230170159}, {
     0.00038, -0.005664926773264395}, {
     0.00039000000000000005`, -0.005674145629308504}, {
     0.0004, -0.0056848719503521765`}, {
     0.00041000000000000005`, -0.005697157131802151}, {
     0.00042, -0.005711049707083416}, {
     0.00043000000000000004`, -0.005726595258298995}, {
     0.00044, -0.005743836342658948}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, -0.00578},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.3918678286452*^9, {3.3918680142642*^9, 3.3918680307752*^9}, {
   3.3918680710902*^9, 3.3918680776792*^9}, 3.3918681412172003`*^9, 
   3.3918682575572*^9, 3.40789554406*^9, 3.407900978413*^9, 
   3.4080026184435997`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"0", ",", "\[Kappa]max", ",", "d\[Kappa]"}], "]"}], ",", 
           "#"}], "}"}], "&"}], "/@", 
        RowBox[{"Transpose", "[", 
         RowBox[{"Re", "[", "incsRe1000", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "2"}], "}"}]}], "]"}], ",", "1"}], "]"}], 
   ",", 
   RowBox[{"PlotRange", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.3918676696212*^9, 3.3918676814692*^9}, {
   3.3918677304552*^9, 3.3918677316562*^9}, {3.3918680355811996`*^9, 
   3.3918680463101997`*^9}, {3.3918681485332003`*^9, 3.3918681625252*^9}, 
   3.3918681962502003`*^9, {3.3918682692111998`*^9, 3.3918682740692*^9}, 
   3.4079009829709997`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1: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
erYdRT0bD6Ge+cVRz+Ol//f8PxNXyas=
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0., 0.00044}, {-0.048736893735987996`, 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.407895546406*^9, 3.407900984587*^9, 3.4080026327332*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reverse", "[", 
  RowBox[{"Quadratic", "/@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", "\[Kappa]max", ",", "d\[Kappa]"}], "]"}], ",", 
         "#"}], "}"}], "]"}], "&"}], "/@", 
     RowBox[{"Transpose", "[", "incsRe1000", "]"}]}], ")"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.407898208859*^9, 3.40789825027*^9}, {3.407898388375*^9, 
  3.407898395547*^9}, {3.407898564023*^9, 3.4078985653459997`*^9}, {
  3.40789859744*^9, 3.407898600709*^9}, {3.407901009199*^9, 
  3.407901009593*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1882.1687129056868`"}], ",", 
   RowBox[{"-", "1882.1687129112845`"}], ",", 
   RowBox[{"-", "29845.78845864939`"}], ",", 
   RowBox[{"{", 
    RowBox[{"52953.331048731`", ",", 
     RowBox[{"{", "0.0009483227348556925`", "}"}]}], "}"}], ",", 
   RowBox[{"-", "83031.6998777659`"}], ",", 
   RowBox[{"{", 
    RowBox[{"54249.21409325078`", ",", 
     RowBox[{"{", "0.0009825912494047305`", "}"}]}], "}"}], ",", 
   RowBox[{"-", "8049.472113041921`"}], ",", 
   RowBox[{"{", 
    RowBox[{"16890.590672451435`", ",", 
     RowBox[{"{", "0.0021746551393793862`", "}"}]}], "}"}], ",", 
   RowBox[{"-", "110450.53540986359`"}], ",", 
   RowBox[{"{", 
    RowBox[{"105029.36257210336`", ",", 
     RowBox[{"{", "0.0008991376589122806`", "}"}]}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{
  3.407898398363*^9, 3.4078984964709997`*^9, 3.407898565705*^9, {
   3.40790100145*^9, 3.407901010321*^9}, 3.4080026363056*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Re=10000", "Text",
 CellChangeTimes->{{3.3918683120572*^9, 3.3918683130062*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Kappa]max", "=", "4.48*^-6"}], ";", 
  RowBox[{"d\[Kappa]", "=", "1.*^-7"}], ";"}]], "Input",
 CellChangeTimes->{{3.407896569236*^9, 3.407896572324*^9}, {3.407898217191*^9,
   3.407898222105*^9}, {3.407900954553*^9, 3.407900957976*^9}, {
  3.4079010563789997`*^9, 3.407901072785*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"incsRe10000", "=", 
   RowBox[{"Monitor", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Take", "[", 
        RowBox[{
         RowBox[{"Sort", "[", 
          RowBox[{"Re", "/@", 
           RowBox[{"GetIncrementsM", "[", 
            RowBox[{"mat", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\[Kappa]", "\[Rule]", "k1"}], ",", 
               RowBox[{"Re", "\[Rule]", "10000"}], ",", 
               RowBox[{"G", "\[Rule]", "4"}], ",", 
               RowBox[{"\[Omega]", "\[Rule]", "0"}], ",", 
               RowBox[{"\[Epsilon]", "\[Rule]", "0"}]}], "}"}]}], "]"}]}], 
          "]"}], ",", 
         RowBox[{"-", "10"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k1", ",", "0", ",", "\[Kappa]max", ",", "d\[Kappa]"}], 
        "}"}]}], "]"}], ",", "k1"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.3918671489342003`*^9, 3.3918671597522*^9}, {
   3.3918674039161997`*^9, 3.3918674115652*^9}, {3.3918675198992*^9, 
   3.3918676012472*^9}, 3.3918676424242*^9, {3.3918677601272*^9, 
   3.3918677621582003`*^9}, {3.3918680008032*^9, 3.3918680193082*^9}, {
   3.3918681005362*^9, 3.3918681291562*^9}, {3.3918682208192*^9, 
   3.3918682395592003`*^9}, {3.3918683179522*^9, 3.3918683702552*^9}, {
   3.4079010548710003`*^9, 3.407901066672*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PrintRange", "[", 
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", "\[Kappa]max", ",", "d\[Kappa]"}], "]"}], ",", 
     RowBox[{"Last", "/@", "incsRe10000"}]}], "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.3918678217321997`*^9, 3.3918678281172*^9}, 
   3.3918680241212*^9, {3.3918680659672003`*^9, 3.3918680767972*^9}, 
   3.3918681408311996`*^9, 3.3918682568922*^9, 3.3918683780942*^9, {
   3.407901085979*^9, 3.407901087105*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], 
    LineBox[{{0., -0.0005783185962946784}, {1.*^-7, -0.0005782861056663959}, {
     2.*^-7, -0.0005781888875790337}, {3.*^-7, -0.0005780277020968551}, {
     4.*^-7, -0.0005778038112372497}, {5.*^-7, -0.000577518972180748}, {
     6.*^-7, -0.0005771754276185845}, {7.*^-7, -0.0005767758935649207}, {
     8.*^-7, -0.0005763235447425218}, {9.*^-7, -0.0005758219976724465}, {
     1.*^-6, -0.0005752752916451814}, {1.1*^-6, -0.0005746878678291153}, {
     1.2*^-6, -0.0005740645467408727}, {
     1.2999999999999998`*^-6, -0.0005734105043379169}, {
     1.4*^-6, -0.0005727312470320211}, {1.5*^-6, -0.0005720325858541473}, {
     1.6*^-6, -0.0005713206100964013}, {
     1.6999999999999998`*^-6, -0.0005706016606228931}, {
     1.8*^-6, -0.0005698823030965306}, {1.9*^-6, -0.0005691693012982113}, {
     2.*^-6, -0.0005684695906672314}, {2.1*^-6, -0.0005677902521666848}, {
     2.2*^-6, -0.0005671384865318027}, {2.3*^-6, -0.0005665215889073822}, {
     2.4*^-6, -0.0005659469238797605}, {
     2.4999999999999998`*^-6, -0.0005654219008596846}, {
     2.5999999999999997`*^-6, -0.0005649539497970713}, {
     2.7*^-6, -0.0005645504971987748}, {2.8*^-6, -0.0005642189424023526}, {
     2.8999999999999998`*^-6, -0.0005639666341668327}, {
     3.*^-6, -0.0005638008475727658}, {3.1*^-6, -0.0005637287613015728}, {
     3.2*^-6, -0.0005637574354045354}, {
     3.2999999999999997`*^-6, -0.0005638937896658274}, {
     3.3999999999999996`*^-6, -0.0005641445826924175}, {
     3.5*^-6, -0.0005645163918777871}, {3.6*^-6, -0.0005650155943961163}, {
     3.6999999999999997`*^-6, -0.0005656483493556206}, {
     3.8*^-6, -0.0005664205812534296}, {3.9*^-6, -0.0005673379648205003}, {
     4.*^-6, -0.0005684059113644048}, {4.1*^-6, -0.0005696295566668137}, {
     4.2*^-6, -0.0005710137504475478}, {
     4.2999999999999995`*^-6, -0.0005725630474304544}, {
     4.4*^-6, -0.0005742816999916947}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, -0.000578},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.3918678286452*^9, {3.3918680142642*^9, 3.3918680307752*^9}, {
   3.3918680710902*^9, 3.3918680776792*^9}, 3.3918681412172003`*^9, 
   3.3918682575572*^9, 3.3918683785612*^9, 3.40789556145*^9, 
   3.407901088259*^9, 3.4080026924032*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"0", ",", "\[Kappa]max", ",", "d\[Kappa]"}], "]"}], ",", 
           "#"}], "}"}], "&"}], "/@", 
        RowBox[{"Transpose", "[", 
         RowBox[{"Re", "[", "incsRe10000", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "2"}], "}"}]}], "]"}], ",", "1"}], "]"}], 
   ",", 
   RowBox[{"PlotRange", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.3918676696212*^9, 3.3918676814692*^9}, {
   3.3918677304552*^9, 3.3918677316562*^9}, {3.3918680355811996`*^9, 
   3.3918680463101997`*^9}, {3.3918681485332003`*^9, 3.3918681625252*^9}, 
   3.3918681962502003`*^9, {3.3918682692111998`*^9, 3.3918682740692*^9}, {
   3.3918683985682*^9, 3.3918684021802*^9}, 3.407901094*^9}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1: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
Q1zUs/R21LOEHerZ2BP1bIX/3/N/AQE2njw=
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0., 4.4*^-6}, {-0.004873593339131718, 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.3918681630982*^9, 3.3918682747232*^9, 3.3918684026762*^9,
   3.407895571512*^9, 3.407901095157*^9, 3.408002698554*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reverse", "[", 
  RowBox[{"Quadratic", "/@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", "\[Kappa]max", ",", "d\[Kappa]"}], "]"}], ",", 
         "#"}], "}"}], "]"}], "&"}], "/@", 
     RowBox[{"Transpose", "[", "incsRe10000", "]"}]}], ")"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.407898208859*^9, 3.40789825027*^9}, {3.407898388375*^9, 
  3.407898395547*^9}, {3.407898564023*^9, 3.4078985653459997`*^9}, {
  3.40789859744*^9, 3.407898600709*^9}, {3.4079010996029997`*^9, 
  3.4079011002130003`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1.876130374918983`*^6"}], ",", 
   RowBox[{"-", "1.876130375902798`*^6"}], ",", 
   RowBox[{"-", "2.983773740256323`*^7"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.2941942889210686`*^7", ",", 
     RowBox[{"{", "9.484212531888648`*^-6", "}"}]}], "}"}], ",", 
   RowBox[{"-", "8.304047125504094`*^7"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.4277345100816905`*^7", ",", 
     RowBox[{"{", "9.82329240430976`*^-6", "}"}]}], "}"}], ",", 
   RowBox[{"-", "8.069072804162218`*^6"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.6886228165094156`*^7", ",", 
     RowBox[{"{", "0.000021749779939181688`", "}"}]}], "}"}], ",", 
   RowBox[{"-", "1.1045310776803719`*^8"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.05038492609724`*^8", ",", 
     RowBox[{"{", "8.990821051733945`*^-6", "}"}]}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{3.407898398363*^9, 3.4078984964709997`*^9, 
  3.407898565705*^9, 3.407901101116*^9, 3.4080027018924*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[Omega] = -1, G=4", "Subsubsection",
 CellChangeTimes->{{3.39193441062*^9, 3.3919344113900003`*^9}, {
  3.3919344932320004`*^9, 3.391934493289*^9}, {3.403841397245*^9, 
  3.403841398413*^9}}],

Cell[CellGroupData[{

Cell["Re=1", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Kappa]max", "=", "1"}], ";", 
  RowBox[{"d\[Kappa]", "=", "0.01"}], ";"}]], "Input",
 CellChangeTimes->{{3.407896569236*^9, 3.407896572324*^9}, {3.407898217191*^9,
   3.407898222105*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"incsRe1", "=", 
   RowBox[{"Monitor", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Take", "[", 
        RowBox[{
         RowBox[{"Sort", "[", 
          RowBox[{"Re", "/@", 
           RowBox[{"GetIncrementsM", "[", 
            RowBox[{"mat", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\[Kappa]", "\[Rule]", "k1"}], ",", 
               RowBox[{"Re", "\[Rule]", "1"}], ",", 
               RowBox[{"G", "\[Rule]", "4"}], ",", 
               RowBox[{"\[Omega]", "\[Rule]", 
                RowBox[{"-", "1"}]}], ",", 
               RowBox[{"\[Epsilon]", "\[Rule]", "0"}]}], "}"}]}], "]"}]}], 
          "]"}], ",", 
         RowBox[{"-", "10"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k1", ",", "0", ",", "\[Kappa]max", ",", "d\[Kappa]"}], 
        "}"}]}], "]"}], ",", "k1"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.3918671489342003`*^9, 3.3918671597522*^9}, {
   3.3918674039161997`*^9, 3.3918674115652*^9}, {3.3918675198992*^9, 
   3.3918676012472*^9}, 3.3918676424242*^9, {3.3918677601272*^9, 
   3.3918677621582003`*^9}, 3.3918679703932*^9, {3.3919346147320004`*^9, 
   3.391934614784*^9}, {3.4079017092209997`*^9, 3.407901713166*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PrintRange", "[", 
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", "\[Kappa]max", ",", "d\[Kappa]"}], "]"}], ",", 
     RowBox[{"Last", "/@", "incsRe1"}]}], "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.3918678217321997`*^9, 3.3918678281172*^9}, 
   3.4079016478900003`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJw9kglQlVUYhikxCUExLpzzmyGICJi4oEgF+CYKmqSESzR0idJYQgsVI1NR
nDAWZcQBcQRyAxxERemCghAeVoEEEUQIES4XuexcWtBGZzLu7Zy+mX/++Zfz
fe/7Pp/V1rCNga/q6ekFTlzauyj2tmfUCyvC9sty13Tvi0aiNMNm2hzxnAzP
sR9NPSeeCy2ODPkUnsFYl9or4//vmWi2Sm2wsSYs9bS2LiHBdll6vbX4Pxem
obsLUucSNuyjfZOHBVGubybYiPP5CLLIbMicR5hha8ZON8ObqJ3S29htK/oV
Yb51oPVqe8Ls5cfLx+1K0CDPv/PrfNG/FFOqj93eu4CwzInTrRkMDgeajLwW
inllCEtLynNfTNhSXVVgXYDB9QBHMb8SU42SDC8sI6xi3G5iQhWiR25XvO4s
9NxB7EcenSnvErZRN7AGzvGT/D9wFfpqMekP/VVWIKx7n7ZhHSq6IpMs3IXe
u5h85a7PSg/Cdmnl7ayHYdr3h+PWCv0NaNIsn/fMi7D/aDTCbUS5Kt5b+GmE
Q0lkp/smwtbqBtzHx5Fuzy19hb/7uOexL23up4Rpp8mPN6HLsLB6fYDw24zK
W5lR6dsI09lpbUaUDW0wCRH+H2CNmSw/Zwdhs7VyLFrwcnGlc+gukUcL5psd
/Mw7grDgIG09hINnmYPffpFPK04tcr4cH0WYtpsstxUPlys6lEdEXm0ouu5Y
Iz9K2FNtu/E2yNo7wv9JFPn9hnSDSeqqFMJW6Bq242qEpY0iXeTZjvzgdufq
C4Tp5B15BBX0bF5mi3w7MP7J0T/9rxFWf1dbHajxPZujKhB5PwZUcT4JJYSZ
6QR2wmO8XONfIfLvxFjV8LHNdYTp2sm7MO335sW77gseStwID+tRtAk/Sijq
lFdmKQUfJU69sefk5T7hTwlL83NZn2sEr27Uhr6mdnkm/Haj93R4gNtLwa8b
3zl1zQycQrl/FVyMd1gpplPOUwXZupADtpTyPFQoTVzvVG5JOd8esJCyLT/Y
U55PD+zIyb5QR8p59+Cha/Vfe10oz+sJSMXBmKurKef/BNs3meUYbKA8vyf4
Oco4ON6X8n3oxfvzaK3jF5Tn2YutVaaPXtlO+X70YkudUfazPZTnq8ZkoxUu
skOU74salWTGOd84yvNWI6jMQlWWRPn+9CEjdpHxpjOU59+HYm9Xh6mXKN+n
PiTLv9kwqKCcRz80nZaRY6WU8+hH4DVl1Vt1lPPox8qYr512t1DOox/vJN5q
G1FSzmMAtbM1JYnDlPMYQHFOsMbvb8p5DIDk34j8UF/iPAYRk5L1baCJxBJ1
PAZRrnDqzZolcR6DqD94vt3YXuI8hrAwz//Ln5wkzmMIMeEzT2x2lziPISxp
qAxb6i1xHsPYphc7/T25xHkMY/uce4dCvpI4j2HsSPZsLI2QOI8RnFc+NnGL
ljiPESzdX+vTc0LiPEYQVhCdkXdW4jxGIX/abJ59VeI8RmF+sbqkuljiPEax
RFV00bhO4jw0MLrppz7QJnEeGlx/np0g65M4Dw0ipj3PfTAucR5jSB97If9F
fyb7F6zABq8=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, -6.5},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.3918678286452*^9, 3.3918679807111998`*^9, 
  3.391934632418*^9, 3.40789559985*^9, 3.407901654425*^9, 3.4080027342312*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"0", ",", "\[Kappa]max", ",", "d\[Kappa]"}], "]"}], ",", 
           "#"}], "}"}], "&"}], "/@", 
        RowBox[{"Transpose", "[", 
         RowBox[{"Re", "[", "incsRe1", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "2"}], "}"}]}], "]"}], ",", "1"}], "]"}], 
   ",", 
   RowBox[{"PlotRange", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.3918676696212*^9, 3.3918676814692*^9}, {
   3.3918677304552*^9, 3.3918677316562*^9}, 3.3918679915962*^9, 
   3.407901653999*^9}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1:eJyF2Xk4VO3/B3ApkfBQMjM8yZIWmZnKUp3RuWWJoqRUT0VIoai0kLVSSVlC
iSxRaLcVkShTZKsoWii7aLG2SCX11fO7zuc89/nnd/5xfZyZe/m8j+t1Hbfq
pp0rt4iKiIh8Gi0i8ucndQX8rPffvt5Y6CufYdrqcwQ9mSG/dRfUUag1sHuB
/0h9Szmwy+pWIroSH9AVAfdTkVWd/P60kTou9s91BQU8Hf2pGj6fgdp3PDAd
Gqm7rf785jpSNe86wNtAfT8HOaiqxm8dqSVfprgvlMxDGgJuXNoGarx81Piy
z39wpJ5pE35/YEYhMlzjaLrUhhr/LnovlTCYOlKnjnz7ZYoQBWuVh4vbUvPd
Q7MS+XK7R2rtf69idLFZ2/+NLTV/CZrRbPl840ZjYfHAjJEZHiCJKpZS60Zq
PWVoxeD8Fa52xsKV/05YjuaGe3sO21Hrq0CGB2+Fx9gbC1t9/gxYibbP6zm7
wIFa7yOkvG16SvtIvevP8twfo8rXJ86f3kStvwopTnGMt3Q0Fv5fGk9QiPXQ
SbnN1H6eIKPOB8GvR2qzfyd4ik4is8D0LdT+nqKIQ8qBQU7Gwj+z2YTXIEfB
UOhWZ2q/teiX1KWkVS7Gwn+387IWLbITEZpspfb/DN0QG+pH24yFU/4sR/k5
mtmZpGvoSvXjOcqLk4q0cDMWOjv9uV4gSdk9Y+22U/15iS6qcWK9dxgL/4wm
n/ESuer+Y5Gwk+pXHcoqT1AvczcWfv0z3EAd6pJ0Uvuxi+pfPTJwMbHQ3WMs
JP8d8BVaI9+U6rWX6ucrlBD1hl/iYSz8d3mBr9FSI+WPrH1UfxvQwyf23Xu8
jIWPH/25GtC24kiNOm+q343oVN+Fc8a+xsJJ/y6wCU38eM4h34/qfxOanBTl
prffWPjvcDbNKNL33IOCA1QeLahS7aP7kgBqPy2In120u/kQlU8LctGzqvY/
Qu2vBY37ORA89SiVVytSVhl3tTaI2m8r6j3bNzvkOJVfKyr4zJpqHkLtvw29
sf4eNDGMyrMNzRg70eHNCaofbagsrSv7TgSVbztiJcoGJp2k+tOObGdOqj8e
ReXdjhY1R+b4RVP9eoO069X/9jpD5f8GDXx3lfeLo/r3Bi3gySQfS6Cehw5U
eCWr4mwi1c8O1KI2FF5wjno+OlDiuOjvrclUfztRR9HM8XIXqOelE215aFth
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
Ww544inzI+PZAAc8SegfsrkzRlH4P+AWBX8=
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0., 1.}, {-41.95241586272055, 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.3918679919572*^9, 3.391934633165*^9, 3.40789559995*^9, 
  3.407901658715*^9, 3.408002734356*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
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\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reverse", "[", 
  RowBox[{"Quadratic", "/@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", "\[Kappa]max", ",", "d\[Kappa]"}], "]"}], ",", 
         "#"}], "}"}], "]"}], "&"}], "/@", 
     RowBox[{"Transpose", "[", "incsRe1", "]"}]}], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.407898208859*^9, 3.40789825027*^9}, {3.407898388375*^9, 
  3.407898395547*^9}, {3.407898564023*^9, 3.4078985653459997`*^9}, {
  3.40789859744*^9, 3.407898600709*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.7287926190652038`"}], ",", 
   RowBox[{"-", "1.0328151713598788`"}], ",", 
   RowBox[{"-", "1.165519912595931`"}], ",", 
   RowBox[{"-", "1.165519912649094`"}], ",", 
   RowBox[{"-", "1.1852530049105248`"}], ",", 
   RowBox[{"-", "1.1852532008828327`"}], ",", 
   RowBox[{"-", "0.7901707556165443`"}], ",", 
   RowBox[{"-", "1.6459352105179712`"}], ",", 
   RowBox[{"-", "1.276942300000261`"}], ",", 
   RowBox[{"-", "1.2769426396127426`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.407898398363*^9, 3.4078984964709997`*^9, 
  3.407898565705*^9, 3.4079016684119997`*^9, 3.4080027397692003`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Re=10", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Kappa]max", "=", "1"}], ";", 
  RowBox[{"d\[Kappa]", "=", "0.01"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"incsRe10", "=", 
   RowBox[{"Monitor", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Take", "[", 
        RowBox[{
         RowBox[{"Sort", "[", 
          RowBox[{"Re", "/@", 
           RowBox[{"GetIncrementsM", "[", 
            RowBox[{"mat", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\[Kappa]", "\[Rule]", "k1"}], ",", 
               RowBox[{"Re", "\[Rule]", "10"}], ",", 
               RowBox[{"G", "\[Rule]", "4"}], ",", 
               RowBox[{"\[Omega]", "\[Rule]", 
                RowBox[{"-", "1"}]}], ",", 
               RowBox[{"\[Epsilon]", "\[Rule]", "0"}]}], "}"}]}], "]"}]}], 
          "]"}], ",", 
         RowBox[{"-", "10"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k1", ",", "0", ",", "\[Kappa]max", ",", "d\[Kappa]"}], 
        "}"}]}], "]"}], ",", "k1"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.3918671489342003`*^9, 3.3918671597522*^9}, {
   3.3918674039161997`*^9, 3.3918674115652*^9}, {3.3918675198992*^9, 
   3.3918676012472*^9}, 3.3918676424242*^9, {3.3918677601272*^9, 
   3.3918677621582003`*^9}, {3.3918680008032*^9, 3.3918680193082*^9}, {
   3.39193465085*^9, 3.391934650929*^9}, {3.4079017018050003`*^9, 
   3.407901704933*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PrintRange", "[", 
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", "\[Kappa]max", ",", "d\[Kappa]"}], "]"}], ",", 
     RowBox[{"Last", "/@", "incsRe10"}]}], "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.3918678217321997`*^9, 3.3918678281172*^9}, 
   3.3918680241212*^9, {3.3918680659672003`*^9, 3.3918680767972*^9}, 
   3.391934664351*^9, {3.407901732091*^9, 3.4079017359969997`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJw1kglMVGcUhWndigqFyhKIG5hGqLEV0VhNy6lFFOKSjF1sDEIFkVq1nboh
aB0loLQoWFYxiCIqomYKigJq+mvVioqACgxFheG9eTPD7MsbXKqlzvTOTV5e
3vLfe875bkjSj8tT3vbw8Eh5cznv7hoM/dijZA/HdvjJF/VnZOHCvYyj8Znu
5yIs1/yaX5vFscaJ2XpJYwXW1a0YVZDj/n4CnaVXkt7K49jhMmfVICLHFDpU
5P5fjrMs3Jx7hGMGifNNHUJithWfrnafr8fIhktjvr7AsdGKKumnoxtQHqyU
Fl9z92tCde1G7+/aOBYen/+nI+wqPJt8Vrb1ufv/gYmnjj1rsXLsxJvTiqpr
GIyTXEkawdO865D1zjpXEMyzSFfdQIDFZ1RiBE/zb2JrXt78u3E8u+EIezPh
Fha+bPVSJPOk5zYikqUJOTKeLXcNbMZYu/f6/nKe9N1BQo3konCFZ/0ZzoZ3
UbqgyLvsCU96W9CW/XnF0L88+8kpT3ofq4VX2glTVKS/Ff7m493PY1Xsfxrt
2BW35laxVEV+2hF55rXsZZmKxboGPIB6ZuKq6bdU5O8B7h6/Fz3bpmLOafH5
D2E3GJuCQgTy+wgbWr2ecxKBuewoHmEe3/xPWZZA/jsQmdpTEdsksElOORM7
kbkpo+6FWaA8OqFY4RPUFKZmqWud1YWY+kliYbKa8lEgwFFw89AxNXN285Mr
kDFPUanoU1Ne3Ri0ndqSFKJhg852jm4sOWmJWpqiofz+xsZOr83ysxoW5WrY
A2P5gYSjooby7EGpLUn+yWda5pKX/RjfbNnsV52npXyfIO1yS9BwpZbdb3HW
Ewxda5wumzVAeT/Fvtwyz8X7B5i/S2AvbNHj86o0A5R/L5qDI79oX6hjrnbx
fRAi0uPCzuiIhxLBy77yDXxPT36U0N1eMOd9mZ74KLGhVHtphE1P/pR42TAy
UL7eQLz6UZlVIOw1GshvP7xz6+8o043Erx+br59+vN3fRP45FI8uXtf30EQ8
OVRsyrU055opDw5nli2rGuttIb48WlOnJf6yykL58IjRxUpmXbYQbx7ymh2Z
dfOtlJcK3zZMzpk620r8VehYcLJbttJK+akwDD9XVu+z0j4IuM5dHVbZYKU8
BYRfSPMUtVbaDwFtq6c2DwXbKF81JlSMnSFdaqN9USO1yxQ2breN8lbjaZdf
9+3zNtofDeZ1tPumCTbKX4Oi9dGZHa9ttE8aeO2zDPkH2ImHFuejd7ZmfWgn
Hlo0PggsmrzITjy02NSVt0abaCceWtQsmaPp2W4nHgP4q3iPdPA3O/EYwPiE
i+PmnrUTjwFkHdz7+7GbduKhw7sz4p590GtnB108dFgccj+985mdeOggl1Sd
OuIrEg894iYsfLh7mkg89Fitypi7M0YkHnpsrQ4bfiBRJB4GRP3Quqg2XSQe
BqSFN3ryhSLxMCA/4J35oXKReBhRvf1k9/fNIvEwYknK+LomTiQeRmz7KO34
mNci8TCh5EXgrlWBDuJhQoxvic+5CAfxMMGsOzFFXOwgHmaU1L2SzVzrIB5m
1JZ+aU7e7SAeZhzKTIjKPuwgHhaMm9ISVVjvYP8BzrJsaA==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, -1.3},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.3918678286452*^9, {3.3918680142642*^9, 3.3918680307752*^9}, {
   3.3918680710902*^9, 3.3918680776792*^9}, {3.391934657638*^9, 
   3.391934664915*^9}, 3.407895620894*^9, 3.407901736623*^9, 
   3.408002761734*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"0", ",", "\[Kappa]max", ",", "d\[Kappa]"}], "]"}], ",", 
           "#"}], "}"}], "&"}], "/@", 
        RowBox[{"Transpose", "[", 
         RowBox[{"Re", "[", "incsRe10", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "2"}], "}"}]}], "]"}], ",", "1"}], "]"}], 
   ",", 
   RowBox[{"PlotRange", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.3918676696212*^9, 3.3918676814692*^9}, {
   3.3918677304552*^9, 3.3918677316562*^9}, {3.3918680355811996`*^9, 
   3.3918680463101997`*^9}, 3.407901744284*^9}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1: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
3slJFwZPnH+6ptf6CoMnciu+b9a2FgZPzBq9YlbMFAZP7uhvfzmlWwg8maKS
F7L5phB48lIj3HGHrhB4cv1A9SnlUBJ4kqezdoR8gwSezJXf2TIjlgSeBByi
GJ2/SQJP7Lz658qlksCT1V8DarrvksCTUnkZjx/ZJPAkM+/8UYsCEnhSbSqh
/7WYBJ6sriswzH1BAk/av52c+/o1CTxZwzHI0KolgSdb3593f9tEAk8+Hfy1
+QmHBJ4csb4+g9dNAk+stIyqTnNJ4MksyTIjyx8k8GRtbutpd4oQeNL1xv1w
j6QQeFLdtUzpkbwQeJKaduncRw0h8CTOPjHQeq4QeKL/TVpz3hIh8ITX32tg
byQEnshf6j0/bCkEntCV85+27BICT9xnK1xb5CIEnghXBxzudRcCTxjvU0tE
LwiBJ/MRg7KAYCHwpHqNQezhOCHw5OkSV62iu0LgSf+25UvdC4XAEzczcZfr
ZULgycCzdlWVRiHw5PqXFzelOoXAkwbP6ROHx4TAk5TNs6UMaMLgyedDiyKd
FIXBk2WcNpnfOsLgyfcwrzbSSmHwpOpIgeGBTcLgyfK1YlrLHIXBk6dyzKCj
nsLgiesxHx3aFWHwxLZD7z4lQRg8+f7hTKLjA2HwxNS8+Ni0V8LgiVut9AXD
T8LgidfANOWHQ8LgiXGuiP9lMTJ4IjLHcChfhQyeNAhnRS1dSAZPnvcF35Xe
QAZPjspts0McyILvuzQCR4pPk8GTAZ1z+VfDyOBJd8sQNz2dDJ6IlPgqyj4j
gyc2b0ZvlzeRwZP3wU665X+ef5gnWzeoObEkRMCTz59Oy92aJQKeuHvYLjq5
SgQ8iRc+srDo3CiKedKwLcGGEoHVEYhN08qPshmjKOaJnIHBPO4z7H4KkrzS
Y3P6x1EU80Sp+2jjKj72+ixkcIYf7zlzDMU8qdJ5FW6oM4ZinvRS7h4uXDeG
Yp641HM0jZ3GUMwT6b3OB3r8xlDMk5MWemJPk8dQzJNp57unvXkxhmKePGQX
22p2YPOVIH1XJtRaxMdRzBOFsSJUVm8cxTxxMN7ZU7t9HMU8sZJcLbTcZxzF
PJmtZRnkkj6OYp5wk1Xqz9SPo5gnxsqpd2LJEyjmSYlhjeHwggkU82TqoRNH
c50nUMyTpqYfG+XjJlDMk76EmyZOdRMo5onurq3dPczvKObJt8WaTObG7yjm
SfoXjrdp+HcUvu9KlLyi3/QdxTxplK5eEqr5A8U8ua/9/N4hrx8o5olvhdJv
g4YfKObJjtD5PFHDnyjmSWNnWvvC7J8o5sl0h3uHMhb9QjFPitjh1xZ8/oVi
nrRHGc+jVP1GMU9CCZ6ISeA9OftzB84TdYInKmfwnpR9wXtiL4f3ZBrBkzyC
J0yCJ23NeE/Gv+E9UarFe1JM8MSY4MlGgic9EnhPIh/gPXlG8OQiwZM3t/Ge
NNjhPWE24z1ZSvDE8zTek7VyeE88Z+E98XyJ9ySsHu9J0kq8J74ETzwJnnAI
nqgTPHlK8ESJ4MkVgidXCJ68IHiiT/AkheBJDsGTdhO8J7EETxrc8J5EfcV7
Qn+L9+T7BrwnqwieHCN4Mo/giRDBk/sET3wJnjgSPPk6De9JhTbek1eNeE/i
2HhPFhM8ySF4km2K9ySf4MlKgifhQnhPlIKV7fT3CzzJWaG5Zs8WgSfJRjJx
SxCBJxvCTvsV6Qg8OWT6cwdHXuCJu4QEO1l0FDw5ELA5aoI3Ap68WVgw1Nwy
Ap6c2t/FtKodAU+ipS13mTwfAU8M6ixtHuWOgCfJxdzClJQR8MQ7rHghJXIE
PDFfnB1Xd2kEPFFO8quWODMCnkyk9BdkHBoBT+Ymk5B02xHwpK7D20poywh4
8uvosvdZa0fAE/lTm+9mLhsBT3gc6zj+vBHwRFrM2MV/+gh4QrcxuLdFfgQ8
WUjmDO2RGAFPqDPuR8QLj4AnZ1R2VjDG+ODJaq2pkal9fPCkAFF4Zt/CB08+
p2xvWPaBD574KjrLalfxwZOnBdaOWqV88GRCydRy3hM+eHLrmcfwghw+eHKy
KGhIL40PnuTSS+2U4/ngCX2bR35vOB88Gf5nf1ZUIB/FPJkX4LhU2puPYp7s
NeBs2eTORzFP/F73thnv56OYJ2a8Sze+7eajmCfaV9+GTrXio5gnYmkK5jXG
fBTzJNegTk9oCR/FPDn/RWXJNW0+inlica3+wB5lPop5kpT01HCbBB/FPHnx
ILBoy08einlyLnyt2/xeHop5YreU2vr8Aw/FPKE6rYp9V8pDMU+iETdthWwe
inlyfF2CpGk0D8U8YXh6bOSf46GYJ7FbhEOj7Hgo5ontLPurJxAeinlSp7+u
wU+Bh2Ke2MlrLlzUx0UxT746Lrs9XsBFMU/UxmR9uCe4KObJ8RkJPx3kuSjm
yb3ugoxh52EU8+Sqp21VAW0YxTwZHHb2vzBrGMU8qWTwZj1AhlHMk7vjZ9Y/
sx5GMU88arZnuRwdRjFPfqzqu98bMIxinuxBip08EoZRzJMRV3WZKQ+HUcwT
7eTygPdvh1HMk+LQDxy0bRjFPMl7qBPC/LN+zJNbu9q/+K3nopgnuQcMFpaf
5aKYJ4qn5me+z+KimCcVjIXvU5q5KOZJRHa041xpLI8uxLK6ZOCAEZZHF1J9
aGPDjhNYHl3Injp7BW4Klkc3or0hAFlUz0MxT5xubVmvRsHOZzfC+LDzVsZC
7PPWg5BSr1I+OGLntQeJNIy8mBqOff56kHiNHHdmCXZ+exGN5aW7pwxgn8de
xORRDOmh8giKeZKmN7F+0GwExTyhRuVbPPfEnid9yFItx+XzkrHnVx8i7vPZ
Qa9qBMU8Kfdz0imfGEExT6Rr7VhjM7Hncz9ieTAluWjTKIp5YhK6/sJUr1EU
8+R68Yg1JXUUxTyZeS2YE1g5imKemKdadSaOYjWJFDF9CSnyAgc8+Xr4t1Su
Lwc8UXx7Z6l4AAc8Qepl9/wTxAFP7nId1ztf54AnuWkeRQfiOeDJhKvezjvp
HPDEufmfbNVHHPDk1rQny9+WccCTWacW2+R+5IAn4S5V26oHOeDJ6rqr26dT
W8CTLfvQAxnTWsCT9WGFPi6GLeBJQqal3XabFvAk9QLzgadXC3iiZmQ0/DK+
BTyJ/xp73ORZC3jCf/zPtsHOFvBkRRN6pZTVCp68zDateLaiFTxxNS8JbXNt
BU8Kp+gq6sS0gicb6b27QytawROX0Nki0r9awZPfovIHMhe0gSd7Qx+E2Rxs
A098B1TUlVLbwJN1GUXb2pvbwJMx42LRR6rt4EnebKPrV/a2gyf/PFb7ap3Y
Dp6ECAmZKbS2gyfVQdK3Xs3uAE8GbcdUbY51gCdi6ynWrx93gCfqTy7MY4p2
gicTlWil8pZO8ETRPCWy61YneGJCkhU/MNwJnujqX3gaZtwFnqxd7WK0JboL
PDm7q18ksa8LPLnTJjJrv3E3eJKSVGQRG9cNnhwMWG8/faQbPNFUHFfr39QD
nmy1kwnhZPaAJ/pB3KlttF7whGkYplDv0gue2If1R1952Que3MjIka+Z2Qee
zLFx6d53sQ88aTmp7fehtQ88iVrekO9j1A+e6C94HfP7Zj944r3y2rqRkX7w
5GP1wszyxQPgyfCmuMGyoAHwJHSTZTJDchA8yXXVsb28ZxA8UX2zwWrh40Hw
5OpTL9+c1UPgSVbAXpwnL/rxnkzQ8J6sGcV7okHwRJWE96RkJd6TmcZ4T8y9
8J5wLuM9aT9o5Fv3cxg8IQUO/p4yVeCJmfnZSv95Ak+ODslFqK8TePJdMWRf
p63AE2uHxR1Np7jgSU7fBbeRMC54ghzKl1mawQVPdMMC7ie+4IInT/XMRrW/
cMETDY23p+tHueBJ6Obk2/EsHnhSpLq25rwODzyJbj2z9KwJDzypuaMlcs2W
B56onqhcl32aB54EznlEa7nOA08Gp1JXa2TxwJMfZ1IbD5TxwJNSJ+WcQg4P
PJmvfzKJ/ufvI8yTR+Ny3nvk+OBJxpFIqUx9PniyrjdlOm8DHzzJzvnhM9+Z
D57oRW8dcDzPB09affeuvBjLB0/Upr9ZeT2PD56MaOA9yX195ubu//Nkc8eV
kGx/gSeuOdZi4YECT+qjnjgIBQs80Q/s1/gdIfAkA509EBQv8GSaieeNO2kC
T0QLHtK35wo8iVNsdrvBFniSln1Ycn+VwBNaodSuqq8c8ET1duLomyEOeDJi
ZvXEgSLwxOfLwsxwRYEnUwelxGz1BZ54BAevrjATeLJ2olKiwVHgib6j295A
H4EnDK7kwW9xLeDJ3nSr/LYnLeBJlHGEZMynFvCk6uKahN+/WsAT+7YfnSrT
BZ5MGUhqHDMVeOJttq/0hlsreLLg7k+fiT8eYZ60z7fdM7e0FTypSHptZDDc
Cp5we/sKFaa1gSeHKiXGOFZt4MmylrLvMf5t4MkCl6YE08I28MT3+Jmc8YE2
8KTBWkqhUKsdPDHJU+Ndd2wHT6byw19E//EJ8+TMsoZbDV/bwZOR4dsnHKZ1
gCfmqYMrLZw6wJPD9RLuWRkd4Elf3LW9N3kd4EnUsEPWilWd4MmOE+6yacGd
4MnJx28URJo7wZPf7EdzfRZ2gSeXgmJoG652gSfDRsrByR1d4EmZ4oIt1Wu7
wZM2/dNmWne7wRNFy20sOeke8KT7lfHimT494MmhqM6HlOEe8GSiQFQu62Av
eHLLP7wtoK8XPJEMyitvPt0HnriX3Pl4aorAkxviN1y/1vSDJwnHg3Ce3LXE
e1LpgvfEpNsU50lWOt4TuwL1QE2DIfCkzji10WfXEHhCRs7dSrs0BJ6UcIrI
twqGwJPZuSdpvM4h8KTKXrPst6LAE5UEhp6bhcATl/f9WjLnBZ58fi/b+OqB
wJNlddWsk//nSQTBE4lLeE8eGOE9efQO78nx98E4T9LN8Z68vIH3RHkv3hP/
ULwnTIInG6bhPcmywntipoL3xJ7giUca3pOVR/CenJyN9ySE4EnaKbwn5gRP
PHXxnkQSPDFh4T0Z6MZ7EknwJDsK70k0wROZSU/+B/9JZvI=
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, -5.},
  PlotRange->{{0., 1.}, {-4.938825693220624, -0.5783185962946777}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.4080027679272003`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reverse", "[", 
  RowBox[{"Quadratic", "/@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", "\[Kappa]max", ",", "d\[Kappa]"}], "]"}], ",", 
         "#"}], "}"}], "]"}], "&"}], "/@", 
     RowBox[{"Transpose", "[", "incsRe10", "]"}]}], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.407898208859*^9, 3.40789825027*^9}, {3.407898388375*^9, 
   3.407898395547*^9}, {3.407898564023*^9, 3.4078985653459997`*^9}, {
   3.40789859744*^9, 3.407898600709*^9}, 3.4079018137980003`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.3944492023834131`"}], ",", 
   RowBox[{"-", "0.20053179625961493`"}], ",", 
   RowBox[{"-", "0.8916653036104774`"}], ",", "0.5574751636777223`", ",", 
   RowBox[{"-", "2.015905762006749`"}], ",", "0.8557223847820702`", ",", 
   RowBox[{"-", "0.6715936152806237`"}], ",", "0.0964799818359611`", ",", 
   RowBox[{"-", "1.5516582419879903`"}], ",", "1.0260695152460635`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.407898398363*^9, 3.4078984964709997`*^9, 
  3.407898565705*^9, 3.407901754586*^9, 3.4079018142*^9, 3.4080027819048*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Re=100", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Kappa]max", "=", "0.09"}], ";", 
  RowBox[{"d\[Kappa]", "=", "0.001"}], ";"}]], "Input",
 CellChangeTimes->{{3.40790182767*^9, 3.4079018303059998`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"incsRe100", "=", 
   RowBox[{"Monitor", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Take", "[", 
        RowBox[{
         RowBox[{"Sort", "[", 
          RowBox[{"Re", "/@", 
           RowBox[{"GetIncrementsM", "[", 
            RowBox[{"mat", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\[Kappa]", "\[Rule]", "k1"}], ",", 
               RowBox[{"Re", "\[Rule]", "100"}], ",", 
               RowBox[{"G", "\[Rule]", "4"}], ",", 
               RowBox[{"\[Omega]", "\[Rule]", 
                RowBox[{"-", "1"}]}], ",", 
               RowBox[{"\[Epsilon]", "\[Rule]", "0"}]}], "}"}]}], "]"}]}], 
          "]"}], ",", 
         RowBox[{"-", "10"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k1", ",", "0", ",", "\[Kappa]max", ",", "d\[Kappa]"}], 
        "}"}]}], "]"}], ",", "k1"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.3918671489342003`*^9, 3.3918671597522*^9}, {
   3.3918674039161997`*^9, 3.3918674115652*^9}, {3.3918675198992*^9, 
   3.3918676012472*^9}, 3.3918676424242*^9, {3.3918677601272*^9, 
   3.3918677621582003`*^9}, {3.3918680008032*^9, 3.3918680193082*^9}, {
   3.3918681005362*^9, 3.3918681291562*^9}, {3.391934674032*^9, 
   3.3919347032469997`*^9}, {3.4079018338*^9, 3.407901834455*^9}, {
   3.407901915499*^9, 3.407901916137*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PrintRange", "[", 
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", "\[Kappa]max", ",", "d\[Kappa]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"-", "1"}], "]"}], "]"}], "&"}], "/@", "incsRe100"}]}], 
    "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.3918678217321997`*^9, 3.3918678281172*^9}, 
   3.3918680241212*^9, {3.3918680659672003`*^9, 3.3918680767972*^9}, 
   3.3918681408311996`*^9, {3.4078957572019997`*^9, 3.4078957640150003`*^9}, {
   3.407901920362*^9, 3.4079019244370003`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJw9kgs0VGkAx7Eqx9bmbF4pFaIs7aQnPfa/leihbVXoYatVtqfHMSXSSsgj
CYNadmzMDGaMO96PrHzVOEhJrK2sSmUVpXPWVpyS7J253+x3zj1z5syd//d/
/Cx8Arb46mhpae1iH9Wn5tTpJi60EjLko2ywfZPP9whLXeIc9f/3vXjywTFJ
nMWQD+GHa4+lHsR1vcI90Zc1vwdCcK9lgY2IIWGGCtenJ4+hR2hZHZ+reT8E
p63FbUUyhoT22zjoFZ7CRGYoNUOh+X8ElBXVLuvKGbKie3PiJf9ILFh7a//V
Go1eNKr2lgo/XGdIzfqJOnaxMahI/HhXu1mjHwc0F5v+2c6QZeVNwXWXz4E/
2EiCH2ruO4+XwQWu/c8ZUj3j7Cv36gtIaas4wPtXc38yRuXKSW6fGCKsn1Uc
dDAF2+aX7179uYL6EcB+YKjSaKqCdL1XX4jeLUbym3MU1F8axqXN0/NZqiDT
eI9mjz+Tjhr/oI5nrgrq9yKuBfh2n1QyZOf+5SpFxK+ZLEgx0fj/BZ1x1T96
BhaSzAz1QdtGc29Ri5zmyYRZt53InScnnXeGt/bk/oqvw/2016QX0HxCnNDj
Cb3GZGSqrucX80qzYFvflRXkJ6N5f8OXnaffh3RLyXYntSDe6DXPd/eQ0vzZ
cHJ2tOy5k0/clsav2tubjWdmGx6ZuOXTPnJwuvFJWOftPDLgrlLMQXKXjtYU
9zzajwgR7TsWFz/IJQlHX4zIBkXo6BhJz9qXS/sSI3vasEPToITYxRqzEcRo
OLopwzxKQvuTgFFOaEowkZBbOWsr34xK4DRhhqF2kZj2mQuj2jfTj64XkyNs
W6a6eaizWFL7+3MR7TcPY16vhh/HiIj+fXHgSv185K5LeFdvK6J95+OT4chr
79YcUqCKayDFxR/cLC+eyKH9S9FkYNG2xzKHbFDJGcugLc2wl7Vm0z1k2P30
+Apz02zyUlX39AIY3Nr8MOxAJt2nAPaC85+V7bpEVO3dtZSjJXC4KqUnje4l
x2N9u7b7NQJi6510493cQsw0qhRoNSbT/QrhP8Vd2fs2kdxk1cx4DPxOVNUv
yTxH92Tg2Ks7fIQfSw6lvD6FxQp4DR0X8EKj6b4KzNpo5WeVd4aw5tjIRZj0
XW/JvoGf6d5FuLrm78gNt0PINhYedlIozFaOa3nOp/sX42TCWxPXAH8iYdu7
Ly6GxRaD5P3BvpSHYtjqXdgYcWUHeTvaEdJvU4L2hojFDfzVlI8SmH3baBPv
vwzOagBKEBO721fa6gGOlxKULWyYPbbIB2mm6kCY6TBi3Od4CBw/pRh76vTX
s6EAcPZKIbfeFTbeiQ+Op1L4mTjkyz2DsVB9ymAVajLU4BEKjq8ydN/zWFS0
9BSirjWzBJXhq0ivDMVoODjeymDEWxQe2RGBP9j12U5g3XfpwTHzSHD8lWPF
8p1JLjujYKUWLAeTPzA5MSEaHI/lmCC7LewqOQv+QdUAFeg/XPdA2RIDjs8K
XPkp3eVedyyU7+ayC1dg1T9nr4v64sDxWolZBkWD1X3xmMIZxJygrdekT86B
47cSDi8WtOq0JUDtrqkSNwwFQ9trzoPjuQp9fEnLN1mJ+A/94eir
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.3918678286452*^9, {3.3918680142642*^9, 3.3918680307752*^9}, {
   3.3918680710902*^9, 3.3918680776792*^9}, 3.3918681412172003`*^9, 
   3.391934678605*^9, 3.391934709844*^9, 3.407895671852*^9, 3.407895764725*^9,
    3.407901929835*^9, 3.408002825304*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"0", ",", "\[Kappa]max", ",", "d\[Kappa]"}], "]"}], ",", 
           "#"}], "}"}], "&"}], "/@", 
        RowBox[{"Transpose", "[", 
         RowBox[{"Re", "[", "incsRe100", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "2"}], "}"}]}], "]"}], ",", "1"}], "]"}], 
   ",", 
   RowBox[{"PlotRange", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.3918676696212*^9, 3.3918676814692*^9}, {
   3.3918677304552*^9, 3.3918677316562*^9}, {3.3918680355811996`*^9, 
   3.3918680463101997`*^9}, {3.3918681485332003`*^9, 3.3918681625252*^9}, 
   3.3919347211870003`*^9, 3.4079036693640003`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1:eJx92nk4lN//MHBKRdEeIkq2SiGEiu7KEqW0a1FJISRCRIUILbZsRVT2sY19
DZMIMwgzZsbYs0VKOyXl0ec3857vuf947n/mOtfMnHPey7zmvmaOlLn9YYtZ
PDw8QbN5eP49ci5PFYcvJ4TaSVOpX6j7zQ9iVnbFx9cVc8ZmWICJ+6rISx2k
SQ+bMuewS1hQpEMp3/pO9vMO2LrfomlzF3eRbiwn7nnr7oyVlUx+4XXqZr/+
OhYf9qH+YEI3yW1EbjN/xk1su81s72brbvb7vbCLiqzOUa1uklaPceCjK97Y
KoWR/sGl3ez57mBG9NY36993kUoNBWcp+Ptha9VlMbVXXez572LfipLvkqO7
SNvy61wqnt3HhH2f29Q6dbHXC8CeZnruFN7fRSqW9B09VByEfRQolk+Q62Kv
H4I9DY8yOMPTRYqpXpPteOkh1uS88rxaeyd7P6FYiYVFh0h+J6nj138LYpOn
HKXGAzvZ+wvHtitdnltm1UkSV+qSmXs7AjNc3aF4dFcne7+R2FAfv2WyWCfp
1MXt/2bEet+4N0V+4+TzMTbfIrqHr6GDFB3134VVLHD6S07oYMcTjbnEPScU
uXeQWG8mjvQnPcE0fdzqwg92sOOLwVYquFBXynaQVvIdX7gpNxZL7VJmvp9o
Z8f7FKsR3CkYVNdOOrH1vwkxtdTw5tORnPo+x4Ik72SdN2snGWnc22U2+Bxb
bv4qeJ1sOzsfcVhyXQ5DuY9F+nDo34xxGO/GTjWvUBY7P/HYA281h+R1LNKD
y+9+p36Jx4JMSa3CGm3sfCVgDztvM+bvbCMp+AvPhJCAZR34vuyTYRs7f4nY
vgO0bZlH20j1cXqF3/4kYrI863Q2mrWx85mEHaaYrj90uY1kO5MtUb5k7Eza
n7Lp623s/CZj5TE9TuJ+baT5zAQH7fkp2M6zWqp3w9rY+U7BvLWX8SnEtZHS
/oW7mIAt6yzLeE9sY+efgE1d5FXMLmsj7f03nXAq5hNwWtaK0sauRyo2vl1A
9C+zjfT+X7pXpWGumGi65WAbuz5pGH8hf0PE1zbSv+w1r03H1Fm7G3ym29j1
SseUnn6w3yjIIq03DX71Y10GJj86+1OQKItdvwzsoNWFoUwZFok8M5uYUibW
YfFqS7Ayi13PTMzYma9uuxaLZP3w401sCxHTsNyvS9rDYteXiOnZbyDIH2GR
ZjY3E3IWpjDbsvHOWRa73lnYmn7T3nfWLNLRmeaZKSm296Fjo/k1Frv+2dj5
jC2Z826zSIkz2WMmZGOBh/PVhwNY7H7IxpY/9tyxIopF+v6n9fqIXA5md11h
z9MkFrs/crAzYavkHuaySLr/NUAO9qcmqPwXidMvM+OTu+rfNrJI4aL/BYTF
du6nHOzk9E8ulnPMemjfKIv0f9vLxWxcJKbpk5x+ysVc7Q1LP81vJ6n+d+Vh
YpE6yY/E29n9lYfx5IrbUTa2k3xeUmY6KA/7SHuRu+N3O7vf8jCrZR1KYokd
JNpM9WdygiXec3AWWc35/OZj2zZdeLP+bidJ+r8J87HX8Y0PF73rZPdjPoap
DMzbhXWRnC79K0ABdtW02jYttIvdnwVYlv/+YN++LlLVj3UzFS7ABl1GG/OU
utn9WogljwxtG3XvJi37vw1iH3MHKC3V3ez+LcQ2xJRYLlnYQ/pvd3WF2PfR
5h4bkx52Pxdh58YmhhviekgcrxOys979r9ear3KdTMxY4DUzxvApD6ENvFb9
22J6l8YEr8/wbjJ1TmaA168HRDOiLtPB677Nv93Hreng9RCl8U6CFR28tiDd
3njHgg5e30weWxF8gQ5eP7b3elpxng5eh4+cnBAyo4PXPPrpl6+fpYPXiWED
qr9M6eC1QcNLswen6eD1ibDyofWn6OC10hzpZ00n6OD1MX3XQ64mdPD6lahy
hfhxOnh9oH9LRtFROng9oSc7qXeEDl4rxjvmVx6ig9cqnuWb5Q7Swesb1Cp1
+wN08FrC6oZ0lBEdvE4KZWyI20sHr0MWhkT6GtDB61/3v4jo69PBa4pVteyA
Dh28vm9oanlhFx28Dr/+M+jZTH45Xp+/++jComg6eK1ddFLgUSsdvH65S0Iw
V5gBXkfvN6juNmeA1+k3jycuqmCA1wbS2qVJW5jgtelp1OuadtTrdkPU66j9
qNfH/sojXoeRUa+FcV73P0G9djdFvY7TQr3u6EC9fnMO9doR5/X0NtTrO1qo
18J5qNcSOK+fxKJe677//3u99iLqtT7O640WqNc/rqBeN85CvU56i3o9EYJ6
nZKOen0P5/W5R6jX23FeX3mIeh2F87oA5/VNnNfncF7vw3m9Gef19kDU66c5
qNfH3l29UzsTD8drv5Mf3pj+aQOvFX92NVSmtIHXQfKnhr9fbAOvK8SGCRs2
tYHXUjb3wnunmOD1d62Bi7JUJnhdalTcEJ3PBK9P1QbkvypjgtcEU4OIgGom
eL1trOL+n3omeO1mf+O82IynHK/1/LbGvmMxwWslFx9P614meH0+a4WZtRcN
vJZb+82jB8ZmGNW3RM3JmwZer9t45Mg1fxrXa4klV29uawWvYztRrzNxXjNw
Xh/EeS2K8zoM5/XgO9TrF3qo17GhqNercV7r4rwWxHm9G+d1JM7rNTivi3Fe
l8ehXkvgvJ6N81oI57UvzutqIdTrn76o1344rzVwXucKta6l7OB6zRheWSGl
xfXaQ9xE3nUr12sr2f7tHep08Jr5rkXgghodvL56SbpPXoUOXstdzV+/R5kO
Xp88eqDjrSIdvGZJKOaLz4w5XudJkRaKKdLB65+KkTdmKdHBa3XiebVfynTw
WmPqesDqmfU5XgtJedwJ1aSD1ykrdsZZz8TH8bostE+sUI8OXo+R19t6z+Sb
47Vyoqoa9QQdvNZeOHwl/iIdvL74M6x+5CodvJ5yc1KK8qKD1/WWijtiQujg
9VJS3gArjg5e87qVvFXLp4PX3bcWHwiopYPXf3iXKJR10MFrYp7kdOxnOnhN
mb7lLzCXAV5/knjoQxdngNerCx4/btvMAK+d3q/Z834PA7y2Vw0a7D/DAK/1
9wsHxzkxwGvZ0vHvs+4xwGsdSRfeD7EM8Hrc5utOvVwGeO16dHTB1GsGeB3J
kHeexWKA1xu1jf8cGGWA118zfTd1TjHA67xsCz6CEBO8ZoljlnkSTPB6CY+z
P+8mJngdqNxr9mg7E7w2PiypesOQCV77X8kTzz/OBK8bh7+WGV5ggtc99h0T
OvZM8Dpfb0thmjsTvCbqlr/y9WWC1xe+8mV2BjPB69yRmsLCKCZ43d+RUieW
wPWaPy3x8qIMrtfROK8ja1Cvz+C83oLz+sMV1Ov1OK93XUO9ts1AvearV31i
8T9ev7FI2HXSi+t1p9aBH1peXK/fG/K82zEz5ni94/6sJV98aeD11Ecp6VP3
aeB1ZPiK+ZLBNPC6TqPml184Dbz++Paia1Y0DbzmXSh0lhBHA6+Vn1Wd9kql
gdcbxt6r6ufSwOuj009SBMpo4PUHreyxjhoaeL25TUKgmUoDrxdcnZj1u4cG
XtuE31Z3HqOB1z8WuoUe+0sDrzu/vRl+sagVvNaPfGtYu7YVvP4kOe3wRKMV
vPbWJxuYHWgFrzv8Nz/cbdUKXi86tqjQ2bsVvN5hv25M6XkreB2hHkUueNkK
XtM7+hwOD7SC10SS2xyzBVyv/9o6j+1T53o9Ioh6nTKIeh0lhnpdK4N6PTCI
et1rhXpt7IB63XUE9bpGHPW6cw3qdRnO6+U4r2t+o147rUa9/rkc9frrQ9Tr
NJzXqxNQrwVxXu/GeV2H8zrJAvW6pgL1uuI66nUXzmsXnNdncV6b4Lzuxnm9
MA/1+s0I6vVXFdRr8j7Ua0YJ6vV8CdTrPpzXQjivVXFe92mhXmvjvNbEeW2M
8zpp2gnxulwR9Tr6EOp1sx3qNQXndSHO61Cc10E4rxfivGYNoF5X47weScV5
Xasr+Cqd6/Wvk38F+u9yvXZUXXfh0yWu1wdeak447uN6TdO8unKpMtdrY09n
Pm9hrtfuT53n3vnLAK8ZmRZRGm+bwevmdYOnV95vAa9Zfx0EebWp4PWdmyu3
CQpwvXbAee0mFPxnrxfX6xajbc9XenG9VlA9IjDqyfVaaOCsXaEn1+ugR3/M
3Dy5XndJalmpeHK93rtjm1qvB9drneEYz9seXK9dNFzGl3twvRbYdV896hbX
64iu8QbBW1yvj/rsVL9yk+u1lvp094sbXK9PT7bKfHfnev36p4/JCncaeF1a
KVQq4UYDr50fv/FZcJ0GXv+tevC204UGXo812I8HX6OB10vjPnWudaaB1+F5
ESlhjjTwGrPJPt/rQAOvn8W/XTTPngZed30PzJ5jRwOv9anrtdptaOC1Te7F
JO9LNPD6OFWZNWVBA68fzCJU6F+ggdeJU43qZ81o4LXMb+VVu87QwOtJV5vd
H0/SwGumjPc1s+M08DrAUt3t8WEaeF2or8gfdoAGXitMrqTt30sDr8/srvOs
0aOB13t3axImd9LA633V2ax322ngdWnsu7AH6jTwOi1Uz6BfmQZei9UfPflh
Aw283vbJWixRhgZeF41GNc2TpIHXnYKLictFaOA1aXF7Z+0iGnid8HWniyQ/
DbwODqm5t4KHBl7XnuyVTJuggte2n/w0WWNU8NpIK4f1bJAKXt/d+Gb+7w4q
eO2gZtT7roUKXr/pUPe+UEsFr20XvVezLaOC14HDTeZT2VTw+smaxSnLk6jg
Ne8gPyvnMRW8HtxqIkp9QAWvk/XWspw8qOC11Pa9nyMcqOB170KBZxrmVPB6
otEn9sQRKnhNCiZJ/9Khgtd1FpafV6pRwetSHbJRmTQVvH7wMkyobykVvB4z
KwwO5KVy76/3S+dUfmoBr7O0hF/f7moBrw2XV/q0UFrA6+uuJ37kF7WA19WP
o04oJ7aA19Onp/gMQlrA66OtNAOemy3gtaRBgs4Zqxbw+n5Rf5n54Rbwekuk
6cQy7Rbweom1wG0n+Rbw2tHYaNp7SQt4PeDbP777dzN4vXfHi6DcgWbwutdb
z6ipsRm8bii+Xhte2Axee14aOzL1tBm8nv+64cmUXzN4rX1xzbp7V5rB6yTj
qIj/9bpb++sGMc1m8HrwbXzQ1Nwm8LrqgujTeycbwesui37a4goyeD1ee+vO
uzQyeK1adYef8YQMXtPd31kfDSGD19UrPoj88ieD1yyZc8IO3mTwOqNz55pr
nmTw+txVu9gmDzJ4bbKnqsrYiwxeT6cf9GjwIYPXe0tet0vdI3O9jq6hKcH6
IZiTsasp6zEZvF6E7YmenUAGryurk7EIIhm8Ftmw6O+1F2Tw+hn5BH8QmQxe
n/gm//x1Gxm8fiYXlsY3QgavzwqpGapMksFrneSqa2qCFPDaoM/w2SdJCngt
lTlooK9CAa+DN5iki+pTwOuJs8zTuqco4PXI76tTCVco4LXR2NyphT4U8Log
eceVk48o4PVqv945R9Mp4PWlHyTthgoKeK39U7c8oIUCXgtX5/Kd7aeA1zX5
fdbzvlPA64k1IVYHZ9eD13wDVhqzltSD19NEQvzIqnrwenWA1nCbXD14nTef
GZCqWA9ezzeUGdRWqwev29WGNnlr1IPXWf4WS+0068FrN9vk8Gn1evA6ZMEy
M13Veu7/jZt64w5sqgeviaE3gjRl68HrNiWMJCVeD16/cFMK2bSoHrx2m784
9jZvPXitZubqqPuVAl4PqardinlLAa9f/O3ZmtVEAa+rrvo8f15GAa9va2VX
hxIo4PWctq/Pk8Io4LUQy5Jv4hYFvHbUmBUdb0UBr/NWms96dZACXj/W1Zq8
vJUCXq9N77tbIkUBr8cP2KiWCVDA69W6Pzff/UIGr2V43JOUWGTw2uR1fEPV
SzJ4TRS7rnGMQAava3by//oWTAavbzauZma5ksFr5QW/XR+fI4PXBN8FQeV7
yOD1jY2TvErKZPD6oKO4+B9RMnh9bCIkWXMWGbzuOHBS4ttoHXjtxgwj72DU
gddyc3ePKlbWgdejBsxOZkYdeL2n6bOGcVQdeN2wIGYy3a8OvO5tSsyce60O
vL4fcDPA7WIdeM1Yap+15lgdeH04Zc5WsT114LWVVZG/37Y68NpX+5jdXaU6
8HpIacEVPbk68DpJ94zAkGQdeH2Df+fiyJV14PW8s+aCvsJ14LXDpYrxKcor
8Nq71uP47Moq8HoJtuamV281eN1s8CvB+3ANeJ2oh3r9oAr1uvAl6rW6K+r1
g6Wo19PSqNc7cV43XEG9/qKDes3CeZ1QhHrtHYl6ve8A6nWhFur1SpzXR2VR
rw/Xol5bjaFeG8miXl8SRL12SES9luhCvRZPR722XI96fR/n9e1fqNdzPqBe
Dz1Hve7zQr32G0O9Nh9CvaZkoF4/wnn9Duf11h7U6ycZqNdp91Cvz/KhXq81
QL3epop6/dwX9brBBvW6++9SxGv6BtRrH5zXLAXU6/PXUa/D+VGvd59Fvf6m
hHot9gf1+irOa3mc19EtqNd5VNRrN3XU61wR1GsVnNcDyajXbftRrzV3oV5H
T7shXgtWo17fX4l6/QVDvf5ah3qdNAf1+jDO65cKqNcTDqjXc8dRr5cYoV7f
bEW9Dp+Dep2O89q6EfU6Gud19RvU68YHqNelOK8FklGvbS1RrxfjvNbFeS2q
g3ptPhf1mmCKeq2I87rc1yawcqwSvK55natyUKYSvH4rMaeuy/IleN2uZr7W
2pIEXrc0lUSMCVWA12UB7TuvvSwDr5/4fpLycn8BXpeah2fZapaC11IZOfvK
fhSD152Wd7WK04vA650j8/Rs9xeC1+kyHkbk/Hzw+onXqpCS87ngNTHFMZnw
JQe8JvNtypD0zQGvAz5LOL0TzwGv3Y5LXKAXZIPX5RTpUy8PZ4PXGqoGQQKD
WeC1x819/XM2ZIHXTQUltVrORPA6dnmE8cGTRPB6lZHMN6ItEbzWrKc7zvYk
gtefacVlh8OI4PUH472/4ghE8Np5wOrBeAURvF50buXi4wwieP3WaePZmjEi
eF1g+MR3P38WeF25ofjNl7VZ4PXUoYUlJTuywOuDqxdMpp/OAq/1DbbdaHLL
Aq+rV28/oRCVBV7bxe/trCnJAq/FlS94pnZkgdcLzg33tf/NAq9FHEctc5Zk
g9ca8RrhiTLZ4LX//LTfezWzwevZagLpBKNs8PpJol9x5fls7u/XDuexaNds
8Hrz4GZT9aBs8HqnHmtddFI2eK36bEkxuTwbvDZZ93gxmZENXvdOfpCP+ZwN
Xh/9E9epvyAHvP4mrfK5QS4HvM57dpJHRScHvLbSGPJ0M8sBryesx4nJHjng
dRN/bGhZbA54nfm0a7S8PAe8Nk7/sSmzOwe8ju4YdArgyQWvHTYoXjsjnQte
R5VnuUntyQWvR/gJRizbXPD6vUqpou/DXPB6kdNUjUxxLngdrjt7WVFPLnit
+3Lo2Db+PPA6IkNnbsbmPPC69cKOF/ymeeB1SnGkqJF/Hni9h7+vxCEvD7y+
p7BAwqE3D7z2zNMJ2L0wH7wesY2Z16OVD14bLbmvuP1yPnjtIZu2fl9MPnhd
lrYhgrcxH7we4ze8bPw3H7yOkLcbl1YuAK95eFwKL5sXgNcsxy7TFREF4LWz
hVX5vLoC8Pr0WnGywu8C8Hq44kCglWIheB3cHaz57HwheF21W0WuILwQvLbG
dL/cqy0Er2NXPQ6e+lUIXjcvcbv2XqEIvJ628XqldKYIvN7gTndNCSwCrxup
n4sUyovA69Q5garSMZng9fCnU6vXPc8Er312f+c7npEJXsuWfq4QqswEry+z
BEX/dGeC16lTNRVq84jgdUzHE3/j7UTw2tFCRbDkFhG83pwcHqRKJYLXW2z6
l4/tyAKvh5Qv9kk0ZYHXLXZ81jb7s8FrIXuP94fGs8Hrj+ao1xuSUa/n8aJe
x3xEvaYcQb02qUK9fqKEek25jnotkot6ffGqRY97VSZ4fV53UehDkUzw+vq9
4vPHHTLA68hjEqbxjengddugQvwhpXTwerWvHa9ORBp4PTVfKcZkOhW89qzr
iHW0SwWvv3Z6/rreQwCv+YUpyoeOEcDr2EOaa/vfpIDX8U57u0SMUsBrCbm3
N1gNyeC1ZO8snmWHksHrAOrJLdltSeC1CeN3ROyFJPD6kPzE5rovieC1tNP+
KAmfRPCa2Tiv7oFIIngtIiK5nDcrgXuej/Ft1WXDBPD6vIx62YuhePC66czo
RLdfPHjtbfjgR/X6ePB6j9zvj6ZNceB1iJ/R2kjXOPBaZKNUy7m1ceB1eUHU
xtSm5+D17M/fLyYNPQevu5R++CorJXB/D3n4Y4IlkQheq3rarZKrTQSv4/Il
25fsTwKvd6jJd70oSwKvFSbVbBtWJYPXy2wf66y7mgxeV5eENuwrSwavm7a4
8g9NJ4PXK3oPachrp4DXc+q8Aj84p4DX7vN/bG1PSQGvFXyqym0ZKeD1q22E
uL88BPA68dZACUueAF4TtP00VfYRwGse2tH9SrYE8Lq2VJjywZ8AXgdrHRO5
FUcAr89ED6e/LyKA1+5dhuu31hPAaw1XDTXLDgJ4zfxkKGYzTACvda1tD2p+
JYDXT1q+Ukk/Cdz76/XDdqO/CeC1pN+lr3EzY47XmPDcMzUTBPBa1W3LZ43P
BPC62PmEHnWAAF4vlXl43I5OAK+v1h/36aokgNeCmoSH31IJ4HWOSG7mzUAC
eM183WS9+zIBvL5cOfZyvj4BvNZ6EyjxWIwAXp/KoViljqSA12pCuyQmc1PA
64+Otdd2u6SA1xV8qNc3wtR1fWK4XvdOagYnxHK9ruTPOHfnGdfrUEajilw8
1+v+mLXF95IywWtP2YSWrNRM8FowczwsipgJXlcVFOsb5GeC1yp69RfLSzPB
6yKz3JjJme8HjtcFgVPNvJRM8BqjZIvSqZngtdOXWpJLZyZ4/d4lbc/IUCZ4
/bClwErpayZ4/Se9SsjobyZ4fVQ5/+zuBUTweuOH8cIVK4ng9eDhFelkeSJ4
PSd8E7+5BhG8Lr3i2Nq3h+v1S3vU63s6qNesu6jXLftQr8V6UK8VPVCvXflR
r9dXo14vZaFef+NHvd6qi3rdJ4Z67Vnbi3gd0oF67YXzurUV9fq5OOp1zWXU
68wq1Out81CvV5ShXldIoV5Pm6BeJxmgXv9djnodeQb1um4x6jUvAfX67Ntr
WhKiXK8X1xt33rCKBq83hgbMzjv9CLxudJgoetgfzj3PN1+hhVkaCl6vXlEY
ylMbAl5fWXaoavB7IHht51pUrR59H7zWHOSbsHXyB69Nxq+FKrndAa/X7JO2
k06+DV4LHRjMufDhFnhdrjPgvbfhOnhNFNOe0zjkBF67P/gussf+CngtdXhx
yEUXC/B6PX/QPq+Sk+A1tcZrS43TbvBabGet3L0r2zCO137+Zy0ITccwOM+n
WiMzrWaOcbxevfm38LCmNcbxevrt1va+cXuM43W67Okbc7c6YRyv7UQ2p6Qf
d8E4Xku7iYzXHHPDOF73MI6pZWncxDheb/A2iSL+8cA4Xq9QUvPwbvXCOF7L
Dj9qc5bwxjhea20/Fax/ygfjeJ2Z8mFR4IM7GMfreakNMR05vhicD7GpaKtq
9MM4XpdYRugzevwxjte7PvtWxg/fxTher1mc9aV4+B7G8Vre8chLQu99jOP1
5ncqTbNaHmAcr18tDx0/URqAcbwedkps3BEbiP0/RKe8Pw==
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0., 0.09}, {-0.49425051451519225`, 0.01446007790632993}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.407903672242*^9, 3.408002837238*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reverse", "[", 
  RowBox[{"Quadratic", "/@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", "\[Kappa]max", ",", "d\[Kappa]"}], "]"}], ",", 
         "#"}], "}"}], "]"}], "&"}], "/@", 
     RowBox[{"Transpose", "[", "incsRe100", "]"}]}], ")"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.407898208859*^9, 3.40789825027*^9}, {3.407898388375*^9, 
  3.407898395547*^9}, {3.407898564023*^9, 3.4078985653459997`*^9}, {
  3.40789859744*^9, 3.407898600709*^9}, {3.4079036877390003`*^9, 
  3.40790368809*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5.834268349487495`", ",", 
     RowBox[{"{", "0.07260633095096355`", "}"}]}], "}"}], ",", 
   RowBox[{"-", "8.07394707004897`"}], ",", 
   RowBox[{"-", "25.382195886975346`"}], ",", 
   RowBox[{"{", 
    RowBox[{"15.487897981225135`", ",", 
     RowBox[{"{", "0.16197573512312446`", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.0643911425787853`", ",", 
     RowBox[{"{", "0.2686320656845649`", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12.98837967281495`", ",", 
     RowBox[{"{", "0.18210810408210235`", "}"}]}], "}"}], ",", 
   "0.3433416015460348`", ",", 
   RowBox[{"-", "6.174450719798848`"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.618075436209621`", ",", 
     RowBox[{"{", "0.3709284036827194`", "}"}]}], "}"}], ",", 
   RowBox[{"-", "43.453066421821056`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.4079036887860003`*^9, 3.4080028554276*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Re=1000", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Kappa]max", "=", "0.001"}], ";", 
  RowBox[{"d\[Kappa]", "=", "0.00001"}], ";"}]], "Input",
 CellChangeTimes->{{3.40790372766*^9, 3.407903731738*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"incsRe1000", "=", 
   RowBox[{"Monitor", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Take", "[", 
        RowBox[{
         RowBox[{"Sort", "[", 
          RowBox[{"Re", "/@", 
           RowBox[{"GetIncrementsM", "[", 
            RowBox[{"mat", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\[Kappa]", "\[Rule]", "k1"}], ",", 
               RowBox[{"Re", "\[Rule]", "1000"}], ",", 
               RowBox[{"G", "\[Rule]", "4"}], ",", 
               RowBox[{"\[Omega]", "\[Rule]", 
                RowBox[{"-", "1"}]}], ",", 
               RowBox[{"\[Epsilon]", "\[Rule]", "0"}]}], "}"}]}], "]"}]}], 
          "]"}], ",", 
         RowBox[{"-", "10"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k1", ",", "0", ",", "\[Kappa]max", ",", "d\[Kappa]"}], 
        "}"}]}], "]"}], ",", "k1"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.3918671489342003`*^9, 3.3918671597522*^9}, {
   3.3918674039161997`*^9, 3.3918674115652*^9}, {3.3918675198992*^9, 
   3.3918676012472*^9}, 3.3918676424242*^9, {3.3918677601272*^9, 
   3.3918677621582003`*^9}, {3.3918680008032*^9, 3.3918680193082*^9}, {
   3.3918681005362*^9, 3.3918681291562*^9}, {3.3918682208192*^9, 
   3.3918682395592003`*^9}, {3.391934820117*^9, 3.391934825189*^9}, {
   3.391934869854*^9, 3.391934897488*^9}, {3.407903735582*^9, 
   3.407903738657*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PrintRange", "[", 
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", "\[Kappa]max", ",", "d\[Kappa]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"-", "1"}], "]"}], "]"}], "&"}], "/@", "incsRe1000"}]}], 
    "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.3918678217321997`*^9, 3.3918678281172*^9}, 
   3.3918680241212*^9, {3.3918680659672003`*^9, 3.3918680767972*^9}, 
   3.3918681408311996`*^9, 3.3918682568922*^9, {3.407903748644*^9, 
   3.407903751874*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJw9lAs01Fkcx0XoOekhPabNqwdC8ibzG4YxmEHaOVJol8jhRKX/vXrJlDxT
ZFFC0ux6k3alpO7uFktejY7KY3vQEtqmKRzZHmvP+f/3nnPPPb9zX7/f9/u5
VycoyidEWUlJKWSm/zcybXe+gwH7GiaKsMGk2qlXnNK5ypWs/+NxTmfnQcuh
akzC14hFGtRXzqnCefVF1cz8bChPyN3kPBMb89hjA1bzwEBrx+EHVcz6RXDG
eDrBciZ+9E/TkwK/JaA93mx1upLZvwzcL97ac6sCk0WPv9q25WjBcN+lYVk5
c94qCNbiZnSUYeJxzSbvYzcbyoavmFSXMuevhWeua5KiSzBxbrQ5sXSeDrQ+
k36/upi5Txd8etWP/vQjJkFbxJsNS/WAn66XvkzK3K8PShM2fiFFmMRdPvCS
K1gPr1uNUy8UMvlsAAtu35PKAkwKFpw97zu8Ec7Igt9K85j8DOGQPP7o8VxM
Gg6X8SITjECSqDCwvsDkuwnGFpYXybIw6R1qGo9fZwLFO4LShJlM/qYQkNWV
XpyOyadSRZcoaDOsTTLaPpDG1GMG00P7jnxKwST1xQmjnhozsJvqqphIZOrb
AkfsrTLa4zFZpcWK3zPLHKTu0Z2nJEy95pD7/KHGilhMSkV5/XJvC4hQCVdK
OcLUbwH3ws549CBMbOMNLY8WWsJUt06RajSjhxXo32fVsaIwaa6/mab2zgoe
DWZyx8MZfazh/cPyqdpQTHwV/KEMsIH3HaH524MYvWxgZJynaAvAZGhDN2fN
OVvgLI27rePH6GcHUWsjmrd9iwkVGJxT8swOtPuuj/h7MXraw6XTpZNO7pjM
zlLIzU22wr3uxDYVF0bfrdD4oszzMmCS2XpCQI47wG1BW6imHaM3BzKWWamG
WmCiq8y64t7OgbTs19oZJoz+AO03/qjL3oiJH7vjUziLC6t7b3UgXcYPLuyv
u3vAjI1JobVm6eYbXDANUfulSZPxxxEUL79UWy3C5LWPv3gywBFOmuxMlMxh
/HKEkGqN4OJZmJhGXp3VoOoE6vb+0SXTiPbPCcx3VMnjPyCCk0crJZVOoAOX
lzu8QbSfPPBt6TGWvULkrtRsp6uYBwPqnyWOfyLaXx4U+MaFnu1GRO3XGLWF
n3nA4qZZ3mxHtN/OoFcv8yKNiIj6yPUuqTPsytnFlt5BtP/OcNE0YM7eWkSy
JtV2XxC6QMUKpcQ5lYjmwQX6eRsXJ0sR6V/sOT9w3AV8YuzXjVxCNB98MEkd
4BtkIqJvnFWnl8cHfnLLF7cURPPCh0lOYK+HBJEIQX/wCM8VNgjTIkxjEM2P
KxzTihVMRCLyc7CeRvWYK2TnCecXhCCaJwGsb2zcZuiPyHRseMOhTAGYRn1z
J9cH0XwJIB/XKOQCRJxya8Ls7N1A/LY22xAQzZsbsF59FntYIpI889koDbrB
WadrfT5GiObPHZ5KVR876iAiewi/Naa4w2i52sQKLUTz6A7y+cLRpwsQWfkm
YV/qFg8of3cn7KQyovn0AJadr/7yKYp8p96xcluvB5TFjsp++JuieRXC+ft/
rf86QJESXc2m5SeFUN/C7hE/pWh+hRC5NaPgYjtF5A7+B/sNRFB1HYxbf6do
nkWQIxmzG6ujiLXf1W+KZCKwVXl3bLqCovn2hPs1GiUfr1Ak9tDog72HPcHt
oGj/SDZF8+4JS1JuJD1IpUjTOTNsrOMFrDLnq/lxFM2/F2i3Vu0PpiiysDxG
70OzFzSs4xeywyn6PXjD4rrO5y2BFDEcfL7X38YbnJJ390Vsp+j34Q3Fc20c
VAQU+RerFhHn
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, -0.0057},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.3918678286452*^9, {3.3918680142642*^9, 3.3918680307752*^9}, {
   3.3918680710902*^9, 3.3918680776792*^9}, 3.3918681412172003`*^9, 
   3.3918682575572*^9, 3.391934834369*^9, {3.391934879289*^9, 
   3.3919349048310003`*^9}, 3.407903754488*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"0", ",", "\[Kappa]max", ",", "d\[Kappa]"}], "]"}], ",", 
           "#"}], "}"}], "&"}], "/@", 
        RowBox[{"Transpose", "[", 
         RowBox[{"Re", "[", "incsRe1000", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "2"}], "}"}]}], "]"}], ",", "1"}], "]"}], 
   ",", 
   RowBox[{"PlotRange", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.3918676696212*^9, 3.3918676814692*^9}, {
   3.3918677304552*^9, 3.3918677316562*^9}, {3.3918680355811996`*^9, 
   3.3918680463101997`*^9}, {3.3918681485332003`*^9, 3.3918681625252*^9}, 
   3.3918681962502003`*^9, {3.3918682692111998`*^9, 3.3918682740692*^9}, 
   3.3919348453199997`*^9, 3.407903757755*^9}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1: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
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, -0.04},
  PlotRange->{{0., 0.001}, {-0.0490635010491981, -0.005195629742504349}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.3918681630982*^9, 3.3918682747232*^9, {3.3919348380480003`*^9, 
   3.391934845925*^9}, {3.391934881611*^9, 3.391934904975*^9}, 
   3.407903821824*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<incrs.eps\>\"", ",", 
   GraphicsBox[{{}, 
     {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1: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
       "]]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, -0.05},
    ImageSize->{214., Automatic},
    PlotRange->{{0., 0.001}, {-0.04993471125085637, -0.005377739825551988}},
    PlotRangeClipping->True,
    PlotRangePadding->{
      Scaled[0.02], 
      Scaled[0.02]}], ",", 
   RowBox[{"ImageResolution", "\[Rule]", "100"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.405989170178*^9, 3.405989195281*^9}}],

Cell[BoxData["\<\"incrs.eps\"\>"], "Output",
 CellChangeTimes->{3.405989204099*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reverse", "[", 
  RowBox[{"Quadratic", "/@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", "\[Kappa]max", ",", "d\[Kappa]"}], "]"}], ",", 
         "#"}], "}"}], "]"}], "&"}], "/@", 
     RowBox[{"Transpose", "[", "incsRe1000", "]"}]}], ")"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.407898208859*^9, 3.40789825027*^9}, {3.407898388375*^9, 
   3.407898395547*^9}, {3.407898564023*^9, 3.4078985653459997`*^9}, {
   3.40789859744*^9, 3.407898600709*^9}, {3.4079036877390003`*^9, 
   3.40790368809*^9}, 3.407903838703*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"618.9252740826266`", ",", 
     RowBox[{"{", "0.00307616441827223`", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3423.8926495001188`", ",", 
     RowBox[{"{", "0.004055615751791772`", "}"}]}], "}"}], ",", 
   RowBox[{"-", "4457.499336674621`"}], ",", 
   RowBox[{"-", "2564.0621370918966`"}], ",", 
   RowBox[{"{", 
    RowBox[{"2307.412552488437`", ",", 
     RowBox[{"{", "0.0051009137293623885`", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5205.0690002055535`", ",", 
     RowBox[{"{", "0.002971957020418757`", "}"}]}], "}"}], ",", 
   RowBox[{"-", "1695.0230217559244`"}], ",", 
   RowBox[{"-", "11548.754984910349`"}], ",", 
   RowBox[{"-", "16810.46420651117`"}], ",", 
   RowBox[{"{", 
    RowBox[{"28094.545009347898`", ",", 
     RowBox[{"{", "0.0017843496796573662`", "}"}]}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{3.407903839033*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Re=10000", "Text",
 CellChangeTimes->{{3.3918683120572*^9, 3.3918683130062*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Kappa]max", "=", "1*^-5"}], ";", 
  RowBox[{"d\[Kappa]", "=", "1.*^-7"}], ";"}]], "Input",
 CellChangeTimes->{{3.407903868942*^9, 3.407903879324*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"incsRe10000", "=", 
   RowBox[{"Monitor", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Take", "[", 
        RowBox[{
         RowBox[{"Sort", "[", 
          RowBox[{"Re", "/@", 
           RowBox[{"GetIncrementsM", "[", 
            RowBox[{"mat", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\[Kappa]", "\[Rule]", "k1"}], ",", 
               RowBox[{"Re", "\[Rule]", "10000"}], ",", 
               RowBox[{"G", "\[Rule]", "4"}], ",", 
               RowBox[{"\[Omega]", "\[Rule]", 
                RowBox[{"-", "1"}]}], ",", 
               RowBox[{"\[Epsilon]", "\[Rule]", "0"}]}], "}"}]}], "]"}]}], 
          "]"}], ",", 
         RowBox[{"-", "10"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k1", ",", "0", ",", "\[Kappa]max", ",", "d\[Kappa]"}], 
        "}"}]}], "]"}], ",", "k1"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.3918671489342003`*^9, 3.3918671597522*^9}, {
   3.3918674039161997`*^9, 3.3918674115652*^9}, {3.3918675198992*^9, 
   3.3918676012472*^9}, 3.3918676424242*^9, {3.3918677601272*^9, 
   3.3918677621582003`*^9}, {3.3918680008032*^9, 3.3918680193082*^9}, {
   3.3918681005362*^9, 3.3918681291562*^9}, {3.3918682208192*^9, 
   3.3918682395592003`*^9}, {3.3918683179522*^9, 3.3918683702552*^9}, {
   3.391935387656*^9, 3.391935393332*^9}, {3.407903882093*^9, 
   3.4079038853719997`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PrintRange", "[", 
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", "\[Kappa]max", ",", "d\[Kappa]"}], "]"}], ",", 
     RowBox[{"Last", "/@", "incsRe10000"}]}], "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.3918678217321997`*^9, 3.3918678281172*^9}, 
   3.3918680241212*^9, {3.3918680659672003`*^9, 3.3918680767972*^9}, 
   3.3918681408311996`*^9, 3.3918682568922*^9, 3.3918683780942*^9, {
   3.407903909299*^9, 3.40790391276*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJw9kwk01Vkcx8thSjPNYRoZHZk6CkWypCJ+5l4Z2ygkS6YajYe0KlvUpIwk
UeohiowsxZBeyZLp2veex/Osr7yNXoZCSslkzDnvzj3nf+75nv9dfr/v93NX
HzjmwpBbsGABY/77b6ZD80FKhd1bTGzvV6ZN9oRDWpRQ3vJ/fQkWaHsLNeZ1
SNTSqXermTB9G+xeTdL/abDTwNwwY17Hj5VkTjdkwv28yFiLSbo+G96nCi0a
JzDZr8awmTqdB6VKQpNtE3R/PnRGpLmmjmNiaP3t63GjIjD7rH1K+IaeVwwu
bPLbsnl9vsy7JSSIBV4KCeYbX9PzH8Ecf/mFTWOYBOwoXxncXgLVOcd0NUfp
faUQVG34cWYEE1eJUuDJ9eXAVZ8qe/KK3l8BrFYXQ4YUE/Nw/7rA6EpoarDU
mh6m9TyFEx0bPAOHMNFSqlI9LiAgH3I0lium9VXB98UeQStFmCzixpmUplcD
k6TzdghovTXQ4X3Fz+8FJrPpW/ZvdqiFDaY+Yl8+rb8OHqrdWOjYj8m4v/hi
yYc6GLZVD1frpf3UQ+QAS76Nh8mQ8RXWptwG0LZw9PTh0v4awVDV0UDEwaTv
sxn/4a4mMFdpw9Zs2m8zjPUtcYhvxYTdPKxgvLAF9kZny1c00f5b4K38pF5r
PSY1zGsbWUWtUPDAOaqqhvrRBr6cwOZUgknpfvA0/PkZRCdk17pVUn/YEFu0
xnS6DJOC9SPnixXbQeMWYyq8hPrVDlbbnWuFDzDhzNh3p3hxYFtDbKhuEfWP
A03Nj4bd8zGxF6w65G7UAR91i0Z8c6mfHeB2sMbbIwuTuvr3c8sVO6F8z0t9
vQzqbyeEJklNRamYWBa0MbsHO2EsIflYeBL1mwu6n8erp65iUn41a13yYy4U
amMd58vU/y6QG7G7fSUGE+OQsKe747ugtnDnuuLzNI8uMEozYbPOYFLotWOX
ig8PePaJN1PCaD48WBVZnL3vJCY6aI20y6wbFBv/kFt8lObVDQdzN3Vd98ck
S2vmNFO5B6RLP1nI/Urz64GWKtOAXXsxUf+Ko+wq7QE/M/HFGHeaZy9ot0a1
ZzhjkjyRk7uM9IKVi+6pVAeabx8E1OxuCLXGRLknYhs3qQ8i7dmzppY0736w
qo33E2zFJK7SmXPtcD/c/XDD7ZARzb8f4rp5GgO6mChkaTNcrAag4JJEzWAt
5WEAwsImcwI0MDkb889H5RV8WFwcuzZOlfLBB9abA3OJSpjMHOYmdIzzYa5D
P+OsIuXlObTF+R53lcMkyOWeZmLjc/Ay+0aq9AnJ+HkBNkuSwkveIvJ6y9ky
p4wXMOQWlIlHkYynQTDZuJpXJkHEf+VuR6XgQdhqX5X83XMk42sQzqhPMA7w
EAk8pzLxcq0AJNo36pOfIRlvAjBlZZs9rkdEPyjyiU2iAPL0+A7VfyEZf/M6
MvtcWQkio75/R+fNCmCzzjPGrUIk41EIQ3ZeUUdyELnn6ea0yF8Izos8ffXS
kYxPITjl3b7Zx0TE96fqFX5cIejz84uDLyMZryJovexnvPB3RDQt9YYaQAQx
1V+wTkcgGb8i0OFzKqQnEBEYptzXyhdBxJ+fBqwDkIxnEdzdcO4O0xuR9DVy
4RdUxFDf9i6D54FkfIuBWenjpeiEyB7VI9uHI8Vgm6nDMLBBMt7FYCzfbOMA
iKgu6f36x1ExsG/1xO8xQTL+JfCLlF21Tw8R3izuy3GXwA9BE/4emkj2HiQQ
bKa71HYFItfeFN5RqJWAQ+ikkb4ykr0PCVyfXbfvy8WI/Auf9EL5
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, -0.00057},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.3918678286452*^9, {3.3918680142642*^9, 3.3918680307752*^9}, {
   3.3918680710902*^9, 3.3918680776792*^9}, 3.3918681412172003`*^9, 
   3.3918682575572*^9, 3.3918683785612*^9, 3.39193540054*^9, 
   3.407903916283*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"0", ",", "\[Kappa]max", ",", "d\[Kappa]"}], "]"}], ",", 
           "#"}], "}"}], "&"}], "/@", 
        RowBox[{"Transpose", "[", 
         RowBox[{"Re", "[", "incsRe10000", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "2"}], "}"}]}], "]"}], ",", "1"}], "]"}], 
   ",", 
   RowBox[{"PlotRange", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.3918676696212*^9, 3.3918676814692*^9}, {
   3.3918677304552*^9, 3.3918677316562*^9}, {3.3918680355811996`*^9, 
   3.3918680463101997`*^9}, {3.3918681485332003`*^9, 3.3918681625252*^9}, 
   3.3918681962502003`*^9, {3.3918682692111998`*^9, 3.3918682740692*^9}, {
   3.3918683985682*^9, 3.3918684021802*^9}, {3.3919354028199997`*^9, 
   3.391935411033*^9}, 3.407903921541*^9}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1:eJxd23k8VN//OHBEoQ2RUslS2SppT7nMRbJmm7EVqTF3GNtYokgkZUkikV3S
ZguVLQwhiexLJHtSllCW0vLze3zMa773Pf/M4/U4c+89y+uc55x7Z8TPOhna
cLCxsU0vY2P7/+/Ml8Jo+tazGc6ME0+LY6c7LiIL/6IbX5Yy42DEJUBp67Em
Z8Z5/9U/ZsQjkd1skXOfBpnlscgAcri4eNaZETr+InnudTJCfrV+TSUPfenz
qYiduEX7v810htVGG40f3o8Qgy90Q7c99KXj05BB84cSO9ToDAV1wYnJvVkI
ccPqUyKm9KXzZSNIX1oiyZ7OuFJg/fa8Wy6SyiGi0O/LPP9z5OIsVbL8Dp1h
p1e4xb3hBeK/OsHrbxrzevmIRSfqlFJGZxgP8dFdZQsR5Q6Op/ntzOsXISVX
Q2u1xumMYxeplfSAYkSzmo1hx+myVJ9SxPKgXIbMZhfGDr4yYec+BkJvqPmW
sN9lqX5lyJ+t7M8GdV0YK1pCDuQnlCPPTxw33Ep1WarvK+RxQ9Y+P38Xxu+E
Q1YHtSuQLN9PBJ1kl6X6VyIt+Ucz+0tdGJPUwcAX85VIjsyC1ftel6X2VCED
giE393K6Mj7tC8vd//A1Qmqf8P2xy3WpfdVIRqvA3uizrozOv4rdz4zeIJsT
rd2PN7outbcGyeHujrBvdmXU1wxz7WN/i3iuu4pefO+61P63iL5JoF1inyvj
VWSEfG5WLWLhcytN96vrUn/UIa1fd1/2nHFl5FshZgqn3iHPMEsBcw63pf6p
R7q21YRJ8rkx0mW/XsnmaUAGfqfmqAq7LfVXA6LS2vCoaIMbo/GXVnu0RSPC
4P1H+LoY/6//GpE/J1OPlS7GWn1iNJO9TcgVqrojdTH+X382ISsmlaSnF89X
WTX7bz1PM7JyPvi1yWL8v/5tRsIshNeFrXdjKKfXRbb3NiMccVEbA4Xclvq7
BblUvC9ETtCNUXgrRSYqrwWZblq22kTAban/WxG19GT2jrVujH3nPUuJoa3I
9lXRkpar3JbGoxUZR01++K5wY2Ra6BkJkduQAMNH996yuS2NTxvyq+xiCce8
K0OasG2kVbEdubrZ1ow6zhyvdqRqrLTQq9+VkbLjl3ckfwcycPI3LbmVOX4d
SNOzu4Ps1a6Mzasa+Y1HOhDzHW5p9wqY4/keeWNySIfyxJURNfXg4TrGe2RT
bYeneAxzfDuRYzH7fG5ed2Xwd3gdbbnTifQ1GOtrujHHuwuRF/KXKLJ0ZYQU
GzRG2HchRU9q2EbUmePfhfwh8dtzSbsyuFKkbAxVPyA67MHLZ9iY+fABeRLj
GjRc7sK4fP3PT36RbsR3uO/tuKTLUn50I6OeBatcJ+iMX/YtN5smuxE2f9Le
/Fb6Ur58RI5y31CSqKAz3AyfSIZXf0RiY8j0iy+Y870HYWw2yBFYnK8Thy4X
6Cf2ICdrb1uuTaYv5VMvIsF36+p4FJ1B3ULU5XPvRWx1BNaQbtKX8qsXOXep
qJ7nGp1B9xOa+ry9DymZjrftuERfyrc+RDDsyvM77nTGbjfflxrhfYiNTYqV
mANzfelDzKUr+olkOmOMMhrw6HcfYuaxfN96C/pSPvYjTvtuSaMGdMYTM5L+
Cmo/IhfUTH95nL6Un/3ISczV0uYonUHRKRfBWvoRsT9dL3bI05fydQAJ6KT8
HROnMySVd356vbhaWnFf8MpZx1zPBhCnbumsy5x0Rp9C9NMdaQPIvvVDvN4/
nJfyeQCZCru/cmRxvU3YxnHxmtAg8lGramJri/NSfg8imh49n7vqnRnmwg5q
w76DyODvdu8WIfpSvg8ik7+oz3PO0BnCvO/XHB8bRHgkxeSQHOb6OYT8ypi6
GrHKhdH2G+18YDKEhB7ziEsLclmaD0PI65VFt8t/uTAivmXe56oYQjJ/3Rj3
XO26ND+GkIfrZRJfbXVlMD1B570Trf+PJ5Z+OrpysSxP+CaOaQgFsjy5U+q0
Zct5licaQ5MqKmSWJ6bHp5S9DZ3Bk+hrbBX1Ks7gySujxuAD8s7giWiPi2PW
Fmfw5NPJteaHVjmDJ0k7+OPjZ5zAE9XQ3SUDzU7gCadSIaaU7QSe3P7wRfBJ
qBN4Qjt9yFaC5gSeZIj2H3p4wgk8Mb33/brCDifw5N4Ad1z5MifwJOyFyKxR
vyN4UkJqtR8udQRPnBK/ynvEO4InHVZSvZwXHcGTll1/k26aOIInygefHRE8
4AierI2zOhwl4AieXNSy37B+0gE8kffw9I565wCe7GtY77wp3QE8IZ8hFaUF
OoAnz44WqupQHMCTzwclInnVHMCTY6Lhjt/FHcCTS4F5ERvYHMCT/jXPsm/1
2IMn/LxhqZ4l9uBJv5T5tpl4e/CkMo+hfOCSPXjCv8Xw9nlLe/DE1eA7fTXB
Hjxh39J4zGO7PXhynTM1OGiVPXgil6Gn93OOBp4s26A51DJKA09udc5dXTZJ
A08WMpxyt3Hbgydb5+P4W3bagydJtp2msSb24An78hG5tgB78OQcGx25mmcP
noS5yaNqX+zBE99en4npLQ7gSYjrqOVNYwfw5AWqESwd6gCekMt57w1UO4An
PcSiHWOcjuBJru4V06tqjuCJ/+DKqD/XHMGTu6Wp8hV1juCJUHBg9tn1TuBJ
2U3rzliyE3hSaJWb7VbgBJ6cWn/5Zz6PM3jiSS8/MHbUGTypX9MUXOrmDJ4s
qzwozMh3Bk8MT2mqbVlNB08ez3KVOkTQwRPdfrwnJ13xnlT64T2prA3BecL1
H0+8N+E94f2PJxlr8Z4kq+M98fbGe3L9G94Tw1C8J4ZkvCclknhPVp3HezKz
E++JxwW8J/8s8J50/cZ7ovse74n+Crwnru14T8wE8Z4EheI9mT2B96R/VmXL
rVcsT9xvViSm5jqDJxuT538U3HcGTyoj2QzWRDmDJ9olg+01Qc7gyaaP8o/n
fZzBk/v+f9Wi3J3BkxXxpVURDs7gifimvKYOijN48uouw1lzlgqevHolN2IM
cTAS+OMvxWMxZnpyjnLrUA6UxyIiJr87OOao4MlJ5YA/9nNU8ARptYuZXIyZ
nlBKSL0356ngiXDzeV3Nn1TwJLrSOk/8FxU8Obm6WUdkgQqeOCaJ5xz4TQVP
Muc9pCL/UcGT2BnsYgeHLXiyK1ZX3Xu5LXgSqNSJZfHagicF3rSy4LW24Alv
zJvZnUK24Mm7N39NcjfZgieOIQdzFCVtwZOogZazI3K24Im1FVtf7wFb8MSu
VOTucYIteKLSYKxO0LMFT67w1DyfOmULnkTP3j/u5mALntgFdt36eNkWPCmg
S6YejrQFT3RyX566lmYLnhzNlRwueWULnlhKnlar77YFT2oOp7gmz9uCJx1T
tXc3rrcDT1Qav9ZtPmAHnjxezth1g2gHnhi754yd8LADT1DFtDmFWDvw5FjA
BlOxUjvwpG7k1Z+eATvwZPT5+gxhbhp4ouy33ERiFw08MTJCXnrpszwZ9P1F
0XRkeWLCHcPe7MPyZDq/+3nqYsz05L2jQIemOw08UbYpeqRvSwNPKJYi151P
08CT1AoX9JkhDTxxaLNJ8dOkgSfWl6z82VEaeBLx/X7nkWM08CS0SO++xGEa
eCJ3/clYxgEaeCJqWHSgej8NPNGzJc9ZLZYzPUnNHBbGDtHAE5/we8X1ijTw
ZG0HsTBEmQaefEJyKu+o08ATn/SMkM86NPDkMqfRcx8iDTwxKy/psrCigSeT
PqfDrtjRwJOCHdoWP8/TwJOo6YF3NVdp4ImQvnAUWyQNPGk66fUkM5UGniw7
PXRxKI8Gntiah6DFb2ngibT3GzP9Php44hdSlFG2+H2B6YnDhIPaXn578ESY
sX+sYac9eFL+vfHHWy178IT9kL/wKZo9eNKw7NmFypv24InSqECD3gt78CRz
58cI/V578EQyzEpDbrUDeJLymDdOV9kBPPn2vuTQ/vMO4EmLOXeHba4DeBL1
RXQu4IcDeKJqm3ZQRskRPOmZHP87c8MRPKn4wz7tP+QIniSXPBfSVXMCT/Ye
2ttzJ8MJPLn2icaVvoblyTCPfqywNsuTLglXG0IIy5N7P/CepN7Ae3I/Fu+J
7G28JyeK8J4IduE9afHDe+Ifjffk40a8J9Q7eE9GCXhPSmPwnjRK4z3JNcZ7
otB0FedJ8AW8J9XaeE823XLHecIpdgbniVprE84TxU9bcZ5wS1a8N1tgeRKT
naI19osKnpjxJk15LsZMT9qWK5Z+/EkFT/pCv3/jXoyZnkSrtu4cnaOCJ2o3
53TcFtvL9CQwyLMq/AcVPBFyn0N2TVPBE0RBq072GxU84W2tOkYZpYIn/nK6
j7KGqeCJHNFPubSPCp6MrfnmK9NJBU8WtKtVDjZQwRPRMTkns3IqeJKL3qvU
TqOCJ7zfZfLCgqngiV6onb1vKBU8WcvelmEaRgVPUqzNHdbeooIn7XeuuUSH
UcGTUU9B0sfF45mebGC74lsVTAVPNqYcHZO5RgVPOPU/UTsuU8ETryfS/UEe
VNb9ro9PS4btqeDJYdf5JFcrKngieibheYAeFTyhfxDbJH6ECp6MicnWPdtC
BU+6HbgMvX5i4Al3bILq3WoMPAmK0Ca7BWHgyfLI8GMUFww8Ke/atuxqCgae
ONmw9daVYuDJnsRTa3OaMPBEzYltq34vBp5IYbmjcV8w8MQ/fNIseQoDTwwq
ExIW5jDwxE89/T7/Hww8abZyL9/GTgVPQucN085yUsET9g+TL0eXU8ETUvBz
kw5uKngy8zgn5iAvFTxZZxazaf1KKniitJpD8vJizPRkII5B91xJBU+uSnx5
v3wxBk8I6Sm7eKngiU9Pbu/E4vWYnqQnXUnWXkEFT35NqIupcVHBk0fpfUMd
HFTwpDOsu52LjQqeqBgvGNb9xsCTyxUFB2UWx4/piQsaP7JxBgNPnh+cORU3
iYEn7Yb2wmmjGHgi/zlJBh3GwJOHY193W/Vh4Emklq76704MPGFUGy8TbMHA
k3dxr+ySazHwxHVPSEdsBQaerPxn+967EgNPRCa4j5yswcCT0HQGW847DDzp
tujcF7SYL0xPJPpOdxW3YuBJf8yR6/IdGHgiw6YiVfkeA09u66zfbNmJgSeN
V/TjBxbLmZ4IplLVFDsw8OTb+Jc8w8XzMz1JS1opIdaIgSfrRGuuJL7FwJN3
kzEhzRUYeOJjfnrX25cYeFKqPvExPhcDTzIT3zbRHmPgSe1TD6ezCRh4cid4
7ER+OAaerNYWuy4dZwOeWBPPa/Tk2oAnMmIRR4ff2oAn3mn72o8O2oAnY4fT
krsWbMCT1D/Y6lJBCnjyTmDQqn8XBTypvbs5QlmDAp5wzZofajlDAU+8zyVa
RF2kgCcJHhetrkRSwJO3mkqNYVkU8OTMv8ZjeW8o4MnIvQTusQEKeLKyUEV5
xx8KeBKahjmaCmPgiW+OUJibAgaeJN58tZqmjYEn3nu/88jZYOCJ7DLT7yk+
GHjCkKopKY/GwJO0VlmOC9kYeJJnmR1e9gYDTySqOK3j+zDwxMdM/P6OeQw8
idoh9jplLcsTamyv4WMplidlj+2sHxJYnqikyc7Un2V5go5L4zxZ/s0W54lE
TSvOE8GTeE8W6HhP2tzwnlgN+OE8GYnFe2JQP4TzxMAN74lAIN6TpN14T/h5
8J5UvcN7Ypgug/Nk9Djeky8CeE+k9PGevHBXSc0+w/LkLXEoZFKP5clQQbha
/nGWJ6VJMWGtKMsT2V+3o1ACy5PBlSqn1hFYnvzWX7GqjsDypNj62hFpVZYn
ZlvRqn9qLE/8nXZqKWpg4Ilel2fgG00MPJlYuf9lsg4GnqiRFNyLT2LgSdyX
BpKwEQaexP9lJ2SRMPBEXOVHs485Bp50qm4Sum6JgSfRegoqVWcx8ERzi+2d
QxgGnsRIrSV00zDw5GP+QdUcZww80Tfwt3jujoEn57t5ZwcuYuBJXnm7sKIv
Bp4Yqoxq5gWwPMl3HPczCmF5cnhjxorV4SxPQhu/kj5GsTyJyRz/XRLP8kRr
lTv9UQrLk8JRwdFbj1me3D6mIu+cxfJEifrP8shzlid9nbte9RSyPDG/bBOp
z2B5kjuB96RsHO9JYxrek9r/eLKpB+/JRDjek8gFZZwnNkfxnmRewntyOgXv
yYcxvCcfEvGejGzCezJYi/dEwxTvSZsa3hOdeLwnxx/hPfG+gvdE0K7H9P96
cpcvTrnGn+WJHdcItcqe5Qn//I9OcRLLkwVp+YZBZZYnQkd0h/lkbcCT4l5b
haeCNuAJEhyuVfWPDJ4kkAYx81EyeLKiwc75fAcZPIlhe80vUUkGTxreJLZT
csjgiRLHN6WTSWTwpKxzqnk4lAyeRJtEqCteIoMn9X08/iYOZPDE4MaJel1L
MnhCKknp2KVPBk/6OSRbeFTJ4Elf8psbMwfJ4MncwdELy3eSwRNGF0e1kQQZ
PInXVLCe3UhmPT9p2rPAvY4MntRk1a5+vJoMnnhFlLdO8ZDBk8IzIlrLucng
iXUWWXIFNxk8sXho1C7MSwZPDO4+zTi9hgyeiInmTf8TJIMnw8cETkqLksET
+Wp2s2WyZPDEw30ksPwwGTzZOKqcfleLDJ68+FLF99qKDJ4UdSl3hHuSwZMv
b7A+oztk8CQrr/6CVx4ZPFHSvB4W100GTyjok2WXuW3Ak3NWFhk6R23AE3Z1
ke7a8zbgSbXSOaPpEhvwRHBrlOfm9RTwpOBKnc2XQAp4svHy8A3ndSxPRh3w
npT8xxO7R3hP/sbgPYkfw3si/E8Z50m1Lt6T5US8J2GieE9y7PCeBHTgPbnL
i/fk2G68J8WDeE/E/+A9ETmM98TlP57U6OA9KduE92RgK96TZc/wnqDaeE8m
u/Ce+JbhPUEP4D25YY/35PcGvCdttXhPLiTgPbFfifdk0we8Jxv/48lPDO/J
hQ68Jz178Z48OvLw60IRy5Pr49NOL3NYnnjuUEIaH7E8Wc8lybcngeXJrNxR
44ZwlifUNIvp5ACWJz9MVZZFebI8UYgZOZ9gx/IkenN/6n0Llidc54TKwrVZ
nkxXJmzXVWR5oijH7ZUnxfLkISP4xuN1LE/2eS+0zf6hgCefnlXG0IYp4Mmg
Zb1lVR0FPOmlzCQ/y6aAJwsStk7N4RTw5JSg+/1UJwp4Mjf3J5pvjSl44uU9
ZRYtawqefE6WCLbUMAVPmmK4ZU6RTcGTGx98Tgb4mYInJO4HgvWJpuDJ2PxZ
ukyxKXhisrlLPKjTFDwp/nvw6sdZU/Ck8dRWdyFBM/BEdSpMRlTBjLU/uWO5
fFDXDDzpmjnnrmtnBp6cGS8pULtmBp7kz14uzrxnBp6c3xnw2a7YDDwh1oiO
WbSbgSdOY1kxp7+ZgSc6b8jZmivMwRMHrtMFs1vMwZOYh08+HtpnDp74y1Ka
u4+bgyec7L35Oabm4Emg3PCay1Rz8KT1PjGL57w5eBJe+KFYwM8cPPm4Wumx
SZA5eLJpMJAv4qY5eIKan7jrccscPPGeM/MvXCxnenI9vnYZ5+LxTE94m6lc
f3zMwZPpc8cVUGdz1vMTwxUlNqfMwZMkHmvSF9QcPCk1u/77gKQ5eGI1tCz6
5m8z8IS3+lfv/Dsz8GT3+Q1vBaLMwJNoywDrl4Zm4Mm99SW9KJsZeFI5f+vW
1yhT8MTPvv5L4h8T8KSlN+EDSdQEPDldWrelcIEEngys69V+204CT9JP5+oU
PiWx9icKq1aOXiOBJyPxr2s3nCaBJ2MBN+Lt95HAk82747h8V5LAk38j57U2
fCaCJ6UHErDUaiJ4Mirsebc+kwiePDvjGOQaQ2T9vstYTmMiiAiebB/yCHL0
IYInXrrpvrvPE8GT42jWvkBnInjS1ErwmLcngid1Be+CRWhE8KSixG7hnh0R
PNmqqsNGXCxnepKUMv11hQMRPDHmP/skxokInswqOcpOuRDBk0QrF6eFxfow
PaHGfRRN8yKCJ5OCKu7TvkTwZGKVnVfdNSJ4stCzw2lvKBE8ebAVMRCLJIIn
JitEw27HEcET2cH95cH3ieCJj9xXT64MInhCjPQV4XxBBE9U6FJl10uJ4Inm
rf3bIt4QwZP+8eXh21uI4Mng1fNtaj1E8MSpcfbY9y9E8KRDozV4/ywRPHH+
LDS/ahkJPJndnbvPj48EnsRF95KjREngiW+bpbzhLhJ4Ypr7tLDoGAk86bNQ
eNGuQwJPLi12aeZi/jE9sfTCio47kcCTsJFvaLofCTzJL+42G4okgSfZK9rk
fj8mgSfNyoSmPyUk8KSOR9x2poUEnlDEdh6e/EoCT4aVpup+c5iAJ/2h1TJy
m03Ak6dGYTM3DpqAJzzads8PGJqAJ3Srcp6jTibgCWkG78mnq2fcWqZMwJNP
P/kpI20mrN8Lu91SNikyAU/mlvGgUkkm4ImfgLi81VUT8GTD0TYzLjsT8OTL
r215W/VNwJM26yMjzxbry/Qk9/knw+otJuCJsu3QdisuE/Ak0GyQ5jtOAk9G
XV9v2LO4fjA9mfFS3eDKIIEniuTDp/WekMCTO9+XT7++TQJP/qh48w74kMCT
T9lPhR/YkcCT4Zd+PUImJPDEmi82XFGNxNqf6L3+tnEvCTyRldxNfSlGAk/i
/n1Xl+IjgSfFz5I+UdhI4EnIGdO5q1NE8ERh8++m0EEieNKxnf1jWDsRPHF/
yb8x/i0RPLm9f7T5NYMInvy6ah4unUcET1JWRpj0ZhLBE6P7C9Z8j4jgyZVX
J2O/3iOCJ7LrNLenJRJZ97u0BHISEojgiR9nUObuJCJ4kjd5M3EC5n8Dcull
7M/MDCJ4ciFa2vNhERE86XHPZG9uIIInzqpe2UXfiODJySbDggVxEnhyL03w
QtBlEngieDwe5wm3Mt4T4pkenCcyUnhPbqavxHlStgfvyZ8teE/ONcTiPLEr
xXtyVxDvyZpmD5wnfNp4T7Q18Z509+I9qdbGezKnjPdEpgbvSVgO3hPZfLwn
Xw7hPbmchPekeiXeE7ddeE881fGe2N/CexK0DO+JHC/ek5fNeE/ub8R70s+F
94SjB+9Jw3a8J6QIvCfxjnhPBt3wnsT+x5P8K3hPmhrwntxXw3tS9AnvSasU
3hPHCLwnu1rxnng+xXtywQzvid4HvCctnnhPlD/jPREpwnsSzon35AKC90SC
C++Jgijek3OKeE9igvCeZBjgPek+gfek4zTeE9mc6CLN7yh4csPqX17QDxQ8
SXls/UtzHgVP7rvaOoX8RcGTWCHHxJMrVMETnpbKp3cFVMET21MujrZiquBJ
8D0Bnao9quBJXs9rm2xVVfBkTWBWkLyZKngiKVesdIKuCp7kiv+rZruhCp7o
b31w6MwTVfAkOCnYybFGFTwx35a4d/+YKnhyqoiq8JJfDTyhyU9tXKOoBp7M
ars8OWyjBp48Kowq07itBp5sHpK9qFmpBp5QTqxT151XA09+ffVmJ8urgyfR
gcslkm3VwZMMSYsmoUfq4InWmaLNHz6rgyfxlwK2ce88Dp6sTNphlO96HDzJ
FrSP42IcB08OZ11iCKzRAE/c9dXvsVtrgCeYh0jCfL4GeLKfsX1SfN0J8CTg
9RnZDJcT4InAa3LG2/YT4Mn7VdLyecqa4IlZ9GGDzExN8OTOpJ3YjJgWeKLf
LX6zM0YLPEmaeJOZuUEbPKm6F3ilNkEbPOkQ0/geIaMDntz9niuHFeuAJ0VP
eiSfkHTBk12pksKZ87rgiXn60x2PUvTAk90DDeuCjE+CJ3uf9ckOLdcHTwze
rir0o+iDJ2uW+09WVOuDJ9NqQe+dpA3AE22RoK20AAPwxLFjFVX1gwF40nR0
m8xeKUPw5MSJ90E/MUPwZMXPoxMzCYbgyWT0HoFrbw3Bk3TnZFfLb4bgSaIm
o3jLGiPwRC/sEL+EtBHr/yeyfXL+iBF4Qs9P2bfJ0Ag8+RocyHX7nBF4whYi
HurgagSeGKrzzfJdMQJPBtb9KXwXZgSeTEhEfx2MNwJP9H68F7v+xAg8MfTJ
sOt/YQSesFfc9BJ6ZQSe+IRsNFKpNwJPXkRhPhe7jMCTDD2RtZ3DRuDJLxcD
C8fvRuDJu8GnkVpsxuDJKb0cFe/VxuDJysGpGL5NxuDJlPmavnUyxuBJupFd
bPghY/BEJFeyKfK4MXhSgZQg0iRj8GRVVYQ3iWIMnjDoBXKyHsbgyZxr7qas
QGPwhLwHcR6PNQZPLj4xqf6eaQyeNPKHnXlXbgyefDX+cPx6uzF4Yt+y2Ud+
zJi1P5EuONDGQQRPNu0fZA8SIYInVIGELaf3EcET9dyCfBtdInhiN8elV0gl
gidngq6L0AOI4Emke330k0WfmZ6M71KX9K8ggicVbIGvJT4RwZMtbGr7n3GT
wJP+L1M8lN0k8KRLcc7RnURi3e8yjNu/Y9E7pieS//Ek1r+fU/k7yxM2Ket+
0e8sT+aSEM0v0yxPTu45ppC4GDM9efrIN0hpGgVPZmP6laqnUPAkn6//wNEp
FDxp9oo1jplEwRPFv1IX+r+h4IlhPcNn3WLM9MSC6+Yx+QkUPPnXvf7a/nEU
PCl/4CQnOYaCJ27lCj9/fUXBk5bNPwpefkHBk9xaQwWbERQ8efNaecfcMAqe
uDTtMqN/QsETzvOOQS2DKHiyNdvUbcsACp5EMhLa9PpQ8KTJOgzDelDwZNcR
8iClGwVPnm28y67bhYInwyc2X9z4HgVPfD/kcta1oeCJlJKuGbkFBU8UhHX3
DDSi4MkxoTpUvR4FT8Y7ebVDa1Hw5HRAKmfRGxQ8+c45vbO2CgVP0nMM/Mte
oeAJpZFeE8NAwZOAm6kVpGIUPAnK2nZkrgAFT0TjbX5cfIGCJ6pqBhX9OSh4
cvR1kIdcFgqevKl5PmyShoInP+WyvlIeouAJyfaVtWkKCp4Umn/evTMRBU88
7owcGYhBwZPxm1FOF++g4Inc38nyH7dQ8CRTCpU2uIGCJxxfNZPCrqPgSUXm
SZnsKyh4sjf2QH3uJRQ8adMKj4v2RMETMd/sVEtXFDzhqb7Hwe2Igie2D/e3
3qai4MnI6gUljnMoePK27Iid0WkUPMEUBwOvm6DgiVStf0OiAQqeqBrKXYjR
RsETu1fE1x7qKHjiq1X/+4gyCp6oVoRifYdR8OTx/F0SbS8KnoS0t4l+kEPB
k/TgoY17tqOs/Ynn9AM7URQ84c4O2h4ijIInud/O/gvnQ8GTf027Ey/zoOBJ
XQjF2ZgDBU8sFAVG+BYI4IkG752LL74TwJNPJLdkdIwAnhyQF28rGCKAJ4e1
yqI2fCSAJ5c2T9mcbSOAJ0NSd6ui3hHAkyO5qYp5VQTw5NHObu3yEgJ48sg3
1a/gBQE8OSj9ziY+kwCefNK08Hd4QABPDFaYUXYmEMAT/UdJcZ2RBPBkd3da
tvsNAnhSewPbx36VAJ5cL1+e6+1FAE+kuxuLRlwI4IlXxsIHdTsCePJ4l9/9
SGsCeFJVN5PYZkoATyKLyRY8+gTw5ESytM0eDQJ4so+zRkMbIYAn9fEdoeYH
CODJmZH6MsudBPBExW2KaipJAE/cFeVWnxAhgCfaHtN7d/MTwJPbv2UsV3IT
GP8P23+pbg==
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, -0.004},
  PlotRange->{{0., 
   9.999999999999999*^-6}, {-0.004906573361895538, -0.0005197577959989034}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.3918681630982*^9, 3.3918682747232*^9, 3.3918684026762*^9, {
   3.3919354039709997`*^9, 3.391935411717*^9}, 3.407903922832*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->Automatic,
Evaluator->"auxilliary",
CellGrouping->Manual,
WindowSize->{877, 662},
WindowMargins->{{2, Automatic}, {Automatic, 0}},
ShowSelection->True,
Magnification->1.,
FrontEndVersion->"6.0 for Microsoft Windows (32-bit) (April 28, 2007)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[568, 21, 82, 2, 45, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[675, 27, 170, 2, 71, "Section"],
Cell[CellGroupData[{
Cell[870, 33, 385, 7, 53, "Subsection"],
Cell[CellGroupData[{
Cell[1280, 44, 318, 6, 29, "Text"],
Cell[1601, 52, 8449, 221, 142, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[10087, 278, 641, 15, 46, "Text"],
Cell[10731, 295, 156, 4, 31, "Input",
 InitializationCell->True],
Cell[10890, 301, 268108, 6468, 5262, "Input",
 InitializationCell->True]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[279047, 6775, 239, 5, 45, "Input"],
Cell[279289, 6782, 5400, 167, 132, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[284726, 6954, 280, 5, 36, "Subsection"],
Cell[CellGroupData[{
Cell[285031, 6963, 253, 4, 28, "Subsubsection"],
Cell[285287, 6969, 639, 18, 45, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[285951, 6991, 64, 0, 29, "Text"],
Cell[286018, 6993, 432, 12, 28, "Input"],
Cell[286453, 7007, 369, 11, 28, "Input"],
Cell[286825, 7020, 720, 18, 46, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[287594, 7044, 162, 2, 22, "Subsubsection"],
Cell[CellGroupData[{
Cell[287781, 7050, 160, 2, 29, "Text"],
Cell[287944, 7054, 1095, 30, 96, "Input"],
Cell[289042, 7086, 974, 28, 77, "Input"],
Cell[290019, 7116, 1284, 37, 128, "Input"],
Cell[291306, 7155, 1046, 31, 80, "Input"]
}, Closed]],
Cell[292367, 7189, 571, 18, 56, "Input",
 InitializationCell->True],
Cell[292941, 7209, 6447, 176, 445, "Input",
 InitializationCell->True],
Cell[299391, 7387, 155, 5, 29, "Text"],
Cell[CellGroupData[{
Cell[299571, 7396, 950, 18, 47, "Text"],
Cell[300524, 7416, 7308, 200, 338, "Input"],
Cell[307835, 7618, 9036, 250, 464, "Input"]
}, Closed]],
Cell[316886, 7871, 6201, 159, 382, "Input",
 InitializationCell->True],
Cell[323090, 8032, 280, 9, 45, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[323395, 8045, 125, 3, 31, "Input"],
Cell[323523, 8050, 337, 7, 30, "Output"]
}, Open  ]],
Cell[323875, 8060, 20228, 495, 1020, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[344128, 8559, 64, 0, 29, "Text"],
Cell[CellGroupData[{
Cell[344217, 8563, 303, 9, 31, "Input"],
Cell[344523, 8574, 658, 18, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[345218, 8597, 521, 16, 47, "Input"],
Cell[345742, 8615, 46, 0, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[345825, 8620, 207, 5, 33, "Input"],
Cell[346035, 8627, 46, 0, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[346118, 8632, 725, 21, 55, "Input"],
Cell[346846, 8655, 199, 6, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[347082, 8666, 734, 21, 55, "Input"],
Cell[347819, 8689, 197, 6, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[348053, 8700, 236, 4, 29, "Text"],
Cell[348292, 8706, 550, 16, 44, "Input"],
Cell[348845, 8724, 166, 6, 28, "Input"],
Cell[349014, 8732, 322, 11, 28, "Input"],
Cell[349339, 8745, 582, 18, 40, "Input"],
Cell[349924, 8765, 255, 8, 28, "Input"],
Cell[CellGroupData[{
Cell[350204, 8777, 247, 8, 28, "Input"],
Cell[350454, 8787, 160, 4, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[350651, 8796, 251, 8, 28, "Input"],
Cell[350905, 8806, 379, 8, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[351321, 8819, 210, 4, 30, "Text"],
Cell[351534, 8825, 637, 19, 72, "Input"],
Cell[352174, 8846, 770, 23, 72, "Input"],
Cell[352947, 8871, 194, 6, 28, "Input"]
}, Open  ]],
Cell[353156, 8880, 559, 17, 52, "Input"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[353776, 8904, 389, 6, 22, "Subsubsection"],
Cell[CellGroupData[{
Cell[354190, 8914, 324, 5, 29, "Text"],
Cell[354517, 8921, 348, 9, 35, "Input"]
}, Open  ]],
Cell[354880, 8933, 879, 22, 52, "Input"],
Cell[CellGroupData[{
Cell[355784, 8959, 173, 2, 29, "Text"],
Cell[355960, 8963, 5542, 142, 364, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[361539, 9110, 199, 4, 26, "Text"],
Cell[361741, 9116, 6211, 153, 437, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[367989, 9274, 85, 1, 26, "Text"],
Cell[368077, 9277, 4964, 132, 358, "Input"],
Cell[CellGroupData[{
Cell[373066, 9413, 322, 9, 45, "Input"],
Cell[373391, 9424, 4885, 106, 244, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[378313, 9535, 349, 8, 45, "Input"],
Cell[378665, 9545, 4929, 107, 244, "Output"]
}, Open  ]],
Cell[383609, 9655, 668, 19, 45, "Input"],
Cell[384280, 9676, 605, 17, 45, "Input"],
Cell[CellGroupData[{
Cell[384910, 9697, 282, 5, 45, "Input"],
Cell[385195, 9704, 338, 9, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[385570, 9718, 190, 4, 39, "Input"],
Cell[385763, 9724, 674, 23, 44, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[386486, 9753, 146, 1, 29, "Text"],
Cell[386635, 9756, 1264, 36, 52, "Input"],
Cell[387902, 9794, 352, 10, 31, "Input"],
Cell[CellGroupData[{
Cell[388279, 9808, 178, 5, 31, "Input"],
Cell[388460, 9815, 114, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[388611, 9823, 180, 5, 31, "Input"],
Cell[388794, 9830, 125, 4, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[388956, 9839, 125, 3, 31, "Input"],
Cell[389084, 9844, 338, 7, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[389459, 9856, 184, 6, 31, "Input"],
Cell[389646, 9864, 28, 0, 30, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[389759, 9873, 219, 2, 71, "Section"],
Cell[CellGroupData[{
Cell[390003, 9879, 196, 2, 36, "Subsection"],
Cell[CellGroupData[{
Cell[390224, 9885, 291, 5, 28, "Subsubsection"],
Cell[390518, 9892, 593, 17, 46, "Input"],
Cell[391114, 9911, 2196, 59, 152, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[393347, 9975, 194, 4, 22, "Subsubsection"],
Cell[393544, 9981, 362, 12, 45, "Input",
 InitializationCell->True],
Cell[393909, 9995, 3174, 85, 207, "Input",
 InitializationCell->True],
Cell[397086, 10082, 738, 19, 66, "Input",
 InitializationCell->True],
Cell[397827, 10103, 3552, 94, 227, "Input",
 InitializationCell->True],
Cell[401382, 10199, 1266, 35, 66, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[402685, 10239, 73, 0, 22, "Subsubsection"],
Cell[402761, 10241, 352, 11, 28, "Input"],
Cell[CellGroupData[{
Cell[403138, 10256, 126, 2, 28, "Input"],
Cell[403267, 10260, 86, 2, 24, "Print"],
Cell[403356, 10264, 63, 1, 28, "Output"]
}, Open  ]],
Cell[403434, 10268, 1812, 46, 112, "Input"],
Cell[405249, 10316, 1978, 49, 95, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[407264, 10370, 178, 5, 39, "Input"],
Cell[407445, 10377, 169, 4, 44, "Output"]
}, Open  ]],
Cell[407629, 10384, 137, 3, 45, "Input"],
Cell[407769, 10389, 394, 8, 45, "Input"],
Cell[408166, 10399, 143, 2, 31, "Input"],
Cell[408312, 10403, 183, 3, 31, "Input"],
Cell[408498, 10408, 132, 2, 31, "Input"],
Cell[408633, 10412, 600, 15, 31, "Input"]
}, Open  ]],
Cell[409248, 10430, 368, 10, 31, "Input"],
Cell[CellGroupData[{
Cell[409641, 10444, 842, 19, 45, "Input"],
Cell[410486, 10465, 2921, 63, 140, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[413444, 10533, 190, 2, 36, "Subsection"],
Cell[CellGroupData[{
Cell[413659, 10539, 1205, 25, 45, "Input"],
Cell[414867, 10566, 816, 16, 23, "Print"],
Cell[415686, 10584, 4112, 98, 152, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[419835, 10687, 704, 21, 31, "Input"],
Cell[420542, 10710, 1074, 28, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[421653, 10743, 234, 6, 31, "Input"],
Cell[421890, 10751, 416, 10, 30, "Output"]
}, Open  ]],
Cell[422321, 10764, 1190, 34, 137, "Input"],
Cell[CellGroupData[{
Cell[423536, 10802, 122, 2, 45, "Input"],
Cell[423661, 10806, 394, 10, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[424092, 10821, 87, 1, 28, "Subsubsection"],
Cell[424182, 10824, 523, 16, 31, "Input"],
Cell[424708, 10842, 523, 16, 31, "Input"],
Cell[CellGroupData[{
Cell[425256, 10862, 117, 1, 28, "Subsubsection"],
Cell[CellGroupData[{
Cell[425398, 10867, 229, 8, 41, "Input"],
Cell[425630, 10877, 4902, 255, 186, 3182, 223, "GraphicsData", "PostScript", \
"Graphics"]
}, Open  ]],
Cell[CellGroupData[{
Cell[430569, 11137, 597, 19, 58, "Input"],
Cell[431169, 11158, 365, 7, 39, "Message"],
Cell[431537, 11167, 6601, 350, 186, 4353, 310, "GraphicsData", "PostScript", \
"Graphics"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[438187, 11523, 116, 1, 22, "Subsubsection"],
Cell[CellGroupData[{
Cell[438328, 11528, 229, 8, 41, "Input"],
Cell[438560, 11538, 4764, 247, 186, 2991, 214, "GraphicsData", "PostScript", \
"Graphics"]
}, Open  ]],
Cell[CellGroupData[{
Cell[443361, 11790, 597, 19, 58, "Input"],
Cell[443961, 11811, 365, 7, 39, "Message"],
Cell[444329, 11820, 5036, 250, 186, 2977, 213, "GraphicsData", "PostScript", \
"Graphics"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[449414, 12076, 345, 10, 25, "Input"],
Cell[449762, 12088, 285, 7, 30, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[450096, 12101, 99, 1, 22, "Subsubsection"],
Cell[CellGroupData[{
Cell[450220, 12106, 71, 0, 29, "Text"],
Cell[CellGroupData[{
Cell[450316, 12110, 561, 15, 31, "Input"],
Cell[450880, 12127, 1753, 52, 50, "Output"],
Cell[452636, 12181, 630, 11, 50, "Output"]
}, Open  ]]
}, Closed]],
Cell[453293, 12196, 704, 21, 39, "Input"],
Cell[CellGroupData[{
Cell[454022, 12221, 140, 1, 29, "Text"],
Cell[454165, 12224, 569, 15, 66, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[454771, 12244, 122, 1, 26, "Text"],
Cell[454896, 12247, 587, 17, 66, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[455520, 12269, 131, 1, 26, "Text"],
Cell[455654, 12272, 768, 21, 66, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[456459, 12298, 131, 1, 29, "Text"],
Cell[CellGroupData[{
Cell[456615, 12303, 866, 22, 66, "Input"],
Cell[457484, 12327, 297732, 4964, 381, 261151, 4362, "CachedBoxData", \
"BoxData", "Output"],
Cell[755219, 17293, 345141, 5761, 381, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1100433, 23062, 308, 6, 36, "Subsection"],
Cell[CellGroupData[{
Cell[1100766, 23072, 2206, 60, 106, "Input"],
Cell[1102975, 23134, 2755, 54, 322, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1105779, 23194, 171, 2, 28, "Subsection"],
Cell[1105953, 23198, 217, 4, 31, "Input"],
Cell[1106173, 23204, 954, 23, 77, "Input"],
Cell[1107130, 23229, 618, 16, 31, "Input"],
Cell[1107751, 23247, 809, 24, 52, "Input"],
Cell[CellGroupData[{
Cell[1108585, 23275, 239, 5, 28, "Subsubsection"],
Cell[CellGroupData[{
Cell[1108849, 23284, 151, 2, 29, "Text"],
Cell[1109003, 23288, 15363, 262, 67, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1124403, 23555, 132, 2, 29, "Text"],
Cell[1124538, 23559, 13444, 225, 233, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1138019, 23789, 110, 1, 29, "Text"],
Cell[1138132, 23792, 22083, 368, 239, 16585, 276, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1160252, 24165, 92, 1, 29, "Text"],
Cell[1160347, 24168, 25398, 423, 233, 19753, 328, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1185782, 24596, 89, 1, 29, "Text"],
Cell[1185874, 24599, 17767, 296, 233, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1203690, 24901, 364, 6, 22, "Subsubsection"],
Cell[1204057, 24909, 379, 12, 31, "Input"],
Cell[1204439, 24923, 455, 14, 31, "Input"],
Cell[1204897, 24939, 138, 4, 31, "Input"],
Cell[1205038, 24945, 1131, 37, 135, "Input"],
Cell[1206172, 24984, 371, 12, 33, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1206592, 25002, 190, 2, 28, "Subsection"],
Cell[1206785, 25006, 645, 17, 31, "Input"],
Cell[1207433, 25025, 548, 14, 31, "Input"],
Cell[1207984, 25041, 1739, 47, 134, "Input"],
Cell[1209726, 25090, 663, 20, 52, "Input"],
Cell[CellGroupData[{
Cell[1210414, 25114, 523, 14, 31, "Input"],
Cell[1210940, 25130, 159, 3, 30, "Output"]
}, Open  ]],
Cell[1211114, 25136, 288, 7, 31, "Input"],
Cell[CellGroupData[{
Cell[1211427, 25147, 149, 2, 28, "Subsubsection"],
Cell[CellGroupData[{
Cell[1211601, 25153, 20, 0, 29, "Text"],
Cell[1211624, 25155, 224, 5, 45, "Input"],
Cell[1211851, 25162, 1230, 29, 66, "Input"],
Cell[CellGroupData[{
Cell[1213106, 25195, 452, 10, 45, "Input"],
Cell[1213561, 25207, 2101, 40, 249, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1215699, 25252, 829, 22, 66, "Input"],
Cell[1216531, 25276, 10719, 182, 246, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1227287, 25463, 602, 15, 45, "Input"],
Cell[1227892, 25480, 587, 13, 44, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1228528, 25499, 21, 0, 26, "Text"],
Cell[1228552, 25501, 224, 5, 45, "Input"],
Cell[1228779, 25508, 1218, 29, 66, "Input"],
Cell[CellGroupData[{
Cell[1230022, 25541, 460, 10, 45, "Input"],
Cell[1230485, 25553, 2118, 40, 239, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1232640, 25598, 840, 22, 66, "Input"],
Cell[1233483, 25622, 10832, 184, 249, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1244352, 25811, 624, 15, 45, "Input"],
Cell[1244979, 25828, 655, 14, 64, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1245683, 25848, 22, 0, 26, "Text"],
Cell[1245708, 25850, 273, 5, 45, "Input"],
Cell[1245984, 25857, 1261, 30, 66, "Input"],
Cell[CellGroupData[{
Cell[1247270, 25891, 636, 16, 45, "Input"],
Cell[1247909, 25909, 2163, 39, 234, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1250109, 25953, 877, 23, 66, "Input"],
Cell[1250989, 25978, 4696, 83, 242, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1255722, 26066, 654, 17, 45, "Input"],
Cell[1256379, 26085, 965, 23, 64, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1257393, 26114, 23, 0, 26, "Text"],
Cell[1257419, 26116, 281, 5, 45, "Input"],
Cell[1257703, 26123, 1314, 30, 66, "Input"],
Cell[CellGroupData[{
Cell[1259042, 26157, 510, 11, 45, "Input"],
Cell[1259555, 26170, 2549, 49, 234, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1262141, 26224, 952, 24, 66, "Input"],
Cell[1263096, 26250, 5226, 91, 241, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1268359, 26346, 650, 17, 45, "Input"],
Cell[1269012, 26365, 973, 24, 64, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1270034, 26395, 86, 1, 26, "Text"],
Cell[1270123, 26398, 321, 6, 45, "Input"],
Cell[1270447, 26406, 1362, 31, 86, "Input"],
Cell[CellGroupData[{
Cell[1271834, 26441, 526, 11, 45, "Input"],
Cell[1272363, 26454, 2426, 43, 233, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1274826, 26502, 987, 24, 66, "Input"],
Cell[1275816, 26528, 5291, 92, 238, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1281144, 26625, 662, 17, 45, "Input"],
Cell[1281809, 26644, 981, 23, 91, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1282851, 26674, 198, 3, 28, "Subsubsection"],
Cell[CellGroupData[{
Cell[1283074, 26681, 20, 0, 29, "Text"],
Cell[1283097, 26683, 224, 5, 45, "Input"],
Cell[1283324, 26690, 1271, 30, 66, "Input"],
Cell[CellGroupData[{
Cell[1284620, 26724, 368, 9, 45, "Input"],
Cell[1284991, 26735, 2050, 38, 249, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1287078, 26778, 790, 22, 66, "Input"],
Cell[1287871, 26802, 13054, 221, 246, 10633, 180, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1300962, 27028, 602, 15, 45, "Input"],
Cell[1301567, 27045, 653, 14, 44, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1302269, 27065, 21, 0, 26, "Text"],
Cell[1302293, 27067, 121, 3, 45, "Input"],
Cell[1302417, 27072, 1293, 31, 66, "Input"],
Cell[CellGroupData[{
Cell[1303735, 27107, 479, 10, 45, "Input"],
Cell[1304217, 27119, 2179, 41, 243, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1306433, 27165, 821, 22, 66, "Input"],
Cell[1307257, 27189, 11623, 196, 261, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1318917, 27390, 629, 15, 45, "Input"],
Cell[1319549, 27407, 591, 11, 44, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1320189, 27424, 22, 0, 26, "Text"],
Cell[1320214, 27426, 189, 4, 45, "Input"],
Cell[1320406, 27432, 1380, 32, 66, "Input"],
Cell[CellGroupData[{
Cell[1321811, 27468, 650, 16, 45, "Input"],
Cell[1322464, 27486, 2221, 41, 241, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1324722, 27532, 901, 23, 66, "Input"],
Cell[1325626, 27557, 10298, 174, 246, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1335961, 27736, 653, 17, 45, "Input"],
Cell[1336617, 27755, 939, 23, 64, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1337605, 27784, 23, 0, 29, "Text"],
Cell[1337631, 27786, 187, 4, 45, "Input"],
Cell[1337821, 27792, 1429, 33, 66, "Input"],
Cell[CellGroupData[{
Cell[1339275, 27829, 616, 16, 45, "Input"],
Cell[1339894, 27847, 2420, 45, 233, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1342351, 27897, 971, 24, 66, "Input"],
Cell[1343325, 27923, 12250, 207, 234, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1355612, 28135, 11632, 197, 141, "Input"],
Cell[1367247, 28334, 83, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1367367, 28340, 676, 17, 45, "Input"],
Cell[1368046, 28359, 941, 24, 64, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1369036, 28389, 86, 1, 26, "Text"],
Cell[1369125, 28392, 187, 4, 45, "Input"],
Cell[1369315, 28398, 1438, 33, 86, "Input"],
Cell[CellGroupData[{
Cell[1370778, 28435, 525, 11, 45, "Input"],
Cell[1371306, 28448, 2374, 44, 228, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1373717, 28497, 1039, 25, 66, "Input"],
Cell[1374759, 28524, 12275, 208, 229, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
