(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    811888,      16293]
NotebookOptionsPosition[    793627,      15750]
NotebookOutlinePosition[    794021,      15767]
CellTagsIndexPosition[    793978,      15764]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{"<<", "ACPackages`"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "ACPackages`Master`"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.418311793374*^9, 3.418311795829*^9}, {3.45431131631*^9, 
  3.45431132055*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetWorkDir", "[", "\"\<2010.10.30\\\\chi09\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.395821793675*^9, 3.3958217970369997`*^9}, {
   3.3958260630439997`*^9, 3.395826064809*^9}, 3.395842380564*^9, {
   3.39589985106*^9, 3.395899853052*^9}, 3.3960364854486*^9, 
   3.396040695883*^9, 3.3960407682826*^9, {3.408519766388*^9, 
   3.408519767705*^9}, {3.40863746709*^9, 3.408637470236*^9}, 
   3.408639047334*^9, {3.409564032356*^9, 3.409564052227*^9}, {
   3.4095954093970003`*^9, 3.409595410924*^9}, {3.409595754549*^9, 
   3.409595756567*^9}, {3.409596262354*^9, 3.409596265032*^9}, 
   3.41104138592*^9, 3.41123371196*^9, 3.41123811176*^9, {
   3.4112790142139997`*^9, 3.411279014398*^9}, {3.411279100526*^9, 
   3.41127910094*^9}, {3.416156537936*^9, 3.416156545707*^9}, 
   3.41615680249*^9, 3.4162956737878685`*^9, {3.416545783627*^9, 
   3.416545783731*^9}, 3.41655266969*^9, 3.4165541284189997`*^9, {
   3.416574300321*^9, 3.416574300848*^9}, 3.4165801437530003`*^9, {
   3.416594050041*^9, 3.4165940534820004`*^9}, {3.418311781093*^9, 
   3.41831178867*^9}, {3.4183143891219997`*^9, 3.418314389639*^9}, {
   3.418314791756*^9, 3.418314792234*^9}, {3.418314839737*^9, 
   3.418314840156*^9}, {3.418316632895*^9, 3.418316639075*^9}, 
   3.418317266976*^9, {3.453570475815*^9, 3.453570484571*^9}, {
   3.4536111032438*^9, 3.453611105303*^9}, {3.4552481227854*^9, 
   3.4552481228213997`*^9}, {3.4552481533004*^9, 3.4552481533934*^9}, {
   3.4552482112384*^9, 3.4552482113283997`*^9}, {3.45914658221875*^9, 
   3.459146590890625*^9}, {3.459147855796875*^9, 3.459147855828125*^9}, {
   3.4591481458125*^9, 3.459148146*^9}, 3.459148575234375*^9, {
   3.459161621015625*^9, 3.459161627765625*^9}, {3.45916235809375*^9, 
   3.45916235815625*^9}, {3.45916427234375*^9, 3.459164274359375*^9}, {
   3.461495375796875*^9, 3.461495383171875*^9}, {3.461495414140625*^9, 
   3.461495427046875*^9}, {3.48558200459375*^9, 3.485582010296875*^9}, {
   3.485592577171875*^9, 3.4855925781875*^9}, {3.485593625828125*^9, 
   3.485593626546875*^9}, {3.4855937498125*^9, 3.48559375359375*^9}, {
   3.485593837234375*^9, 3.48559383940625*^9}, {3.486965403622375*^9, 
   3.486965406013*^9}, 3.486979901388*^9, 3.487314241372375*^9, {
   3.487317342841125*^9, 3.487317347184875*^9}, {3.487483272536625*^9, 
   3.4874832784585*^9}, {3.487484860317875*^9, 3.487484861099125*^9}, 
   3.487575947849125*^9, {3.4876666652404814`*^9, 3.487666666020481*^9}, {
   3.4880124487387686`*^9, 3.488012448832369*^9}, {3.4897669638665676`*^9, 
   3.4897669639759426`*^9}, {3.4897693752103176`*^9, 
   3.4897693752884426`*^9}, {3.48980996334375*^9, 3.48980996765625*^9}, {
   3.489995108078125*^9, 3.48999511028125*^9}, {3.491110911375*^9, 
   3.491110911671875*^9}, {3.491112578921875*^9, 3.49111257909375*^9}, {
   3.491112904234375*^9, 3.49111292040625*^9}, 3.49112465828125*^9, {
   3.49120179076775*^9, 3.491201793470875*^9}, 3.491201920533375*^9, {
   3.491202059095875*^9, 3.491202059549*^9}, {3.491206552377125*^9, 
   3.49120655270525*^9}, {3.491206650720875*^9, 3.49120665276775*^9}, {
   3.49120681776775*^9, 3.49120682183025*^9}, {3.49120724801775*^9, 
   3.491207250924*^9}, {3.491207474049*^9, 3.491207477033375*^9}, {
   3.491646987658375*^9, 3.491646989377125*^9}, 3.491647335939625*^9, {
   3.491647872939625*^9, 3.49164787308025*^9}, {3.491901613345875*^9, 
   3.491901628799*^9}, {3.492404266189625*^9, 3.492404279064625*^9}, {
   3.492442256564625*^9, 3.49244228389275*^9}, {3.492442453033375*^9, 
   3.492442453314625*^9}, {3.492482998033375*^9, 3.492482998424*^9}, {
   3.496994254551375*^9, 3.496994258145125*^9}, {3.497171256020125*^9, 
   3.497171257395125*^9}, 3.4975198657021923`*^9, {3.4975200517026296`*^9, 
   3.497520051765114*^9}, {3.497520101908845*^9, 3.4975201027836266`*^9}, {
   3.4975433475740285`*^9, 3.497543347652134*^9}}],

Cell[BoxData["\<\"d:\\\\home\\\\Anton\\\\programs\\\\tormagn-full\\\\2010.10.\
30\\\\chi09\"\>"], "Output",
 CellChangeTimes->{
  3.3958260678269997`*^9, 3.395826488987*^9, 3.395842381105*^9, 
   3.395897330962*^9, 3.3958998535810003`*^9, 3.3959901466778*^9, 
   3.3959990736679974`*^9, 3.3960001995689974`*^9, 3.3960014716189976`*^9, 
   3.3960023852569976`*^9, 3.396004279319998*^9, 3.3960050288639975`*^9, 
   3.3960051721869974`*^9, 3.3960134128859997`*^9, 3.396024920531*^9, 
   3.396029323224*^9, 3.396031612222*^9, {3.3960364978662*^9, 
   3.3960364980066*^9}, 3.3960406979578*^9, 3.3960426605018*^9, 
   3.408519771113*^9, 3.408637471119*^9, 3.4086390477349997`*^9, 
   3.409340907632*^9, 3.409395863680148*^9, 3.4094251599300003`*^9, 
   3.4094253790769997`*^9, 3.409475707301*^9, 3.409477359917*^9, 
   3.4094776170360003`*^9, 3.40949878973*^9, 3.409516042257*^9, 
   3.4095166579300003`*^9, 3.409516819297*^9, 3.409518717249*^9, 
   3.409557553891*^9, {3.409564043425*^9, 3.409564052633*^9}, 
   3.4095954121470003`*^9, 3.409595755124*^9, 3.409596262832*^9, 
   3.411041077178*^9, 3.411041518491*^9, 3.411042512939*^9, 3.411058529941*^9,
    3.4111925611870003`*^9, 3.411233726551*^9, 3.411237441196*^9, 
   3.4112381126870003`*^9, 3.411268602734*^9, 3.411278527788*^9, 
   3.411279020336*^9, 3.411279101395*^9, 3.4161565472019997`*^9, 
   3.4162956759703045`*^9, 3.416545784209*^9, 3.4165526711949997`*^9, 
   3.416554128983*^9, 3.41657054901*^9, {3.416574295877*^9, 
   3.416574301395*^9}, 3.416580144334*^9, 3.416639852835*^9, {
   3.418311791888*^9, 3.418311797179*^9}, 3.4183143899849997`*^9, 
   3.418314792623*^9, 3.418314840467*^9, 3.4183166394639997`*^9, 
   3.418317270264*^9, 3.4535706199379997`*^9, 3.4535757272198*^9, 
   3.4536111056462*^9, 3.4552481232964*^9, 3.4552481553473997`*^9, 
   3.4552482116884003`*^9, 3.4552482650014*^9, 3.459146591078125*^9, 
   3.459147158546875*^9, 3.45914785609375*^9, 3.459148146234375*^9, 
   3.459148576453125*^9, {3.4591616235*^9, 3.459161627953125*^9}, 
   3.459162358234375*^9, 3.46149538353125*^9, {3.4614954143125*^9, 
   3.461495427171875*^9}, 3.46149553465625*^9, 3.461496336234375*^9, 
   3.4855820106875*^9, 3.485592578984375*^9, 3.48559362796875*^9, 
   3.485593754203125*^9, 3.485593839796875*^9, 3.486979901809875*^9, 
   3.487314241763*^9, 3.487317348091125*^9, 3.487317677247375*^9, 
   3.487403999380375*^9, 3.4874832795835*^9, 3.487484861771*^9, 
   3.48757594861475*^9, 3.487666667174882*^9, 3.4880124496747684`*^9, 
   3.4897669662884426`*^9, 3.4897693760696926`*^9, 3.489809969640625*^9, 
   3.489995110546875*^9, 3.49094049159375*^9, 3.490940673296875*^9, 
   3.490949440859375*^9, 3.4909511196875*^9, 3.491110911953125*^9, 
   3.49111257965625*^9, 3.491112920875*^9, 3.49111438671875*^9, 
   3.491121278234375*^9, 3.4911246589375*^9, 3.491200991720875*^9, {
   3.491201791549*^9, 3.491201793783375*^9}, 3.491201920689625*^9, 
   3.49120205983025*^9, 3.49120655295525*^9, 3.491206653158375*^9, 
   3.491206822064625*^9, {3.491207248158375*^9, 3.491207251049*^9}, 
   3.491207477299*^9, 3.491647115127125*^9, 3.491647354064625*^9, 
   3.491647873658375*^9, {3.49190161470525*^9, 3.4919016289865*^9}, 
   3.4919977262365*^9, 3.49232864470525*^9, {3.492404266908375*^9, 
   3.49240427958025*^9}, {3.4924422644865*^9, 3.492442284345875*^9}, 
   3.4924424533615*^9, 3.492482631314625*^9, 3.49248300945525*^9, 
   3.49248775689275*^9, 3.4969942595045*^9, 3.497066673567*^9, 
   3.497171257942*^9, 3.497519875715317*^9, 3.4975201030648065`*^9, 
   3.4975433480895247`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetWorkDir", "[", "]"}]], "Input",
 CellChangeTimes->{{3.435519141579*^9, 3.435519144023*^9}}],

Cell[BoxData["\<\"d:\\\\home\\\\Anton\\\\programs\\\\tormagn\"\>"], "Output",
 CellChangeTimes->{3.435519144508*^9, 3.435556738723*^9, 3.487313371778625*^9}
  ]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetWorkDir", "[", "\"\<Debug\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.492143106752125*^9, 3.49214310870525*^9}, {
  3.49725469922325*^9, 3.497254699957625*^9}}],

Cell[BoxData["\<\"d:\\\\home\\\\Anton\\\\programs\\\\tormagn-full\\\\Debug\"\>\
"], "Output",
 CellChangeTimes->{3.49214310908025*^9, 3.497254700301375*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetWorkDir", "[", "\"\<2010.08.31\\\\chi13\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.415348973909*^9, 3.415348978164*^9}, {3.415511414216*^9,
    3.415511415973*^9}, {3.415532850358*^9, 3.4155328532209997`*^9}, {
   3.41553290101*^9, 3.415532911358*^9}, {3.415638973808*^9, 
   3.415638983182*^9}, 3.415640266615*^9, 3.415640832935*^9, 
   3.415641524351*^9, {3.4156968208307877`*^9, 3.415696831923897*^9}, {
   3.416156529984*^9, 3.416156533074*^9}, {3.486447731028*^9, 
   3.486447746653*^9}, {3.4864497572155*^9, 3.486449757528*^9}, {
   3.4868822863255*^9, 3.48688228641925*^9}, {3.48688418266925*^9, 
   3.48688418273175*^9}, {3.486887357809875*^9, 3.486887357888*^9}, {
   3.486887779278625*^9, 3.486887779372375*^9}, {3.486965409263*^9, 
   3.486965414747375*^9}, 3.486966424309875*^9, 3.48697066929425*^9, {
   3.48697166798175*^9, 3.486971673309875*^9}, {3.4879169967542267`*^9, 
   3.4879169968946266`*^9}, {3.4899719658125*^9, 3.4899719675*^9}, {
   3.48999158115625*^9, 3.489991597*^9}, {3.4899983933125*^9, 
   3.4899983935*^9}, 3.489998462609375*^9, {3.490944351984375*^9, 
   3.49094435228125*^9}, 3.4909443823125*^9, {3.490944484953125*^9, 
   3.490944495359375*^9}, {3.490944609796875*^9, 3.4909446123125*^9}, {
   3.490944878953125*^9, 3.490944883796875*^9}, {3.49095063525*^9, 
   3.49095064003125*^9}, 3.491127827328125*^9, {3.49119690964275*^9, 
   3.49119691289275*^9}, {3.491557967877125*^9, 3.49155796826775*^9}, {
   3.49158213514275*^9, 3.491582136674*^9}, {3.49158337233025*^9, 
   3.491583372814625*^9}, {3.49158356776775*^9, 3.491583568033375*^9}, {
   3.491616723814625*^9, 3.49161672445525*^9}, 3.49163085170525*^9, 
   3.49164886508025*^9, {3.491901450627125*^9, 3.491901450799*^9}, {
   3.49190858101775*^9, 3.4919085828615*^9}, {3.491976856674*^9, 
   3.491976858877125*^9}, {3.491997706299*^9, 3.491997707377125*^9}, {
   3.49201997089275*^9, 3.4920199736115*^9}, {3.492135558408375*^9, 
   3.4921355646115*^9}, {3.492139187658375*^9, 3.492139194345875*^9}, {
   3.493886082828125*^9, 3.4938860834375*^9}, {3.493892132265625*^9, 
   3.493892134421875*^9}, {3.49393938075*^9, 3.49393938125*^9}, {
   3.49394162109375*^9, 3.493941627671875*^9}}],

Cell[BoxData["\<\"d:\\\\home\\\\Anton\\\\programs\\\\tormagn-full\\\\2010.08.\
31\\\\chi13\"\>"], "Output",
 CellChangeTimes->{
  3.491196913158375*^9, 3.491206780752125*^9, 3.49155797489275*^9, 
   3.49157491426775*^9, 3.491578287752125*^9, 3.4915821371115*^9, 
   3.49158344626775*^9, 3.491583568345875*^9, 3.491616724845875*^9, 
   3.49163085195525*^9, 3.491637382314625*^9, 3.49164541651775*^9, 
   3.491648865439625*^9, 3.49170676526775*^9, 3.4919014602365*^9, 
   3.491908593408375*^9, 3.491976859658375*^9, 3.49199770783025*^9, 
   3.49201997383025*^9, 3.49213556495525*^9, 3.4921391948615*^9, 
   3.49214292514275*^9, 3.49387093240625*^9, 3.4938860836875*^9, 
   3.493892134875*^9, 3.493939381671875*^9, {3.49394162190625*^9, 
   3.493941627953125*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"$HistoryLength", "=", "1"}], ";"}]], "Input",
 CellChangeTimes->{{3.491124090203125*^9, 3.4911240913125*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"text", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<mess0.log\>\"", ",", "\"\<Text\>\""}], "]"}]}], ";", 
  RowBox[{"StringLength", "[", "text", "]"}]}]], "Input",
 CellChangeTimes->{{3.497066667895125*^9, 3.497066680192*^9}}],

Cell[BoxData["996354"], "Output",
 CellChangeTimes->{3.497066680770125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"StringCases", "[", 
   RowBox[{"text", ",", 
    RowBox[{
     RowBox[{
     "RegularExpression", "[", "\"\<mB from\\\\s*(\\\\d+)\\\\s+\>\"", "]"}], 
     "\[RuleDelayed]", 
     RowBox[{"ToExpression", "[", "\"\<$1\>\"", "]"}]}]}], "]"}], "//", 
  "Tally"}]], "Input",
 CellChangeTimes->{{3.497066682567*^9, 3.49706672997325*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"197", ",", "3525"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"325", ",", "3525"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"317", ",", "3525"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"189", ",", "3524"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.497066723145125*^9, 3.497066730363875*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:0420\:0430\:0437\:0431\:043e\:0440 \:043b\:043e\:0433\:043e\:0432", \
"Subsubsection",
 CellChangeTimes->{{3.459149071734375*^9, 3.459149077390625*^9}, {
  3.4881780695880804`*^9, 3.488178080929283*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"text", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<message.dat\>\"", ",", "\"\<Text\>\""}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.48559318984375*^9, 3.485593201171875*^9}, {
   3.48559363425*^9, 3.485593636*^9}, {3.48559375640625*^9, 
   3.485593764359375*^9}, {3.485593806890625*^9, 3.48559380803125*^9}, 
   3.487483693161625*^9, 3.487484866036625*^9, {3.490940490296875*^9, 
   3.49094049121875*^9}, {3.492442456439625*^9, 3.492442457424*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"StrMsg", "[", "msg_String", "]"}], ":=", 
  RowBox[{
  "\"\<(?s)(message of proc#(\\\\d+) at \
)?t=(-?\\\\d+(\\\\.\\\\d+)?)\\\\s*Niter=(\\\\d+)\\\\s*time of \
work=\\\\d+(\\\\.\\\\d+)? sec:\\\\s*\>\"", "<>", 
   "msg"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StrChg", "[", "par_String", "]"}], ":=", 
  RowBox[{"StrMsg", "[", 
   RowBox[{"par", "<>", "\"\< was changed to\>\""}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.4881288522647004`*^9, 3.488128923775114*^9}, {
  3.4881289939439287`*^9, 3.4881289991699295`*^9}, {3.4881290957183485`*^9, 
  3.488129108619551*^9}, {3.488129143672758*^9, 3.4881291502247596`*^9}, {
  3.4881291873995667`*^9, 3.488129209863571*^9}, {3.488129338501197*^9, 
  3.4881293410439973`*^9}, {3.4881780336144733`*^9, 3.4881780339108734`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"StrChg", "[", "par_String", "]"}], ":=", 
   RowBox[{
   "\"\<t=(-?\\\\d+(\\\\.\\\\d+)?)\\\\s*Niter=(\\\\d+)\\\\s*time of \
work=\\\\d+(\\\\.\\\\d+)? sec:\\\\s*\>\"", "<>", "par", "<>", 
    "\"\< was changed to\>\""}]}], ";"}]], "Input",
 CellChangeTimes->{{3.4880044264059744`*^9, 3.4880044541427803`*^9}, {
  3.4880044964499884`*^9, 3.4880044989303885`*^9}, {3.4881288406426983`*^9, 
  3.4881288436534986`*^9}, {3.4881293289539948`*^9, 3.488129334320396*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Rmt", "=", 
   RowBox[{"StringCases", "[", 
    RowBox[{"text", ",", 
     RowBox[{
      RowBox[{"RegularExpression", "[", 
       RowBox[{"StrChg", "[", "\"\<Rm\>\"", "]"}], "]"}], "\[RuleDelayed]", 
      RowBox[{"ToExpression", "[", "\"\<$3\>\"", "]"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.4870558406852226`*^9, 3.487055853836025*^9}, {
   3.487575967021*^9, 3.487576027505375*^9}, {3.488004444361578*^9, 
   3.4880044620987816`*^9}, 3.488132368942199*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"StringCases", "[", 
   RowBox[{"text", ",", 
    RowBox[{
     RowBox[{"RegularExpression", "[", 
      RowBox[{"StrMsg", "[", "\"\<(.*?)\>\"", "]"}], "]"}], "\[RuleDelayed]", 
     "\"\<$0\>\""}]}], "]"}], "//", "Length"}]], "Input",
 CellChangeTimes->{{3.488129036110737*^9, 3.4881290536295404`*^9}}],

Cell[BoxData["215"], "Output",
 CellChangeTimes->{
  3.489810030796875*^9, 3.48997197746875*^9, 3.48999729140625*^9, 
   3.49120193676775*^9, {3.491201972033375*^9, 3.491201986877125*^9}, 
   3.496994273457625*^9, 3.497519876137087*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringCases", "[", 
  RowBox[{"text", ",", 
   RowBox[{
    RowBox[{"RegularExpression", "[", 
     RowBox[{"StrChg", "[", "\"\<rc\>\"", "]"}], "]"}], "\[RuleDelayed]", 
    "\"\<$3\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.4880047216516333`*^9, {3.4881292217507734`*^9, 3.488129227975175*^9}, {
   3.491201990158375*^9, 3.491201995939625*^9}}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{
  3.488004722369233*^9, 3.488129028373135*^9, {3.4881291660275626`*^9, 
   3.4881291746387644`*^9}, {3.4881292154327726`*^9, 3.488129228833175*^9}, 
   3.4897669739603176`*^9, 3.4897693820228176`*^9, 3.489810010859375*^9, 
   3.489971978359375*^9, 3.489985258296875*^9, 3.489991601875*^9, 
   3.489997292671875*^9, {3.4912019698615*^9, 3.491201996252125*^9}, 
   3.4912020681115*^9, 3.491206826627125*^9, 3.491207481533375*^9, {
   3.492442272674*^9, 3.49244229058025*^9}, 3.496994274957625*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"cs", "=", 
   RowBox[{"StringCases", "[", 
    RowBox[{"text", ",", 
     RowBox[{
      RowBox[{"RegularExpression", "[", 
       RowBox[{"StringJoin", "[", 
        RowBox[{"\"\<(?s)(\>\"", ",", 
         RowBox[{"StrChg", "[", "\"\<rc\>\"", "]"}], ",", 
         "\"\<)?(.+?)(?=(\>\"", ",", 
         RowBox[{"StrChg", "[", "\"\<rc\>\"", "]"}], ",", "\"\<)|$)\>\""}], 
        "]"}], "]"}], "\[RuleDelayed]", "\"\<$0\>\""}]}], "]"}]}], ";", 
  RowBox[{"cs", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"StringCases", "[", 
        RowBox[{"#", ",", 
         RowBox[{
          RowBox[{"RegularExpression", "[", 
           RowBox[{"StrChg", "[", "\"\<rc\>\"", "]"}], "]"}], "\[Rule]", 
          "\"\<$3\>\""}]}], "]"}], ",", 
       RowBox[{"StringCases", "[", 
        RowBox[{"#", ",", 
         RowBox[{
          RowBox[{"RegularExpression", "[", 
           RowBox[{"StrChg", "[", "\"\<Rm\>\"", "]"}], "]"}], "\[Rule]", 
          "\"\<$3\>\""}]}], "]"}], ",", 
       RowBox[{"StringCases", "[", 
        RowBox[{"#", ",", 
         RowBox[{
          RowBox[{"RegularExpression", "[", 
           RowBox[{"StrMsg", "[", "\"\<snap is done\>\"", "]"}], "]"}], 
          "\[Rule]", "\"\<$5\>\""}]}], "]"}]}], "}"}], "&"}], "/@", "cs"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
      ",", 
      RowBox[{"#", "\[LeftDoubleBracket]", 
       RowBox[{"2", ",", 
        RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], ",", 
      RowBox[{"#", "\[LeftDoubleBracket]", 
       RowBox[{"3", ",", 
        RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}]}], "}"}], "&"}], "/@",
    "cs"}], "]"}]}], "Input",
 CellChangeTimes->{{3.4881283132689934`*^9, 3.488128408070212*^9}, {
  3.4881286317742567`*^9, 3.4881286321798563`*^9}, {3.4881287291962757`*^9, 
  3.488128763687883*^9}, {3.4881293882028065`*^9, 3.4881294557040205`*^9}, {
  3.488129725693274*^9, 3.488129735958076*^9}, {3.4881298041144896`*^9, 
  3.488129810338891*^9}, {3.488132660225457*^9, 3.488132660724657*^9}, {
  3.4897704362728176`*^9, 3.4897704375228176`*^9}}],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     InterpretationBox["\<\"\"\>",
      {}], "\<\"26.0000\"\>", "\<\"40792\"\>"},
    {GridBox[{
       {"\<\"0.4750\"\>"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, 
        "RowsIndexed" -> {}}], "\<\"26.0000\"\>", "\<\"42214\"\>"},
    {GridBox[{
       {"\<\"0.5000\"\>"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, 
        "RowsIndexed" -> {}}], "\<\"26.0000\"\>", "\<\"43410\"\>"},
    {GridBox[{
       {"\<\"0.5250\"\>"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, 
        "RowsIndexed" -> {}}], "\<\"26.0000\"\>", "\<\"44425\"\>"},
    {GridBox[{
       {"\<\"0.5500\"\>"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, 
        "RowsIndexed" -> {}}], "\<\"26.0000\"\>", "\<\"45582\"\>"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  TableForm[{{{}, "26.0000", "40792"}, {{"0.4750"}, "26.0000", "42214"}, {{
     "0.5000"}, "26.0000", "43410"}, {{"0.5250"}, "26.0000", "44425"}, {{
     "0.5500"}, "26.0000", "45582"}}]]], "Output",
 CellChangeTimes->{3.49164028808025*^9, 3.4916454177365*^9, 
  3.4916471201115*^9, 3.491647404814625*^9, 3.49164787820525*^9, 
  3.4916488696115*^9, 3.491706765783375*^9, 3.491713893064625*^9, 
  3.491901460720875*^9, 3.492135589924*^9, 3.4921391982365*^9, 
  3.4921431157365*^9, 3.492442294189625*^9, 3.49248301051775*^9, 
  3.492488109939625*^9, 3.4938709346875*^9, 3.49388608984375*^9, 
  3.4938921406875*^9, 3.493939386421875*^9, 3.4939416335*^9, 
  3.49699427609825*^9, 3.4975198762620554`*^9, 3.49752010751682*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cs", "[", 
  RowBox[{"[", "3", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.491208949095875*^9, 3.491208950752125*^9}, 
   3.491209217127125*^9, {3.491558427002125*^9, 3.4915584279865*^9}, 
   3.491647126908375*^9, {3.491713906658375*^9, 3.491713939752125*^9}, 
   3.4921356038615*^9, 3.4921380442365*^9, 3.49214319158025*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "\<\"0.8091\"\>", "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"614\"\>", ",", "\<\"1140\"\>", ",", "\<\"1661\"\>", 
     ",", "\<\"2186\"\>", ",", "\<\"2707\"\>", ",", "\<\"3233\"\>", 
     ",", "\<\"3758\"\>", ",", "\<\"4284\"\>", ",", "\<\"4812\"\>", 
     ",", "\<\"5332\"\>", ",", "\<\"5856\"\>", ",", "\<\"6382\"\>", 
     ",", "\<\"6906\"\>", ",", "\<\"7428\"\>", ",", "\<\"7951\"\>", 
     ",", "\<\"8475\"\>", ",", "\<\"9003\"\>", ",", "\<\"9523\"\>", 
     ",", "\<\"10049\"\>", ",", "\<\"10576\"\>", ",", "\<\"11094\"\>", 
     ",", "\<\"11621\"\>", ",", "\<\"12148\"\>", ",", "\<\"12671\"\>", 
     ",", "\<\"13198\"\>", ",", "\<\"13721\"\>", ",", "\<\"14242\"\>", 
     ",", "\<\"14766\"\>", ",", "\<\"15288\"\>", ",", "\<\"15818\"\>", 
     ",", "\<\"16347\"\>", ",", "\<\"16866\"\>", ",", "\<\"17388\"\>", 
     ",", "\<\"17912\"\>", ",", "\<\"18439\"\>", ",", "\<\"18965\"\>", 
     ",", "\<\"19490\"\>", ",", "\<\"20012\"\>", ",", "\<\"20535\"\>", 
     ",", "\<\"21060\"\>", ",", "\<\"21584\"\>", ",", "\<\"22106\"\>", 
     ",", "\<\"22632\"\>", ",", "\<\"23155\"\>", ",", "\<\"23679\"\>", 
     ",", "\<\"24203\"\>", ",", "\<\"24727\"\>", ",", "\<\"25253\"\>", 
     ",", "\<\"25778\"\>", ",", "\<\"26296\"\>", ",", "\<\"26819\"\>", 
     ",", "\<\"27345\"\>", ",", "\<\"27865\"\>", ",", "\<\"28386\"\>", 
     ",", "\<\"28906\"\>", ",", "\<\"29430\"\>", ",", "\<\"29952\"\>", 
     ",", "\<\"30472\"\>", ",", "\<\"30998\"\>", ",", "\<\"31521\"\>"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.491209217424*^9, 3.491558428720875*^9, 3.491647127127125*^9, 
   3.491703042174*^9, {3.49171390676775*^9, 3.491713939908375*^9}, 
   3.492135604002125*^9, 3.492138044549*^9, 3.492143191908375*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"ToExpression", "/@", 
   RowBox[{"cs", "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.49094177753125*^9, 3.4909417906875*^9}, 
   3.490942217453125*^9, {3.490954440078125*^9, 3.490954448484375*^9}, 
   3.490958233375*^9, {3.49095850396875*^9, 3.490958504125*^9}, 
   3.491045837125*^9, 3.491046132296875*^9, 3.491047193265625*^9, 
   3.491049987703125*^9, {3.49105140128125*^9, 3.491051401984375*^9}, {
   3.491112601109375*^9, 3.491112601671875*^9}, {3.491112703421875*^9, 
   3.491112703734375*^9}, 3.491112932109375*^9, 3.4911215645*^9, 
   3.491122509578125*^9, 3.49112504446875*^9, {3.491127946078125*^9, 
   3.491127946171875*^9}, 3.4912010954865*^9, 3.49120113214275*^9, 
   3.4912018182365*^9, 3.491202083283375*^9, 3.491203530377125*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fins", "=", 
  RowBox[{"StringCases", "[", 
   RowBox[{"text", ",", 
    RowBox[{
     RowBox[{
     "RegularExpression", "[", 
      "\"\<t=(15(\\\\.\\\\d+)?)\\\\s*Niter=(\\\\d+)\\\\s*time of \
work=(\\\\d+(\\\\.\\\\d+)?) sec:\\nsnap is done\>\"", "]"}], "\[RuleDelayed]", 
     RowBox[{"{", 
      RowBox[{"\"\<$1\>\"", ",", "\"\<$3\>\"", ",", "\"\<$4\>\""}], "}"}]}]}],
    "]"}]}]], "Input",
 CellChangeTimes->{{3.48757604280225*^9, 3.48757606767725*^9}, 
   3.487576171849125*^9, {3.48981004984375*^9, 3.489810053046875*^9}, {
   3.491582528002125*^9, 3.491582551799*^9}, {3.4975198899617605`*^9, 
   3.4975198900554867`*^9}, {3.4975201144994516`*^9, 3.4975201208572392`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"15.0001\"\>", ",", "\<\"10199\"\>", ",", "\<\"1975.96\"\>"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"15.0005\"\>", ",", "\<\"10564\"\>", ",", "\<\"1591.42\"\>"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"15.0007\"\>", ",", "\<\"10866\"\>", ",", "\<\"581.238\"\>"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"15.0010\"\>", ",", "\<\"11178\"\>", ",", "\<\"603.376\"\>"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"15.0012\"\>", ",", "\<\"11468\"\>", ",", "\<\"617.659\"\>"}],
     "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.49120667033025*^9, 3.49120670583025*^9}, {
   3.491207782095875*^9, 3.49120779870525*^9}, {3.491582528939625*^9, 
   3.491582553049*^9}, 3.491583446564625*^9, 3.491638856720875*^9, 
   3.491647191220875*^9, 3.492136069799*^9, 3.493892144609375*^9, 
   3.49393952459375*^9, 3.4939416393125*^9, 3.4975198903366666`*^9, {
   3.4975201106097975`*^9, 3.4975201209978294`*^9}, 3.4975240881323853`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringReplace", "[", 
  RowBox[{
   RowBox[{"StringDrop", "[", 
    RowBox[{
     RowBox[{"\"\<=\>\"", "<>", 
      RowBox[{"StringJoin", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "<>", "\"\<+\>\""}], "&"}], "/@", 
        RowBox[{
         SuperscriptBox["fins", "\[Transpose]"], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ",", 
     RowBox[{"-", "1"}]}], "]"}], ",", 
   RowBox[{"\"\<.\>\"", "\[Rule]", "\"\<,\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.487576122567875*^9, 3.48757617730225*^9}, {
   3.487576266567875*^9, 3.487576361036625*^9}, {3.49112407996875*^9, 
   3.491124080140625*^9}, 3.49112413528125*^9, 3.49112475371875*^9, 
   3.49112485490625*^9, {3.491206685127125*^9, 3.49120670851775*^9}, {
   3.491207792783375*^9, 3.491207797314625*^9}, {3.491582555627125*^9, 
   3.491582567814625*^9}, {3.491583554877125*^9, 3.49158355495525*^9}, {
   3.491638885658375*^9, 3.491638885783375*^9}, {3.492136113502125*^9, 
   3.49213611358025*^9}, 3.49393956315625*^9, {3.49394174834375*^9, 
   3.49394174934375*^9}, 3.497519909972389*^9, {3.4975202540739803`*^9, 
   3.497520254651961*^9}}],

Cell[BoxData["\<\"=10199+10564+10866+11178+11468\"\>"], "Output",
 CellChangeTimes->{{3.491206673033375*^9, 3.49120670876775*^9}, {
   3.491207783470875*^9, 3.49120779926775*^9}, {3.491582533095875*^9, 
   3.4915825689865*^9}, 3.491583446627125*^9, 3.4915835552365*^9, {
   3.491638858377125*^9, 3.491638886314625*^9}, 3.492136072689625*^9, 
   3.492136113783375*^9, 3.493939525546875*^9, 3.49393956359375*^9, 
   3.49394164134375*^9, 3.493941749671875*^9, {3.4975198929141483`*^9, 
   3.497519910253569*^9}, 3.4975201230754356`*^9, 3.4975202549331408`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"ListPlot", "[", 
  RowBox[{"Rmt", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"10", ",", "All"}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Last", "[", "Rmt", "]"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Last", "[", "Rmt", "]"}]}], "Input",
 CellChangeTimes->{{3.485593206828125*^9, 3.48559321809375*^9}, {
   3.48559326203125*^9, 3.4855933948125*^9}, {3.485593490796875*^9, 
   3.485593498703125*^9}, {3.485593540453125*^9, 3.485593572984375*^9}, {
   3.48559381503125*^9, 3.485593815125*^9}, {3.486447879278*^9, 
   3.48644787980925*^9}, {3.486965646466125*^9, 3.486965655372375*^9}, {
   3.486965685684875*^9, 3.48696568685675*^9}, {3.4870552997395153`*^9, 
   3.487055302110716*^9}, {3.4870558570496264`*^9, 3.487055857533226*^9}, {
   3.4873124696750193`*^9, 3.487312498987425*^9}, {3.4873132760079794`*^9, 
   3.4873132962567835`*^9}, {3.487313364272797*^9, 3.4873133726187987`*^9}, {
   3.487315072925537*^9, 3.487315072987937*^9}, 3.4873161050061417`*^9, 
   3.488019966996463*^9, {3.4880931286242013`*^9, 3.4880931317442017`*^9}, {
   3.488159060157503*^9, 3.4881590673179045`*^9}, 3.4897986460696926`*^9, {
   3.489991675421875*^9, 3.48999167584375*^9}, {3.4899972999375*^9, 
   3.489997301859375*^9}, {3.4909445085625*^9, 3.49094451128125*^9}, {
   3.49094511765625*^9, 3.49094512071875*^9}, {3.49095086390625*^9, 
   3.4909508643125*^9}, {3.490951968546875*^9, 3.4909519758125*^9}, {
   3.4911129413125*^9, 3.491112944296875*^9}, {3.491124916546875*^9, 
   3.491124937453125*^9}, {3.491201466674*^9, 3.491201468220875*^9}, {
   3.491201572564625*^9, 3.491201576189625*^9}, {3.491201805127125*^9, 
   3.4912018054865*^9}, 3.491202078627125*^9, 3.49120320570525*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"{", 
     RowBox[{"Rmt", ",", 
      RowBox[{"RotateLeft", "[", "Rmt", "]"}]}], "}"}], "\[Transpose]"], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"First", "[", "#", "]"}], "/", 
      RowBox[{"Last", "[", "#", "]"}]}], "<", "0.9"}], "&"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.4870558610432267`*^9, 3.487055951226845*^9}, {
   3.487487163699411*^9, 3.487487168020612*^9}, {3.4898100723125*^9, 
   3.4898100735*^9}, 3.4909447444375*^9}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{
  3.487483664942875*^9, 3.487483716755375*^9, 3.48748487117725*^9, 
   3.48808914822101*^9, 3.4881295283532343`*^9, 3.4897986193665676`*^9, {
   3.48981006271875*^9, 3.489810073859375*^9}, 3.4909419119375*^9, {
   3.49094474165625*^9, 3.490944744578125*^9}, 3.4910472311875*^9, 
   3.49112505559375*^9, 3.4912011407365*^9, 3.491201822877125*^9, 
   3.4912020748615*^9, 3.4975198784802513`*^9, {3.497519933216586*^9, 
   3.497519938652729*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:0413\:0440\:0430\:0444\:0438\:043a\:0438 \:043f\:043e \:0432\:0440\
\:0435\:043c\:0435\:043d\:0438", "Subsubsection",
 CellChangeTimes->{{3.459149071734375*^9, 3.459149077390625*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"Thread", "::", "tdlen"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"lv", "=", 
   RowBox[{"ReadList", "[", "\"\<vv.dat\>\"", "]"}]}], ";", 
  RowBox[{"lv", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"#", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}],
        "}"}], "&"}], ",", "lv"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ltm", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"First", "/@", "lv"}], "]"}]}], ";"}], "\n", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Length", "[", "ltm", "]"}], ",", 
   RowBox[{"Last", "[", "ltm", "]"}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.3960002006979976`*^9, 3.3960002014509974`*^9}}],

Cell[BoxData[
 RowBox[{"PrintRange", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"First", "[", "#", "]"}], ",", 
       RowBox[{"Max", "[", 
        RowBox[{"Last", "[", "#", "]"}], "]"}]}], "}"}], "&"}], "/@", "lv"}], 
   ",", "All", ",", 
   RowBox[{"PlotLabel", "->", "\"\<Maximum of stream velocity\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{3.395821803665*^9}],

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<energy5.dat\>\"", ",", 
   RowBox[{"Transpose", "@", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", "ltm", "}"}], ",", 
      RowBox[{"Map", "[", 
       RowBox[{"Last", ",", 
        RowBox[{"{", 
         RowBox[{
         "mp", ",", "mdp", ",", "mvx", ",", "mdvx", ",", "mvy", ",", "mdvy", 
          ",", "mvz", ",", "mdvz", ",", "mAx", ",", "mdAx", ",", "mAy", ",", 
          "mdAy", ",", "mAz", ",", "mdAz", ",", "mBx", ",", "mBy", ",", "mBz",
           ",", "mqp", ",", "mqvx", ",", "mqvy", ",", "mqvz", ",", "mqAx", 
          ",", "mqAy", ",", "mqAz", ",", "mqBx", ",", "mqBy", ",", "mqBz"}], 
         "}"}], ",", 
        RowBox[{"{", "2", "}"}]}], "]"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4119212950629997`*^9, 3.4119213045950003`*^9}, {
  3.411921341668*^9, 3.411921369223*^9}}],

Cell[BoxData[{
 RowBox[{"PrintRange", "[", 
  RowBox[{
   RowBox[{"dif", "[", "ltm", "]"}], ",", "All", ",", 
   RowBox[{"PlotLabel", "->", "\"\<Time step\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"PrintRange", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
       "/", "3"}], ",", 
      RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
     "}"}], "&"}], "/@", 
   RowBox[{"(", 
    RowBox[{"mqvx", "+", "mqvy", "+", "mqvz"}], ")"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.4156990880644884`*^9, 3.4156990886645484`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FileNames", "[", "\"\<en*.dat\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.4975199643806806`*^9, 3.4975199694575377`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"energy(0.42).dat\"\>", ",", "\<\"energy(0.45).dat\"\>", 
   ",", "\<\"energy(0.47).dat\"\>", ",", "\<\"energy(0.50).dat\"\>", 
   ",", "\<\"energy(0.53).dat\"\>", ",", "\<\"energy(0.55).dat\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.4975199701917295`*^9, 3.497520273147343*^9, 
  3.497543356243739*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"len", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"Import", "[", 
       RowBox[{"\"\<energy(0.53).dat\>\"", ",", "\"\<Table\>\""}], "]"}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"0", "<", 
         RowBox[{"First", "[", "#", "]"}]}], ")"}], "&"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ltm", "=", 
    RowBox[{"First", "[", "len", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"PrintRange", "[", 
    RowBox[{
     RowBox[{"dif", "[", "ltm", "]"}], ",", "All", ",", 
     RowBox[{"PlotLabel", "->", "\"\<Time step\>\""}]}], "]"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "mp", ",", "mdp", ",", "mvx", ",", "mdvx", ",", "mvy", ",", "mdvy", ",", 
      "mvz", ",", "mdvz", ",", "mAx", ",", "mdAx", ",", "mAy", ",", "mdAy", 
      ",", "mAz", ",", "mdAz", ",", "mBx", ",", "mBy", ",", "mBz", ",", "mqp",
       ",", "mqvx", ",", "mqvy", ",", "mqvz", ",", "mqAx", ",", "mqAy", ",", 
      "mqAz", ",", "mqBx", ",", "mqBy", ",", "mqBz"}], "}"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"ltm", ",", "#"}], "}"}], "]"}], "&"}], "/@", 
     RowBox[{"Drop", "[", 
      RowBox[{"len", ",", "2"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"PrintRange", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
         "/", "3"}], ",", 
        RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}],
        "}"}], "&"}], "/@", 
     RowBox[{"(", 
      RowBox[{"mqvx", "+", "mqvy", "+", "mqvz"}], ")"}]}], "]"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"PrintRange", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
           "/", "3"}], ",", 
         RowBox[{"Log", "[", 
          RowBox[{"10", ",", 
           RowBox[{
           "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
          "]"}]}], "}"}], "&"}], "/@", 
      RowBox[{"(", 
       RowBox[{"mqAx", "+", "mqAy", "+", "mqAz"}], ")"}]}], ",", "All", ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"\"\<Last energy=\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{"Last", "[", 
         RowBox[{"Last", "[", 
          RowBox[{"mqAx", "+", "mqAy", "+", "mqAz"}], "]"}], "]"}], 
        "]"}]}]}]}], "]"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"PrintRange", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        "/", "3"}], ",", 
       RowBox[{"Log", "[", 
        RowBox[{"10", ",", 
         RowBox[{
         "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
        "]"}]}], "}"}], "&"}], "/@", 
    RowBox[{"(", 
     RowBox[{"mqBx", "+", "mqBy", "+", "mqBz"}], ")"}]}], ",", "All", ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"\"\<Last energy=\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"Last", "[", 
       RowBox[{"Last", "[", 
        RowBox[{"mqBx", "+", "mqBy", "+", "mqBz"}], "]"}], "]"}], "]"}]}]}]}],
   "]"}]}], "Input",
 CellChangeTimes->{{3.395821810158*^9, 3.3958218234230003`*^9}, 
   3.395842386082*^9, {3.3959942473796*^9, 3.3959942775256*^9}, 
   3.3959990851589975`*^9, 3.408519827112*^9, {3.4085199685030003`*^9, 
   3.4085199721809998`*^9}, {3.408523680314*^9, 3.408523683005*^9}, {
   3.408523760568*^9, 3.408523763465*^9}, {3.408524195633*^9, 
   3.4085242044110003`*^9}, {3.409567684186*^9, 3.4095676869820004`*^9}, {
   3.411278618098*^9, 3.41127861859*^9}, {3.411278661243*^9, 
   3.411278661674*^9}, {3.4113750589110003`*^9, 3.41137505923*^9}, {
   3.411721744043*^9, 3.411721744212*^9}, 3.411814654814*^9, 3.4123412374*^9, 
   3.412341651447*^9, 3.4123574371549997`*^9, 3.4123581250039997`*^9, 
   3.412358262223*^9, 3.4123583164969997`*^9, {3.415640840615*^9, 
   3.4156408500810003`*^9}, {3.4162814919309998`*^9, 3.416281506709*^9}, 
   3.41655419221*^9, 3.416564140802*^9, {3.4165748570030003`*^9, 
   3.4165748869890003`*^9}, 3.416575273749*^9, 3.416575310836*^9, 
   3.416580366032*^9, 3.416580397729*^9, 3.416580578803*^9, {
   3.416633754105*^9, 3.416633771119*^9}, 3.416898358594*^9, 
   3.416898406552*^9, 3.416902779934*^9, 3.416903583559*^9, 
   3.417155562546*^9, {3.417237419899*^9, 3.4172374202469997`*^9}, {
   3.417237570934*^9, 3.417237572792*^9}, 3.4172387284849997`*^9, 
   3.417239034575*^9, {3.41831180219*^9, 3.4183118026429996`*^9}, 
   3.4183119797*^9, {3.418312044646*^9, 3.418312044767*^9}, {
   3.418314397318*^9, 3.418314397644*^9}, {3.418320056972*^9, 
   3.418320057611*^9}, {3.418360689082*^9, 3.41836068935*^9}, {
   3.486978765203906*^9, 3.4869787663895063`*^9}, {3.4869788859791307`*^9, 
   3.486978939892741*^9}, 3.4870562423385024`*^9, 3.487312033140133*^9, 
   3.4873128174458885`*^9, 3.487313307504386*^9, {3.487315082410339*^9, 
   3.4873150831279387`*^9}, {3.4874671002780232`*^9, 3.4874671014324236`*^9}, 
   3.4874684424710903`*^9, {3.4874824592376757`*^9, 3.48748247862848*^9}, {
   3.487487092594597*^9, 3.4874871264778037`*^9}, {3.4874873565310493`*^9, 
   3.4874873779186535`*^9}, {3.487487529394684*^9, 3.4874875300342836`*^9}, {
   3.487489181403812*^9, 3.4874891814662123`*^9}, {3.487489427852661*^9, 
   3.4874894279306607`*^9}, {3.487489539954283*^9, 3.4874895400322833`*^9}, 
   3.48748977591993*^9, {3.4874900146467776`*^9, 3.487490014989978*^9}, {
   3.487490205419215*^9, 3.487490205762416*^9}, {3.4876774260446196`*^9, 
   3.4876774268402195`*^9}, {3.48791671004177*^9, 3.487916720602972*^9}, {
   3.4879488444101553`*^9, 3.4879488486533566`*^9}, {3.48795223823763*^9, 
   3.48795223943883*^9}, {3.4879538305455465`*^9, 3.4879538317623463`*^9}, 
   3.4879553102682405`*^9, {3.4879888920788875`*^9, 3.4879888937948875`*^9}, {
   3.48801245320037*^9, 3.4880124540583696`*^9}, {3.4897670912728176`*^9, 
   3.4897671097415676`*^9}, 3.4897677368665676`*^9, {3.4897687894446926`*^9, 
   3.4897687895228176`*^9}, 3.4897688668821926`*^9, {3.4897693947571926`*^9, 
   3.4897693952728176`*^9}, {3.4897698717728176`*^9, 
   3.4897698724290676`*^9}, {3.4897706034134426`*^9, 
   3.4897706035071926`*^9}, {3.4897709203040676`*^9, 3.4897709204603176`*^9}, 
   3.4897713359446926`*^9, {3.4897715168040676`*^9, 3.4897715176946926`*^9}, 
   3.4897716972884426`*^9, 3.4897740545853176`*^9, 3.4897741602728176`*^9, {
   3.4897742701946926`*^9, 3.4897742703509426`*^9}, {3.4897754516946926`*^9, 
   3.4897754528353176`*^9}, {3.4897755509134426`*^9, 3.4897755515228176`*^9}, 
   3.4897981533978176`*^9, {3.4897982969603176`*^9, 3.4897982971478176`*^9}, 
   3.4897985280384426`*^9, {3.489810100015625*^9, 3.489810100453125*^9}, {
   3.48981059203125*^9, 3.489810592421875*^9}, {3.4898110904375*^9, 
   3.489811100828125*^9}, {3.48981267440625*^9, 3.48981267771875*^9}, {
   3.489972090109375*^9, 3.489972090171875*^9}, {3.489991612*^9, 
   3.48999161790625*^9}, 3.489991687640625*^9, {3.489997513578125*^9, 
   3.489997515171875*^9}, 3.48999780321875*^9, {3.489998632359375*^9, 
   3.489998633171875*^9}, {3.489999551078125*^9, 3.4899995533125*^9}, 
   3.490941669734375*^9, 3.490941747796875*^9, 3.49094225853125*^9, {
   3.4909433440625*^9, 3.4909433441875*^9}, 3.49094346159375*^9, 
   3.490943673515625*^9, 3.4909437675*^9, {3.490944394921875*^9, 
   3.490944395734375*^9}, {3.4909445184375*^9, 3.490944584609375*^9}, {
   3.490944678015625*^9, 3.490944717796875*^9}, {3.4909447515*^9, 
   3.49094478834375*^9}, {3.490944819125*^9, 3.490944819578125*^9}, {
   3.490944901671875*^9, 3.490944902828125*^9}, {3.490945075484375*^9, 
   3.490945075578125*^9}, 3.4909452235*^9, 3.490945310921875*^9, {
   3.4909454428125*^9, 3.49094544296875*^9}, 3.490949454546875*^9, 
   3.490950674515625*^9, {3.4909544720625*^9, 3.4909544721875*^9}, {
   3.49095819115625*^9, 3.490958191359375*^9}, 3.49095851940625*^9, 
   3.49104586309375*^9, 3.491047317015625*^9, {3.4910497895625*^9, 
   3.491049789859375*^9}, 3.491050890359375*^9, {3.49105141534375*^9, 
   3.4910514155*^9}, 3.49111097728125*^9, {3.49111193009375*^9, 
   3.491111931328125*^9}, {3.4911126054375*^9, 3.49111260678125*^9}, 
   3.4911127074375*^9, {3.491112951125*^9, 3.491112951734375*^9}, {
   3.491121599265625*^9, 3.491121599703125*^9}, 3.4911225254375*^9, 
   3.491122736859375*^9, 3.4911233655*^9, 3.491123707546875*^9, {
   3.491124961984375*^9, 3.491124963765625*^9}, {3.49112574053125*^9, 
   3.4911257411875*^9}, {3.49112784678125*^9, 3.49112784728125*^9}, {
   3.49112795721875*^9, 3.491127957390625*^9}, {3.491132749424*^9, 
   3.491132751095875*^9}, {3.49119715108025*^9, 3.491197164127125*^9}, {
   3.491198578299*^9, 3.49119857951775*^9}, {3.49120104276775*^9, 
   3.49120104345525*^9}, {3.49120116689275*^9, 3.491201167674*^9}, {
   3.4912018399865*^9, 3.4912018452365*^9}, {3.491202039674*^9, 
   3.491202040720875*^9}, {3.491202531877125*^9, 3.491202532549*^9}, 
   3.4912031582365*^9, 3.491203741033375*^9, 3.4912041878615*^9, {
   3.491204784658375*^9, 3.4912047847365*^9}, {3.49120514033025*^9, 
   3.49120514114275*^9}, 3.4912068512365*^9, {3.491207267533375*^9, 
   3.49120726820525*^9}, {3.49155797808025*^9, 3.4915579801115*^9}, 
   3.49155825664275*^9, 3.49156089089275*^9, 3.491561361470875*^9, {
   3.491582167408375*^9, 3.491582168095875*^9}, {3.491582623533375*^9, 
   3.49158262426775*^9}, {3.491582800189625*^9, 3.491582800314625*^9}, {
   3.49158296970525*^9, 3.491582970970875*^9}, {3.4915836266115*^9, 
   3.491583627877125*^9}, 3.491587219439625*^9, {3.491587476845875*^9, 
   3.49158748451775*^9}, {3.49163092383025*^9, 3.491630936424*^9}, {
   3.491636645220875*^9, 3.49163664539275*^9}, 3.49164027464275*^9, {
   3.4916418081115*^9, 3.491641808189625*^9}, 3.491643638595875*^9, {
   3.491645725220875*^9, 3.491645726064625*^9}, {3.49164888108025*^9, 
   3.49164888220525*^9}, {3.49170322433025*^9, 3.49170322439275*^9}, 
   3.491703255814625*^9, {3.49170428883025*^9, 3.491704293033375*^9}, 
   3.491704407752125*^9, 3.49170677608025*^9, {3.49170899064275*^9, 
   3.4917089974865*^9}, {3.491709125595875*^9, 3.49170912589275*^9}, {
   3.49171077164275*^9, 3.491710771720875*^9}, {3.491713585627125*^9, 
   3.491713585970875*^9}, 3.4917137529865*^9, 3.49171417558025*^9, {
   3.49171423120525*^9, 3.491714240002125*^9}, {3.49171436970525*^9, 
   3.49171437683025*^9}, {3.49190163264275*^9, 3.4919016362365*^9}, 
   3.491908589799*^9, {3.491976862174*^9, 3.491976862549*^9}, 
   3.492019977549*^9, {3.49213563826775*^9, 3.492135639033375*^9}, {
   3.49213706064275*^9, 3.492137060752125*^9}, 3.492139221049*^9, {
   3.49213954226775*^9, 3.492139543064625*^9}, {3.49214323383025*^9, 
   3.492143234814625*^9}, {3.492144125595875*^9, 3.49214412570525*^9}, 
   3.492328635502125*^9, {3.49244231270525*^9, 3.492442438799*^9}, {
   3.4924426462365*^9, 3.492442688189625*^9}, {3.493871191984375*^9, 
   3.4938711920625*^9}, {3.493875181125*^9, 3.493875188234375*^9}, {
   3.493939418203125*^9, 3.493939419578125*^9}, {3.49394037915625*^9, 
   3.493940380171875*^9}, {3.49394126759375*^9, 3.493941268953125*^9}, {
   3.49394199734375*^9, 3.49394199815625*^9}, {3.496994285238875*^9, 
   3.496994286457625*^9}, {3.497171264645125*^9, 3.497171265567*^9}, {
   3.49725470653575*^9, 3.497254707551375*^9}, {3.4975199728941803`*^9, 
   3.497519974784333*^9}, {3.497520275896657*^9, 3.497520346566513*^9}, 
   3.497523711460801*^9, {3.4975252924098473`*^9, 3.497525292456711*^9}, {
   3.497543364850965*^9, 3.497543378738123*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJws2nc8l9/7OHB7k733eC0zUpG6rzTIKoUohIwiJaUQSlpUtkJIksqoJErC
SUvLpsxCJatkFCX9rvfv+/mrx7P7ft2vc59zneu6DtS89m324WBjYzslwsb2
37/Fbu8bOiVo1CNttZJPUYLE8++SL80e5tSvkoruRedESHzv5bkFsoUaVjix
amydGNnr/SEVRjypu3fKIkKCJMhLx5nVJhx7qSyjQIc1KVKkK9CilT35ECX1
s/nsOUcZsql0rFw16xiletAtmMUtRz7zUQlOW09Tyruq3gzFyBOPN0xR16VJ
VFjZlICymSKpK1X/w3Uog6rcWTqQ8EeJHFKxZNV35lGVtWtvGNaqEK4fIYUe
4cWUWpVhlMhbVdIi+TB055JS6s/cir5VK9RIqcfWbLnce5RDBo+Ld4Ea8Xr4
nq3f9gFVI/qZ15dPnVQ28e/wc62iZDY/c929UZ1oLZyVPFNQQ335GMi/K0Wd
iH+bveor85gKdHZLPdmmThQv7t/C+baOcuJb0W4hrEEuFBwQjLr4lOLxblgI
XaNBJFXjcyZsnlMyy1/Gyx3QIPHvzj404a+nEhLDuAVzNYhS4Mraf49fUuNX
dj6/9FKDLL279tWTY6+pgJ8lW0YnNEh93bXssJVvqbbwNVr7pDSJ+TOVgeCF
Bmrx+ifhH5dpkkIhJfnM7U1U0jHTwuStmuR5lcbOcpNmqv/O/o7CEE1yquVs
er9sC9Xqce2NbbImSU4AA+6pFmrhQlrX72JNclxOLHW6tZUSpPVIb32hSeRl
9399VdZGrRs7YZL+UZOselVX8TKpnSrcXz/VNIvfLx/qlbqvg9r2L6nVSlSL
9Lc9C7lm+Y7acWD632WaFnGKP/zpkv57atBvr8CDlVpk4u/r6k7+TmrLpLX3
yGYtUrk+1GT6eyel4jJkd2mXFnGQMdyY9qaLKo80Ofc8QouI75lrmyroptaI
1ErTErXInIJlsENsDyW/mV+z4KoWsSo6J5Ti00v1rAmpkKvQIjMNresvWPZR
z4ve9eXXa5E77zem1uh/oHLOP4uU69Yi5tO/UlM5PlL2ThrMplEtEhf/aVIl
+CPlGc3l/m8exxvDu9zqw0fqzsHxI4nCNMK696XA3r6fKkqruH9ZmUa446Rv
9FX3U37fTRPz9GjENe8zj7f2ACV38qBZ/Coa6Usq7Zq/PECVa9kHmW6kkStF
1/xk/g1QMm7mC+muNHKL1/652N5Bas+2d1HDATTCE3GZJvBhkGqYTThCP0Ij
T58u2ilk/YnqYJdiusfSSAd7iY1p3Sfqm24ox6V0GmFY7jm8yOAzldP/MM6w
AK+Tqb5tOZ+pAL3ppR5lNFLt2n71ocAXKl9wQbO9lkaeFa5O7478QjHu6R44
+oZGhG7Gdk8Pf6HCkvLvtr2jkQZuqur81iGqOfpDXu0AjTTf/9up82qIWm/4
tCR2nEacj24fiF/+lTLQ5Q22/0Uj8haLJrxufqWe9yX732Ojk3xl5Yww2WHK
/GdFtCs/ndCWv+EoixmmOu/33TIQo5OmC788N/8cptbtObCcW45OSrKOyPD5
jFBbOjyjZVTp5FjIupqTbSPUE7bNX57Q6ET2o76m/tpR6trxWGkBXTp5sD2Z
81D5KCX+NkmT14hOTC8bfv6oNUZ9iU2cy1tOJ6HdkSGTaWPUE+lNTt9X4nUb
TmcLjnGq6u/QWKM5nfTo5Fr2HRqnFuzTJlst8P5LZVK+Q+PUYuFHhaE2dFLQ
NONQ6fSNYn/wSHBoE534cDX9663/RvmG72Szc6STPfaTOibG36mSgM93drjQ
yf46K5pGzndq0xLtD6ZudKIZ8ESmh3uCcspnb9L3pJPIU9GzAmYT1K9aJxlB
HzpZa+VMbh6coMJKD4nw7qYT5V8lHbFFE1R3BNC699DJ7h36nCc+T1C8mkJ2
H4PoxHb3X1122R9UpcbBP64H6eSmQszNxxt/UAxRfacloXSiGmsr73LmB8Vv
SZOWi6CTCt6AkrDaHxSR2Lhv8CidPN5Snxb+8wdVyuUYWBRDJyvLLy9erj9J
vVPVn0k6TScnnyjaFfpNUiWto/QDZ+nEsjt7m3rWJJWcsJtTJIFORO42951s
maSy5ZQ7XybTibPKosjDglOU0hubpaUX6CQ53WnOYe0UdeyWBSMtk046B7x1
Ph2ZoiTh7JUdOXRyK+X33XtlU9R5z4/O2nl0MvJKiBSNTFFRucnHPl2jE7ev
bIcT1KepDcMnbG/exO/nbH16wWWaChJt9dtWgu9zNrylNWmauivxqk++FN/H
zf7a4/ppatBYwrr2HsZP2OXpxr/TFBfblw2rHtCJ4eu56hvLZ6g7Jw+ulH1E
J/PWWbTIgBnKRM/jt08tnZxIaKkoujJDfXebd/pcRyfrrl5YLdo9Qx31n6pJ
fk4njvt2afGJ/6S2Bl04L/YKn3eq7zTD+ieV7vfVtfgtxq+IxC7BmJ/U0qQ6
VZ1mOvlsHlfg/PAnFb1gUHKpjU5is0/oNk//pOqzg1cvfY/7IVytNZH+i1Iz
2Nq7qZtO4lb6c/xx/0UJD3MvutVHJ8YrNkcOXfxFhSUOFigM0Mn6Z/nefY2/
KOaoQtSBz3TS3rLsaSvPLGX4qn1x+Vc6efs4Us+bmqXEuV1X8I3Ryd+ML3Xj
IbPUi+GMaePvuF68ty5a356lrkd/TTk1ifGVxHbUfGiWUtvtK1c1Qye7Vlgb
OyvNUfZqtiJvZ+mkrp1d9LDjHBXxQl995g+dFD77cd7w3BzFvGdXw/6PThp2
GF6ufjpHBcUbmalyMIjDRfMO/oU5SjxTchS4GaSGn7XxmeFvSmrFZil5PgaR
dq1uk9v9myps++7KLsggXs6Lbpbl/6aynguuoIswyFID9/Qf3b+p3TNH5/nE
GKTOu9DDQfwPlRtlFtYhwSBa2cnV3zf8oVTNfZ4XSjOIyK61TxkxfyjuGUOZ
ODkG8e/lKf/w8A/1j42N20aRQcZ950v/TfyhlOaf0CeUGWSmLE/mH2OeUku9
HXlFjUFaxl4PhvvMU6pm4UujNBlk9jbvt0sX5qnMs+6L62kMEvkwqONC0zw1
pbGXaz+TQUrb47qFef9SmzP7Pn7WZpD0NvnUcPhLie6svLRfj0H2rHm2/OiB
v5S3tU5noQGDON4tucMq/kt1nqBbyBoxSOFJS7OEj3+pvNkVV22MGaT4lMjr
OwoLlGzex87qZQzyoKHW7af1ApXy5CN3mQmDvHW06+CMXqBS96zY0rSCQVaZ
hnwue7RAdU2nRmmtYpAM3F5c3xaocL3wSH5gkGbRtW+66f8ov2zzw0vNGWQ+
cLrDx+0fVTNwr0V/LYO0r66sT7/wj8oQ+i6yej2DvNq8/n7lm3/Ux8Umn7Qt
cf4eHUyR5WKDlcLj0mZWDHLcn7HNXZkNsq/X7OK2YZCXp0d+iSxnA6pkxPCR
LYPcZHU6OTuygSD77JmCjQwyNhaSNRbEBj3ffw/42zNIfG526IHzbPDxsVmA
8RYGseWmRctcZ4Ojm87lvXRgkJxzF27EPGaDdu2kVC8nBqEFP5ab72WD9zlO
9eLODDLiIvrqzywbqHC8a853YZAuiZfzltLsUP5PtnHTdowfh51bZnXZgWQl
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
jjbZup5gQuy5DP8KtGj7/IwYJqjKnaEeRd93f1cx/zSmR9fL3AI9ahRWbRPH
hG9nPlbKob/k9cV/jGfCn4my6icy+kLzQPaZ7xeZsO5Lnus59Kd95VSzFCbo
PMqUdED/fZ/yZSzfxq6xuWh6ZbqO3VUmMMXzqlqkcfyfWbB0KJMJRXGvnp1H
d5pdTHe6yYS3v/fN2yD9b39JDsbrkUALZbQ0X3KZXT4T9oy+8W2VwnjtVUiu
LWKCbYvMnwvodK30Rs0SJlSdDzFyREd9GhYru8uEZVtmr1JFG/4OvMZ5wAQx
zyPrXkni/JRc8yW3kglN6lNOSejOqRqZudVMKL/ODnKS/Hf//jET4liO8mqS
//b/P2PCndR1O9pn4PjS7vnd/AYmKItJpiWhDVet2Sr2kgmuhk36LmjFg/Qs
fisTTLJvSuqi00QDntdMuOjx9tobCX2hjGhDTxcTTj/Yu/IaepWP+TOHN0zw
cNmYugudsfVU4YdeLG+fmp0EtIH6pa9rB5ggMH0q/VFcX/izir3+/kcmDFNi
/stGf9DvdPYcYcKO8zcf7kS7mOd3NH1hAsPvt9Uy9IaDXvQNY0yQkdBQ+Tgd
x+/aummV40w4suRDVDY6eoqTbjKJx/92M26P6Hlkoc6DI9NYwN13dy8JbeM7
KP5YnAXR88+v/S6G7aGsa9puKRbU5uS9KUDfeO0d5iPLgjk75jw8hDZrUbP+
JM8CxXGPUY7Yv/sNs1ngvS1Sc2Ia5leGoWqNEh4/eyz/PnqYO5pioMICozjJ
8BA0tuYKKeoseD92ocoYHd73vHjGAhacrSx2EUdL+GnZbdVhwUKHdKnqKYIw
/stmmU49FvhGpBpHoHE0do1FwPORGx9Zoj3UbA2rl7Ng3x6711LoTfNtJlYT
WfBu3bbJ6j8EoWg54j6FBQqHT284IXpefW5JIIPBAoIp86Ul2ot14e1NNgtC
Q6byZdBhvZdWqPJZQFN48eHJJEH4RSy0/j9jFjDu8hWi0aLtnovNWLA+IfuD
Fdo5dMAq0ZIFOUfKamTRoee8ehRsWCDX53jo6QRB6Eoa3HzIngWePv2NMWjb
tBNmcmtZsF8mIHYlukBRc7rFBhaUnXztq4hePd765ckmFmQ5yas1/CYIcTQn
a+3MAo2a3ypn0H/b161YPteTVFaj4w4EsR3cWUBkOIrPQlc8uWJ2x5MF9IyH
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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, -12.},
  PlotLabel->FormBox[
   "\"Last energy=          -11\\n2.76798 10\"", TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.491557981002125*^9, 3.491558256970875*^9, 3.491558403439625*^9, 
   3.491558593658375*^9, 3.49156089208025*^9, 3.491574926752125*^9, 
   3.491578288845875*^9, 3.49158217008025*^9, 3.491582625908375*^9, 
   3.491582802533375*^9, 3.491582971924*^9, 3.491583629252125*^9, 
   3.491587220720875*^9, {3.491587477783375*^9, 3.491587485439625*^9}, {
   3.491630925924*^9, 3.491630938049*^9}, 3.49163664726775*^9, 
   3.49163738414275*^9, 3.491640276424*^9, 3.491641809002125*^9, 
   3.491643639799*^9, 3.49164541858025*^9, 3.491645727095875*^9, 
   3.491647136439625*^9, 3.4916474126115*^9, 3.491647891345875*^9, 
   3.49164888439275*^9, 3.49164902870525*^9, {3.491703227345875*^9, 
   3.49170325708025*^9}, {3.49170428958025*^9, 3.49170429351775*^9}, 
   3.491704408814625*^9, 3.49170455433025*^9, 3.4917067772365*^9, {
   3.491708987127125*^9, 3.4917089998615*^9}, 3.491709126720875*^9, 
   3.4917107721115*^9, {3.491713562283375*^9, 3.491713586924*^9}, 
   3.4917137538615*^9, {3.4917141667365*^9, 3.4917141774865*^9}, {
   3.491714233220875*^9, 3.491714240924*^9}, {3.491714352814625*^9, 
   3.491714392533375*^9}, {3.491901633252125*^9, 3.49190163676775*^9}, 
   3.491908594127125*^9, 3.49197686345525*^9, 3.49201997833025*^9, 
   3.492135640424*^9, 3.49213706195525*^9, 3.49213922345525*^9, 
   3.492139543549*^9, 3.492143236549*^9, 3.49214412664275*^9, 
   3.492328646674*^9, {3.492442313924*^9, 3.492442439408375*^9}, {
   3.492442647064625*^9, 3.49244268889275*^9}, 3.4938711944375*^9, {
   3.4938751820625*^9, 3.493875189828125*^9}, 3.493886101484375*^9, 
   3.49389215025*^9, 3.493939422859375*^9, 3.49394038228125*^9, 
   3.49394127225*^9, 3.493941999109375*^9, 3.496994288051375*^9, 
   3.497068171332625*^9, {3.49717126253575*^9, 3.49717126666075*^9}, 
   3.497254708442*^9, 3.497254933863875*^9, 3.497256723442*^9, 
   3.497256773488875*^9, 3.497257419051375*^9, 3.497257735926375*^9, 
   3.49751998254802*^9, {3.497520276880786*^9, 3.4975203477224746`*^9}, 
   3.4975237129291844`*^9, 3.497525293565809*^9, {3.4975433598990765`*^9, 
   3.4975433798784633`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"HarmClearance", "[", "l_", "]"}], ":=", 
  RowBox[{"Divide", "@@", 
   RowBox[{"Take", "[", 
    RowBox[{
     RowBox[{"Sort", "[", 
      RowBox[{"Take", "[", 
       RowBox[{
        RowBox[{"Abs", "@", 
         RowBox[{"Fourier", "@", "l"}]}], ",", 
        RowBox[{"Ceiling", "[", 
         RowBox[{
          RowBox[{"Length", "[", "l", "]"}], "/", "2"}], "]"}]}], "]"}], 
      "]"}], ",", 
     RowBox[{"-", "2"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.417190497507*^9, 3.417190593575*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"out", "=."}], ";", 
  RowBox[{"ReadBinarySnapFiles", "[", 
   RowBox[{
   "\"\<ponom_\>\"", ",", "\"\<_02282.snp\>\"", ",", "6", ",", "out", ",", 
    RowBox[{"PrintInfo", "\[Rule]", "None"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"coor", ",", "bounds", ",", "node"}], "}"}], "=", 
   RowBox[{"ReadAuxFiles", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<coord\>\"", ",", "\"\<node\>\""}], "}"}], ",", 
     RowBox[{"ShiftVector", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"ProcDistrib", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "2"}], "}"}]}], ",", 
     RowBox[{"NumberOfRefs", "\[Rule]", "4"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Bx", ",", "By", ",", "Bz"}], "}"}], "=", 
   RowBox[{"rotc", "[", 
    RowBox[{
     RowBox[{"Sequence", "@@", 
      RowBox[{"Take", "[", 
       RowBox[{"out", ",", 
        RowBox[{"-", "3"}]}], "]"}]}], ",", "3"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"PrintRange", "[", 
  RowBox[{"WithoutFict", "@", 
   RowBox[{"Bx", "\[LeftDoubleBracket]", 
    RowBox[{"10", ",", "All", ",", "25"}], "\[RightDoubleBracket]"}]}], 
  "]"}], "\n", 
 RowBox[{"PrintRange", "[", 
  RowBox[{"Take", "[", 
   RowBox[{
    RowBox[{"Abs", "@", 
     RowBox[{"Fourier", "@", 
      RowBox[{"WithoutFict", "@", 
       RowBox[{"Bx", "\[LeftDoubleBracket]", 
        RowBox[{"15", ",", "All", ",", "15"}], 
        "\[RightDoubleBracket]"}]}]}]}], ",", "14"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"-", "10"}], 
  RowBox[{"Log", "[", 
   RowBox[{"10", ",", 
    RowBox[{"HarmClearance", "[", 
     RowBox[{"WithoutFict", "@", 
      RowBox[{"Bx", "\[LeftDoubleBracket]", 
       RowBox[{"13", ",", "All", ",", "8"}], "\[RightDoubleBracket]"}]}], 
     "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.4168932787530003`*^9, 3.416893310177*^9}, {
   3.416893356575*^9, 3.4168933580299997`*^9}, {3.4168934265769997`*^9, 
   3.416893427936*^9}, {3.4168934610950003`*^9, 3.41689346249*^9}, {
   3.416893510848*^9, 3.416893512126*^9}, {3.416893600233*^9, 
   3.416893600987*^9}, {3.416897350363*^9, 3.416897351219*^9}, {
   3.416897396752*^9, 3.416897397564*^9}, {3.416897435906*^9, 
   3.41689743708*^9}, {3.416897557703*^9, 3.4168975610150003`*^9}, {
   3.416897607668*^9, 3.41689760994*^9}, {3.416897662266*^9, 
   3.416897662995*^9}, {3.416897713324*^9, 3.416897713815*^9}, {
   3.41689775876*^9, 3.416897759484*^9}, {3.416901316703*^9, 
   3.416901321855*^9}, {3.4169014916809998`*^9, 3.416901492336*^9}, {
   3.416901539367*^9, 3.416901541093*^9}, {3.416901581928*^9, 
   3.416901582817*^9}, {3.416902389617*^9, 3.416902389908*^9}, {
   3.4169025082860003`*^9, 3.416902509112*^9}, {3.416902667987*^9, 
   3.416902668585*^9}, {3.416902712559*^9, 3.416902713183*^9}, {
   3.416902838322*^9, 3.416902842392*^9}, {3.416902963605*^9, 
   3.4169029670699997`*^9}, {3.416903028328*^9, 3.416903030435*^9}, {
   3.416903128244*^9, 3.4169031288*^9}, {3.416903914105*^9, 
   3.416903921351*^9}, {3.416905052824*^9, 3.416905053308*^9}, {
   3.416905089525*^9, 3.4169050904820004`*^9}, {3.416905129442*^9, 
   3.416905130362*^9}, {3.417166387795*^9, 3.4171663969370003`*^9}, {
   3.417166493425*^9, 3.41716652281*^9}, {3.417166788781*^9, 
   3.417166789659*^9}, {3.417166825875*^9, 3.417166855376*^9}, {
   3.4171668894040003`*^9, 3.4171668952390003`*^9}, {3.41716694633*^9, 
   3.417166946962*^9}, {3.417167172865*^9, 3.41716717404*^9}, {
   3.417167214685*^9, 3.417167215458*^9}, {3.41716727838*^9, 
   3.417167279734*^9}, {3.417170118645*^9, 3.417170129892*^9}, {
   3.4171886939960003`*^9, 3.417188723474*^9}, {3.417188804421*^9, 
   3.4171888057469997`*^9}, {3.417189065896*^9, 3.4171890742460003`*^9}, {
   3.417190281043*^9, 3.4171902818269997`*^9}, {3.417190334684*^9, 
   3.417190335263*^9}, {3.4171903755150003`*^9, 3.417190376876*^9}, {
   3.417190436633*^9, 3.417190437014*^9}, {3.417190469052*^9, 
   3.417190469894*^9}, {3.4171909766289997`*^9, 3.4171909973269997`*^9}, {
   3.417191039057*^9, 3.41719104626*^9}, {3.417191147573*^9, 
   3.417191183683*^9}, {3.417191243648*^9, 3.417191249326*^9}, {
   3.417191340057*^9, 3.417191347793*^9}, {3.417191414394*^9, 
   3.417191416282*^9}, 3.4171914527720003`*^9, 3.417191609432*^9, 
   3.41719167385*^9, {3.4171927305620003`*^9, 3.417192744565*^9}, {
   3.417194019288*^9, 3.417194020585*^9}, {3.417194080276*^9, 
   3.417194082685*^9}, {3.417194144224*^9, 3.417194145652*^9}, {
   3.417194224387*^9, 3.417194225068*^9}, {3.4171942943929996`*^9, 
   3.417194295899*^9}, {3.41719439088*^9, 3.417194402822*^9}, {
   3.417194576637*^9, 3.417194629508*^9}, {3.417194714175*^9, 
   3.417194715257*^9}, {3.4171947594449997`*^9, 3.417194760074*^9}, {
   3.417238657159*^9, 3.417238658186*^9}, {3.417238791909*^9, 
   3.417238792645*^9}, {3.417241266648*^9, 3.4172412992650003`*^9}, {
   3.417241404859*^9, 3.417241420243*^9}, {3.417241455935*^9, 
   3.417241476969*^9}, {3.417241513532*^9, 3.417241514553*^9}, {
   3.417241549896*^9, 3.417241580917*^9}, {3.41724316705*^9, 
   3.417243187179*^9}, {3.417243500422*^9, 3.417243501171*^9}, {
   3.417243565709*^9, 3.4172435667939997`*^9}, {3.417246165874*^9, 
   3.4172461668929996`*^9}, {3.417400684486*^9, 3.417400695677*^9}, {
   3.41740132946*^9, 3.4174013311730003`*^9}, {3.417401367907*^9, 
   3.4174013704440002`*^9}, {3.417408632582*^9, 3.417408633585*^9}, {
   3.417408996074*^9, 3.4174089965950003`*^9}, {3.417409084583*^9, 
   3.417409085342*^9}, {3.417409237842*^9, 3.417409238301*^9}, {
   3.417409599842*^9, 3.4174096003*^9}, {3.4174122300039997`*^9, 
   3.417412239084*^9}, {3.4174122747320004`*^9, 3.417412276196*^9}, {
   3.417412406837*^9, 3.4174124073570004`*^9}, {3.417412475276*^9, 
   3.417412475675*^9}, {3.417412844256*^9, 3.417412845104*^9}, {
   3.417412885106*^9, 3.417412886146*^9}, {3.417412933258*^9, 
   3.417412933925*^9}, {3.417413002016*^9, 3.417413002875*^9}, {
   3.4174131475039997`*^9, 3.417413148609*^9}, {3.417413346546*^9, 
   3.417413347329*^9}, {3.417413424057*^9, 3.417413426501*^9}, {
   3.417413467961*^9, 3.417413468685*^9}, {3.417495831075*^9, 
   3.417495870111*^9}, {3.417496145585*^9, 3.417496146398*^9}, {
   3.417496462142*^9, 3.417496470675*^9}, {3.4174965301730003`*^9, 
   3.4174965308970003`*^9}, {3.417496808558*^9, 3.417496809262*^9}, {
   3.417496975342*^9, 3.417496975784*^9}, {3.4181168474738736`*^9, 
   3.418116847854912*^9}, {3.4181204414072313`*^9, 3.418120442671357*^9}, {
   3.4181205128323727`*^9, 3.418120513813471*^9}, {3.418312104799*^9, 
   3.418312105984*^9}, {3.4183121394849997`*^9, 3.4183122199639997`*^9}, {
   3.418313644446*^9, 3.41831364502*^9}, {3.418314010401*^9, 
   3.418314010948*^9}, {3.418314043467*^9, 3.418314043773*^9}, {
   3.418314166567*^9, 3.4183141677469997`*^9}, {3.4183144146400003`*^9, 
   3.418314432605*^9}, {3.418314566177*^9, 3.418314566336*^9}, {
   3.418314873432*^9, 3.4183148894379997`*^9}, {3.418317629112*^9, 
   3.418317636609*^9}, {3.41831767238*^9, 3.4183176747209997`*^9}, 
   3.418317761332*^9, {3.4183177921879997`*^9, 3.418317793574*^9}, {
   3.418317981429*^9, 3.418317982256*^9}, {3.418320860885*^9, 
   3.418320877211*^9}, {3.418321170204*^9, 3.418321171558*^9}, {
   3.418360710135*^9, 3.418360711539*^9}, {3.418360904198*^9, 
   3.418360904832*^9}, {3.4183612356800003`*^9, 3.418361236967*^9}, {
   3.418371412498*^9, 3.4183714140769997`*^9}, {3.418371493172*^9, 
   3.41837149349*^9}, {3.418371854012*^9, 3.4183718543059998`*^9}, {
   3.4183721141070004`*^9, 3.418372114852*^9}, {3.41837234535*^9, 
   3.418372346135*^9}, {3.418376956*^9, 3.41837696074*^9}, {3.418377056781*^9,
    3.418377057248*^9}, {3.418443754201*^9, 3.418443755117*^9}, {
   3.418443925513*^9, 3.418443926304*^9}, {3.418444034332*^9, 
   3.418444034892*^9}, {3.418444103564*^9, 3.4184441045299997`*^9}, {
   3.418446288101*^9, 3.418446294979*^9}, {3.4184463902860003`*^9, 
   3.418446391821*^9}, {3.418448238492*^9, 3.418448239226*^9}, {
   3.418448321111*^9, 3.41844832212*^9}, {3.418448710557*^9, 
   3.418448711024*^9}, {3.418449035873*^9, 3.4184490378789997`*^9}, {
   3.418449423385*^9, 3.418449424766*^9}, {3.418449503663*^9, 
   3.4184495043900003`*^9}, {3.418450144701*^9, 3.41845014517*^9}, {
   3.418535000133563*^9, 3.4185350003075633`*^9}, {3.418535085191563*^9, 
   3.4185350933915634`*^9}, {3.4185351999655633`*^9, 3.418535200633563*^9}, {
   3.4185353705805635`*^9, 3.418535371491563*^9}, {3.418535426968563*^9, 
   3.418535427823563*^9}, {3.418535537585563*^9, 3.418535538244563*^9}, {
   3.4185402353255634`*^9, 3.4185402417225633`*^9}, {3.418540508008563*^9, 
   3.418540509197563*^9}, {3.453572071035*^9, 3.4535720821029997`*^9}, {
   3.4535770746542*^9, 3.4535770787882*^9}, {3.4536108440810003`*^9, 
   3.4536108448766003`*^9}, {3.4536119204498*^9, 3.4536119310109997`*^9}, {
   3.453622552828125*^9, 3.453622553640625*^9}, {3.453623604578125*^9, 
   3.45362360540625*^9}}],

Cell[BoxData["5.615041136967227`"], "Output",
 CellChangeTimes->{3.45357211801*^9, 3.4535757949706*^9, 3.4535771086778*^9, 
  3.4536108744230003`*^9, 3.45362255865625*^9, 3.453622745546875*^9, 
  3.453623610109375*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EstimateBoundary", "/@", 
  RowBox[{"{", 
   RowBox[{"Bx", ",", "By", ",", "Bz"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.4183126759849997`*^9, 3.418312693566*^9}, {
  3.418312840145*^9, 3.418312852071*^9}, {3.418313497415*^9, 
  3.4183135033640003`*^9}, {3.4183135400220003`*^9, 3.418313551764*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "63.41286514327`", ",", "410.987197064277`", ",", "127.97320261669266`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.418444119821*^9, 3.4184463192320004`*^9, 
  3.418448262289*^9, 3.4184488418459997`*^9, 3.4184490708929996`*^9, 
  3.418449471528*^9, 3.4184495272460003`*^9, 3.4184509208570004`*^9, 
  3.418535128875563*^9, 3.418535228982563*^9, 3.4185353967005634`*^9, 
  3.4185354560565634`*^9, 3.418535563048563*^9, 3.418540532866563*^9, 
  3.4535728690030003`*^9, 3.453577109099*^9, 3.4536108749533997`*^9, 
  3.4591472995*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"MapThread", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"PrintRange", "[", 
     RowBox[{"#1", ",", "All", ",", 
      RowBox[{"PlotLabel", "\[Rule]", "#2"}]}], "]"}], "&"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"mqvx", ",", "mqvy", ",", "mqvz", ",", "mqp"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Mean quadratic of vr\>\"", ",", 
       "\"\<Mean quadratic of v\[Phi]\>\"", ",", 
       "\"\<Mean quadratic of vz\>\"", ",", "\"\<Mean quadratic of p\>\""}], 
      "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.3958218286099997`*^9}],

Cell[BoxData[
 RowBox[{"grs", "=", 
  RowBox[{"MapThread", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"PrintRange", "[", 
      RowBox[{"#1", ",", "All", ",", 
       RowBox[{"PlotLabel", "\[Rule]", "#2"}]}], "]"}], "&"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{"Function", "[", 
           RowBox[{"l", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
              "l", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              ",", 
              FractionBox[
               RowBox[{"Log", "[", 
                RowBox[{
                "l", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                "]"}], "2"]}], "}"}]}], "]"}], ",", "#"}], "]"}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{"mqAx", ",", "mqAy", ",", "mqAz"}], "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Mean quadratic of Ar\>\"", ",", 
        "\"\<Mean quadratic of A\[Phi]\>\"", ",", 
        "\"\<Mean quadratic of Az\>\""}], "}"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{3.395821832632*^9}],

Cell[BoxData[
 RowBox[{"MapThread", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"PrintRange", "[", 
     RowBox[{"#1", ",", "All", ",", 
      RowBox[{"PlotLabel", "\[Rule]", "#2"}]}], "]"}], "&"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{"Function", "[", 
          RowBox[{"l", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
             "l", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
             FractionBox[
              RowBox[{"Log", "[", 
               RowBox[{"Abs", "[", 
                RowBox[{
                "l", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                "]"}], "]"}], "2"]}], "}"}]}], "]"}], ",", "#"}], "]"}], 
       "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{"mdAx", ",", "mdAy", ",", "mdAz"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Difference of Ar\>\"", ",", "\"\<Difference of A\[Phi]\>\"", ",", 
       "\"\<Difference of Az\>\""}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.3958218366619997`*^9, {3.417403800567*^9, 3.417403802439*^9}}],

Cell[BoxData[
 RowBox[{"grs", "=", 
  RowBox[{"MapThread", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"PrintRange", "[", 
      RowBox[{"#1", ",", 
       RowBox[{"Automatic", "+", 
        RowBox[{"0", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "#2"}]}], "]"}], "&"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"dif", "[", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{"Function", "[", 
            RowBox[{"l", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
               "l", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               ",", 
               FractionBox[
                RowBox[{"Log", "[", 
                 RowBox[{
                 "l", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                 "]"}], "2"]}], "}"}]}], "]"}], ",", "#"}], "]"}], "]"}], 
        "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{"mqBx", ",", "mqBy", ",", "mqBz"}], "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Mean quadratic of Br\>\"", ",", 
        "\"\<Mean quadratic of B\[Phi]\>\"", ",", 
        "\"\<Mean quadratic of Bz\>\""}], "}"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.395821840993*^9, {3.4546720825625*^9, 3.454672094203125*^9}, {
   3.4897740622103176`*^9, 3.4897740651634426`*^9}, {3.489972097703125*^9, 
   3.48997209784375*^9}, {3.489997808390625*^9, 3.489997810921875*^9}, {
   3.4899986531875*^9, 3.489998656125*^9}, {3.490941821140625*^9, 
   3.490941831296875*^9}, 3.490944912265625*^9, {3.490954479234375*^9, 
   3.49095448134375*^9}, {3.4911109845*^9, 3.491110987421875*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PrintRange", "[", 
  RowBox[{
   RowBox[{"dif", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        FractionBox[
         RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
         "3"], ",", 
        FractionBox[
         RowBox[{"Log", "[", 
          RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
           "]"}], "2"]}], "}"}], "&"}], "/@", 
     RowBox[{"(", 
      RowBox[{"mqBx", "+", "mqBy", "+", "mqBz"}], ")"}]}], "]"}], ",", 
   RowBox[{"Automatic", "+", 
    RowBox[{"0", " ", "0.2", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{3.493871418359375*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJw12nk8VF/4OPBsUaQo+zYLM2bGIEmJ9EiLNkpSSitRioiSElpIUaFPWbJF
KaGUJXMHj7G3ICpEobRZQlpUot/p9/1+/+H1fj13zn3Oc5Z7LkPfdcBht/ik
SZNE5Me/38d2BDb2S6jAq7BOx9era7FNmBinLaMCW8WPz9RfVotr9m766Kek
ApWvh1WMZ9eig4TKoVGGCqw8lar0WKMWv0tZrS02VoH8SZP3HJSqxfLvKsbz
rFTgt8Luw0NDNahhFuqVv0oFiiVrnk5vr8EOC2easbMKKJpPv3Kkqgbrgy+5
FLirwO1+zm3fOzV49OCtBYv8VeB4d1bs/fgaHPqTLjl+QgVeHxG9fHmyBkts
wH/0ogowopYdO7a/Bg8vm/SqKUkFHj+qW5m9sQZjM27ElWapwF5I5VXa1KDM
h09fjj1QgZkuys8e8Wsw7+2ve4NVKnAiPD7SWK0GWeulMmKbVeDNzjfeXyRq
MKu12Xa4SwUOpZvvw6FqZNEHDrh9VgHx/T8mhXRUo8XHrdlff6uA9Iyrc51r
q/GglJ7yYhlV8C/fpnElvxoPZX+8PqqkCiNet3K/p1ajUX2Z5R2mKmyfodao
G1WN/lr2Pk6zVSGCf/U6P7Aaled5z160SBUurfZ+PNW9GoWLTo30rFYF258F
WXrrq3HwHHfass2qcP/L/sl21tWoGLO2V3mPKsQuozXtMqpGA7+sSQ2HVOFs
nHqolVY1qqb/cjA8pQrTHSYs78pV40oP5Y2rolUhUC1x7sRYFfJKzTR4yarw
QfL0Te5AFQbvXhlddFsVgvNqb7/pqEKD9zVWisWqEP9CsU76SRWGXktfqlCt
CjmKvvObSqrwDaUq2NqsCuOSH6buz63Cb4oy3bLdqrBC+dJ5zZQq9Lk4lBTw
WRVe9+1xkr1I2msPSMv6rQpdI7GGVaFVmN3a428rowa9pmzbVt8qfNimvkVN
WQ2y+OLqNq5V2OdXqDTGVIOCyryoakeS7/NF/OzZavCjrEPp2LIq9CyypKkv
UgOVQ9MqZ5hXYXtPmP+R1Wpg1RPwbg2vCl0yjBo4m9Xg1PDClWbaVWguvjVt
hYca0N3VNjIUqnBdbuOHk/5q4Drk2usnWYUtETs0XU6qgYG1G1N3tBINjXaH
1V5UA8+r33Wovkoc8JBrsEhWgyLPyl3TOitxm87H5dOy1YDycldf31SJv3Kj
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
tlx8Rf/8pMuL/h9w+9tB
     "]], LineBox[CompressedData["
1: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
eLQSRKf5////1/wfHqTlnA==
     "]], LineBox[CompressedData["
1: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

     "]], LineBox[CompressedData["
1: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
yPv+WMQtLmO//+/f/wCQiIZ5
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0., 59.9998645}, {-0.18203322071080563`, 0.02050991592619965}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.493871418828125*^9, 3.493875192984375*^9, 3.49388610828125*^9, 
   3.493892277015625*^9, 3.493939426921875*^9, 3.493940387359375*^9, 
   3.49394127284375*^9, 3.493942003015625*^9, 3.49699429409825*^9, 
   3.497068174770125*^9, 3.4971712696295*^9, 3.497254710707625*^9, 
   3.497256785738875*^9, 3.49725742278575*^9, 3.497257737926375*^9, 
   3.4975199851567435`*^9, {3.4975202792395725`*^9, 3.4975203520651407`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"PrintRange", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        FractionBox["10", "0.5"]}], ",", 
       RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
      "}"}], "&"}], "/@", 
    RowBox[{"dif", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         FractionBox[
          RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
           "3"], ",", 
         FractionBox[
          RowBox[{"Log", "[", 
           RowBox[{
           "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "]"}],
           "2"]}], "}"}], "&"}], "/@", 
      RowBox[{"(", 
       RowBox[{"mqBx", "+", "mqBy", "+", "mqBz"}], ")"}]}], "]"}]}], ",", 
   RowBox[{
    RowBox[{"0", "Automatic"}], "+", "0", "+", 
    RowBox[{"0.1", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4909518185*^9, 3.4909518575625*^9}, {3.491124988375*^9, 
   3.4911250309375*^9}, 3.491125749140625*^9, {3.491199483127125*^9, 
   3.4911994843615*^9}, {3.491201054799*^9, 3.49120105501775*^9}, 
   3.49120254008025*^9, 3.49120514670525*^9, {3.491206857220875*^9, 
   3.4912068662365*^9}, {3.491557991502125*^9, 3.49155803539275*^9}, {
   3.491558451439625*^9, 3.491558456814625*^9}, {3.4917045721115*^9, 
   3.491704575502125*^9}, 3.49171365370525*^9, {3.491714183845875*^9, 
   3.49171418545525*^9}, {3.492139406752125*^9, 3.492139413564625*^9}, {
   3.492143242189625*^9, 3.4921432451115*^9}, {3.49387125253125*^9, 
   3.493871261640625*^9}, {3.493871521953125*^9, 3.493871540015625*^9}, {
   3.493874442578125*^9, 3.493874451421875*^9}, 3.4938744973125*^9, 
   3.493874583578125*^9, 3.4938752008125*^9, 3.493875278390625*^9, 
   3.493875345359375*^9, {3.49389249371875*^9, 3.493892505625*^9}, 
   3.493911505875*^9, {3.493911787609375*^9, 3.493911789609375*^9}, {
   3.49391197540625*^9, 3.49391197821875*^9}, 3.49393916390625*^9, {
   3.49394007978125*^9, 3.493940084765625*^9}, {3.493940325046875*^9, 
   3.493940327765625*^9}, {3.49394039446875*^9, 3.49394039475*^9}, {
   3.493940468578125*^9, 3.493940469109375*^9}, {3.493942007375*^9, 
   3.493942012078125*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Interpolation", "[", 
   RowBox[{
    RowBox[{"Reverse", "/@", 
     RowBox[{"(", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"30", ",", "0.24"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"32", ",", "0.278"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"34", ",", "0.3072"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"36", ",", "0.334"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"38", ",", "0.358"}], "}"}]}], "}"}], ")"}]}], ",", 
    RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}], "[", "0", 
  "]"}]], "Input",
 CellChangeTimes->{{3.4915872629865*^9, 3.4915873999865*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"InterpolatingFunction", "::", "\<\"dmval\"\>"}], ":", 
  " ", "\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"Input value \\\\\\\"\\\", \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\!\\({0}\\), \\\"MT\\\"]\\)\
\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\" lies outside the range of data in \
the interpolating function. Extrapolation will be used.\\\\\\\"\\\", \\\"MT\\\
\"]\\) \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{{3.4915873628615*^9, 3.491587400314625*^9}, 
   3.4924426587365*^9}],

Cell[BoxData["17.36842105263159`"], "Output",
 CellChangeTimes->{{3.4915873628615*^9, 3.491587400314625*^9}, 
   3.492442658752125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["0.5", "10"], 
      RowBox[{"(", 
       RowBox[{"ToExpression", "[", "#", "]"}], ")"}]}], ",", "#"}], "}"}], 
   "&"}], "/@", 
  RowBox[{"cs", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "2"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.491560905908375*^9, 3.49156090776775*^9}, {
   3.4915611263615*^9, 3.49156112889275*^9}, 3.49156129226775*^9, {
   3.491576921752125*^9, 3.491576951720875*^9}, {3.491583639033375*^9, 
   3.491583639252125*^9}, 3.491587237877125*^9, 3.491636652049*^9, 
   3.491640281064625*^9, 3.49164181483025*^9, 3.491643644049*^9, 
   3.491649130939625*^9, 3.49170430839275*^9, 3.491709005939625*^9, 
   3.491709233502125*^9, {3.491713617814625*^9, 3.491713621689625*^9}, {
   3.49387122046875*^9, 3.49387122115625*^9}, {3.49387157171875*^9, 
   3.493871594484375*^9}, {3.49389248496875*^9, 3.493892485171875*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.`", ",", "\<\"20.0000\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.5`", ",", "\<\"30.0000\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.`", ",", "\<\"40.0000\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.5`", ",", "\<\"50.0000\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.`", ",", "\<\"60.0000\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.5`", ",", "\<\"70.0000\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.`", ",", "\<\"80.0000\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.5`", ",", "\<\"90.0000\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "\<\"100.0000\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.5`", ",", "\<\"110.0000\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.`", ",", "\<\"120.0000\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.5`", ",", "\<\"130.0000\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.`", ",", "\<\"140.0000\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.5`", ",", "\<\"150.0000\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8.`", ",", "\<\"160.0000\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8.5`", ",", "\<\"170.0000\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9.`", ",", "\<\"180.0000\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9.5`", ",", "\<\"190.0000\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10.`", ",", "\<\"200.0000\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10.5`", ",", "\<\"210.0000\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11.`", ",", "\<\"220.0000\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11.5`", ",", "\<\"230.0000\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12.`", ",", "\<\"240.0000\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12.5`", ",", "\<\"250.0000\"\>"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.491583639439625*^9, 3.4915872382365*^9, 3.491630971299*^9, 
   3.491636652252125*^9, {3.491640281924*^9, 3.49164029545525*^9}, 
   3.491641815002125*^9, 3.491643644189625*^9, 3.491649131439625*^9, 
   3.491704308939625*^9, 3.491709006283375*^9, 3.49170923364275*^9, {
   3.4917136182365*^9, 3.491713622049*^9}, 3.493871221421875*^9, {
   3.493871586859375*^9, 3.49387159478125*^9}, 3.49389248559375*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"grs", "=", 
  RowBox[{"MapThread", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"PrintRange", "[", 
      RowBox[{"#1", ",", "All", ",", 
       RowBox[{"PlotLabel", "\[Rule]", "#2"}]}], "]"}], "&"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{"Function", "[", 
           RowBox[{"l", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
              "l", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              ",", 
              RowBox[{"Log", "[", 
               RowBox[{"Abs", "[", 
                RowBox[{
                "l", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                "]"}], "]"}]}], "}"}]}], "]"}], ",", "#"}], "]"}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{"mAx", ",", "mAy", ",", "mAz"}], "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Maximum of Ar\>\"", ",", "\"\<Maximum of A\[Phi]\>\"", ",", 
        "\"\<Maximum of Az\>\""}], "}"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{3.395821842606*^9}],

Cell[BoxData[
 RowBox[{"PrintRange", "[", 
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{"mBy", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Last", "[", "#", "]"}], "\[NotEqual]", "0"}], "&"}]}], "]"}], 
   ",", "Automatic"}], "]"}]], "Input",
 CellChangeTimes->{{3.4880885764808965`*^9, 3.4880885853416986`*^9}, {
   3.488089322145445*^9, 3.4880893276522455`*^9}, {3.4880948917677517`*^9, 
   3.4880948948253517`*^9}, {3.4897700201165676`*^9, 
   3.4897700509603176`*^9}, {3.4897701094915676`*^9, 
   3.4897701270071926`*^9}, {3.4897706132415676`*^9, 
   3.4897706235071926`*^9}, {3.4897709353821926`*^9, 
   3.4897709486634426`*^9}, {3.4897713438978176`*^9, 
   3.4897713644446926`*^9}, {3.490943376890625*^9, 3.490943377125*^9}, 
   3.490943491578125*^9, {3.49094480525*^9, 3.49094480840625*^9}, 
   3.490950828140625*^9, {3.490958212390625*^9, 3.49095821584375*^9}, {
   3.49095853284375*^9, 3.490958535359375*^9}, {3.491132786252125*^9, 
   3.491132787564625*^9}, {3.491203890174*^9, 3.49120389089275*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"grs", "=", 
  RowBox[{"MapThread", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"PrintRange", "[", 
      RowBox[{"#1", ",", "All", ",", 
       RowBox[{"PlotLabel", "\[Rule]", "#2"}]}], "]"}], "&"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{"Function", "[", 
           RowBox[{"l", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
              "l", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              ",", 
              RowBox[{"Log", "[", 
               RowBox[{"E", ",", 
                RowBox[{"Abs", "[", 
                 RowBox[{
                 "l", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                 "]"}]}], "]"}]}], "}"}]}], "]"}], ",", "#"}], "]"}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{"mBx", ",", "mBy", ",", "mBz"}], "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Maximum of Br\>\"", ",", "\"\<Maximum of B\[Phi]\>\"", ",", 
        "\"\<Maximum of Bz\>\""}], "}"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.395821844674*^9, {3.395846857821*^9, 3.395846858201*^9}, 
   3.49387203103125*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwkmnc8lt//x2Xv7L3d13Xdw0wZSfcbIRpUisqIpEhJUlFEMlKUkhGlrAZK
maVxRFYiRRuVkTJCZPM7n9+3f3q8H9d9netc57zP6/V83Td1T//Nezg5ODhG
lnJw/Pf/wLSkRNRDgp2+/vGx4epVyP3y1Xe7cszZK29HDOxaZoie5l4MNJ53
ZB/hJJ9G7VuB2lf9SatQ9GJHzzT6nv20HHFP6fi6+R5i75nhyCSG9FEAF9vr
gXMwe8y4I6B2tR7Ko9PWa7SeZg/zBL1O2a2Das/FfWbtPsf+tqzDL/Q3HVGv
BY0vXrvMtrSoLr02TqAu5yVvn2dnsCuC3zxVyKahyKJuJ9f0HHZ15l1HNy4C
hTe29/OsLGRzxHip1S7S0b7sG4viEsVs5n0WdaSLRBdNh7cX9JexBSO1t4QH
kahQsmJ04e5jdsDWmod6H0gkOr2XdzTiGbtmPtzOoI9C28Ro+3uIKvaJ6wUZ
P4GJupeNZa3hqWbvs1q92FDGQhsGXmz6PV3DDgsXP+FAMFFXroxFaWct21Yx
6HfLXibakpiQfr+pnp11+6uFeC4LUe3WCR+KGtksl4RBPS49NGjGNE6/1MS+
dsXVdHe6FvKxL8oQO9nMzhFeLeJuy0JrPvM/CVn2hj3VfmtA/RYT7XSxdkui
t7KPV+zcd9COidhxHPVRCm/ZXJpbrqyTZ6Jf/JaJBULv2IoO7VLCPExULkXs
XMXRxg7Yj+zpuL5ilLLB+l8b+7BZ6yVDaSYyth+9wOhtZ5dqu67UM8Dz3S2/
YfzzezaK/Pz5rScT/VwQCq9//YFdle9v+zuXiS4WHDrLQh/ZffEBDW84WGhn
9FKnpOJPbCHWo5erQlioQllBJvveZ7bdvapWFU0t1H6yhTp67Qv72wbi5Qi3
NmrojuPbn/CVXUPP3vnYRwdtXhvv9ftsB7smGj52quujEStP1ZHTnWzjoM6S
IV49tO2ArsOfoC62vd210TQ+XRQizOUIBt/Y5dfbbGaGdVBbPG0xvegb+8VY
iqvWYV10x9+p/DLrOzt0dVlnpLce4hLeF1SS9Z2dcLXlJTN0ORLoOcCRKP+D
fbO7OFbzih7SfdUyfj/1B/udrdrdTD09dOW3YMu9pd1s0z0m1od89VDECQW+
hthutuCumQGOjcvR99rUiAHeHrYVbajmXqAuepdz0fRDaA97UbT52JVybTTc
PHuCY76HHVBlsVhyRgstr9RrVDjcy144mHL9/AMWsncRVD053MtW5UoqubXA
RL3mT/KG9/axu7/7Xd3sz0Sfm056TnX3sW0lH9YWjzOQ2CqLf0tdfrJfvZPi
+32BgYLuWtCet/9kw52YWE9jBmrLrNRib+lnN8Zo9//G54XbhO6R97qfPel1
d3z6Dh0da2zfmrX2F1vVZ5dHfQAdXZ84E/7hxS927tmQU4/M6ehgXYCBitlv
9m6ugsxdcnQ0ydpyuqT0N/v9m8rUbRMUGo3VPHxQf4ANj7UvRL+nkMRa+4eb
CgfY3ByBfHpPKMQXfKqkjzbI9mlTWTyaR6F/Qf0iOzIG2as0BNZ0X6ZQzbag
2U3yQ2z3cuFb6yMppLAxLd3/zBA7eMrQQvAYhR5/aathLQyxizSOqA75Uqj1
8I/sgpPDbPY4s3vOnUIXJ232b/w3zI55VF5xbxuFbH888WUd+8N2f2Dy+tkG
CnntEQpcO/CH3blstMfQmkJftdy0hPVH2NV/dV6+XE0hi0f1qTKHRthpyzde
/GNIIfO4kd7x/BH2+6muU266FArzf5c53z/CLnSTe7qbolCRCV/LGXKUHbv0
RvS0CoXW3TS73e4xyjZ/w736iAyFljZa1ZbcGGUXClzw+idMoZWmzzwfdoyy
H53y/GvPRaH9R+Q6zsmPsVvSeUyOTJMo/ufHvv07x9htoWutjYdJdD3MQZaR
NMYO/3ppcG0PiY5tsg9Z+XaMLalV9tLoE4lqVVZEhC79y2bZJPCxmkm0L5QY
eLXhLzv8wN/931+QSP5ORvqXs3/Z1zbrJPFUkKjXOTIjo/Yvu5eMc1QtJFGR
xyqTaa5x9nmz5u3mWfh5wSaDzyzH2f/sRpmMFBJd5modHjgxzjaKT3ydHE+i
+qqd74vLxtm6ATkdTZEkOukX8Td1cpxdMir0a20wifK8TARydSfYF903XDh6
iERbr/ixCnwn2McfTHkF7CXRQ+7dCbr5E+xcOTmXX64k8li2VY/5a4JtcCP/
ofRWEt3++MNLi/aPbQ/Vy+bXY329NK4a6/mPfX796GjNGjyfI/Tropn/2Itv
mhbVzfB44QJfH3/5x26+wP/73QoS2Ur+4bBXmGT3uXSfK9QhUajeSt/krZPs
7QurEtbSSVTHEjNjXJ5kb4nooolokCh1lGNX9JtJtsPpvks2SiTS+fTC7JvQ
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
fHUn51bxViaM9N4w8j2xB/XlF9OZOwg/CBpyXxmZYka61vmmWCYUMQLsuXxT
FBBz3rmXCeaz5rVJiDzx97cXpR8g/eeNGKe5nsRv6Xq+rMNM0KkRrm8k/slf
9QLv9iQm8Nwn0CoqTfG1QaNlVTJpL45INf1qiqhiwI47wYTajUq0uUQfP3DM
T5mVyQQFWqi1uZcZ5sgHEuinCX/dqFNJSzTD9T8TlT+dZQJrz0cjrRYzvJ7u
curOeSbclnVSdokn4DTvaP19F5mQNjCuQ+PsBCx3yrDaVMQElxcPvhfKzNGh
fPREeRkT2mrqf+wdbYEjcMNI1WsEf0fiDmxaMRHP2R57eQ2ZsCj8+tiXqUy8
ssN+VdcNwp/z/1nGiiZizKpkmfg2oefRl3/ejiX+aq++rlot4b9RK8RBPHPs
WE0UTj0T9J49ePHp5AQM71f/VPKIrN+89nDNxAmYsE1SvukZE6LXtVx8cY/E
7xF7cc5LJiwePioKo0h8cUi8nP6a8H/E/TcaJF6/ozgh7MsbJig5L5lY3G+K
VblR/WkfmJAf2Cg2uWmKJpkNlBufCf8Izp5lHzQd8ie+MaH8ZEyN4jJT7JnD
Zt3uYkKXq8Df384UL015vqHgBxOSDCNyLQl9O+4dbx/dz4T9rgpljX8Y+Lzo
WvOh3wSfdpY1ei0M9KPadi0aZgMqkgOGNtUMLJ3jsT1kuA0sLi3t+U70V7h7
tctLZRuwHEttObafgRq0/NRrY2xgxRTVxz1rGXgoyu39ZXUbqKvbJor2J/DI
kqKdmjbweZ9acKgTA0f0P78doWsD2anaO/Q5DMx4dvLGRwMbmOc+8Holg8iP
HaOx1NgGLhRvKjEcz8DbiVE6O+g2oLE8O1pBkYEyu7qDlhNsQLRJtS+mh463
FqZ4cixtwG7KieMH3tHRdPTkL38n20C4bYbH9md0LK5wWnrPxgaaLThp8+7R
cfO9VOu9XBuw1XO4K0I6th79FTlbaAP5+8N2NhbR8dBncaWF1Aaiambstsij
Y/birFezbW1Aor3u275M+pC/M5Xgx8c9PTSFjug7Pemwkw3Eb57bo3GEjvf3
fxo1w8UGrKZQHS/vp+PWwQDb3QacDr4efyOWjlMGL3A8bWBW/5kD12LoKF89
7E+Fjw0kg6JCdDQdlTrePVo0zwZSQisWDd9Ix5XXLVSMFxB8nolupG+gD8XP
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
Yqfxti/9Z+t/UkBea63HtphpnAlPm1dJgQqLXe2L8dM4T/D+7M9VFCj9mWij
lzGNz/LaZoX+poDy5QTVvMJpfHBti+udPxQQbZ27k9Q4jfNXTcncq6PAL9sI
K5elafzBNSxBsZ7g3zd08ZbiDN4c2XVQtpECDrutOUQPzeD3g18emftH2LuB
O+iT5wxeV7mreqiZAuZtZc8avszgy/vNrRSop0jaNxP0ZKZDKe0UGBlXdnxt
MosvrHqh/r6TAjqXU2y/p8/irWwVG052U2DuwZFTG7nncK/kujLDXgrs5PK5
fsZxDo+/s1fNuJ8CfLe5w9aMzOHaa69VKA9S4KSrJ/nqxXk8X7vEvX+IAt9i
Nvl8HJnHl+tRRyhQ+VrHCQtdwC/XftiQMUbw88rx2DSNRTxxNqTce4ICHm3u
nAadizgTDvjuFKG/q2r+q8hewgtPdDVtniHoae+1xRBjQQey+kWWZgn/nfL+
a1AGC9qwgbZxap4CEuKqRooYK1I87XE/aJHQtyeXs4XzWZEmkb47s1ABU881
AyvCfwdYCB5io0LetoyJeHHC/s78llPkoII5p/fTjjp2lGr2hTbISYXTEYNH
A3I40LL8c1OhQPXSu3M1nCjXWm59HS8VGura/lxX4UYazAJWfipsdzrjURzF
g5jwxXcFqVAneIGzx5sPOexgmLoJU0GNnNR43UgQ1YWy2qqKUuHeiRGbQ3Yi
aPDpQVMBcSr4+Cd/ELsggYS2jsnPS1Chbw6rDz4huXJ/dhUVFiT99sW/FVnp
NyBNBdrCqZtkXkF09AbbqQQZKkhxrztqt58PcQ8lOUTLUQHVrUp8ocyDZM8u
2JxeQ4WB6vu3f73gQld3jSXtVqRCWZHl6ldUTsSjU/SGtI4KIi1Pdqxl4UBN
h6bt5ZUIenSer+VcJPzZZes1M8pUuP2o53y9NBsKDc79OfIfFZbofjzrCXov
19+pUuF37bv1Vx4S8QnzguZGKrx+txNply7hn+s9RB5tooJqp+/f/puLuJWL
cqnjFmK+Eg1hLGYLOBOubu82KuQY1u+4c3geZ8KH7tSgQtb+u7dIxnO4dbCt
hZAmFab8VOyuX5nFj2ibLXVpUeFsyLvO+Ocz+PJ9w11U+GDC+m7Vl2l8dOCk
xydtKqhc19lTJTCNi7vfMQjRpcJfbm+zJcspvM6VyCj2EL9P+hXz4+MkvkZT
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
zEUHk9oqNvuQGGx5v5CHDmKXbTPr9mdiA2HKrHZ8dPjvi5r04984Jnz7+kZD
ATp8G45x4pgqxLbuPftgtxAdRAPWzP+pLMXGjn41Xy1CB76fR6f/apdjGsyC
cVE6eMbfei+6thLz2aQX3itOB5KfDCrdVIUt93eWpMM+9ceCOjPV2AZmwxop
OlxO3Fc4lVWDMeH6k1bTYals8Zfp4VrsIRu1wF+WDlNh21T5CuuwkrprHFfk
6WAV9CBHVbYe8z7sKnpRgQ6RlIffe20aMI/tASpSa+mw/sK3ouKzjVipgoDu
1Do6XFXNvfLA/h8WPCf/gE2ZDmxyZ1aJX2rCIsnvqjNU6HDwmMH7y6uaMVNm
Q50NdNhzYH2Hjksz9kPnQOVjNWJ9U6kvO8uasZhfPmG31elwiiY/bSnagi3f
R9tMh7IdNi0SBi3Y05Lwx6StdJB8qOJc7dyCsZ1KMNPcTofqO9kV+561YA/0
MgMld9DB5tzh7ZJvW7DlfrSadEjT2ZoYmdGC2ffqqi3upEML2YzWkNyChVuc
Vq/aTYfNOy0jeCJasL3qqtdf6tDh2f7ZgEy3FowqjQW46tGBVVNft8S4BZNh
NuzA6MBIlTYUkWnBlu+TkehQMhwkbfCrGdPWWS2nTKFDdFL05nG3ZgyYDX1p
xPcq5mvur27G8hTXaQ7Q6VBRPuTBfrAJW+LdbFqtTwe5s5rHj9P/YbrMDRED
gr6qGzcNcDZiQUfin3nsI+TL2uhTWVs9tr/mtfe5A3QQ0a205bn2F/NV7hh0
PEQHpR0n5spzajFe/wnBfYfpYLf36HAh2x/MkdlQ5wjBb3bT1Cjp39jeunXn
d5rS4edHqUhU+gvjPLj2aO9ROuzyy94ikFaB8Xr/a205RoeU20EK6yS+Y2Tm
Ae8JOjjSL/L53y7GQk41CMacpMOgsRQ10gFhfxWD/CMsiflPdd9bKk7H4nwE
klxO0YF6kpPO9+wR1usqWHD1DB0+/twyk8D1Brd2XpVvfJYOzklWG49p4vjy
eagtIS8ua+nBn0txZrtsnfMEvX1LnsyyVeEJfb7v+C/QQeLbj2oLrG5FH+3p
UGjf9352TTPec7vtws9LdDjazIdyI4l4+eYnm+wrxPdDVK9j5T14+/mZu0kO
xPuc0zzV1g3j0v1eF/2u0eHeSafc27Lj+KHmF7duOtNhsUCp8lTODP6NSDfM
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
b4mdJw==
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    PlotLabel->FormBox["\"Maximum of Br\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwsmnk4Vd/7/s0zmedM5+y9z2AIJSrOE1GiomQeGpRQmSKJChlSKiIVkYgG
SoZIqkXmNCiSiiakEIUQ8lvv3+frH9dz7b3WetZ036/nnKO5I2DzLh4uLq6x
RVxc//0fmpGRjislOAlyQ67eVUbI69yl19vyV3OIjQcbBvYsRQ+vnQ0xnnfg
qOb6bAlLNUCdq0YvVql4czLd9mzfucUA8U3r+nn6BXLEjt7etyTAAAXxcrzv
Oh/iVDumCdXzLkEFDLqtVnsMpytMS9dAawlqPJn0jr3zJOf26WNBcSYsRD0T
MT57+RynwKtF7k0uiT46c796nJfFgWWnTAte0lFsyVcnj8x8ziXLgatZB+jo
WGvnIP+KYs6mhPI2rlE62pN3ZUFKuoyzcLCw3ngNgc6u/OlSNHiPs1ThbZKq
DoGKZap+/btZzUk8HCbZPE5HEjM+Ar+iH3HOq1OxAaV05ChJ9+8jajlSrlVc
vw7S0VeD31fX8D/hfMycO95pR0cbhursf8zUc4Ivt7o9W01HH6/Jm1f0NnJ0
BH5/FVlPR1tSTmfeaWvmKK6kDJftpCOq0+p0V0krJ75kbaVoPB0Nm7KMM1Pb
OC5Bvx9H3aYj300lWZKRzzm806umr7+nozXvhGoiDF5y3K+dudEqRiA3dyvP
NEY7R2/jw9EBcwJxkria45RfcZQavdSMowj0XcgipUj0NaeM0hx6V0OgSlnC
bRVXByfQfFFpFC+J0pdnbLD608HhPyAmtc6eRMabfp1h9ndyHKfCpwvzSLRl
p9KGiXdvONShtDNnF0j07Z/oseZnXRyfyLII1+0UOlsUeIKN3nKu/BVntLRQ
yC1+kVNaWTfH61RmYa8JA1UtVpbPu/2Oo8IdaB96j4E6I19QYZffc0R9p47G
GDNRy9ckQf/THzjGWy+sOPaMiTavS/b+caKHU6vunGV7koXGLHeoj8X0csKI
tZYXU9nIcZ+e3WjoR478lO65l0d1UIQYrwMYfuKcyjU+dyxHF3Uk0xcySz5x
uneJ3wkYZKMbAU6V59ifOSdW6+4df8pCvGJ7QsuvfuYYVbi0v1JgIeG+fVwp
Sl84wzkq9vtSmEjv6YuJOxe+cMrv1RgIazBR+g+RF7cXfeV8Ndc57N/CQNGH
lQVbEr9yRLjlku8fZaDPjReihwT6OJPZliLrOQz0Ov/syq6oPk65pYamphgD
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
wGK3YrDZqsHmkOTjSbn9v/0/jfZgCQ==
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    PlotLabel->FormBox["\"Maximum of B\[Phi]\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
UZqPJfzBq7uUfZlU0NtJffY1bgx/vjd1dnsWFX64OAXDl3G8aSQqduwVFfA8
h9F3HJP4n6K84cFsgp5BKYpiMVO4ruw7w7q3VJj8ohPhYzKD3zi09dGHdwT/
NL6zVVPm8NS2xRvpeVSYeiv7ds29BXzpvvcHKnR5bJT8nsOGeLQdWvwLCPpK
xR/qPMeBLMwePXBDhPzYyLjTSrjQpFFvplURFQqufyumC/IhVru5zZ+owF50
aNgqThhtSeRrMyyhAv8rkyiKgyzKtKXReT9Twfl2YqzARyH0Lna0uLmMCvK0
xl3f/HjRpukHc7+/UEHh7sWwRkWu5Xz0KxWi3xT3e/FxIMbilzfOVYR8KnHf
VQA21H7t+kOPaiooS7VqXzSZxy3vLVop11Bhojk1akZsFuc+UZLSU0vIA2KW
Kk1O4XPbuacb66iw/+vwfsrUBO7f8P1hRgOxvoKn4m92j+PR/eInr/6kgu10
0/Sdj6M4q53F1SYqfN5a1spFGcGX6iWaqeDgzdz5cfofjsdzcp1tIfyf3LoV
jseHcOkSmQClNiqYyHULynoN4F5Fpm697VS48ak2pCygD09yKZdu7qQCddrF
tDi8B2e1S8jvJvzV6osaRRXdeCvtCCm+h7Cfb/UCT6zvwpmfYpkpfVTYXma9
mze4Ay++UZLsO0DYvygR6z6FdnxajPDwQ1RorUlfqVTcirPak9gMUyG1VoM9
xqMFHzl6/bfxKBXIZlMxateacYWH5w7ojVPh7xvOthZowmNPbMmVm6TCTc/+
8pzNP/H8G9vsOacJfajhoXzBGvDK65JHBmao4CUnoWx4pg7fzWpoPUcF0/aY
ZwbFtbj/kP6ZhAUq+NBl/VNNanBW+xYfNhqweZ5bPdlcjS/JBwcN7CbCBErD
v+HNZ49uJ3PRYDq4faIwoRJfqhflocGTx223XttV4OlpkUiFjwYNNuIuPsbl
uKiASXU5Pw1kOBUN0xM/46lPPb3vC9Lglcp9mxPcpbjp05XukcI0cIr3T5sL
LMaNy0MFQZQGa3kPKecf+YQvnSeJ06BC79+lYPOPON227hOHJA3EtQsK9O2K
8O1qqmtbpWhw7T+bCxLPC/F/px3CKmVosEFwSv3MmkJcp2Yi85kcDfSe8bxu
/IZwztirCsEKNDg1VDtT/xzhHvPvjc8q0WCkP07V9gPCZ0iHU/euoEFSh4wK
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
b/8PYpVTag==
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    PlotLabel->FormBox["\"Maximum of Bz\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.497257748301375*^9, {3.497520287425029*^9, 3.497520332054511*^9}, 
   3.4975203661553726`*^9, 3.497523715975299*^9, 3.4975253211839137`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Kappa]", "=", "0.50"}], ";"}]], "Input",
 CellChangeTimes->{{3.497258308942*^9, 3.497258309332625*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:0427\:0442\:0435\:043d\:0438\:0435 \:0438\:0437 \:0444\:0430\:0439\
\:043b\:043e\:0432", "Subsubsection",
 CellChangeTimes->{{3.459149095515625*^9, 3.4591490973125*^9}}],

Cell[BoxData[
 RowBox[{"Remove", "[", "PrintInfo", "]"}]], "Input",
 CellChangeTimes->{{3.411238235457*^9, 3.411238243344*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"coor", ",", "bounds"}], "}"}], "=", 
   RowBox[{"ReadAuxFiles", "[", 
    RowBox[{
     RowBox[{"{", "\"\<coord\>\"", "}"}], ",", 
     RowBox[{"ShiftVector", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"NumberOfRefs", "\[Rule]", "4"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.459161754171875*^9, 3.459161763125*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"out", "=."}], ";", 
  RowBox[{"ReadBinarySnapFile", "[", 
   RowBox[{"\"\<screw.dmp\>\"", ",", "8", ",", "out", ",", 
    RowBox[{"PrintInfo", "\[Rule]", "Debug"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.435648378957375*^9, 3.43564840156675*^9}, {
  3.435662675176125*^9, 3.43566267581675*^9}, {3.435904557988625*^9, 
  3.435904558676125*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1", ",", "2"}], "}"}]], "Print",
 CellChangeTimes->{3.4359045590355*^9, 3.43590989531675*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", "0", ",", "32", ",", "32", ",", "32", ",", "1000.`"}], 
  "}"}]], "Print",
 CellChangeTimes->{3.4359045590355*^9, 3.43590989531675*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Length of read from binary=\"\>", "\[InvisibleSpace]", 
   "508288", "\[InvisibleSpace]", "\<\" and size of it=\"\>", 
   "\[InvisibleSpace]", "2033152", "\[InvisibleSpace]", "\<\" bytes\"\>"}],
  SequenceForm[
  "Length of read from binary=", 508288, " and size of it=", 2033152, 
   " bytes"],
  Editable->False]], "Print",
 CellChangeTimes->{3.4359045590355*^9, 3.43590989531675*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"ghost=\"\>", "\[InvisibleSpace]", "3"}],
  SequenceForm["ghost=", 3],
  Editable->False]], "Print",
 CellChangeTimes->{3.4359045590355*^9, 3.435909895332375*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"out", "=."}], ";", 
  RowBox[{"ReadBinarySnapFile", "[", 
   RowBox[{"\"\<velocity.snp\>\"", ",", "4", ",", "out", ",", 
    RowBox[{"PrintInfo", "\[Rule]", "Debug"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{3.45916144984375*^9, {3.4591616373125*^9, 3.4591616525*^9}}
  ],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1", ",", "1"}], "}"}]], "Print",
 CellChangeTimes->{{3.202039929499125*^9, 3.202039936936625*^9}, {
   3.459161427703125*^9, 3.45916144996875*^9}, {3.459161633703125*^9, 
   3.459161652734375*^9}, 3.459162377640625*^9, 3.486887373184875*^9, {
   3.486887784216125*^9, 3.486887795388*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", "0", ",", "64", ",", "64", ",", "64", ",", "3.14`"}], 
  "}"}]], "Print",
 CellChangeTimes->{{3.202039929499125*^9, 3.202039936936625*^9}, {
   3.459161427703125*^9, 3.45916144996875*^9}, {3.459161633703125*^9, 
   3.459161652734375*^9}, 3.459162377640625*^9, 3.486887373184875*^9, {
   3.486887784216125*^9, 3.486887795388*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Length of read from binary=\"\>", "\[InvisibleSpace]", 
   "1372000", "\[InvisibleSpace]", "\<\" and size of it=\"\>", 
   "\[InvisibleSpace]", "5488000", "\[InvisibleSpace]", "\<\" bytes\"\>"}],
  SequenceForm[
  "Length of read from binary=", 1372000, " and size of it=", 5488000, 
   " bytes"],
  Editable->False]], "Print",
 CellChangeTimes->{{3.202039929499125*^9, 3.202039936936625*^9}, {
   3.459161427703125*^9, 3.45916144996875*^9}, {3.459161633703125*^9, 
   3.459161652734375*^9}, 3.459162377640625*^9, 3.486887373184875*^9, {
   3.486887784216125*^9, 3.486887795388*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"ghost=\"\>", "\[InvisibleSpace]", "3"}],
  SequenceForm["ghost=", 3],
  Editable->False]], "Print",
 CellChangeTimes->{{3.202039929499125*^9, 3.202039936936625*^9}, {
   3.459161427703125*^9, 3.45916144996875*^9}, {3.459161633703125*^9, 
   3.459161652734375*^9}, 3.459162377640625*^9, 3.486887373184875*^9, {
   3.486887784216125*^9, 3.486887795403625*^9}}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"coor", ",", "bounds", ",", "node"}], "}"}], "=", 
   RowBox[{"ReadAuxFiles", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<coord\>\"", ",", "\"\<node\>\""}], "}"}], ",", 
     RowBox[{"ShiftVector", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"ProcDistrib", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"4", ",", "4", ",", "1"}], "}"}]}], ",", 
     RowBox[{"NumberOfRefs", "\[Rule]", "4"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.486887417997375*^9, {3.4897684547415676`*^9, 3.4897684556009426`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"coor", ",", "bounds"}], "}"}], "=", 
   RowBox[{"ReadAuxFiles", "[", 
    RowBox[{
     RowBox[{"{", "\"\<coord\>\"", "}"}], ",", 
     RowBox[{"ShiftVector", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"ProcDistrib", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"4", ",", "4", ",", "1"}], "}"}]}], ",", 
     RowBox[{"NumberOfRefs", "\[Rule]", "4"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.4897685151165676`*^9, 3.4897685172571926`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"GetCoor", "[", 
   RowBox[{"a_", ",", "b_", ",", "n_", ",", "ghost_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "dx", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dx", "=", 
      FractionBox[
       RowBox[{"(", 
        RowBox[{"b", "-", "a"}], ")"}], "n"]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"a", "+", 
        RowBox[{"i", " ", "dx"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"0.5", "-", "ghost"}], ",", 
         RowBox[{"n", "+", "ghost", "-", "0.5"}], ",", "1"}], "}"}]}], 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.491558969564625*^9, 3.49155897039275*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"out", "=."}], ";", 
   RowBox[{"ReadBinarySnapFile", "[", 
    RowBox[{"\"\<screw_512_17717.snp\>\"", ",", "6", ",", "out", ",", 
     RowBox[{"PrintInfo", "\[Rule]", "Debug"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"coor", ",", "bounds", ",", "node"}], "}"}], "=", 
     RowBox[{"ReadAuxFiles3D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<coord\>\"", ",", "\"\<node\>\""}], "}"}], ",", 
       RowBox[{"ShiftVector", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
       RowBox[{"ProcDistrib", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"4", ",", "4", ",", "1"}], "}"}]}], ",", 
       RowBox[{"NumberOfRefs", "\[Rule]", "3"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Print", "[", "bounds", "]"}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Kappa]", "=", "0.80"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"parR", "=", "3"}], ";", 
  RowBox[{"parRfl", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"coor", "=", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"GetCoor", "[", 
       RowBox[{"#1", ",", "#2", ",", "#3", ",", "ghost"}], "]"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"parR", "+", 
            RowBox[{"parRfl", "/", "\[Kappa]"}]}], ")"}]}], ",", 
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"parR", "+", 
            RowBox[{"parRfl", "/", "\[Kappa]"}]}], ")"}]}], ",", 
         RowBox[{"-", "parR"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"parR", "+", 
           RowBox[{"parRfl", "/", "\[Kappa]"}]}], ")"}], ",", 
         RowBox[{"(", 
          RowBox[{"parR", "+", 
           RowBox[{"parRfl", "/", "\[Kappa]"}]}], ")"}], ",", "parR"}], "}"}],
        ",", 
       RowBox[{
        RowBox[{"Rest", "[", 
         RowBox[{"Dimensions", "[", "out", "]"}], "]"}], "-", 
        RowBox[{"2", "ghost"}]}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"bounds", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "ghost", "]"}], "]"}], "+", 
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"ghost", "+", "1"}], "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"-", "ghost"}], "]"}], "]"}], "+", 
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"-", "ghost"}], "-", "1"}], "]"}], "]"}]}]}], "}"}], "/", 
     "2"}], "&"}], "/@", "coor"}]}]}], "Input",
 CellChangeTimes->{{3.41426573491*^9, 3.414265768815*^9}, {3.414265821932*^9, 
   3.4142658610950003`*^9}, {3.414266022685*^9, 3.414266059477*^9}, {
   3.414266168413*^9, 3.4142661690369997`*^9}, 3.4155116310699997`*^9, {
   3.4155118271470003`*^9, 3.4155118281800003`*^9}, {3.415522596466*^9, 
   3.415522597726*^9}, {3.415523060079*^9, 3.415523061079*^9}, {
   3.4155234460290003`*^9, 3.415523480166*^9}, 3.415527135475*^9, {
   3.415639688885*^9, 3.415639693382*^9}, 3.415640560664*^9, {
   3.4156406375179996`*^9, 3.415640638584*^9}, {3.4156974747051687`*^9, 
   3.415697484582156*^9}, 3.4156976547421703`*^9, {3.415697734835179*^9, 
   3.4156977351312084`*^9}, {3.4156979618448772`*^9, 3.415697974111104*^9}, 
   3.4156990289565783`*^9, {3.416284708302*^9, 3.416284712821*^9}, 
   3.4171663445439997`*^9, 3.417191577342*^9, {3.435648332848*^9, 
   3.43564833394175*^9}, {3.435663919019875*^9, 3.435663929457375*^9}, 
   3.435664699769875*^9, {3.435664739394875*^9, 3.435664764769875*^9}, {
   3.4359046305355*^9, 3.435904640582375*^9}, 3.435909266098*^9, {
   3.45914699925*^9, 3.45914700390625*^9}, 3.45914792309375*^9, 
   3.45914805209375*^9, {3.459148228625*^9, 3.45914823021875*^9}, {
   3.459162192625*^9, 3.45916220909375*^9}, {3.461495536109375*^9, 
   3.46149556596875*^9}, {3.486887880263*^9, 3.4868879033255*^9}, {
   3.48688809498175*^9, 3.486888095638*^9}, {3.487317579684875*^9, 
   3.48731759166925*^9}, {3.4876775854454513`*^9, 3.487677593619853*^9}, {
   3.487924012309621*^9, 3.4879240129960213`*^9}, {3.487924117594042*^9, 
   3.4879241269072437`*^9}, {3.4879522717776365`*^9, 
   3.4879522723548365`*^9}, {3.487953874428355*^9, 3.4879538753955555`*^9}, {
   3.487996327664365*^9, 3.487996328459965*^9}, {3.488016716072817*^9, 
   3.4880167166812167`*^9}, {3.488018941436659*^9, 3.488018942013859*^9}, {
   3.488088670455315*^9, 3.4880886709389153`*^9}, {3.4897683918978176`*^9, 
   3.4897683925384426`*^9}, {3.4897687005540676`*^9, 
   3.4897687100071926`*^9}, {3.4897689099915676`*^9, 
   3.4897689111946926`*^9}, {3.4897696179134426`*^9, 
   3.4897696185228176`*^9}, {3.4897701548821926`*^9, 
   3.4897701556009426`*^9}, {3.4897706931790676`*^9, 
   3.4897706937103176`*^9}, {3.4897710696634426`*^9, 
   3.4897710701946926`*^9}, {3.4897714446321926`*^9, 
   3.4897714448196926`*^9}, {3.4897715465384426`*^9, 
   3.4897715470540676`*^9}, {3.4897717293509426`*^9, 
   3.4897717295853176`*^9}, {3.4897740924134426`*^9, 
   3.4897740943978176`*^9}, {3.4897741883509426`*^9, 
   3.4897741890228176`*^9}, {3.4897742918509426`*^9, 
   3.4897742925853176`*^9}, {3.4897754781009426`*^9, 
   3.4897754787259426`*^9}, {3.4897755871165676`*^9, 
   3.4897755875853176`*^9}, {3.4897981880853176`*^9, 
   3.4897981887415676`*^9}, {3.4897983133509426`*^9, 
   3.4897983137884426`*^9}, {3.4897985703978176`*^9, 
   3.4897985711009426`*^9}, {3.48981043496875*^9, 3.489810464890625*^9}, {
   3.48981055121875*^9, 3.48981057209375*^9}, {3.489811074546875*^9, 
   3.48981107490625*^9}, {3.48981113621875*^9, 3.489811136671875*^9}, {
   3.48997219225*^9, 3.489972205484375*^9}, 3.489985763765625*^9, {
   3.4899870064375*^9, 3.489987009828125*^9}, {3.489987435046875*^9, 
   3.489987439546875*^9}, {3.489987707703125*^9, 3.489987708953125*^9}, {
   3.489992129734375*^9, 3.489992148453125*^9}, {3.489992545890625*^9, 
   3.489992546359375*^9}, {3.489995132921875*^9, 3.4899951385625*^9}, 
   3.48999533171875*^9, {3.48999719125*^9, 3.489997204296875*^9}, {
   3.489997445*^9, 3.489997447859375*^9}, {3.4899978390625*^9, 
   3.48999784134375*^9}, {3.489998470734375*^9, 3.4899984750625*^9}, {
   3.490940516640625*^9, 3.49094052384375*^9}, {3.490940990140625*^9, 
   3.490940995703125*^9}, {3.490941142109375*^9, 3.490941145578125*^9}, {
   3.490941187171875*^9, 3.49094119215625*^9}, {3.49094125778125*^9, 
   3.49094126090625*^9}, {3.490941321609375*^9, 3.49094132390625*^9}, {
   3.490941363078125*^9, 3.4909414464375*^9}, {3.49094151125*^9, 
   3.49094159396875*^9}, {3.49094164546875*^9, 3.49094164790625*^9}, {
   3.49094172775*^9, 3.490941732125*^9}, {3.490943106421875*^9, 
   3.490943109671875*^9}, {3.49094314290625*^9, 3.49094314590625*^9}, {
   3.490943450640625*^9, 3.490943453140625*^9}, {3.490943640203125*^9, 
   3.490943642515625*^9}, {3.490943755640625*^9, 3.490943758484375*^9}, {
   3.490949501796875*^9, 3.490949505125*^9}, {3.4909546580625*^9, 
   3.490954660390625*^9}, {3.49095817021875*^9, 3.4909581730625*^9}, {
   3.490958483015625*^9, 3.490958485515625*^9}, {3.491045905234375*^9, 
   3.49104590734375*^9}, {3.4910480243125*^9, 3.491048028703125*^9}, {
   3.491049752546875*^9, 3.49104975571875*^9}, {3.49105094128125*^9, 
   3.491050943734375*^9}, {3.49105120853125*^9, 3.491051209171875*^9}, {
   3.4910514605625*^9, 3.491051462625*^9}, {3.49111102534375*^9, 
   3.49111102803125*^9}, {3.491111866609375*^9, 3.491111867*^9}, 
   3.49111192125*^9, {3.4911126244375*^9, 3.491112627078125*^9}, {
   3.49111271121875*^9, 3.49111271728125*^9}, {3.491114408296875*^9, 
   3.491114430328125*^9}, {3.491115086234375*^9, 3.491115086984375*^9}, {
   3.4911216175625*^9, 3.49112162334375*^9}, {3.49112248434375*^9, 
   3.491122486921875*^9}, {3.4911227613125*^9, 3.49112276434375*^9}, {
   3.491123383890625*^9, 3.49112339175*^9}, {3.491123784296875*^9, 
   3.491123787140625*^9}, {3.49112973453125*^9, 3.491129756671875*^9}, {
   3.49119918826775*^9, 3.491199195314625*^9}, {3.491202105924*^9, 
   3.491202110033375*^9}, {3.4912025952365*^9, 3.491202596127125*^9}, {
   3.4912031424865*^9, 3.49120314658025*^9}, {3.49120371814275*^9, 
   3.4912037203615*^9}, {3.491204275064625*^9, 3.491204278595875*^9}, {
   3.491204831595875*^9, 3.491204833970875*^9}, {3.491205175877125*^9, 
   3.491205178252125*^9}, {3.4912054267365*^9, 3.49120542964275*^9}, {
   3.491205928877125*^9, 3.49120593251775*^9}, {3.49120689726775*^9, 
   3.4912069023615*^9}, {3.4912082428615*^9, 3.491208248533375*^9}, {
   3.491208451064625*^9, 3.491208453502125*^9}, {3.491208614299*^9, 
   3.49120861745525*^9}, {3.491208763674*^9, 3.491208765814625*^9}, {
   3.49120898376775*^9, 3.491208986049*^9}, 3.49120906951775*^9, {
   3.49120912626775*^9, 3.491209129314625*^9}, {3.491558949033375*^9, 
   3.491558958689625*^9}, {3.49155930445525*^9, 3.4915593048615*^9}, {
   3.491559944877125*^9, 3.4915599456115*^9}, {3.491560283720875*^9, 
   3.491560284377125*^9}, {3.491560584970875*^9, 3.4915605854865*^9}, {
   3.491560824470875*^9, 3.491560824939625*^9}, {3.49156120508025*^9, 
   3.491561205908375*^9}, {3.491561629564625*^9, 3.49156163339275*^9}, {
   3.49156187933025*^9, 3.49156187976775*^9}, {3.49156211108025*^9, 
   3.491562111658375*^9}, {3.491575421799*^9, 3.491575422533375*^9}, {
   3.491575732174*^9, 3.49157573301775*^9}, {3.49157622514275*^9, 
   3.491576225783375*^9}, {3.49157688251775*^9, 3.49157688720525*^9}, {
   3.491577183908375*^9, 3.49157718739275*^9}, {3.491577891299*^9, 
   3.491577891814625*^9}, {3.491578563283375*^9, 3.491578563924*^9}, {
   3.491578804408375*^9, 3.491578805002125*^9}, {3.491579085424*^9, 
   3.491579086220875*^9}, {3.491580244502125*^9, 3.491580245283375*^9}, {
   3.491581059595875*^9, 3.491581060752125*^9}, {3.49158224233025*^9, 
   3.4915822471115*^9}, {3.491582288689625*^9, 3.49158228901775*^9}, {
   3.491582505799*^9, 3.491582509595875*^9}, {3.491582693658375*^9, 
   3.49158270370525*^9}, {3.491582949408375*^9, 3.491582956283375*^9}, {
   3.491583277127125*^9, 3.49158328076775*^9}, {3.491632605345875*^9, 
   3.49163260970525*^9}, {3.491633071939625*^9, 3.491633072283375*^9}, {
   3.491634674299*^9, 3.491634674783375*^9}, {3.4916352957365*^9, 
   3.491635296189625*^9}, {3.49163577814275*^9, 3.491635778627125*^9}, {
   3.491636322627125*^9, 3.4916363233615*^9}, {3.49163660220525*^9, 
   3.491636604970875*^9}, {3.49163697495525*^9, 3.49163697545525*^9}, {
   3.49163737995525*^9, 3.49163738058025*^9}, {3.491637652314625*^9, 
   3.491637652814625*^9}, {3.491638110627125*^9, 3.491638111314625*^9}, {
   3.491638399002125*^9, 3.49163839964275*^9}, {3.491638747174*^9, 
   3.4916387506115*^9}, {3.491639324299*^9, 3.49163932489275*^9}, {
   3.491639748752125*^9, 3.491639749439625*^9}, {3.4916401682365*^9, 
   3.49164016889275*^9}, {3.491640419720875*^9, 3.49164042045525*^9}, {
   3.4916407292365*^9, 3.49164073001775*^9}, {3.491641274720875*^9, 
   3.491641277095875*^9}, {3.491641828174*^9, 3.49164182864275*^9}, {
   3.491642087502125*^9, 3.491642088095875*^9}, {3.491642336564625*^9, 
   3.491642337095875*^9}, {3.49164262789275*^9, 3.491642628658375*^9}, {
   3.49164312014275*^9, 3.491643120939625*^9}, {3.491643617549*^9, 
   3.491643622252125*^9}, {3.491644294564625*^9, 3.491644295033375*^9}, {
   3.4916447286115*^9, 3.49164473070525*^9}, {3.491645103127125*^9, 
   3.49164510389275*^9}, {3.491645423627125*^9, 3.491645424283375*^9}, {
   3.4916456572365*^9, 3.491645658064625*^9}, {3.491645909799*^9, 
   3.49164591214275*^9}, {3.491647150049*^9, 3.491647172970875*^9}, {
   3.491647431002125*^9, 3.491647431845875*^9}, {3.49164789258025*^9, 
   3.49164789383025*^9}, {3.49164914658025*^9, 3.491649154595875*^9}, {
   3.491649468939625*^9, 3.491649469314625*^9}, {3.49170319208025*^9, 
   3.491703192939625*^9}, {3.491703906033375*^9, 3.49170390714275*^9}, {
   3.491704226970875*^9, 3.491704228720875*^9}, {3.491704600564625*^9, 
   3.4917046011115*^9}, {3.491704897470875*^9, 3.4917049001115*^9}, {
   3.491705179720875*^9, 3.491705180252125*^9}, {3.49170545864275*^9, 
   3.491705459283375*^9}, {3.49170568958025*^9, 3.49170569039275*^9}, {
   3.4917059429865*^9, 3.491705943595875*^9}, {3.491706172877125*^9, 
   3.491706173689625*^9}, {3.4917064634865*^9, 3.4917064663615*^9}, {
   3.491706799845875*^9, 3.491706800345875*^9}, {3.49170705608025*^9, 
   3.491707056689625*^9}, {3.49170728401775*^9, 3.491707284564625*^9}, {
   3.491707526424*^9, 3.491707527033375*^9}, {3.49170774889275*^9, 
   3.491707750002125*^9}, {3.49170797708025*^9, 3.49170797995525*^9}, {
   3.4917082132365*^9, 3.4917082137365*^9}, {3.4917084787365*^9, 
   3.491708479299*^9}, {3.491708712939625*^9, 3.491708713564625*^9}, {
   3.491708940064625*^9, 3.491708940908375*^9}, {3.491714486595875*^9, 
   3.49171448876775*^9}, {3.491901670752125*^9, 3.491901674720875*^9}, {
   3.491908623189625*^9, 3.491908633595875*^9}, {3.491908774299*^9, 
   3.4919087769865*^9}, {3.49197686839275*^9, 3.49197687433025*^9}, {
   3.49199773201775*^9, 3.491997739377125*^9}, {3.492020006314625*^9, 
   3.4920200111115*^9}, {3.492135737220875*^9, 3.492135759502125*^9}, {
   3.492136205439625*^9, 3.49213621126775*^9}, {3.4921380527365*^9, 
   3.4921380567365*^9}, {3.49214320283025*^9, 3.49214321233025*^9}, {
   3.4921442738615*^9, 3.492144276799*^9}, {3.492328644283375*^9, 
   3.492328657783375*^9}, {3.492404411158375*^9, 3.492404428252125*^9}, {
   3.492487918658375*^9, 3.492487925720875*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"8", ",", "16", ",", "4"}], "}"}]], "Print",
 CellChangeTimes->{{3.492404422252125*^9, 3.492404429674*^9}, 
   3.492487926939625*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "25.000792193`", ",", "17717", ",", "128", ",", "128", ",", "64", ",", 
   "26.`"}], "}"}]], "Print",
 CellChangeTimes->{{3.492404422252125*^9, 3.492404429674*^9}, 
   3.49248792695525*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Length of read from binary=\"\>", "\[InvisibleSpace]", 
   "20815872", "\[InvisibleSpace]", "\<\" and size of it=\"\>", 
   "\[InvisibleSpace]", "83263488", "\[InvisibleSpace]", "\<\" bytes\"\>"}],
  SequenceForm[
  "Length of read from binary=", 20815872, " and size of it=", 83263488, 
   " bytes"],
  Editable->False]], "Print",
 CellChangeTimes->{{3.492404422252125*^9, 3.492404429674*^9}, 
   3.49248792695525*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"ghost=\"\>", "\[InvisibleSpace]", "3"}],
  SequenceForm["ghost=", 3],
  Editable->False]], "Print",
 CellChangeTimes->{{3.492404422252125*^9, 3.492404429674*^9}, 
   3.4924879269865*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4.25`"}], ",", "4.25`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4.25`"}], ",", "4.25`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3.`"}], ",", "3.`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.491901816189625*^9, 3.491908648408375*^9, 
  3.491908789627125*^9, 3.491977046908375*^9, 3.491997877845875*^9, 
  3.49202004726775*^9, 3.492135756299*^9, 3.492135897799*^9, 
  3.492136890299*^9, 3.492138208720875*^9, 3.492143210158375*^9, 
  3.492143361908375*^9, 3.492144416439625*^9, 3.492328802549*^9, 
  3.492404422720875*^9, 3.492404612314625*^9, 3.492488109470875*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", "out", "]"}], ">", "6"}], ",", 
    RowBox[{"out", "=", 
     RowBox[{"Take", "[", 
      RowBox[{"out", ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", 
         RowBox[{"-", "2"}]}], "}"}]}], "]"}]}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.414266143131*^9, 3.41426615226*^9}, {3.415523070854*^9, 
  3.415523078217*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"out", "=."}], ";", 
   RowBox[{"ReadBinarySnapFiles", "[", 
    RowBox[{"\"\<screw\>\"", ",", "\"\<.dmp\>\"", ",", "8", ",", "out", ",", 
     RowBox[{"PrintInfo", "\[Rule]", "None"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"vx", ",", "vy", ",", "vz", ",", "Ax", ",", "Ay", ",", "Az"}], 
      "}"}], "=", "out"}], ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"coor", ",", "bounds", ",", "node"}], "}"}], "=", 
   RowBox[{"ReadAuxFiles3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<coord\>\"", ",", "\"\<node\>\""}], "}"}], ",", 
     RowBox[{"ShiftVector", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"ProcDistrib", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"4", ",", "4", ",", "1"}], "}"}]}], ",", 
     RowBox[{"NumberOfRefs", "\[Rule]", "0"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.3958229633269997`*^9, {3.395826012692*^9, 3.3958260170959997`*^9}, 
   3.395826502233*^9, {3.3958468811809998`*^9, 3.395846889237*^9}, 
   3.3958618729890003`*^9, {3.395901300766*^9, 3.395901301396*^9}, 
   3.3959991159609976`*^9, {3.3960005282909975`*^9, 3.3960005334929976`*^9}, {
   3.3960008018889976`*^9, 3.3960008029029975`*^9}, 3.3960373996242*^9, 
   3.40852401345*^9, 3.408524297481*^9, 3.408637541513*^9, {3.408637583424*^9,
    3.4086376192469997`*^9}, 3.408637941763*^9, {3.408637998343*^9, 
   3.408638081234*^9}, {3.409340444568*^9, 3.40934049973*^9}, {
   3.409340928177*^9, 3.409340928773*^9}, {3.409396188034148*^9, 
   3.409396205805148*^9}, {3.4094192542209997`*^9, 3.4094192547209997`*^9}, {
   3.4094988255179996`*^9, 3.40949882624*^9}, {3.4094989136470003`*^9, 
   3.409498925686*^9}, {3.409499182051*^9, 3.409499182633*^9}, {
   3.409499308882*^9, 3.409499309168*^9}, {3.409499480454*^9, 
   3.409499481684*^9}, 3.409499947123*^9, {3.4094999789119997`*^9, 
   3.409499979733*^9}, 3.409501928571*^9, {3.409516067861*^9, 
   3.4095160778129997`*^9}, {3.409516451354*^9, 3.409516451715*^9}, {
   3.409516703262*^9, 3.409516706584*^9}, 3.409516842224*^9, {
   3.409564756895*^9, 3.409564758946*^9}, 3.4095653486879997`*^9, {
   3.409596385125*^9, 3.409596385579*^9}, {3.409596475139*^9, 
   3.409596489875*^9}, {3.411195982716*^9, 3.411195987678*^9}, {
   3.411238203781*^9, 3.411238204297*^9}, {3.411238490307*^9, 
   3.411238557343*^9}, {3.41127866735*^9, 3.4112786803199997`*^9}, {
   3.4113749302939997`*^9, 3.411374931347*^9}, {3.411725758337*^9, 
   3.411725759532*^9}, {3.4117258087*^9, 3.411725850289*^9}, {
   3.411730728249*^9, 3.411730728709*^9}, {3.411817051016*^9, 
   3.411817054836*^9}, {3.411827883051*^9, 3.411827884745*^9}, {
   3.411828078499*^9, 3.411828079362*^9}, {3.4118704372790003`*^9, 
   3.411870438561*^9}, {3.41189355941*^9, 3.411893560683*^9}, {
   3.411893610547*^9, 3.4118936557860003`*^9}, {3.41189370754*^9, 
   3.411893730101*^9}, {3.411912742674*^9, 3.411912756288*^9}, {
   3.411919169024*^9, 3.411919169808*^9}, {3.4119202773529997`*^9, 
   3.411920278182*^9}, {3.412321449816*^9, 3.412321450729*^9}, {
   3.4123214935959997`*^9, 3.412321494237*^9}, {3.4123413208929996`*^9, 
   3.412341331156*^9}, {3.412343097836*^9, 3.412343099115*^9}, {
   3.4123432031210003`*^9, 3.412343203895*^9}, {3.412343249093*^9, 
   3.412343307701*^9}, {3.4123433389630003`*^9, 3.412343340267*^9}, {
   3.412357715349*^9, 3.4123577162320004`*^9}, {3.412357777869*^9, 
   3.4123577790950003`*^9}, {3.412357823365*^9, 3.41235782462*^9}, {
   3.414266331573*^9, 3.414266331718*^9}, {3.4143934630290003`*^9, 
   3.414393468436*^9}, {3.4143973650101748`*^9, 3.4143973655373325`*^9}, {
   3.414397406617653*^9, 3.4143974070467815`*^9}, {3.4143974671167974`*^9, 
   3.414397500789896*^9}, {3.415697718032499*^9, 3.415697730114707*^9}, {
   3.416155743726*^9, 3.416155763676*^9}, {3.416155915086*^9, 
   3.416155915844*^9}, {3.416156048495*^9, 3.416156049877*^9}, {
   3.4161561540369997`*^9, 3.4161561567279997`*^9}, {3.4162842748199997`*^9, 
   3.416284275553*^9}, {3.4162847007860003`*^9, 3.4162847012320004`*^9}, {
   3.4162852476280003`*^9, 3.416285248821*^9}, {3.416553813267*^9, 
   3.416553814083*^9}, {3.416553848141*^9, 3.4165538486870003`*^9}, {
   3.416554036659*^9, 3.4165540371870003`*^9}, {3.416580031611*^9, 
   3.416580041035*^9}, {3.41663740996*^9, 3.4166374256429996`*^9}, {
   3.416637597606*^9, 3.416637598262*^9}, {3.4166381453129997`*^9, 
   3.416638145711*^9}, {3.416638232667*^9, 3.416638233039*^9}, {
   3.416640127451*^9, 3.416640128369*^9}, {3.416736482223*^9, 
   3.4167364833199997`*^9}, {3.41676546635016*^9, 3.41676549741716*^9}, {
   3.4167655373741603`*^9, 3.4167655378351603`*^9}, {3.4167655989371605`*^9, 
   3.41676559960716*^9}, {3.41676563637916*^9, 3.41676563700116*^9}, {
   3.41676566922616*^9, 3.4167656718221602`*^9}, {3.41676572624716*^9, 
   3.41676572690316*^9}, {3.41676575938216*^9, 3.4167657600621605`*^9}, {
   3.41676581036916*^9, 3.41676581094116*^9}, {3.41676593008416*^9, 
   3.4167659305641603`*^9}, {3.4167659718121605`*^9, 3.41676597297616*^9}, {
   3.4168106911949997`*^9, 3.416810702428*^9}, {3.4168107760109997`*^9, 
   3.416810778035*^9}, {3.416810812355*^9, 3.416810841692*^9}, {
   3.41681087552*^9, 3.416810876994*^9}, {3.416810980635*^9, 
   3.416810993734*^9}, {3.416811066749*^9, 3.416811067576*^9}, {
   3.416811182256*^9, 3.416811183019*^9}, {3.416811241031*^9, 
   3.4168112418640003`*^9}, {3.4168114752390003`*^9, 3.416811476094*^9}, {
   3.416811642447*^9, 3.416811643802*^9}, {3.416812105566*^9, 
   3.4168121072130003`*^9}, {3.416813493632*^9, 3.416813502316*^9}, {
   3.416813537097*^9, 3.4168135380030003`*^9}, {3.416813576672*^9, 
   3.416813577413*^9}, {3.416813621566*^9, 3.41681362404*^9}, {
   3.4168138778059998`*^9, 3.416813881094*^9}, {3.416818273479*^9, 
   3.4168182749440002`*^9}, {3.416818365686*^9, 3.416818366318*^9}, {
   3.4168184082139997`*^9, 3.416818409023*^9}, {3.416818439241*^9, 
   3.416818466775*^9}, {3.416819856892*^9, 3.416819866748*^9}, {
   3.416819910514*^9, 3.4168199694820004`*^9}, {3.416822847197*^9, 
   3.416822854955*^9}, {3.4168228945360003`*^9, 3.416822895475*^9}, {
   3.416823569837*^9, 3.41682357052*^9}, {3.4168236290439997`*^9, 
   3.416823629729*^9}, {3.416823686347*^9, 3.416823687705*^9}, {
   3.4168237442939997`*^9, 3.416823745499*^9}, {3.416823991722*^9, 
   3.416823992675*^9}, {3.4168240302650003`*^9, 3.416824030535*^9}, {
   3.41682408305*^9, 3.416824085224*^9}, {3.416824180921*^9, 
   3.416824181651*^9}, {3.4168242341140003`*^9, 3.4168242347860003`*^9}, {
   3.416824319296*^9, 3.416824321217*^9}, {3.416824355943*^9, 
   3.416824386436*^9}, {3.416824442625*^9, 3.4168244491140003`*^9}, {
   3.41682463695*^9, 3.416824639415*^9}, {3.416893119307*^9, 
   3.416893120509*^9}, {3.416893248674*^9, 3.416893253026*^9}, {
   3.4171555927279997`*^9, 3.4171555996029997`*^9}, {3.41715683559*^9, 
   3.417156836789*^9}, {3.417156923547*^9, 3.417156925108*^9}, 
   3.41715821452*^9, {3.417158477416*^9, 3.417158490424*^9}, {
   3.417187883742*^9, 3.4171878917609997`*^9}, {3.417188251557*^9, 
   3.417188252566*^9}, {3.417188661119*^9, 3.4171886619519997`*^9}, {
   3.435903882301125*^9, 3.435903895301125*^9}, {3.435903925769875*^9, 
   3.43590392750425*^9}, {3.4359041205355*^9, 3.435904121223*^9}, {
   3.435904242973*^9, 3.435904243738625*^9}, {3.43591020325425*^9, 
   3.4359102159105*^9}, 3.43591079694175*^9, {3.435910913519875*^9, 
   3.435910915363625*^9}, 3.4359110579105*^9, {3.435911680973*^9, 
   3.4359116825355*^9}, {3.453572206299*^9, 3.45357220746*^9}, {
   3.454663809734375*^9, 3.454663823953125*^9}, {3.454663886859375*^9, 
   3.45466388825*^9}, {3.4546639991875*^9, 3.45466400509375*^9}, {
   3.459148615875*^9, 3.45914862271875*^9}, {3.4591486650625*^9, 
   3.459148676796875*^9}, {3.4876666908868866`*^9, 3.487666713662891*^9}, {
   3.4876737598566914`*^9, 3.487673795502698*^9}, {3.48767405610075*^9, 
   3.4876740567091503`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"out", "=."}], ";", 
  RowBox[{"ReadBinarySnapFile", "[", 
   RowBox[{"\"\<velocity.snp\>\"", ",", "5", ",", "out", ",", 
    RowBox[{"PrintInfo", "\[Rule]", "None"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.435649212551125*^9, 3.43564922719175*^9}, {
  3.435649289332375*^9, 3.43564931231675*^9}}],

Cell[CellGroupData[{

Cell["\:0412\:044b\:0434\:0435\:043b\:0435\:043d\:0438\:0435 \:0432\:043d\
\:0443\:0442\:0440\:0435\:043d\:043d\:0435\:0439 \:043e\:0431\:043b\:0430\
\:0441\:0442\:0438", "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.392109623901*^9, 3.202040031874125*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"GetInner", "[", 
   RowBox[{"ar_", "?", "ArrayQ"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "b", "}"}], ",", 
    RowBox[{"Switch", "[", 
     RowBox[{
      RowBox[{"Length", "[", 
       RowBox[{"Dimensions", "[", "ar", "]"}], "]"}], ",", "3", ",", 
      RowBox[{"Transpose", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{"node", "/.", 
            RowBox[{"b_", "\[RuleDelayed]", 
             RowBox[{"BitAnd", "[", 
              RowBox[{"b", ",", "8"}], "]"}]}]}], "8"], "#"}], "&"}], "/@", 
        RowBox[{"Transpose", "[", "ar", "]"}]}], "]"}], ",", "2", ",", 
      RowBox[{
       FractionBox[
        RowBox[{"node", "/.", 
         RowBox[{"b_", "\[RuleDelayed]", 
          RowBox[{"BitAnd", "[", 
           RowBox[{"b", ",", "8"}], "]"}]}]}], "8"], "ar"}], ",", "_", ",", 
      "$Failed"}], "]"}]}], "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.419769262608*^9, 3.419769293922*^9}, {
  3.4265550571877866`*^9, 3.4265550579287863`*^9}, {3.4265560798137865`*^9, 
  3.4265560801037865`*^9}, {3.4265568567807865`*^9, 3.4265568637687864`*^9}, {
  3.4265569337687864`*^9, 3.426557018967787*^9}, {3.4280849051549997`*^9, 
  3.428084912672*^9}, {3.4280849476940002`*^9, 3.4280849504890003`*^9}, {
  3.432286145515625*^9, 3.432286146359375*^9}, {3.437985038765625*^9, 
  3.43798509209375*^9}, {3.437985326796875*^9, 3.202040031874125*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"GetVacuum", "[", 
   RowBox[{"ar_", "?", "ArrayQ"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "b", "}"}], ",", 
    RowBox[{"Switch", "[", 
     RowBox[{
      RowBox[{"Length", "[", 
       RowBox[{"Dimensions", "[", "ar", "]"}], "]"}], ",", "3", ",", 
      RowBox[{"Transpose", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{"node", "/.", 
              RowBox[{"b_", "\[RuleDelayed]", 
               RowBox[{"BitAnd", "[", 
                RowBox[{"b", ",", "8"}], "]"}]}]}], "8"]}], ")"}], "#"}], 
         "&"}], "/@", 
        RowBox[{"Transpose", "[", "ar", "]"}]}], "]"}], ",", "2", ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox[
          RowBox[{"node", "/.", 
           RowBox[{"b_", "\[RuleDelayed]", 
            RowBox[{"BitAnd", "[", 
             RowBox[{"b", ",", "8"}], "]"}]}]}], "8"]}], ")"}], "ar"}], ",", 
      "_", ",", "$Failed"}], "]"}]}], "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.436525074859375*^9, 3.436525090609375*^9}, {
  3.43798509975*^9, 3.202040031874125*^9}}]
}, Closed]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"vxs", ",", "vys", ",", "vzs", ",", "ps", ",", "nuts"}], "}"}], 
   "=", 
   RowBox[{"GetInner", "/@", 
    RowBox[{"{", 
     RowBox[{"vx", ",", "vy", ",", "vz", ",", "p", ",", "nut"}], "}"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.419769319309*^9, 3.419769321623*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Bx", ",", "By", ",", "Bz"}], "}"}], "=", 
   RowBox[{"rotd", "[", 
    RowBox[{
     RowBox[{"Sequence", "@@", 
      RowBox[{"Take", "[", 
       RowBox[{"out", ",", 
        RowBox[{"-", "3"}]}], "]"}]}], ",", "3"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"jx", ",", "jy", ",", "jz"}], "}"}], "=", 
     RowBox[{"rotd", "[", 
      RowBox[{"Bx", ",", "By", ",", "Bz", ",", "3"}], "]"}]}], ";"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.396031269856*^9, 3.396031270641*^9}, {
   3.4094991425889997`*^9, 3.40949915275*^9}, {3.409499284632*^9, 
   3.409499289375*^9}, {3.4095964979370003`*^9, 3.409596498314*^9}, {
   3.453622858140625*^9, 3.453622859359375*^9}, {3.45914707121875*^9, 
   3.459147072609375*^9}, {3.45914734971875*^9, 3.45914735046875*^9}, {
   3.486887910091125*^9, 3.486887912997375*^9}, 3.489811139515625*^9, 
   3.48998578553125*^9, {3.491638113595875*^9, 3.491638114283375*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["\:041f\:0440\:043e\:0432\:0435\:0440\:043a\:0430 \:0441\:043e\:0432\
\:043f\:0430\:0434\:0435\:043d\:0438\:044f", "Subsubsection",
 CellChangeTimes->{{3.4591491170625*^9, 3.459149119171875*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "p1", ",", "vx1", ",", "vy1", ",", "vz1", ",", "Axm1", ",", "Aym1", ",", 
     "Azm1", ",", "nutm1"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{
    "p", ",", "vx", ",", "vy", ",", "vz", ",", "Axm", ",", "Aym", ",", "Azm", 
     ",", "nutm"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "p1", ",", "vx1", ",", "vy1", ",", "vz1", ",", "Ax1", ",", "Ay1", ",", 
     "Az1", ",", "nut1"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{
    "p", ",", "vx", ",", "vy", ",", "vz", ",", "Ax", ",", "Ay", ",", "Az", 
     ",", "nut"}], "}"}]}], ";"}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "p1", ",", "vx1", ",", "vy1", ",", "vz1", ",", "Ax1", ",", "Ay1", ",", 
     "Az1", ",", "nut1"}], "}"}], "=", "out"}], ";"}]], "Input",
 CellChangeTimes->{{3.4095653445699997`*^9, 3.409565345447*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "p2", ",", "vx2", ",", "vy2", ",", "vz2", ",", "Ax2", ",", "Ay2", ",", 
     "Az2", ",", "nut2"}], "}"}], "=", "out"}], ";"}]], "Input",
 CellChangeTimes->{{3.4095653595690002`*^9, 3.40956536877*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "/@", 
  RowBox[{"Abs", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "p1", ",", "vx1", ",", "vy1", ",", "vz1", ",", "Ax1", ",", "Ay1", ",", 
      "Az1", ",", "nut1"}], "}"}], "-", 
    RowBox[{"{", 
     RowBox[{
     "p2", ",", "vx2", ",", "vy2", ",", "vz2", ",", "Ax2", ",", "Ay2", ",", 
      "Az2", ",", "nut2"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.409565370896*^9, 3.4095653871*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.`", ",", "1.5`", ",", "1.`", ",", "1.899999976158142`", ",", 
   "1.0319336913526058`", ",", "1.011904988437891`", ",", 
   "1.0319351591169834`", ",", "1.`"}], "}"}]], "Output",
 CellChangeTimes->{3.409565388469*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"out1", "=", "out"}], ";"}]], "Input",
 CellChangeTimes->{{3.417158210068*^9, 3.417158211492*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "p2", ",", "vx2", ",", "vy2", ",", "vz2", ",", "Ax2", ",", "Ay2", ",", 
     "Az2", ",", "nut2", ",", "Axm2", ",", "Aym2", ",", "Azm2", ",", 
     "nutm2"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{
    "p", ",", "vx", ",", "vy", ",", "vz", ",", "Ax", ",", "Ay", ",", "Az", 
     ",", "nut", ",", "Axm", ",", "Aym", ",", "Azm", ",", "nutm"}], "}"}]}], 
  ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Max", "[", 
    RowBox[{"Abs", "[", "#", "]"}], "]"}], "&"}], "/@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "p2", ",", "vx2", ",", "vy2", ",", "vz2", ",", "Ax2", ",", "Ay2", ",", 
      "Az2", ",", "nut2", ",", "Axm2", ",", "Aym2", ",", "Azm2", ",", 
      "nutm2"}], "}"}], "-", 
    RowBox[{"{", 
     RowBox[{
     "p1", ",", "vx1", ",", "vy1", ",", "vz1", ",", "Ax1", ",", "Ay1", ",", 
      "Az1", ",", "nut1", ",", "Axm1", ",", "Aym1", ",", "Azm1", ",", 
      "nutm1"}], "}"}]}], ")"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "0.`", ",", "0", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`"}], 
  "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "p2", ",", "vx2", ",", "vy2", ",", "vz2", ",", "Ax2", ",", "Ay2", ",", 
     "Az2", ",", "nut2", ",", "Axm2", ",", "Aym2", ",", "Azm2", ",", 
     "nutm2"}], "}"}], "==", 
   RowBox[{"{", 
    RowBox[{
    "p1", ",", "vx1", ",", "vy1", ",", "vz1", ",", "Ax1", ",", "Ay1", ",", 
     "Az1", ",", "nut1", ",", "Axm1", ",", "Aym1", ",", "Azm1", ",", 
     "nutm1"}], "}"}]}], ")"}]], "Input"],

Cell[BoxData["True"], "Output"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"Brfi", "[", 
     RowBox[{"r1_", ",", "fi1_", ",", "z1_"}], "]"}], "=", 
    RowBox[{"ReplaceAll", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        FractionBox["1", "r"], 
        RowBox[{
         SubscriptBox["\[PartialD]", "fi"], 
         RowBox[{"Azi", "[", 
          RowBox[{"r", ",", "fi", ",", "z"}], "]"}]}]}], "-", 
       RowBox[{
        SubscriptBox["\[PartialD]", "z"], 
        RowBox[{"Ayi", "[", 
         RowBox[{"r", ",", "fi", ",", "z"}], "]"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"r", "\[Rule]", "r1"}], ",", 
        RowBox[{"fi", "\[Rule]", "fi1"}], ",", 
        RowBox[{"z", "\[Rule]", "z1"}]}], "}"}]}], "]"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"B\[Phi]fi", "[", 
     RowBox[{"r1_", ",", "fi1_", ",", "z1_"}], "]"}], "=", 
    RowBox[{"ReplaceAll", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[PartialD]", "z"], 
        RowBox[{"Axi", "[", 
         RowBox[{"r", ",", "fi", ",", "z"}], "]"}]}], "-", 
       RowBox[{
        SubscriptBox["\[PartialD]", "r"], 
        RowBox[{"Azi", "[", 
         RowBox[{"r", ",", "fi", ",", "z"}], "]"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"r", "\[Rule]", "r1"}], ",", 
        RowBox[{"fi", "\[Rule]", "fi1"}], ",", 
        RowBox[{"z", "\[Rule]", "z1"}]}], "}"}]}], "]"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Bzfi", "[", 
     RowBox[{"r1_", ",", "fi1_", ",", "z1_"}], "]"}], "=", 
    RowBox[{"ReplaceAll", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[PartialD]", "r"], 
        RowBox[{"Ayi", "[", 
         RowBox[{"r", ",", "fi", ",", "z"}], "]"}]}], "-", 
       RowBox[{
        FractionBox["1", "r"], 
        RowBox[{
         SubscriptBox["\[PartialD]", "fi"], 
         RowBox[{"Axi", "[", 
          RowBox[{"r", ",", "fi", ",", "z"}], "]"}]}]}], "+", 
       RowBox[{
        FractionBox["1", "r"], 
        RowBox[{"Ayi", "[", 
         RowBox[{"r", ",", "fi", ",", "z"}], "]"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"r", "\[Rule]", "r1"}], ",", 
        RowBox[{"fi", "\[Rule]", "fi1"}], ",", 
        RowBox[{"z", "\[Rule]", "z1"}]}], "}"}]}], "]"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Bzfi", "[", 
     RowBox[{"r1_", ",", "fi1_", ",", "z1_"}], "]"}], "=", 
    RowBox[{"ReplaceAll", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        FractionBox["1", "r"], 
        RowBox[{
         SubscriptBox["\[PartialD]", "r"], 
         RowBox[{"(", 
          RowBox[{"r", " ", 
           RowBox[{"Ayi", "[", 
            RowBox[{"r", ",", "fi", ",", "z"}], "]"}]}], ")"}]}]}], "-", 
       RowBox[{
        FractionBox["1", "r"], 
        RowBox[{
         SubscriptBox["\[PartialD]", "fi"], 
         RowBox[{"Axi", "[", 
          RowBox[{"r", ",", "fi", ",", "z"}], "]"}]}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"r", "\[Rule]", "r1"}], ",", 
        RowBox[{"fi", "\[Rule]", "fi1"}], ",", 
        RowBox[{"z", "\[Rule]", "z1"}]}], "}"}]}], "]"}]}], ";"}], 
  "*)"}]], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["\:0412\:0435\:043b\:0438\:0447\:0438\:043d\:044b", "Subsubsection",
 CellChangeTimes->{{3.45914902509375*^9, 3.459149026046875*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"EstimateBoundary", "[", 
   RowBox[{"mat_", "?", "ArrayQ"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Ein", ",", "Eb", ",", 
      RowBox[{"ds", "=", 
       RowBox[{"Dimensions", "[", "mat", "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"Ein", "=", 
       RowBox[{"Mean", "[", 
        RowBox[{"Flatten", "@", 
         SuperscriptBox[
          RowBox[{"mat", "\[LeftDoubleBracket]", 
           RowBox[{
            RowBox[{"2", ";;", 
             RowBox[{"-", "2"}]}], ",", "All", ",", 
            RowBox[{"2", ";;", 
             RowBox[{"-", "2"}]}]}], "\[RightDoubleBracket]"}], "2"]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Eb", "=", 
       SqrtBox[
        FractionBox[
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Times", "@@", "ds"}], ")"}], " ", 
           RowBox[{"Mean", "[", 
            RowBox[{"Flatten", "@", 
             SuperscriptBox["mat", "2"]}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Times", "@@", 
             RowBox[{"(", 
              RowBox[{"ds", "-", "2"}], ")"}]}], ")"}], "Ein"}]}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Times", "@@", "ds"}], ")"}], "-", 
          RowBox[{"(", 
           RowBox[{"Times", "@@", 
            RowBox[{"(", 
             RowBox[{"ds", "-", "2"}], ")"}]}], ")"}]}]]]}], ";", 
      "\[IndentingNewLine]", 
      FractionBox["Eb", 
       RowBox[{"Max", "[", 
        RowBox[{"Flatten", "@", 
         RowBox[{"Abs", "@", "mat"}]}], "]"}]]}], "*)"}], 
    "\[IndentingNewLine]", 
    FractionBox[
     RowBox[{"Max", "@", 
      RowBox[{"Abs", "@", 
       RowBox[{"Flatten", "@", 
        RowBox[{"mat", "\[LeftDoubleBracket]", 
         RowBox[{
          RowBox[{"2", ";;", 
           RowBox[{"-", "2"}]}], ",", "All", ",", 
          RowBox[{"2", ";;", 
           RowBox[{"-", "2"}]}]}], "\[RightDoubleBracket]"}]}]}]}], 
     RowBox[{"Max", "@", 
      RowBox[{"Abs", "@", 
       RowBox[{"Complement", "[", 
        RowBox[{
         RowBox[{"Flatten", "@", "mat"}], ",", 
         RowBox[{"Flatten", "@", 
          RowBox[{"mat", "\[LeftDoubleBracket]", 
           RowBox[{
            RowBox[{"2", ";;", 
             RowBox[{"-", "2"}]}], ",", "All", ",", 
            RowBox[{"2", ";;", 
             RowBox[{"-", "2"}]}]}], "\[RightDoubleBracket]"}]}]}], 
        "]"}]}]}]]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.418313215024*^9, 3.418313230348*^9}, {
  3.4183133050039997`*^9, 3.41831353444*^9}, {3.41831371574*^9, 
  3.418313726586*^9}, {3.418321648123*^9, 3.418321772046*^9}, {
  3.4183218139779997`*^9, 3.4183218159630003`*^9}, {3.418321854078*^9, 
  3.418321859171*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Max", "[", 
    RowBox[{"Abs", "[", 
     RowBox[{"Flatten", "[", "#", "]"}], "]"}], "]"}], "&"}], "/@", 
  RowBox[{"(", 
   RowBox[{"out1", "-", "out"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.417158219649*^9, 3.417158269566*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "0.`", ",", "0.`"}], "}"}]], "Output",
 CellChangeTimes->{{3.4171582246400003`*^9, 3.417158270184*^9}, 
   3.417158486698*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "@", 
  RowBox[{"Abs", "@", 
   SqrtBox[
    RowBox[{"Total", "[", 
     SuperscriptBox[
      RowBox[{"Take", "[", 
       RowBox[{"out", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "]"}], "2"], "]"}]]}]}]], "Input",
 CellChangeTimes->{{3.41241999889124*^9, 3.4124200186492157`*^9}, {
  3.4876679845327435`*^9, 3.487667986326744*^9}}],

Cell[BoxData["1.5981637896217027`"], "Output",
 CellChangeTimes->{3.487667987231544*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Total", "[", 
    RowBox[{"Flatten", "[", 
     SuperscriptBox["#", "2"], "]"}], "]"}], "&"}], "/@", "out"}]], "Input",
 CellChangeTimes->{{3.41715688917*^9, 3.417156901984*^9}, {
  3.435556427613625*^9, 3.43555643719175*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "/@", 
  RowBox[{"Abs", "@", "out"}]}]], "Input",
 CellChangeTimes->{{3.412499080718*^9, 3.412499089615*^9}, {
  3.4124991686879997`*^9, 3.412499172567*^9}, {3.4142662323780003`*^9, 
  3.4142662325629997`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.4967594146728516`", ",", "1.4967594146728516`", ",", 
   "1.8663814067840576`", ",", "0.005000152625143528`", ",", 
   "0.004999847617000341`", ",", "0.004999847617000341`"}], "}"}]], "Output",
 CellChangeTimes->{3.459148247390625*^9, 3.459148688015625*^9, 
  3.459161481484375*^9, 3.45916166428125*^9, 3.45916248571875*^9, 
  3.4876679413675346`*^9, 3.4879496303071117`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SqrtBox[
  RowBox[{"Mean", "/@", 
   RowBox[{"Flatten", "/@", 
    SuperscriptBox[
     RowBox[{"{", 
      RowBox[{"Bx", ",", "By", ",", "Bz"}], "}"}], "2"]}]}]]], "Input",
 CellChangeTimes->{{3.4536232884375*^9, 3.453623290953125*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.2114415250358072`*^10", ",", "4.392101247600714`*^10", ",", 
   "1.3736538479794607`*^10"}], "}"}]], "Output",
 CellChangeTimes->{3.453623295390625*^9, 3.459149165609375*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mean", "/@", 
  RowBox[{"Flatten", "/@", 
   RowBox[{"{", 
    RowBox[{"Bx", ",", "By", ",", "Bz"}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.4536232405625*^9, 3.45362325365625*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "2.040683003323362`*^8"}], ",", "5.599082527280046`", ",", 
   RowBox[{"-", "5.767526695967946`*^8"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.4536232456875*^9, 3.45362325453125*^9}, 
   3.45473813771875*^9, 3.454738227203125*^9, 3.45914916640625*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox[
  SqrtBox[
   RowBox[{"Mean", "/@", 
    RowBox[{"Flatten", "/@", 
     SuperscriptBox[
      RowBox[{"{", 
       RowBox[{"Bx", ",", "By", ",", "Bz"}], "}"}], "2"]}]}]], 
  RowBox[{"Mean", "/@", 
   RowBox[{"Flatten", "/@", 
    RowBox[{"{", 
     RowBox[{"Bx", ",", "By", ",", "Bz"}], "}"}]}]}]]], "Input",
 CellChangeTimes->{{3.45362331446875*^9, 3.453623317609375*^9}, {
  3.45473825646875*^9, 3.4547382611875*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "59.36451291371122`"}], ",", "7.844323112226627`*^9", ",", 
   RowBox[{"-", "23.817034933531843`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.453623318453125*^9, {3.45473821546875*^9, 3.454738227609375*^9}, 
   3.45473826153125*^9, 3.459149167046875*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\:041f\:0440\:043e\:0441\:0442\:044b\:0435 \:0433\:0440\:0430\:0444\
\:0438\:043a\:0438", "Subsubsection",
 CellChangeTimes->{{3.459149152015625*^9, 3.459149153890625*^9}}],

Cell[BoxData[
 RowBox[{"Show2x", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ListPlot3D", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"Cut3D", "[", 
        RowBox[{"#", ",", "3", ",", "19"}], "]"}], "]"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"DisplayFunction", "->", "Identity"}]}], "]"}], "&"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Take", "[", 
    RowBox[{"out", ",", "4"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.409499330325*^9, 3.409499338832*^9}, {
   3.4095965087869997`*^9, 3.4095965163050003`*^9}, 3.417405351799*^9, {
   3.417405586032*^9, 3.417405587862*^9}, {3.4355210578059998`*^9, 
   3.435521058755*^9}, {3.435559668707375*^9, 3.435559671519875*^9}, {
   3.435648495473*^9, 3.435648496519875*^9}, 3.435648706676125*^9, 
   3.435663985426125*^9, 3.435901365832375*^9, 3.43591030181675*^9, 
   3.4535722149370003`*^9, {3.454401756203125*^9, 3.202039963686625*^9}, {
   3.454664093171875*^9, 3.454664106546875*^9}, {3.45466529546875*^9, 
   3.4546653033125*^9}, {3.4876680157639494`*^9, 3.487668033345153*^9}, {
   3.48766806888196*^9, 3.487668149393576*^9}, {3.4876777155650773`*^9, 
   3.4876777248782787`*^9}}],

Cell[BoxData[
 RowBox[{"Show2x", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ListPlot3D", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"GetVacuum", "[", 
        RowBox[{"Cut3D", "[", 
         RowBox[{"#", ",", "2", ",", "7"}], "]"}], "]"}], "]"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"DisplayFunction", "->", "Identity"}]}], "]"}], "&"}], ",", 
   RowBox[{"{", 
    RowBox[{"vx", ",", "vy", ",", "vz", ",", "p"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4544025635625*^9, 3.202039893217875*^9}}],

Cell[BoxData[
 RowBox[{"Show2x", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ListPlot3D", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"Cut3D", "[", 
        RowBox[{"#", ",", "3", ",", "19"}], "]"}], "]"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"DisplayFunction", "->", "Identity"}]}], "]"}], "&"}], ",", 
   RowBox[{"{", 
    RowBox[{"Bx", ",", "By", ",", "Bz", ",", 
     RowBox[{"out", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.417496575058*^9, 3.417496606704*^9}, {3.418312254539*^9,
   3.418312254818*^9}, {3.487677694692273*^9, 3.4876776964706736`*^9}, {
  3.4876777379354815`*^9, 3.487677740010282*^9}}],

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"ListPlot3D", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"Cut3D", "[", 
       RowBox[{"Bz", ",", "2", ",", "i"}], "]"}], "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"DisplayFunction", "->", "Identity"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "36"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4184441624849997`*^9, 3.4184441952*^9}}],

Cell[BoxData[
 RowBox[{"ListPlot3D", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"Cut3D", "[", 
     RowBox[{
      RowBox[{"out", "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], 
      ",", "2", ",", "7"}], "]"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"DisplayFunction", "->", "Identity"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.417409016709*^9, 3.417409051373*^9}}],

Cell[BoxData[
 RowBox[{"PrintRange", "[", 
  RowBox[{"out", "\[LeftDoubleBracket]", 
   RowBox[{"2", ",", "23", ",", "All", ",", "23"}], "\[RightDoubleBracket]"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.412419850224375*^9, 3.412419880957448*^9}, {
  3.435649905551125*^9, 3.435649998988625*^9}, {3.435650062488625*^9, 
  3.435650085738625*^9}, {3.43565068194175*^9, 3.435650684551125*^9}}],

Cell[BoxData[
 RowBox[{"Show2x", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ListPlot3D", "[", 
     RowBox[{
      RowBox[{"Cut3D", "[", 
       RowBox[{"#", ",", "2", ",", "4"}], "]"}], ",", 
      RowBox[{"DisplayFunction", "\[Rule]", "Identity"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "&"}], ",", 
   RowBox[{"{", 
    RowBox[{"Bx", ",", "By", ",", "Bz", ",", 
     RowBox[{"Last", "[", "out", "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.3958265119449997`*^9, {3.395999171864998*^9, 3.3959991738109975`*^9}, {
   3.4085240472539997`*^9, 3.408524047384*^9}, {3.409499348512*^9, 
   3.409499360927*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Show4", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ListPlot3D", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Cut3D", "[", "#", "]"}], "]"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
         RowBox[{"DisplayFunction", "\[Rule]", "Identity"}]}], "]"}], "&"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"vx", ",", "vy", ",", "vz", ",", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["vx", "2"], "+", 
          SuperscriptBox["vy", "2"], "+", 
          SuperscriptBox["vz", "2"]}]]}], "}"}]}], "]"}], ";"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"Show2x", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ListPlot3D", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"Cut3D", "[", "#", "]"}], "]"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"DisplayFunction", "\[Rule]", "Identity"}], ",", 
        RowBox[{"Mesh", "\[Rule]", "False"}]}], "]"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"Ax", ",", "Ay", ",", "Az", ",", "nut"}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show2x", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ListPlot3D", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"Cut3D", "[", 
          RowBox[{"WithoutFict", "[", "#", "]"}], "]"}], "]"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"DisplayFunction", "\[Rule]", "Identity"}], ",", 
        RowBox[{"Mesh", "\[Rule]", "False"}]}], "]"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"Bx", ",", "By", ",", "Bz", ",", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["Bx", "2"], "+", 
         SuperscriptBox["By", "2"], "+", 
         SuperscriptBox["Bz", "2"]}]]}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show2x", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ListPlot3D", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"Cut3D", "[", 
          RowBox[{"WithoutFict", "[", "#", "]"}], "]"}], "]"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"DisplayFunction", "\[Rule]", "Identity"}], ",", 
        RowBox[{"Mesh", "\[Rule]", "False"}]}], "]"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"jx", ",", "jy", ",", "jz", ",", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["jx", "2"], "+", 
         SuperscriptBox["jy", "2"], "+", 
         SuperscriptBox["jz", "2"]}]]}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.39582776821*^9, 3.3958277796610003`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"dist", "=", "15"}], ";", 
  RowBox[{"PrintRange", "[", 
   RowBox[{"Cut3D", "[", 
    RowBox[{
     RowBox[{"Cut3D", "[", 
      RowBox[{"Bx", ",", "3", ",", "dist"}], "]"}], ",", "1", ",", "dist"}], 
    "]"}], "]"}]}]], "Input",
 CellChangeTimes->{3.39603051309*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"ListPlot3D", "[", 
    RowBox[{"Transpose", "[", 
     RowBox[{"Cut3D", "[", 
      RowBox[{
       FractionBox["Ay", 
        RowBox[{
        "coor", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]], "-", 
       FractionBox[
        RowBox[{"PD", "[", 
         RowBox[{"Ax", ",", "ghost", ",", 
          RowBox[{
          "dx", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
          "2"}], "]"}], 
        RowBox[{
        "coor", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], 
      "]"}], "]"}], "]"}], ";", "\[IndentingNewLine]", 
   RowBox[{"ListPlot3D", "[", 
    RowBox[{"Transpose", "[", 
     RowBox[{"Cut3D", "[", 
      RowBox[{"PD", "[", 
       RowBox[{"Ay", ",", "ghost", ",", 
        RowBox[{"dx", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        ",", "1"}], "]"}], "]"}], "]"}], "]"}], ";"}], "*)"}]], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["\:0418\:043d\:0442\:0435\:0440\:043f\:043e\:043b\:0438\:0440\:043e\:0432\
\:0430\:043d\:043d\:044b\:0435 \:0433\:0440\:0430\:0444\:0438\:043a\:0438", \
"Subsubsection",
 CellChangeTimes->{{3.4591492455*^9, 3.459149248578125*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "vxi", ",", "vyi", ",", "vzi", ",", "pi", ",", "Axi", ",", "Ayi", ",", 
     "Azi", ",", "Bxi", ",", "Byi", ",", "Bzi", ",", "jxi", ",", "jyi", ",", 
     "jzi", ",", "nuti"}], "}"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"ListInterpolation", "[", 
      RowBox[{"#", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Min", "[", 
            RowBox[{
            "coor", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            "]"}], ",", 
           RowBox[{"Max", "[", 
            RowBox[{
            "coor", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Min", "[", 
            RowBox[{
            "coor", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
            "]"}], ",", 
           RowBox[{"Max", "[", 
            RowBox[{
            "coor", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
            "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Min", "[", 
            RowBox[{
            "coor", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
            "]"}], ",", 
           RowBox[{"Max", "[", 
            RowBox[{
            "coor", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
            "]"}]}], "}"}]}], "}"}], ",", 
       StyleBox[
        RowBox[{"InterpolationOrder", "->", "1"}], "MR"]}], "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{
     "vx", ",", "vy", ",", "vz", ",", "p", ",", "Ax", ",", "Ay", ",", "Az", 
      ",", "Bx", ",", "By", ",", "Bz", ",", "jx", ",", "jy", ",", "jz", ",", 
      "nut"}], "}"}]}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"GraphicsRow", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"SectionRZ", "[", 
        RowBox[{"vxi", ",", "vyi", ",", "vzi", ",", 
         RowBox[{"0.2`", " ", "\[Pi]"}]}], "]"}], ",", 
       RowBox[{"SectionR\[CapitalPhi]", "[", 
        RowBox[{"vxi", ",", "vyi", ",", "vzi", ",", 
         RowBox[{"Mean", "[", 
          RowBox[{
          "bounds", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
          "]"}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ",", 
       RowBox[{"Section\[CapitalPhi]Z", "[", 
        RowBox[{"vxi", ",", "vyi", ",", "vzi", ",", 
         RowBox[{"Mean", "[", 
          RowBox[{
          "bounds", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
          "]"}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"Spacings", "\[Rule]", 
      RowBox[{"Scaled", "[", "0.`", "]"}]}]}], "]"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.395861967439*^9, {3.395862029435*^9, 3.395862032208*^9}, {
   3.396025151302*^9, 3.3960251631470003`*^9}, {3.396025214866*^9, 
   3.396025268479*^9}}],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"GraphicsRow", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"SectionRZ", "[", 
        RowBox[{"Bxi", ",", "Byi", ",", "Bzi", ",", "1.8`"}], "]"}], ",", 
       RowBox[{"SectionR\[CapitalPhi]", "[", 
        RowBox[{"Bxi", ",", "Byi", ",", "Bzi", ",", 
         RowBox[{"Mean", "[", 
          RowBox[{
          "bounds", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
          "]"}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ",", 
       RowBox[{"Section\[CapitalPhi]Z", "[", 
        RowBox[{"Bxi", ",", "Byi", ",", "Bzi", ",", 
         RowBox[{"Mean", "[", 
          RowBox[{
          "bounds", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
          "]"}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"Spacings", "\[Rule]", 
      RowBox[{"Scaled", "[", "0.`", "]"}]}]}], "]"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.396025293699*^9, 3.3960253253190002`*^9}}],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"GraphicsRow", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"SectionRZ", "[", 
        RowBox[{"jxi", ",", "jyi", ",", "jzi", ",", 
         RowBox[{"0.3`", " ", "\[Pi]"}]}], "]"}], ",", 
       RowBox[{"SectionR\[CapitalPhi]", "[", 
        RowBox[{"jxi", ",", "jyi", ",", "jzi", ",", 
         RowBox[{"Mean", "[", 
          RowBox[{
          "bounds", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
          "]"}]}], "]"}], ",", 
       RowBox[{"Section\[CapitalPhi]Z", "[", 
        RowBox[{"jxi", ",", "jyi", ",", "jzi", ",", 
         RowBox[{"Mean", "[", 
          RowBox[{
          "bounds", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
          "]"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"Spacings", "\[Rule]", 
      RowBox[{"Scaled", "[", "0.`", "]"}]}]}], "]"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "1000"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.396025315835*^9, 3.396025342025*^9}, {
  3.3960253720690002`*^9, 3.3960254024049997`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["\:041e\:0446\:0435\:043d\:043a\:0438 \:0437\:0430\:043a\:0440\:0443\
\:0442\:043a\:0438", "Subsubsection",
 CellChangeTimes->{{3.4591488744375*^9, 3.459148879453125*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"vx", ",", "vy", ",", "vz"}], "}"}], "=", 
   RowBox[{"Take", "[", 
    RowBox[{"out", ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2", ",", "4"}], "}"}], "-", "1"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.459148908421875*^9, 3.45914891409375*^9}, {
  3.45916167953125*^9, 3.459161682*^9}, {3.46149555615625*^9, 
  3.461495556609375*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogPlot", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Max", "/@", 
     RowBox[{"Flatten", "/@", 
      SuperscriptBox["vx", "\[Transpose]"]}]}], ",", 
    SqrtBox[
     RowBox[{"Mean", "/@", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"Flatten", "/@", 
         SuperscriptBox["vz", "\[Transpose]"]}], ")"}], "2"]}]]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.4552483847604*^9, 3.4552484003454*^9}, {
  3.4552484825434*^9, 3.4552485279063997`*^9}, {3.4552486253814*^9, 
  3.4552486633764*^9}, {3.459148917359375*^9, 3.459148919859375*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.9060679774997897, 0.6, 0.6], PointBox[CompressedData["
1:eJw90wsslWEcx/GjplUb4jAMc4iYDqPjltv5uXPOcZyTVqY0aUdtlds0M5eO
LJeaXEanHc1EONrkWmItZLWwac0lzFmSGorkFjXdlv/7bu/efd7v+7x73+d9
H4vYhGOyXSwWK+jv/u/4f1vmx0TxtePHN7p3TkBRXXyp6Q15LzzcuUqdAfIB
aCZ6WdX2kPWha2pht9ZGNsIzQ01Xdi3ZFE/mOUrPMjIHDtsx/JfXyJZg97Mi
dZLJVljg5nHNYsmH0Nk/YHZQQraFSWSGwagv2Q6qlumCZh8yF63RRTc+MN0B
Q2m8io0gsiPO2slTG8VkJ5iLeIk/o8hHIPZz4Y5eIPMwkndZXHCF7Iy7Lc6r
6myyCyzqJ8c0isiumLveqdVWQXZDn7U6ZbiO7I7y8ZLe+WbyUexuuKgo6CJ7
oKbyofJEH9kTJaZxvN/M/Huhly2a6mS+jzeslTFnat6SfTBR7mI+OUXmI1c3
9UXuezJw3N7pS8nHHcuBRznctK456r5wGpKux32m7ouU6tclBkvU/aBjPxch
W6buB0tVYWbvN+r+iL255fVqhbo/+Fgs9V2jHoD9w1aH89epB4DNzXrcQWYF
gsfP16pjeiD0bidwZBvUg2DM9jbS/k49CNIHrRXxTA+G7XlnfQUzPhjn6gXP
Z5n7h+D003sNjnS9PAQnNW5VbTPPF4otQ4PMslXqochf3V65Q2YJkD4rbFcx
XYCiLNmPPfS+LCE6TByzbJj5EULgme0985W6CKpTUpaKLBehr7BhRLFIPQxc
fruxAzP/YbBZN8uQLFAXI7lpn1b0PHUxVBO52TmfqIejytR85NcM9XDwaswr
r05Tl6BsM6I/Tr1jSGA5+E7Pk9a/XIK+zeKlJPq/eiRwi24sHOyn8VJwkuzV
Qlr/kIJvly7MpPUvl0J7LCqt9P5G9x9j1X8p
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0., -1.4353161761111493`},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& )},
  FrameTicks->{{{{-1.4354846053106622`, 
       FormBox["0.23800000000000002`", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {-1.4271163556401458`, 
       FormBox["0.24`", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {-1.4188175528254507`, 
       FormBox["0.242`", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {-1.410587053688935, 
       FormBox["0.244`", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {-1.4024237430497744`, 
       FormBox["0.246`", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {-1.3943265328171548`, 
       FormBox["0.248`", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {-1.4333859686537411`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-1.4312917270506265`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-1.429201862131167, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-1.4250351894363211`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-1.422958345491482, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-1.4208858058895097`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-1.4167535686045991`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-1.4146938356415886`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-1.4126383364594928`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-1.4085399700672103`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-1.40649706843741, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-1.4044583317475619`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-1.4003932854993923`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-1.3983669423541598`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-1.3963446969733921`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-1.3923124334454537`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}}, {{-1.4354846053106622`, 
       FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {-1.4271163556401458`, 
       FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {-1.4188175528254507`, 
       FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {-1.410587053688935, 
       FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {-1.4024237430497744`, 
       FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {-1.3943265328171548`, 
       FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {-1.4333859686537411`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-1.4312917270506265`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-1.429201862131167, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-1.4250351894363211`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-1.422958345491482, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-1.4208858058895097`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-1.4167535686045991`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-1.4146938356415886`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-1.4126383364594928`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-1.4085399700672103`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-1.40649706843741, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-1.4044583317475619`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-1.4003932854993923`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-1.3983669423541598`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-1.3963446969733921`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-1.3923124334454537`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}}}, {Automatic, Automatic}},
  GridLines->{None, None},
  Method->{},
  PlotRange->{{0., 70.}, {-1.4353161761111493`, -1.390305079064186}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, {{-1.4354846053106622`, 
      FormBox["0.23800000000000002`", TraditionalForm], {0.00625, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.25]}}, {-1.4271163556401458`, 
      FormBox["0.24`", TraditionalForm], {0.00625, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.25]}}, {-1.4188175528254507`, 
      FormBox["0.242`", TraditionalForm], {0.00625, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.25]}}, {-1.410587053688935, 
      FormBox["0.244`", TraditionalForm], {0.00625, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.25]}}, {-1.4024237430497744`, 
      FormBox["0.246`", TraditionalForm], {0.00625, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.25]}}, {-1.3943265328171548`, 
      FormBox["0.248`", TraditionalForm], {0.00625, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.25]}}, {-1.4333859686537411`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.125]}}, {-1.4312917270506265`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.125]}}, {-1.429201862131167, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.125]}}, {-1.4250351894363211`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.125]}}, {-1.422958345491482, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.125]}}, {-1.4208858058895097`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.125]}}, {-1.4167535686045991`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.125]}}, {-1.4146938356415886`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.125]}}, {-1.4126383364594928`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.125]}}, {-1.4085399700672103`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.125]}}, {-1.40649706843741, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.125]}}, {-1.4044583317475619`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.125]}}, {-1.4003932854993923`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.125]}}, {-1.3983669423541598`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.125]}}, {-1.3963446969733921`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.125]}}, {-1.3923124334454537`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.125]}}}}]], "Output",
 CellChangeTimes->{3.461495585890625*^9, 3.486887384528625*^9, 
  3.4868878063255*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["k"], "Input",
 CellChangeTimes->{3.461495575421875*^9}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1:eJw103lIFGEcxvFJO6zo9MBIbLWSTVJWK13N42lzXVdNRxMNURRxKTpYCdl2
TWiSJBXs+iPEMiktO9guzaLDo9VITAnSpHS90DYzj1I31zwq+r0Dw/CZ78w7
zMz7uqSpY1VWHMeF/t3/Hf9v48HmpXC19ePq6AQcx52ytf6LyDYoT+oNCRhe
qP3vtYib4AeX9/8m22HO6vM5x6fTZEdcTdarKzOmyE5wuXjF+OLxD7IIRqd7
gTMHRsiuSEztSOCah8hbMGBS1X8yfSG7IUcbll16qZ8shrTntSzxt5Hsjtbb
xudbZV3k7XD7eYvbNMjsiTWTZyIcNN1kCc5nPpoo5XvJXth8yiN6c3Ef2Rv6
g2VG+0n2vB24Fu9c7ZA4QN4J6w2HGzrfDJJ3IWvaQ1XnayL74Cjv36ir+Er2
xcsjF7UFq7+Rpdg2bnJtUw+T/RCk7lU9av1O9kdXuiWZF4+Sd+NJQlJajGaM
HID1Oh+DTco4ORBHOsrzEqzZ9w2CfWV6ysoy5mBMiVcdyJH+JANye/m7oSay
AJhqTn6oT5mgvgcGj87zPhNkYQ90880rrmsnqctw9lh8/YiFLMhwp3KgbTSX
/e+9eFdT7XlirZn6XgxtbHmPXDIXgqZ+TWqUmfUQGBQLGwu0v6jL0V2YkbfO
Qhbk4BStFZIINr9CITYtaQguIguhsMrRX1GLLNQV8LzwQuquJwsKxGof37w/
xHoYRhU28nyXGephuK2Gd38DmVNC6SURsjJofgtKzBZ/Ob44n833cKx433KO
L2Y9HM/UQs4t9Sz1CIQYhuWiuDnqETBr05YtuJG5SOyUjt08NEbXC5HIfBgs
cneap74PiZ3JD16l03oT9qFPiJW0VbEehdz2kU7LNBs/CprMjhLZZbY+o6Hp
uVFRoqf1LESjsamlaLKddR5z8qWlNxQ0HnjoIoM+nlay63lUGbyUAbtp/dfx
iBy5m9T8lt0fg2LRa9vwBnp/xEBcWPTMuYT9jxj0PQiyO7x/qvYPzwN3nA==

     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], PointBox[CompressedData["
1:eJw10w0s1HEcx/Hr3HkInTYbLdohh3QSkpOHD+c8c6eGPGSGGrHcuGp62plu
pdVE6+nYilCpsPRIQtHTZT0htWwWpkjJpFnSw/y+/+2//17/9/77/fd7sEnL
3biVy+Fwgv/d/58L16T/cIEz72y3aTt7gYKGHu+8UAGzIZ54ztsHcambYZs4
j2c3bsRsjpRfqrlndw2YLVE0LXjVNMtntsLNaGHtyygesxCCLt/EAz+4zLbo
M8qsnhOTV0Jf90KVdGQRswhTKcmzERoOsyNil96r+ZT5p23Bq9Dp37jHTERe
DQulasBbQ3YBRBIjZ1P63hWSmViNdht5LcxnNK0ZnWQ3ZN8pLE9fSeO7Qzp7
6cPdg2QPdD3K52WMkNfBy7jnXHIw/b8ntP3LnZpryetRp/sq8+DrMXtBWbbL
xzGNLIGLRYLY/D7ZG0Un1hwOtKT52oAUVbzD3A6yDx6bvNbb+ZDsC6W0ZV+a
Bc23H0SFfrYlWWR/1Gwpuexxmwzoj5wor+LqL1gNxKw4NpojZ+YEwCVSrJjW
Ug+A9ZHuOrdB6oGw2SpwyrZj660OhO57hkiZTesvhe5QQ3L/depSzC+qSJdO
Ug9CX+28vNXZkPUgWOt1XxTmMXNkOF/fsb3+DnUZkkoN5hsmqAfD/bdf1hkh
23/qYCjjPgfcyqL9GIKQAN4DwxvUQ+BlV9nbNkA9FPmjmvF3vMWshwJjFomn
4pk5YYho7g2yu0Y9DGMnh3IcOqmHI3U/X1L+lno4rqSnaXkwZj0C4WUjBs71
zOoIjKW2tFZXUo+EfAh7q45Tj8RE47dLQnsT1qNQPBQ3UdHFrI7C1Nm1DT9z
qUcjfs+mgkJL6tG4XBueKOTR+ZTDg/sm1ctoCetyNB09LhFbUVdgJiF2824J
+x4KvB+8+tZ3mHW1ArLnCY0X6Py3K/Bor6rYd5jGj0HKR7OO0l42n4jBstOu
Ovs6Wu8YPNVmSHy+8Nv/Ak7KM7k=
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0., -3.910468461742797},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& )},
  FrameTicks->{{{{-4.605170185988092, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.01\"", 0.01, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 2}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-3.912023005428146, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.02\"", 0.02, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 2}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-2.995732273553991, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.05\"", 0.05, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 2}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-2.302585092994046, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.10\"", 0.1, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 2}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-1.6094379124341003`, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.20\"", 0.2, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 2}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-0.6931471805599453, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.50\"", 0.5, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 2}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {0., 
       FormBox[
        TagBox[
         InterpretationBox["\"1.00\"", 1., AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 2}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {0.6931471805599453, 
       FormBox[
        TagBox[
         InterpretationBox["\"2.00\"", 2., AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 2}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {1.6094379124341003`, 
       FormBox[
        TagBox[
         InterpretationBox["\"5.00\"", 5., AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 2}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-3.506557897319982, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.2188758248682006`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.8134107167600364`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.6592600369327783`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.5257286443082556`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.4079456086518722`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.2039728043259361`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.916290731874155, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.5108256237659907, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.35667494393873245`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.2231435513142097, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.10536051565782628`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.0986122886681098`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.3862943611198906`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}, {{-4.605170185988092, 
       FormBox["\"\"", TraditionalForm]}, {-3.912023005428146, 
       FormBox["\"\"", TraditionalForm]}, {-2.995732273553991, 
       FormBox["\"\"", TraditionalForm]}, {-2.302585092994046, 
       FormBox["\"\"", TraditionalForm]}, {-1.6094379124341003`, 
       FormBox["\"\"", TraditionalForm]}, {-0.6931471805599453, 
       FormBox["\"\"", TraditionalForm]}, {0., 
       FormBox["\"\"", TraditionalForm]}, {0.6931471805599453, 
       FormBox["\"\"", TraditionalForm]}, {1.6094379124341003`, 
       FormBox["\"\"", TraditionalForm]}, {-3.506557897319982, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.2188758248682006`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.8134107167600364`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.6592600369327783`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.5257286443082556`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.4079456086518722`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.2039728043259361`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.916290731874155, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.5108256237659907, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.35667494393873245`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.2231435513142097, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.10536051565782628`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.0986122886681098`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.3862943611198906`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}}, {Automatic, Automatic}},
  GridLines->{None, None},
  Method->{},
  PlotRange->{{0., 70.}, {-3.910468461742797, -0.4415373158323178}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, {{-4.605170185988092, 
      FormBox[
       TagBox[
        InterpretationBox["\"0.01\"", 0.01, AutoDelete -> True], 
        NumberForm[#, {
          DirectedInfinity[1], 2}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {-3.912023005428146, 
      FormBox[
       TagBox[
        InterpretationBox["\"0.02\"", 0.02, AutoDelete -> True], 
        NumberForm[#, {
          DirectedInfinity[1], 2}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {-2.995732273553991, 
      FormBox[
       TagBox[
        InterpretationBox["\"0.05\"", 0.05, AutoDelete -> True], 
        NumberForm[#, {
          DirectedInfinity[1], 2}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {-2.302585092994046, 
      FormBox[
       TagBox[
        InterpretationBox["\"0.10\"", 0.1, AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 2}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {-1.6094379124341003`, 
      FormBox[
       TagBox[
        InterpretationBox["\"0.20\"", 0.2, AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 2}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {-0.6931471805599453, 
      FormBox[
       TagBox[
        InterpretationBox["\"0.50\"", 0.5, AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 2}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {0., 
      FormBox[
       TagBox[
        InterpretationBox["\"1.00\"", 1., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 2}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {0.6931471805599453, 
      FormBox[
       TagBox[
        InterpretationBox["\"2.00\"", 2., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 2}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {1.6094379124341003`, 
      FormBox[
       TagBox[
        InterpretationBox["\"5.00\"", 5., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 2}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {-3.506557897319982, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-3.2188758248682006`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.8134107167600364`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.6592600369327783`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.5257286443082556`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.4079456086518722`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-1.2039728043259361`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.916290731874155, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.5108256237659907, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.35667494393873245`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.2231435513142097, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.10536051565782628`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.0986122886681098`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.3862943611198906`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}}}]], "Output",
 CellChangeTimes->{3.459148694234375*^9, 3.459148920703125*^9, 
  3.459161683453125*^9, 3.459162490484375*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"helicity", "=", 
   RowBox[{"Total", "[", 
    RowBox[{"MapThread", "[", 
     RowBox[{"Times", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Take", "[", 
         RowBox[{"out", ",", "3"}], "]"}], ",", 
        RowBox[{"rotd", "[", 
         RowBox[{
          RowBox[{"Sequence", "@@", 
           RowBox[{"Take", "[", 
            RowBox[{"out", ",", "3"}], "]"}]}], ",", "ghost"}], "]"}]}], 
       "}"}]}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.448356159578125*^9, 3.448356161765625*^9}, {
  3.44835632528125*^9, 3.44835632553125*^9}, {3.459148805203125*^9, 
  3.459148813328125*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"WithoutFict", "[", 
   RowBox[{"Max", "/@", 
    SuperscriptBox["helicity", "\[Transpose]"]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.459148824921875*^9, 3.459148838640625*^9}}],

Cell[BoxData[
 GraphicsBox[
  {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1:eJw103lIFGEYx/HVvNosldQOr1wtNSy807Tdn9d6rLrmUV5gmomaFyq14h9N
ZZIatGgeRWC5lqYppKXFliAelLemQmZGGtm1togRRNJBzzswDJ/5zjzMy/Ba
p+ZFndLk8Xj4e/67/j/UohYHd33TzQ9EdANDt79xZtm9ZD14FnduOMoHyIaY
C1K7S1yfk40Rd/0jb3ZymLwTxubCs/z4UbI5DH1l+n7TY+Q9cJzVa+ctTpIF
UI+l1cVnTZNt4fOhfaMieoq8D08la4LWi+Nke4zGxM2luYyQ92ObSdlrxTnW
HZHKr46NMXpJPogePZ3V1sxZshPyvw8fm1thdkZtcPSljnRmF/wMi38TIp8h
u8J0XZ24fJLNc0OhzaCHWwf7PnfcaTBq4ronyB6wr9NoLGhi6z+EImFr7fvB
F2RP3CvQUi5VDZG9oLtdWSgt7ycfhqtD+YlhYR/ZG4GK++6mJex/+OCKwab5
fNUT8hFMqz16Krp6yEKsW5ZaZXxhFkHLK69HYfiYDAhy+GJlMpkDSlM1ko8q
WPfFoiohJVrOui9klpa55dms+0E19IvvVc+6Hw4kOlWeVrLuD9ndxrbFJNb9
kSHQueXAZz0AubVVmfIE1gPwbOuytUsz64E4Y60dMW7EeiAMmy8LeJlsPWJM
ReW3iXvJnBje0pGOpB3s/SC4FMl+SPayHoQlTVHOV8tu6sH4PBJbb3GDzAVD
1tdWVW/L5oeAU8qFla8eUQ+BlYHCDdUPqYfC6mpizVsx66Ew0QkwCNrF5kuQ
JU4xOz5Az3MS1Cj0o/qFXdTDUGqymzc/R+bCUGbn+2ntJpsfjox3ipWW86yH
w1nDr0HF66QegYX00AttE7RfuQhY6I5tKZth+1cKm9IVu8gSep6TYuFasWPz
JOuRWGr9na292iL6A6goGOs=
    "]]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, Automatic},
  PlotRange->Automatic,
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{{3.459148821046875*^9, 3.45914883890625*^9}, {
   3.459161823890625*^9, 3.4591618269375*^9}, {3.459162492765625*^9, 
   3.45916249578125*^9}, 3.486887826403625*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"phi", "=", 
   RowBox[{"Outer", "[", 
    RowBox[{"ArcTan", ",", 
     RowBox[{"coor", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"coor", "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vphi", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"vx", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "ny", ",", "All"}], "]"}], "]"}], 
       RowBox[{"Sin", "[", "phi", "]"}]}], "-", 
      RowBox[{
       RowBox[{"vz", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "ny", ",", "All"}], "]"}], "]"}], 
       RowBox[{"Cos", "[", "phi", "]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"ny", ",", 
       RowBox[{
        RowBox[{"Dimensions", "[", "vx", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vrho", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"vx", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "ny", ",", "All"}], "]"}], "]"}], 
       RowBox[{"Cos", "[", "phi", "]"}]}], "+", 
      RowBox[{
       RowBox[{"vz", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "ny", ",", "All"}], "]"}], "]"}], 
       RowBox[{"Sin", "[", "phi", "]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"ny", ",", 
       RowBox[{
        RowBox[{"Dimensions", "[", "vx", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.427393291138*^9, 3.4273932918789997`*^9}, {
  3.427393425285*^9, 3.427393481516*^9}, {3.427393586804*^9, 
  3.427393621392*^9}, {3.427435180836*^9, 3.427435271693*^9}, {
  3.4274369167530003`*^9, 3.427436916927*^9}, {3.4283976370566*^9, 
  3.4283976376476*^9}}],

Cell[BoxData[
 RowBox[{"PrintRange", "[", 
  RowBox[{"Max", "/@", 
   RowBox[{"Flatten", "/@", 
    RowBox[{"Transpose", "[", "vy", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.427395137085*^9, 3.427395183943*^9}, {3.427395246123*^9,
    3.427395246368*^9}, {3.4274369344969997`*^9, 3.4274369381610003`*^9}, 
   3.427600228109375*^9, {3.427604543359375*^9, 3.427604544765625*^9}, {
   3.42761727959375*^9, 3.427617282390625*^9}, {3.4276232911875*^9, 
   3.42762330490625*^9}, {3.428220301453125*^9, 3.428220305296875*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fit", "[", 
  RowBox[{
   RowBox[{"Take", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"coor", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"Log", "/@", 
         RowBox[{"Max", "/@", 
          RowBox[{"Flatten", "/@", "vphi"}]}]}]}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "19"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "z"}], "}"}], ",", "z"}], "]"}]], "Input",
 CellChangeTimes->{{3.427437273605*^9, 3.427437324414*^9}, {
  3.42760057534375*^9, 3.427600590078125*^9}, {3.427600877546875*^9, 
  3.427600879234375*^9}, {3.427617782484375*^9, 3.4276177841875*^9}, {
  3.427623319875*^9, 3.4276233211875*^9}, {3.4479962598598003`*^9, 
  3.447996260749*^9}, {3.45414340178125*^9, 3.454143402359375*^9}, {
  3.4543998913125*^9, 3.454399891703125*^9}, {3.486887453263*^9, 
  3.486887453513*^9}, {3.486887490778625*^9, 3.486887490997375*^9}, {
  3.486887735403625*^9, 3.486887743278625*^9}}],

Cell[BoxData[
 RowBox[{"0.1208858705574359`", "\[InvisibleSpace]", "-", 
  RowBox[{"0.025440419078044334`", " ", "z"}]}]], "Output",
 CellChangeTimes->{
  3.427617857453125*^9, {3.427623313046875*^9, 3.42762332184375*^9}, 
   3.447960836426375*^9, 3.4479960563932*^9, 3.4479961113738003`*^9, 
   3.4479962165386*^9, 3.4479962611702003`*^9, 3.453894340515625*^9, 
   3.453896158921875*^9, 3.454056050234375*^9, 3.454063633*^9, 
   3.4540676054375*^9, 3.4541350301875*^9, 3.454143402796875*^9, 
   3.459148934203125*^9, 3.45916177359375*^9, {3.486887430372375*^9, 
   3.486887453903625*^9}, 3.486887491388*^9, {3.486887738263*^9, 
   3.4868877437005*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PrintRange", "[", 
  RowBox[{"Log", "/@", 
   RowBox[{"Max", "/@", 
    RowBox[{"Flatten", "/@", 
     RowBox[{"WithoutFict", "@", "vphi"}]}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PrintRange", "[", 
  RowBox[{"Log", "/@", 
   RowBox[{"Max", "/@", 
    RowBox[{"Flatten", "/@", 
     RowBox[{"WithoutFict", "@", "vrho"}]}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.427394612619*^9, 3.427394677493*^9}, {3.427394785447*^9,
    3.427394836615*^9}, {3.427394867925*^9, 3.427394887585*^9}, {
   3.427395101862*^9, 3.427395115153*^9}, {3.4274351908640003`*^9, 
   3.427435204149*^9}, {3.4274369771619997`*^9, 3.427437036578*^9}, {
   3.427600392140625*^9, 3.427600395078125*^9}, {3.42760088640625*^9, 
   3.4276008865625*^9}, {3.427601002640625*^9, 3.427601004921875*^9}, 
   3.4276020473125*^9, {3.4289915580625*^9, 3.428991602375*^9}, {
   3.433582409515625*^9, 3.4335824161875*^9}, {3.433843103359375*^9, 
   3.43384311615625*^9}, {3.433843219296875*^9, 3.433843219671875*^9}, {
   3.4470658540018*^9, 3.4470658547427998`*^9}, {3.45414338875*^9, 
   3.4541433921875*^9}, {3.454144344390625*^9, 3.454144344765625*^9}, {
   3.45415077653125*^9, 3.45415077696875*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJw10nlIFGEYx/HByrwQKa9QaDPRWK9NTS2P/Xm13iuLaeYtXrRrVqgRlaxH
JmtJEYa6LpG3lrq2HutRHli5hKZEQf1hiSShUEaUZBoVPu/AMHzmOzDvPPMe
yiyQZOtxHId/5//rzrEu3JAE8SXLynG6gc6feeqP5VVkA6Tus9HwiguFOzbD
M43rskpXRzZHwN2VLnv/NrI1tMK07VdOvWRbZPcund/q1JB5eMfv8tJtDJHt
4N74ZWUufZRsj5UL1xouDYyRHeC4Zy0kv5n5CH6Z+czradjzfEjvz7p3Lw6T
nSE1zpPtmhkku2J5yihmyoK9X4D4CU+lVN1DPopUyethK8N2sjumWxTKwCYV
2QP1n+arDzxSkD3xxjBLnL2aQPM5hjtXJ2fL6mvIXmjLLay43dFI9kaB7rpW
c6uF7APf9FWth1EX+TiqQ9pNZr71kE9gLdZSb0bdR/ZF0cJYc2KPhuyHzUjL
GNXFAbI/yg1MJ25sDZIDoDZMr5D5a8lCiOxUAT6xw2Tgj23KFUXCyI7lgKI2
unS/zyj1QAhlqWdap8jyQDTOec1KncaoB2H2+0tT80GyPAi/z9U5qfhPqAej
5qxase5Nlgfj82bukL4z6yHIkNUnV0pZD4GVSe576QPWQ/HDWdwtSGI9FPYf
Mgw8ONZPIkWQ45JkzvpJDOjy9oodWRfBWjApKu5g6xOhKPX5aRcLtv4wNPQq
KuONWQ9DGKd0E+xmPRxNVQ5LDxPZ94ejlacssblH8+IisKqfZhyfzeYXAVG7
SubmyXokti/zahoTaN7ySJRIMvoW4tj/iIJx8OOx2vkh6lEIyg+dLvclc9Fw
GJl+YcfR/5RHI6O/edWstJ96DNKL3p766kf7QR6Dxaz6wINP2X4RIy/nsD4X
1ktdjPU4R8FNHttvsSjPbC/TJbeM/wWWkDId
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.45914895425*^9, 3.45916183753125*^9, 
  3.486887437872375*^9, 3.48688783735675*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJw10mlIFGEcx/HNzBvRUjMMWkU0PDc1j9T2p655rO6almaamnjRrpShBlEy
3qElXUa2bpaurklerfedWLmIpgm+6IUUki9WCMUOCIUK/8/AMHzmOzDP/Oex
z7wan63H4/Hw7/x/3Ts2hbYJoS7xa4pJugHdr7yeL+V3yEZIO2in4RcXCvds
gWqNx5pS+5RshWOP1jscg9vIthgSpu9+dO0mH0Vi99drO680ZD7mXDp8tb8H
yQ5wbPy+vpAxSnbEesHtZzf6x8hOsD2wIcpvYT6ODQv/RT0Ne94FqU3zXp2r
w2Q3yEzz5PtnB8geWJs2kUxbs/cL4D/lo5D1dJFPIC1+efiwsZrshSpVjSKk
WUn2RsO3xdojr2vIPlgxzZJm65JoPifx6dbb+bKGOrIv2nILK+63N5L9wGkr
hzT3VGR/xGTohrxNOsgBaBSpzWa3usin8CPORm+2p5cciJKlsZbkLg05CH/E
NhLl9X5yMMqNzKeqdwbIp9FjnFEhDx4iC8G9GE0IiBsmA5cCGh7UJo3smQMe
1seWHvIfpR6CSHnaxdZpMheC1gXfeZnrGPVQrGzPmVsNkLlQyN7pRM9dxqmH
wSHHUrXlR+bCoF4dXTR0Y10EDd+7uFrGugh8s9zPspesh+Onm7RTkMJ6OEKU
lfY+PNbPIEeQ455ixfoZTGjzDKXOrEfAaXzXo6idrS8CJWnvL7hbs/VHorm7
pirRlPVInOUpPAX6rEdBP2FJ25HMvj8KXXxFid0TmhcvGtsG6aaJ2Wx+0YhT
K+WePqyLYXCTX9eYRPPmxKiOv9y7dI79jxhYhb0Zq18cpB4DcX74THkgmRcL
z5GZDw48+p9cLK70tegsSvuoS1DgUZS1GUT7gZPAskkl4U+w/SJFbe6ynV5k
N3Up9p13Ftzls/0Wh8eZ6jJtqmryL4N8MAs=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.45914895425*^9, 3.45916183753125*^9, 
  3.486887437872375*^9, 3.48688783741925*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\:0413\:0440\:0430\:0444\:0438\:043a\:0438 \:0441\:0435\:0447\:0435\
\:043d\:0438\:0439", "Subsubsection",
 CellChangeTimes->{{3.45914889146875*^9, 3.459148893828125*^9}, {
  3.459148993*^9, 3.459148996296875*^9}}],

Cell[CellGroupData[{

Cell["Funcs", "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.48998108784375*^9, 3.489981105796875*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Section\[CapitalPhi]", "[", 
   RowBox[{
   "vri_", ",", "v\[Phi]i_", ",", " ", "vzi_", ",", "\[Phi]0_", ",", " ", 
    "opts___"}], "]"}], ":=", " ", 
  RowBox[{"Block", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "func", ",", " ", "funct", ",", " ", "vmax", ",", " ", "vmin", ",", " ", 
      "gr", ",", " ", 
      RowBox[{"coor", "=", "Global`coor"}], ",", " ", 
      RowBox[{"bounds", "=", "Global`bounds"}], ",", " ", "\n", "\t\t", 
      RowBox[{"cf", "=", 
       RowBox[{
        RowBox[{"ColorFunction", "/.", 
         RowBox[{"{", "opts", "}"}]}], "/.", 
        RowBox[{"{", 
         RowBox[{"ColorFunction", "\[Rule]", "\"\<SunsetColors\>\""}], 
         "}"}]}]}], ",", "\n", "\t\t", 
      RowBox[{"marg", "=", 
       RowBox[{
        RowBox[{"SpaceMargin", "/.", 
         RowBox[{"{", "opts", "}"}]}], "/.", 
        RowBox[{"Options", "[", "SectionRZ", "]"}]}]}], ",", "\n", "\t\t", 
      RowBox[{"ar", "=", 
       RowBox[{
        RowBox[{"AspectRatio", "/.", 
         RowBox[{"{", "opts", "}"}]}], "/.", 
        RowBox[{"Options", "[", "SectionRZ", "]"}]}]}], ",", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"rc", "=", 
       RowBox[{
        RowBox[{"RadiusCurvature", "/.", 
         RowBox[{"{", "opts", "}"}]}], "/.", 
        RowBox[{"{", 
         RowBox[{"RadiusCurvature", "\[Rule]", "0"}], "}"}]}]}], ",", "\n", 
      "\t\t", "intervals", ",", "NormForm", ",", "\n", "\t\t", "r", ",", 
      "\[Phi]", ",", "z"}], "\n", "\t", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"bounds", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.1"}], ",", "3.5"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"bounds", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "=", 
      RowBox[{"2", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"intervals", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Apply", "[", 
          RowBox[{"Subtract", ",", "#"}], "]"}]}], "&"}], "/@", "bounds"}]}], 
     ";", "\n", "\t", 
     RowBox[{
      RowBox[{"NormForm", "[", "n_", "]"}], ":=", 
      RowBox[{"ToString", "[", 
       RowBox[{"CForm", "[", 
        RowBox[{"ACPackages`ACListNumerics`CutNumber", "[", "n", "]"}], "]"}],
        "]"}]}], ";", "\n", "\t", 
     RowBox[{"func", "=", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"r", ",", " ", "z"}], "}"}], ",", " ", 
        RowBox[{"v\[Phi]i", "[", 
         RowBox[{
          RowBox[{"r", " ", 
           RowBox[{"Cos", "[", "\[Phi]0", "]"}]}], ",", 
          RowBox[{"r", " ", 
           RowBox[{"Sin", "[", "\[Phi]0", "]"}]}], ",", " ", "z"}], "]"}]}], 
       "]"}]}], ";", " ", 
     RowBox[{"funct", " ", "=", " ", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Outer", "[", 
        RowBox[{"func", ",", " ", 
         RowBox[{"coor", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"coor", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"vmax", " ", "=", " ", 
      RowBox[{"Max", "[", "funct", "]"}]}], ";", " ", 
     RowBox[{"vmin", " ", "=", " ", 
      RowBox[{"Min", "[", "funct", "]"}]}], ";", "\n", "\t", 
     RowBox[{"func", " ", "=", " ", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"r", ",", "z"}], "}"}], ",", " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"vzi", "[", 
            RowBox[{
             RowBox[{"r", " ", 
              RowBox[{"Cos", "[", "\[Phi]0", "]"}]}], ",", 
             RowBox[{"r", " ", 
              RowBox[{"Sin", "[", "\[Phi]0", "]"}]}], ",", "z"}], "]"}], "^", 
           "2"}], " ", "+", " ", 
          RowBox[{
           RowBox[{"vri", "[", 
            RowBox[{
             RowBox[{"r", " ", 
              RowBox[{"Cos", "[", "\[Phi]0", "]"}]}], ",", 
             RowBox[{"r", " ", 
              RowBox[{"Sin", "[", "\[Phi]0", "]"}]}], ",", " ", "z"}], "]"}], 
           "^", "2"}]}], "]"}]}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"funct", " ", "=", " ", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Outer", "[", 
        RowBox[{"func", ",", " ", 
         RowBox[{"coor", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{"coor", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "]"}]}], ";", " ", "\n", 
     "\t", 
     RowBox[{"vecmax", " ", "=", " ", 
      RowBox[{"Max", "[", "funct", "]"}]}], ";", "\n", "\t", 
     RowBox[{"gr", " ", "=", " ", 
      RowBox[{"Show", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{"ContourPlot", "[", 
         RowBox[{
          RowBox[{"v\[Phi]i", "[", 
           RowBox[{
            RowBox[{"r", " ", 
             RowBox[{"Cos", "[", "\[Phi]0", "]"}]}], ",", 
            RowBox[{"r", " ", 
             RowBox[{"Sin", "[", "\[Phi]0", "]"}]}], ",", " ", "z"}], "]"}], 
          ",", " ", 
          RowBox[{"{", 
           RowBox[{"r", ",", 
            RowBox[{"bounds", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", " ", 
            RowBox[{"bounds", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"z", ",", " ", 
            RowBox[{"bounds", "[", 
             RowBox[{"[", 
              RowBox[{"3", ",", "1"}], "]"}], "]"}], ",", " ", 
            RowBox[{"bounds", "[", 
             RowBox[{"[", 
              RowBox[{"3", ",", "2"}], "]"}], "]"}]}], "}"}], ",", " ", "\n", 
          "\t\t\t", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
          RowBox[{"DisplayFunction", "->", "Identity"}], ",", " ", 
          RowBox[{"ColorFunction", "->", "cf"}], ",", " ", 
          RowBox[{"ContourLines", "\[Rule]", "False"}], ",", " ", 
          RowBox[{"Contours", "\[Rule]", "20"}], ",", 
          RowBox[{"PlotPoints", "\[Rule]", "50"}]}], "\n", "\t\t\t", "]"}], 
        ",", "\n", "\t\t", 
        RowBox[{"VectorPlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"vri", "[", 
             RowBox[{
              RowBox[{"r", " ", 
               RowBox[{"Cos", "[", "\[Phi]0", "]"}]}], ",", 
              RowBox[{"r", " ", 
               RowBox[{"Sin", "[", "\[Phi]0", "]"}]}], ",", " ", "z"}], "]"}],
             ",", 
            RowBox[{"vzi", "[", 
             RowBox[{
              RowBox[{"r", " ", 
               RowBox[{"Cos", "[", "\[Phi]0", "]"}]}], ",", 
              RowBox[{"r", " ", 
               RowBox[{"Sin", "[", "\[Phi]0", "]"}]}], ",", " ", "z"}], 
             "]"}]}], "}"}], ",", "\n", "\t\t\t", 
          RowBox[{"{", 
           RowBox[{"r", ",", " ", 
            RowBox[{"bounds", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", " ", 
            RowBox[{"bounds", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "}"}], ",", " ", "\n", 
          "\t\t\t", 
          RowBox[{"{", 
           RowBox[{"z", ",", " ", 
            RowBox[{"bounds", "[", 
             RowBox[{"[", 
              RowBox[{"3", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"bounds", "[", 
             RowBox[{"[", 
              RowBox[{"3", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"VectorScale", "\[Rule]", "0.05"}], ",", "\n", "\t\t\t ", 
          RowBox[{"Frame", "->", "False"}], ",", 
          RowBox[{"VectorPoints", "->", " ", "25"}], ",", 
          RowBox[{"DisplayFunction", "->", "Identity"}]}], "\n", "\t\t", 
         "]"}], ",", "\n", "\t\t", 
        RowBox[{"Graphics", "[", 
         RowBox[{"Circle", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"rc", ",", " ", 
             RowBox[{"Mean", "[", 
              RowBox[{"bounds", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "]"}]}], "}"}], ",", " ", 
           "1"}], "]"}], "]"}], ",", "\n", "  \t\t", 
        RowBox[{"Graphics", "[", 
         RowBox[{"Arrow", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"bounds", "[", 
               RowBox[{"[", 
                RowBox[{"3", ",", "1"}], "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"bounds", "[", 
               RowBox[{"[", 
                RowBox[{"3", ",", "2"}], "]"}], "]"}]}], "}"}]}], "}"}], 
          "]"}], "]"}], ",", "\n", "\t\t", 
        RowBox[{"AspectRatio", "->", "ar"}], ",", " ", "\n", "\t\t", 
        RowBox[{"PlotRange", " ", "->", " ", 
         RowBox[{"MapThread", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"#1", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "-", 
               RowBox[{"marg", " ", "#2"}]}], ",", 
              RowBox[{
               RowBox[{"#1", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "+", 
               RowBox[{"marg", " ", "#2"}]}]}], "}"}], "&"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Drop", "[", 
              RowBox[{"#", ",", 
               RowBox[{"{", "2", "}"}]}], "]"}], "&"}], "/@", 
            RowBox[{"{", 
             RowBox[{"bounds", ",", "intervals"}], "}"}]}]}], "]"}]}]}], "\n",
        "\t", "]"}]}]}]}], "\n", "\t", 
   RowBox[{"(*", 
    RowBox[{"ShowLegend", "[", 
     RowBox[{"gr", ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"cf", "[", 
          RowBox[{"1", " ", "-", " ", "#"}], "]"}], " ", "&"}], ",", " ", 
        "10", ",", " ", 
        RowBox[{"NormForm", "[", "vmin", "]"}], ",", " ", 
        RowBox[{"NormForm", "[", "vmax", "]"}], ",", "\n", "\t\t", 
        RowBox[{"LegendPosition", "->", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.9"}], ",", " ", "1.1"}], "}"}]}], ",", " ", 
        RowBox[{"LegendOrientation", "->", "Horizontal"}], ",", " ", 
        RowBox[{"LegendSize", "->", 
         RowBox[{"{", 
          RowBox[{"1.9", ",", " ", "0.3"}], "}"}]}], ",", "\n", "\t\t", 
        RowBox[{"LegendTextOffset", "->", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"-", "1"}]}], "}"}]}], ",", " ", 
        RowBox[{"LegendLabel", "->", 
         RowBox[{"(", 
          RowBox[{"\"\<|vector|=\>\"", "<>", 
           RowBox[{"NormForm", "[", "vecmax", "]"}]}], ")"}]}], ",", "\n", 
        "\t\t", 
        RowBox[{"LegendBorderSpace", " ", "->", "0.2"}]}], "}"}], ",", " ", 
      RowBox[{"DisplayFunction", "->", "Identity"}]}], "\n", "\t", "]"}], 
    "*)"}], "\n", "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.489979330984375*^9, 3.4899793503125*^9}, 
   3.489981105796875*^9, {3.489981144609375*^9, 3.489981178421875*^9}, {
   3.489981210359375*^9, 3.489981217328125*^9}, 3.4899812921875*^9, {
   3.4899818620625*^9, 3.4899818685625*^9}, {3.4899820524375*^9, 
   3.4899820963125*^9}, {3.489982225953125*^9, 3.48998228715625*^9}, {
   3.489982519671875*^9, 3.489982530765625*^9}, {3.489983135421875*^9, 
   3.4899831363125*^9}, {3.48998322428125*^9, 3.489983241875*^9}, {
   3.4899846086875*^9, 3.4899846426875*^9}, {3.4899863751875*^9, 
   3.4899863769375*^9}, {3.489986540265625*^9, 3.4899865871875*^9}, {
   3.489987774*^9, 3.48998780009375*^9}, {3.48998783465625*^9, 
   3.489987867140625*^9}, {3.4899885413125*^9, 3.489988541984375*^9}, {
   3.489988646828125*^9, 3.489988708234375*^9}, {3.4899887434375*^9, 
   3.489988743609375*^9}, {3.489988832921875*^9, 3.48998884496875*^9}, {
   3.489988886390625*^9, 3.4899889438125*^9}, {3.489988984265625*^9, 
   3.4899890255*^9}, {3.489992026828125*^9, 3.489992026875*^9}, {
   3.489992072234375*^9, 3.48999207625*^9}, {3.48999236671875*^9, 
   3.489992368171875*^9}, {3.48999525740625*^9, 3.489995258484375*^9}, {
   3.4899959993125*^9, 3.48999600528125*^9}, {3.489996153515625*^9, 
   3.489996191890625*^9}, {3.48999625909375*^9, 3.489996291515625*^9}, {
   3.489996329359375*^9, 3.489996365828125*^9}, {3.489996399953125*^9, 
   3.489996471859375*^9}, {3.49190169576775*^9, 3.49190173883025*^9}, {
   3.4919772924865*^9, 3.49197729395525*^9}, {3.492159384252125*^9, 
   3.4921593896115*^9}, {3.492164561799*^9, 3.492164564627125*^9}, {
   3.492323101283375*^9, 3.49232310814275*^9}, {3.4923277272365*^9, 
   3.49232775626775*^9}, {3.492327807783375*^9, 3.492327807924*^9}, {
   3.492329710799*^9, 3.492329716158375*^9}, 3.492330092627125*^9, {
   3.492331240783375*^9, 3.492331246752125*^9}, 3.492403538158375*^9, 
   3.496989250067*^9, {3.49725834584825*^9, 3.49725834666075*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DrawSectionDec", "[", 
    RowBox[{
     RowBox[{"arrx_", "?", "ArrayQ"}], ",", " ", 
     RowBox[{"arry_", "?", "ArrayQ"}], ",", " ", 
     RowBox[{"arrz_", "?", "ArrayQ"}], ",", " ", "opts___"}], "]"}], ":=", 
   RowBox[{"Block", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "xi", ",", "yi", ",", "zi", ",", "phi", ",", "Cphi", ",", "Sphi", ",", 
       RowBox[{"(*", 
        RowBox[{"Br", ",", "Bphi", ","}], "*)"}], "\n", "\t\t\t", 
       RowBox[{"ptsec", "=", 
        RowBox[{
         RowBox[{"PointOfSections", "/.", 
          RowBox[{"{", "opts", "}"}]}], "/.", 
         RowBox[{"Options", "[", "DrawSection", "]"}]}]}], ",", "\n", 
       "\t\t\t", 
       RowBox[{"ar", "=", 
        RowBox[{
         RowBox[{"AspectRatio", "/.", 
          RowBox[{"{", "opts", "}"}]}], "/.", 
         RowBox[{"Options", "[", "DrawSection", "]"}]}]}], ",", "\n", 
       "\t\t\t", 
       RowBox[{"cf", "=", 
        RowBox[{
         RowBox[{"ColorFunction", "/.", 
          RowBox[{"{", "opts", "}"}]}], "/.", 
         RowBox[{"Options", "[", "DrawSection", "]"}]}]}], ",", "\n", 
       "\t\t\t", 
       RowBox[{"pl", "=", 
        RowBox[{
         RowBox[{"PlotLabel", "/.", 
          RowBox[{"{", "opts", "}"}]}], "/.", 
         RowBox[{"Options", "[", "DrawSection", "]"}]}]}], ",", " ", "pltext",
        ",", "\n", "\t\t\t", 
       RowBox[{"os", "=", 
        RowBox[{
         RowBox[{"OnlySection", "/.", 
          RowBox[{"{", "opts", "}"}]}], "/.", 
         RowBox[{"Options", "[", "DrawSection", "]"}]}]}], ",", " ", 
       "grseq"}], "\n", "\t\t", "}"}], ",", "\[IndentingNewLine]", "\t\t", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"phi", "=", 
        RowBox[{"Outer", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ArcTan", "[", 
            RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", 
          RowBox[{"Global`coor", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"Global`coor", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";"}], "*)"}], 
     RowBox[{
      RowBox[{"phi", "=", 
       RowBox[{"ptsec", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", "\t\t", 
      RowBox[{"Cphi", "=", 
       RowBox[{"Cos", "[", "phi", "]"}]}], ";", 
      RowBox[{"Sphi", "=", 
       RowBox[{"Sin", "[", "phi", "]"}]}], ";", "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Br", ",", "Bphi"}], "}"}], "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"arrx", " ", "Cphi"}], "+", 
          RowBox[{"arry", " ", "Sphi"}]}], ",", 
         RowBox[{
          RowBox[{"arry", " ", "Cphi"}], "-", 
          RowBox[{"arrx", " ", "Sphi"}]}]}], "}"}]}], ";", "\n", "\t\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xi", ",", "yi", ",", "zi"}], "}"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"ListInterpolation", "[", 
          RowBox[{"#", ",", "\n", "\t\t\t", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Min", "[", 
                RowBox[{"Global`coor", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
               RowBox[{"Max", "[", 
                RowBox[{"Global`coor", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}], ",", "\n", 
             "\t\t\t", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Min", "[", 
                RowBox[{"Global`coor", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
               RowBox[{"Max", "[", 
                RowBox[{"Global`coor", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}], ",", "\n", 
             "\t\t\t", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Min", "[", 
                RowBox[{"Global`coor", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "]"}], ",", 
               RowBox[{"Max", "[", 
                RowBox[{"Global`coor", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "]"}]}], "}"}]}], "\n", 
            "\t\t\t", "}"}], ",", "\n", "\t\t\t", 
           RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}], "&"}], "/@", 
        RowBox[{"{", 
         RowBox[{"Br", ",", "Bphi", ",", "arrz"}], "}"}]}]}], ";", "\n", 
      "\t\t", 
      RowBox[{"grseq", "=", 
       RowBox[{"Section\[CapitalPhi]", "[", 
        RowBox[{"xi", ",", "yi", ",", "zi", ",", 
         RowBox[{"ptsec", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "opts"}], "]"}]}], ";", "\n", 
      "\t\t", 
      RowBox[{"grseq", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", "os"}], ",", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", "grseq", "}"}], ",", "\n", "\t\t\t", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"SectionR\[CapitalPhi]", "[", 
              RowBox[{"xi", ",", "yi", ",", "zi", ",", 
               RowBox[{"ptsec", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"ColorFunction", "->", "cf"}], ",", 
               RowBox[{"AspectRatio", "->", "ar"}]}], "]"}], ",", "\n", 
             "\t\t\t", 
             RowBox[{"Section\[CapitalPhi]Z", "[", 
              RowBox[{"xi", ",", "yi", ",", "zi", ",", 
               RowBox[{"ptsec", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"ColorFunction", "->", "cf"}], ",", 
               RowBox[{"AspectRatio", "->", "ar"}]}], "]"}]}], "}"}]}], "\n", 
          "\t\t\t", "]"}], ",", "\n", "\t\t", 
         RowBox[{"{", "grseq", "}"}]}], "\n", "\t\t", "]"}]}], ";", "\n", 
      "\t\t", 
      RowBox[{"pltext", " ", "=", " ", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{"pl", "===", "None"}], ",", "\"\<\>\"", ",", "\n", 
         "\t\t\t\t\t", 
         RowBox[{
          RowBox[{"Head", "[", "pl", "]"}], "===", "String"}], ",", "pl", ",",
          "\n", "\t\t\t\t\t", 
         RowBox[{"pl", "===", "Automatic"}], ",", 
         RowBox[{"(", 
          RowBox[{"\"\<t=\>\"", "<>", 
           RowBox[{"ToString", "[", "Global`tsec", "]"}]}], ")"}]}], "\n", 
        "\t\t\t\t", "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"Return", "[", 
       RowBox[{"If", "[", 
        RowBox[{"os", ",", 
         RowBox[{"First", "[", "grseq", "]"}], ",", 
         RowBox[{"GraphicsArray", "[", 
          RowBox[{"grseq", ",", 
           RowBox[{"AspectRatio", "->", "1"}], ",", 
           RowBox[{"PlotLabel", "->", "pltext"}]}], "]"}]}], "]"}], "\n", 
       "\t\t\t", "]"}], ";"}]}], "\n", "\t", "]"}]}], "\n"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.489979635171875*^9, 3.489979636328125*^9}, {
   3.489979676203125*^9, 3.489979677859375*^9}, {3.48998015334375*^9, 
   3.489980198828125*^9}, {3.48998024128125*^9, 3.489980244796875*^9}, {
   3.489980481375*^9, 3.489980508921875*^9}, 3.489981105796875*^9, {
   3.489981229375*^9, 3.489981269765625*^9}, {3.4899816874375*^9, 
   3.48998172678125*^9}, {3.48998176065625*^9, 3.489981760875*^9}, 
   3.489982012484375*^9, {3.48998264125*^9, 3.489982667078125*^9}, {
   3.48998458353125*^9, 3.489984584390625*^9}, {3.489986164015625*^9, 
   3.4899861745625*^9}, {3.489986249140625*^9, 3.489986304703125*^9}, {
   3.489986441453125*^9, 3.489986459671875*^9}, {3.4899867029375*^9, 
   3.48998672828125*^9}, {3.491901722439625*^9, 3.49190172533025*^9}, 
   3.492327813845875*^9, {3.492329783908375*^9, 3.492329857814625*^9}}]
}, Closed]],

Cell[BoxData[
 RowBox[{"DrawSection", "[", 
  RowBox[{
   RowBox[{"Sequence", "@@", 
    RowBox[{"Take", "[", 
     RowBox[{"out", ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "4"}], "}"}], "-", "1"}]}], "]"}]}], ",", 
   RowBox[{"PointOfSections", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.5", ",", "0", ",", "0"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.435648899019875*^9, 3.4356489241605*^9}, {
  3.435650867707375*^9, 3.43565088887925*^9}, {3.453575840117*^9, 
  3.4535758409282*^9}, {3.454311717363*^9, 3.4543117183389997`*^9}, {
  3.459161522875*^9, 3.459161523671875*^9}, {3.4868879215755*^9, 
  3.486887921653625*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Bxi", ",", "Byi", ",", "Bzi"}], "}"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"ListInterpolation", "[", 
      RowBox[{"#", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Min", "[", 
            RowBox[{
            "coor", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            "]"}], ",", 
           RowBox[{"Max", "[", 
            RowBox[{
            "coor", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Min", "[", 
            RowBox[{
            "coor", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
            "]"}], ",", 
           RowBox[{"Max", "[", 
            RowBox[{
            "coor", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
            "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Min", "[", 
            RowBox[{
            "coor", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
            "]"}], ",", 
           RowBox[{"Max", "[", 
            RowBox[{
            "coor", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
            "]"}]}], "}"}]}], "}"}], ",", 
       RowBox[{
        StyleBox["InterpolationOrder", "MR"], 
        StyleBox["\[Rule]", "MR"], "3"}]}], "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{"Bx", ",", "By", ",", "Bz"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[Phi]max", "=", 
  RowBox[{"\[Phi]", "/.", 
   RowBox[{"Last", "[", 
    RowBox[{"Maximize", "[", 
     RowBox[{
      RowBox[{"Bzi", "[", 
       RowBox[{
        FractionBox[
         RowBox[{"Cos", "[", "\[Phi]", "]"}], "\[Kappa]"], ",", 
        FractionBox[
         RowBox[{"Sin", "[", "\[Phi]", "]"}], "\[Kappa]"], ",", "0"}], "]"}], 
      ",", "\[Phi]"}], "]"}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.489995926703125*^9, 3.48999593065625*^9}, {
  3.48999608203125*^9, 3.489996084375*^9}, {3.489997220796875*^9, 
  3.489997225453125*^9}, {3.4899984940625*^9, 3.4899984948125*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.5961733067332169`"}]], "Output",
 CellChangeTimes->{3.491709128877125*^9, 3.491901822549*^9, 
  3.491908792345875*^9, 3.49197727951775*^9, 3.49199788533025*^9, 
  3.492020048877125*^9, 3.4921359044865*^9, 3.492136891174*^9, 
  3.492138216799*^9, 3.4921433706115*^9, 3.49214441726775*^9, 
  3.49232881276775*^9, 3.4924046196115*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ListVectorPlot", "[", 
    RowBox[{"Transpose", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"WithoutFict", "[", "Bx", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "All", ",", "i"}], "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"WithoutFict", "[", "By", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "All", ",", "i"}], "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", 
     RowBox[{
      RowBox[{"Last", "[", 
       RowBox[{"Dimensions", "[", "Bx", "]"}], "]"}], "-", 
      RowBox[{"2", "ghost"}]}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.490940538984375*^9, 3.490940580125*^9}, {
  3.4909407340625*^9, 3.490940735546875*^9}}],

Cell[BoxData[
 RowBox[{"gr", "=", 
  RowBox[{"DrawSectionDec", "[", 
   RowBox[{"Bx", ",", "By", ",", "Bz", ",", 
    RowBox[{"PointOfSections", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Phi]max", "+", 
        RowBox[{"1", 
         FractionBox["\[Pi]", "4"]}]}], ",", "0", ",", "0"}], "}"}]}], ",", 
    RowBox[{"OnlySection", "\[Rule]", "True"}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"RadiusCurvature", "\[Rule]", 
     FractionBox["1", "\[Kappa]"]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "None"}], ",", 
    RowBox[{"ColorFunction", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"ColorData", "[", "\"\<SunsetColors\>\"", "]"}], "[", "#", 
        "]"}], "&"}], ")"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.489813257171875*^9, 3.489813260609375*^9}, 
   3.489816823140625*^9, {3.48998052153125*^9, 3.489980534046875*^9}, {
   3.48998632671875*^9, 3.489986362875*^9}, 3.489986420296875*^9, {
   3.48998646815625*^9, 3.489986505921875*^9}, {3.4899866119375*^9, 
   3.489986630640625*^9}, {3.489986682875*^9, 3.489986686171875*^9}, {
   3.4899874695625*^9, 3.489987469765625*^9}, {3.48998876609375*^9, 
   3.4899887833125*^9}, 3.48998903675*^9, {3.48999593596875*^9, 
   3.489995936109375*^9}, {3.489996096828125*^9, 3.489996098546875*^9}, {
   3.489996500640625*^9, 3.48999650084375*^9}, {3.48999681565625*^9, 
   3.489996816484375*^9}, {3.489996900703125*^9, 3.489996902328125*^9}, {
   3.489997229546875*^9, 3.4899972319375*^9}, 3.489997385859375*^9, {
   3.489997457125*^9, 3.489997466703125*^9}, {3.48999784646875*^9, 
   3.489997870125*^9}, {3.489997965875*^9, 3.489997975375*^9}, 
   3.489998506484375*^9, 3.489998670734375*^9, 3.4899988485*^9, {
   3.49094090965625*^9, 3.490940933578125*^9}, 3.490940967640625*^9, {
   3.490941007859375*^9, 3.490941016359375*^9}, {3.490941151578125*^9, 
   3.490941166234375*^9}, {3.490941209015625*^9, 3.490941223453125*^9}, {
   3.490941265953125*^9, 3.49094127365625*^9}, 3.49111674753125*^9, 
   3.4911300804085007`*^9, 3.49119920345525*^9, {3.491996151049*^9, 
   3.491996153064625*^9}, 3.491997750908375*^9, {3.49199882533025*^9, 
   3.49199882651775*^9}, 3.492020044127125*^9, 3.492020088689625*^9, {
   3.492159103439625*^9, 3.492159133595875*^9}, {3.49215921858025*^9, 
   3.49215921920525*^9}, {3.492159299502125*^9, 3.49215935014275*^9}, {
   3.49216451026775*^9, 3.4921645106115*^9}, {3.49222168964275*^9, 
   3.492221716502125*^9}, {3.49232302864275*^9, 3.49232302883025*^9}, {
   3.492323059924*^9, 3.492323076877125*^9}, 3.49232313583025*^9, 
   3.49232648270525*^9, 3.492328671408375*^9, 3.4923302544865*^9, 
   3.49240342439275*^9, 3.492404132220875*^9, 3.492404517658375*^9, {
   3.4924052088615*^9, 3.49240522720525*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"\"\<final\>\"", "<>", 
    RowBox[{"ToString", "[", "\[Kappa]", "]"}], "<>", "\"\<sec1.gif\>\""}], 
   ",", "gr", ",", 
   RowBox[{"ImageResolution", "\[Rule]", "300"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "640"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4899968755625*^9, 3.48999690834375*^9}, {
   3.489997379109375*^9, 3.48999738828125*^9}, {3.489997460015625*^9, 
   3.48999747003125*^9}, {3.489997849859375*^9, 3.48999787890625*^9}, 
   3.489998519125*^9, 3.49094097221875*^9, {3.490941011609375*^9, 
   3.490941019484375*^9}, {3.490941154515625*^9, 3.49094117040625*^9}, {
   3.490941214296875*^9, 3.490941229046875*^9}, 3.490941269359375*^9}],

Cell[BoxData["\<\"final0.9sec1.gif\"\>"], "Output",
 CellChangeTimes->{{3.489996895109375*^9, 3.489996908765625*^9}, {
   3.489997386078125*^9, 3.4899973918125*^9}, {3.489997468546875*^9, 
   3.4899974729375*^9}, {3.489997860171875*^9, 3.489997881875*^9}, 
   3.489998619875*^9, {3.490940967671875*^9, 3.4909409756875*^9}, {
   3.490941017265625*^9, 3.490941022859375*^9}, {3.49094116653125*^9, 
   3.4909411735625*^9}, {3.490941224671875*^9, 3.490941232375*^9}, 
   3.490941282640625*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"\"\<final\>\"", "<>", 
     RowBox[{"ToString", "[", "\[Kappa]", "]"}], "<>", "\"\<sec1.gif\>\""}], 
    ",", 
    RowBox[{"DrawSectionDec", "[", 
     RowBox[{"Bx", ",", "By", ",", "Bz", ",", 
      RowBox[{"PointOfSections", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Phi]max", "+", 
          RowBox[{"0", 
           FractionBox["\[Pi]", "2"]}]}], ",", "0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"OnlySection", "\[Rule]", "True"}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"RadiusCurvature", "\[Rule]", 
       FractionBox["1", "\[Kappa]"]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "None"}]}], "]"}], ",", 
    RowBox[{"ImageResolution", "\[Rule]", "300"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "640"}]}], "]"}], 
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"\"\<final\>\"", "<>", 
     RowBox[{"ToString", "[", "\[Kappa]", "]"}], "<>", "\"\<sec2.gif\>\""}], 
    ",", 
    RowBox[{"DrawSectionDec", "[", 
     RowBox[{"Bx", ",", "By", ",", "Bz", ",", 
      RowBox[{"PointOfSections", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Phi]max", "+", 
          RowBox[{"1", 
           FractionBox["\[Pi]", "2"]}]}], ",", "0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"OnlySection", "\[Rule]", "True"}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"RadiusCurvature", "\[Rule]", 
       FractionBox["1", "\[Kappa]"]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "None"}]}], "]"}], ",", 
    RowBox[{"ImageResolution", "\[Rule]", "300"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "640"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.4909412880625*^9, 3.490941299734375*^9}, 
   3.490941864734375*^9, 3.491202134564625*^9, 3.49120507233025*^9, 
   3.491578536939625*^9, {3.4915796218615*^9, 3.4915796226115*^9}, {
   3.491632618314625*^9, 3.49163261926775*^9}, 3.491639760564625*^9, 
   3.4916436531115*^9, 3.491644735345875*^9, 3.491645917470875*^9, 
   3.491647179252125*^9}],

Cell[BoxData[
 RowBox[{"\<\"final0.75909sec1.gif\"\>", 
  " ", "\<\"final0.75909sec2.gif\"\>"}]], "Output",
 CellChangeTimes->{3.4917069878615*^9, 3.491707248674*^9, 3.4917074738615*^9, 
  3.491707719252125*^9, 3.491707943174*^9, 3.4917081746115*^9, 
  3.4917084108615*^9, 3.491708675220875*^9, 3.491708909158375*^9, 
  3.49170914083025*^9, 3.492135929127125*^9, 3.49213691576775*^9, 
  3.49213823826775*^9, 3.49214339589275*^9, 3.4921444416115*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"DrawSection", "[", 
  RowBox[{
   SuperscriptBox["Bx", "\[Transpose]"], ",", 
   SuperscriptBox["By", "\[Transpose]"], ",", 
   SuperscriptBox["Bz", "\[Transpose]"], ",", 
   RowBox[{"PointOfSections", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"OnlySection", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.3959993133079977`*^9, 3.3959993288879976`*^9}, {
   3.4085241121809998`*^9, 3.408524116578*^9}, 3.4356493330355*^9, 
   3.435649880519875*^9, 3.435664684363625*^9, {3.489812476578125*^9, 
   3.489812485171875*^9}, {3.489812800046875*^9, 3.4898128503125*^9}, {
   3.490941095609375*^9, 3.490941097546875*^9}, {3.491117002140625*^9, 
   3.491117002328125*^9}}],

Cell[BoxData[
 RowBox[{"DrawSection", "[", 
  RowBox[{"jx", ",", "jy", ",", "jz", ",", 
   RowBox[{"PointOfSections", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.5", ",", "0", ",", "0"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.3959993133079977`*^9, 3.3959993288879976`*^9}, {
   3.4085241121809998`*^9, 3.408524116578*^9}, {3.408524345966*^9, 
   3.408524349671*^9}, 3.435664686738625*^9}],

Cell[BoxData[
 RowBox[{"PrintRange", "[", 
  RowBox[{"WithoutFict", "@", 
   RowBox[{"Bx", "\[LeftDoubleBracket]", 
    RowBox[{"10", ",", "All", ",", "25"}], "\[RightDoubleBracket]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.411725979295*^9, 3.4117260972939997`*^9}, {
  3.4118171587349997`*^9, 3.411817162085*^9}, {3.411817214425*^9, 
  3.4118172449370003`*^9}, {3.411920335148*^9, 3.411920342076*^9}, {
  3.414393475776*^9, 3.414393478315*^9}, {3.416811010764*^9, 
  3.4168110119890003`*^9}}],

Cell[BoxData[
 RowBox[{"PrintRange", "[", 
  RowBox[{"Take", "[", 
   RowBox[{
    RowBox[{"Abs", "@", 
     RowBox[{"Fourier", "@", 
      RowBox[{"WithoutFict", "@", 
       RowBox[{"Bx", "\[LeftDoubleBracket]", 
        RowBox[{"15", ",", "All", ",", "15"}], 
        "\[RightDoubleBracket]"}]}]}]}], ",", "10"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.411725979295*^9, 3.4117260972939997`*^9}, {
   3.4118171587349997`*^9, 3.411817162085*^9}, {3.411817214425*^9, 
   3.4118172173059998`*^9}, 3.411920357159*^9, {3.412357840481*^9, 
   3.412357851087*^9}, {3.4123579287790003`*^9, 3.412358017223*^9}, 
   3.4127017185290003`*^9, {3.414393483159*^9, 3.414393492243*^9}, {
   3.4167658143741603`*^9, 3.41676581548516*^9}}],

Cell[BoxData[
 RowBox[{"ReadDrawSection", "[", 
  RowBox[{"\"\<dynamo_2_12820.snp\>\"", ",", "Binary", ",", "8", ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "6", ",", "7"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.3960293462939997`*^9, 3.396029430333*^9}, {
  3.3960297593120003`*^9, 3.3960297613380003`*^9}}],

Cell[BoxData[
 RowBox[{"DrawSection", "[", 
  RowBox[{"Sequence", "@@", 
   RowBox[{"ReadSection", "[", "4314", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.396031311271*^9, 3.3960313435950003`*^9}, {
  3.4118280295299997`*^9, 3.4118280307720003`*^9}}],

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"ListPlot3D", "[", 
    RowBox[{
     RowBox[{"Cut3D", "[", 
      RowBox[{"Az", ",", "2", ",", "i"}], "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", 
     RowBox[{
      RowBox[{"Dimensions", "[", "By", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.395826514834*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:0427\:0442\:0435\:043d\:0438\:0435 \:0432\:0434\:043e\:043b\:044c \
\:0441\:043d\:044d\:043f\:043e\:0432", "Subsubsection",
 CellChangeTimes->{{3.4535761513682003`*^9, 3.4535761659386*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "ReadSection", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ReadSection", "[", 
    RowBox[{"iter_", ",", "\[Kappa]_Real", ",", 
     RowBox[{"fluct_Symbol:", "False"}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dump", ",", 
       RowBox[{"str", "=", 
        RowBox[{"ToString", "[", "iter", "]"}]}], ",", "Ax", ",", "Ay", ",", 
       "Az", ",", "fname"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"StringLength", "[", "str", "]"}], "<", "5"}], ",", 
         RowBox[{"str", "=", 
          RowBox[{"\"\<0\>\"", "<>", "str"}]}]}], "]"}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"dump", "=."}], ";", 
       RowBox[{"ReadBinarySnapFiles", "[", 
        RowBox[{"\"\<dynamo_\>\"", ",", 
         RowBox[{"\"\<_\>\"", "<>", "str", "<>", "\"\<.snp\>\""}], ",", "5", 
         ",", "dump", ",", 
         RowBox[{"PrintInfo", "\[Rule]", "None"}]}], "]"}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"fname", "=", 
       RowBox[{"\"\<screw_512_\>\"", "<>", "str", "<>", "\"\<.snp\>\""}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"FileExistsQ", "[", "fname", "]"}]}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"$Failed", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"dump", "=."}], ";", 
      RowBox[{"ReadBinarySnapFile", "[", 
       RowBox[{"fname", ",", "6", ",", "dump", ",", 
        RowBox[{"PrintInfo", "\[Rule]", "None"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"dump", "=", 
       RowBox[{"Take", "[", 
        RowBox[{"dump", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Return", "[", 
         RowBox[{"Take", "[", 
          RowBox[{"dump", ",", "3"}], "]"}], "]"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Head", "[", "coor", "]"}], "\[NotEqual]", "List"}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"coor", ",", "bounds"}], "}"}], "=", 
           RowBox[{"ReadAuxFiles", "[", 
            RowBox[{
             RowBox[{"{", "\"\<coord\>\"", "}"}], ",", 
             RowBox[{"ShiftVector", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "0"}], "}"}]}]}], "]"}]}]}], "]"}],
         ";"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"parR", "=", "2"}], ";", 
      RowBox[{"parRfl", "=", "1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"coor", "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"GetCoor", "[", 
           RowBox[{"#1", ",", "#2", ",", "#3", ",", "ghost"}], "]"}], "&"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"parR", "+", 
                RowBox[{"parRfl", "/", "\[Kappa]"}]}], ")"}]}], ",", 
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"parR", "+", 
                RowBox[{"parRfl", "/", "\[Kappa]"}]}], ")"}]}], ",", 
             RowBox[{"-", "parR"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"parR", "+", 
               RowBox[{"parRfl", "/", "\[Kappa]"}]}], ")"}], ",", 
             RowBox[{"(", 
              RowBox[{"parR", "+", 
               RowBox[{"parRfl", "/", "\[Kappa]"}]}], ")"}], ",", "parR"}], 
            "}"}], ",", 
           RowBox[{
            RowBox[{"Rest", "[", 
             RowBox[{"Dimensions", "[", "dump", "]"}], "]"}], "-", 
            RowBox[{"2", "ghost"}]}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"bounds", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "ghost", "]"}], "]"}], "+", 
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"ghost", "+", "1"}], "]"}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"-", "ghost"}], "]"}], "]"}], "+", 
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"-", "ghost"}], "-", "1"}], "]"}], "]"}]}]}], "}"}], 
          "/", "2"}], "&"}], "/@", "coor"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Ax", ",", "Ay", ",", "Az"}], "}"}], "=", 
       RowBox[{"Take", "[", 
        RowBox[{"dump", ",", 
         RowBox[{"-", "3"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Bx", ",", "By", ",", "Bz"}], "}"}], "=", 
       RowBox[{"rotd", "[", 
        RowBox[{"Ax", ",", "Ay", ",", "Az", ",", "ghost"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"jx", ",", "jy", ",", "jz"}], "}"}], "=", 
         RowBox[{"rotc", "[", 
          RowBox[{"Bx", ",", "By", ",", "Bz", ",", "ghost"}], "]"}]}], ";"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"Bx", ",", "By", ",", "Bz"}], "}"}], "]"}], ";"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ReadSection", "[", 
    RowBox[{"iter_", ",", 
     RowBox[{"\[Kappa]_Integer:", "0"}], ",", 
     RowBox[{"fluct_Symbol:", "False"}]}], "]"}], ":=", 
   RowBox[{"ReadSection", "[", 
    RowBox[{"iter", ",", 
     RowBox[{"\[Kappa]", "+", "0."}], ",", "fluct"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.3960307107679996`*^9, 3.3960307116689997`*^9}, 
   3.396030778356*^9, {3.396031094078*^9, 3.3960311485550003`*^9}, {
   3.3960311958190002`*^9, 3.3960312012720003`*^9}, {3.3960312806949997`*^9, 
   3.396031294561*^9}, {3.396031330314*^9, 3.3960313310220003`*^9}, {
   3.3960313636219997`*^9, 3.3960313671800003`*^9}, 3.3960374099514*^9, 
   3.409516121436*^9, {3.409516178874*^9, 3.409516254637*^9}, {
   3.409516359733*^9, 3.409516360144*^9}, {3.409596584605*^9, 
   3.409596607484*^9}, {3.411200379608*^9, 3.4112003813129997`*^9}, {
   3.46149559165625*^9, 3.461495633984375*^9}, {3.461496267234375*^9, 
   3.46149632821875*^9}, {3.48696575650611*^9, 3.486965782027715*^9}, 
   3.48696590640654*^9, {3.486965983439355*^9, 3.48696600882056*^9}, {
   3.486979512241255*^9, 3.486979520493656*^9}, {3.487056019664058*^9, 
   3.4870560197264585`*^9}, 3.48731206883294*^9, {3.490678811390625*^9, 
   3.49067884528125*^9}, {3.490678922078125*^9, 3.490678955296875*^9}, 
   3.49067900196875*^9, {3.49067916078125*^9, 3.49067916153125*^9}, {
   3.49067936521875*^9, 3.490679367984375*^9}, {3.490679439703125*^9, 
   3.49067944046875*^9}, {3.4906794758125*^9, 3.49067952153125*^9}, {
   3.490679609515625*^9, 3.49067961265625*^9}, {3.490679959484375*^9, 
   3.490679966953125*^9}, {3.490680324765625*^9, 3.4906803464375*^9}, {
   3.490682938671875*^9, 3.490682940171875*^9}, {3.49068737928125*^9, 
   3.490687379390625*^9}, {3.4906910784375*^9, 3.490691078484375*^9}, {
   3.49069236428125*^9, 3.490692370390625*^9}, {3.49069308928125*^9, 
   3.49069308934375*^9}, {3.491113179265625*^9, 3.491113179578125*^9}, {
   3.491113313125*^9, 3.491113319578125*^9}, {3.4911135265*^9, 
   3.491113571046875*^9}, 3.491113955015625*^9, 3.491114316296875*^9, {
   3.492482678314625*^9, 3.492482728658375*^9}, {3.492483454658375*^9, 
   3.49248345726775*^9}, {3.497257774113875*^9, 3.497257790067*^9}, {
   3.497258138051375*^9, 3.497258138551375*^9}, {3.4975259347494793`*^9, 
   3.497525976051668*^9}}],

Cell[CellGroupData[{

Cell[BoxData["bounds"], "Input",
 CellChangeTimes->{{3.49249088389275*^9, 3.492490884674*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4.315789473684211`"}], ",", "4.315789473684211`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4.315789473684211`"}], ",", "4.315789473684211`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3.`"}], ",", "3.`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.49249088539275*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"grtot", "=", 
   RowBox[{"{", "}"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"nameexp", "=", "\"\<parker\>\""}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell["\:041d\:0435\:0437\:0430\:0432\:0438\:0441\:0438\:043c\:044b\:0439 \
\:043a\:043e\:0434", "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.491113191140625*^9, 3.49111320459375*^9}}],

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"g", ",", "dump"}], "}"}], ",", 
   RowBox[{
    RowBox[{"dump", "=", 
     RowBox[{"ReadList", "[", "\"\<runtest1.dmp\>\"", "]"}]}], ";", 
    RowBox[{"np", "=", 
     RowBox[{"dump", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}],
     ";", 
    RowBox[{"KolProc", "=", 
     RowBox[{"Times", "@@", "np"}]}], ";", 
    RowBox[{"dump", "=", 
     RowBox[{"Drop", "[", 
      RowBox[{"dump", ",", 
       RowBox[{"{", "3", "}"}]}], "]"}]}], ";", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "t", ",", "count", ",", "n1", ",", "n2", ",", "n3", ",", "Rey"}], "}"}],
      "=", 
     RowBox[{"Take", "[", 
      RowBox[{"dump", ",", "6"}], "]"}]}], ";", 
    RowBox[{"dump", "=", 
     RowBox[{"Drop", "[", 
      RowBox[{"dump", ",", "6"}], "]"}]}], ";", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "pm", ",", "vxm", ",", "vym", ",", "vzm", ",", "Axm", ",", "Aym", ",", 
       "Azm", ",", "nutm"}], "}"}], "=", 
     RowBox[{"Transpose", "[", 
      RowBox[{"Partition", "[", 
       RowBox[{"dump", ",", "8"}], "]"}], "]"}]}], ";", 
    RowBox[{"ghost", "=", 
     FractionBox[
      RowBox[{
       RowBox[{"Total", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Last", "[", 
            RowBox[{"Dimensions", "[", "#1", "]"}], "]"}], "&"}], ")"}], "/@", 
         RowBox[{"CutList", "[", 
          RowBox[{"pm", ",", 
           RowBox[{"Last", "[", "np", "]"}]}], "]"}]}], "]"}], "-", "n3"}], 
      RowBox[{"2", " ", 
       RowBox[{"Last", "[", "np", "]"}]}]]}], ";", 
    RowBox[{"coor", "=", 
     RowBox[{"ReadList", "[", 
      RowBox[{"\"\<coord\>\"", ",", "Number", ",", 
       RowBox[{"RecordLists", "\[Rule]", "True"}]}], "]"}]}], ";", 
    RowBox[{"bounds", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
             "#1", "\[LeftDoubleBracket]", "ghost", "\[RightDoubleBracket]"}],
              "+", 
             RowBox[{"#1", "\[LeftDoubleBracket]", 
              RowBox[{"ghost", "+", "1"}], "\[RightDoubleBracket]"}]}], 
            ")"}]}], ",", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"#1", "\[LeftDoubleBracket]", 
              RowBox[{"-", "ghost"}], "\[RightDoubleBracket]"}], "+", 
             RowBox[{"#1", "\[LeftDoubleBracket]", 
              RowBox[{
               RowBox[{"-", "ghost"}], "-", "1"}], 
              "\[RightDoubleBracket]"}]}], ")"}]}]}], "}"}], "&"}], ")"}], "/@",
       "coor"}]}], ";", 
    RowBox[{"Ax", "=", 
     RowBox[{"First", "[", 
      RowBox[{"Fold", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{"Function", "[", 
            RowBox[{"m", ",", 
             RowBox[{"Clue", "[", 
              RowBox[{"m", ",", "#2", ",", "ghost"}], "]"}]}], "]"}], ",", 
           RowBox[{"Partition", "[", 
            RowBox[{"#1", ",", 
             RowBox[{
             "np", "\[LeftDoubleBracket]", "#2", "\[RightDoubleBracket]"}]}], 
            "]"}], ",", 
           RowBox[{"{", "1", "}"}]}], "]"}], "&"}], ",", "Axm", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "]"}], "]"}]}], ";", 
    RowBox[{"Ay", "=", 
     RowBox[{"First", "[", 
      RowBox[{"Fold", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{"Function", "[", 
            RowBox[{"m", ",", 
             RowBox[{"Clue", "[", 
              RowBox[{"m", ",", "#2", ",", "ghost"}], "]"}]}], "]"}], ",", 
           RowBox[{"Partition", "[", 
            RowBox[{"#1", ",", 
             RowBox[{
             "np", "\[LeftDoubleBracket]", "#2", "\[RightDoubleBracket]"}]}], 
            "]"}], ",", 
           RowBox[{"{", "1", "}"}]}], "]"}], "&"}], ",", "Aym", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "]"}], "]"}]}], ";", 
    RowBox[{"Az", "=", 
     RowBox[{"First", "[", 
      RowBox[{"Fold", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{"Function", "[", 
            RowBox[{"m", ",", 
             RowBox[{"Clue", "[", 
              RowBox[{"m", ",", "#2", ",", "ghost"}], "]"}]}], "]"}], ",", 
           RowBox[{"Partition", "[", 
            RowBox[{"#1", ",", 
             RowBox[{
             "np", "\[LeftDoubleBracket]", "#2", "\[RightDoubleBracket]"}]}], 
            "]"}], ",", 
           RowBox[{"{", "1", "}"}]}], "]"}], "&"}], ",", "Azm", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "]"}], "]"}]}], ";", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Ax", ",", "Ay", ",", "Az"}], "}"}], "-=", 
     RowBox[{"Transpose", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"coor", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "i"}], "\[RightDoubleBracket]"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"coor", "\[LeftDoubleBracket]", 
            RowBox[{"2", ",", "j"}], "\[RightDoubleBracket]"}], "]"}], " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"coor", "\[LeftDoubleBracket]", 
              RowBox[{"2", ",", "j"}], "\[RightDoubleBracket]"}], "]"}], ",", 
            RowBox[{"Cos", "[", 
             RowBox[{"coor", "\[LeftDoubleBracket]", 
              RowBox[{"2", ",", "j"}], "\[RightDoubleBracket]"}], "]"}], ",", 
            "0"}], "}"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"n1", "+", 
            RowBox[{"2", " ", "ghost"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", 
           RowBox[{"n2", "+", 
            RowBox[{"2", " ", "ghost"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "1", ",", 
           RowBox[{"n3", "+", 
            RowBox[{"2", " ", "ghost"}]}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "4", ",", "1"}], "}"}]}], "]"}]}], ";", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Bx", ",", "By", ",", "Bz"}], "}"}], "=", 
     RowBox[{"rotc", "[", 
      RowBox[{"Ax", ",", "Ay", ",", "Az", ",", "ghost"}], "]"}]}], ";", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"jx", ",", "jy", ",", "jz"}], "}"}], "=", 
     RowBox[{"rotc", "[", 
      RowBox[{"Bx", ",", "By", ",", "Bz", ",", "ghost"}], "]"}]}], ";", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "Bxi", ",", "Byi", ",", "Bzi", ",", "jxi", ",", "jyi", ",", "jzi"}], 
      "}"}], "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"ListInterpolation", "[", 
         RowBox[{"#1", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Min", "[", 
               RowBox[{
               "coor", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
                "]"}], ",", 
              RowBox[{"Max", "[", 
               RowBox[{
               "coor", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
                "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Min", "[", 
               RowBox[{
               "coor", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
                "]"}], ",", 
              RowBox[{"Max", "[", 
               RowBox[{
               "coor", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
                "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Min", "[", 
               RowBox[{
               "coor", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}],
                "]"}], ",", 
              RowBox[{"Max", "[", 
               RowBox[{
               "coor", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}],
                "]"}]}], "}"}]}], "}"}], ",", 
          RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}], "&"}], 
       ")"}], "/@", 
      RowBox[{"{", 
       RowBox[{"Bx", ",", "By", ",", "Bz", ",", "jx", ",", "jy", ",", "jz"}], 
       "}"}]}]}], ";", 
    RowBox[{"g", "=", 
     RowBox[{"GraphicsRow", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"SectionRZ", "[", 
          RowBox[{"Bxi", ",", "Byi", ",", "Bzi", ",", 
           RowBox[{"0.2`", " ", "\[Pi]"}]}], "]"}], ",", 
         RowBox[{"SectionR\[CapitalPhi]", "[", 
          RowBox[{"Bxi", ",", "Byi", ",", "Bzi", ",", 
           RowBox[{"Mean", "[", 
            RowBox[{
            "bounds", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
            "]"}]}], "]"}], ",", 
         RowBox[{"Section\[CapitalPhi]Z", "[", 
          RowBox[{"Bxi", ",", "Byi", ",", "Bzi", ",", 
           RowBox[{"Mean", "[", 
            RowBox[{
            "bounds", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            "]"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"Spacings", "\[Rule]", 
        RowBox[{"Scaled", "[", "0.`", "]"}]}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"\"\<t=\>\"", "<>", 
         RowBox[{"ToString", "[", "t", "]"}]}]}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"fname", "=", 
     RowBox[{"nameexp", "<>", "\"\<0000.gif\>\""}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{"fname", ",", "g", ",", 
      RowBox[{"ImageResolution", "\[Rule]", "300"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "640"}]}], "]"}], ";"}]}], 
  "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.396031741926*^9, 3.3960317709300003`*^9}, 
   3.491113194*^9}]
}, Closed]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ReadSectionDraw2File", "[", 
   RowBox[{"iter_", ",", "\[Kappa]_Real"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "fname", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Bx", ",", "By", ",", "Bz"}], "}"}], "=", 
      RowBox[{"ReadSection", "[", 
       RowBox[{"iter", ",", "\[Kappa]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Bx", "===", "$Failed"}], ",", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Failed in \>\"", ",", 
          RowBox[{"{", 
           RowBox[{"iter", ",", "\[Kappa]"}], "}"}]}], "]"}], ";", 
        RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Bxi", ",", "Byi", ",", "Bzi"}], "}"}], "=", 
      RowBox[{
       RowBox[{
        RowBox[{"ListInterpolation", "[", 
         RowBox[{"#", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Min", "[", 
               RowBox[{
               "coor", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
                "]"}], ",", 
              RowBox[{"Max", "[", 
               RowBox[{
               "coor", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
                "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Min", "[", 
               RowBox[{
               "coor", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
                "]"}], ",", 
              RowBox[{"Max", "[", 
               RowBox[{
               "coor", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
                "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Min", "[", 
               RowBox[{
               "coor", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}],
                "]"}], ",", 
              RowBox[{"Max", "[", 
               RowBox[{
               "coor", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}],
                "]"}]}], "}"}]}], "}"}], ",", 
          RowBox[{
           StyleBox["InterpolationOrder", "MR"], 
           StyleBox["\[Rule]", "MR"], "3"}]}], "]"}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{"Bx", ",", "By", ",", "Bz"}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Phi]max", "=", 
      RowBox[{"\[Phi]", "/.", 
       RowBox[{"Last", "[", 
        RowBox[{"Maximize", "[", 
         RowBox[{
          RowBox[{"Bzi", "[", 
           RowBox[{
            FractionBox[
             RowBox[{"Cos", "[", "\[Phi]", "]"}], "\[Kappa]"], ",", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Phi]", "]"}], "\[Kappa]"], ",", "0"}], 
           "]"}], ",", "\[Phi]"}], "]"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{"\"\<section_\>\"", "<>", 
        RowBox[{"ToString", "[", "iter", "]"}], "<>", "\"\<k\>\"", "<>", 
        RowBox[{"ToString", "[", "\[Kappa]", "]"}], "<>", 
        "\"\<_sec1.gif\>\""}], ",", 
       RowBox[{"DrawSectionDec", "[", 
        RowBox[{"Bx", ",", "By", ",", "Bz", ",", 
         RowBox[{"PointOfSections", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Phi]max", "+", 
             RowBox[{"0", 
              FractionBox["\[Pi]", "2"]}]}], ",", "0", ",", "0"}], "}"}]}], 
         ",", 
         RowBox[{"OnlySection", "\[Rule]", "True"}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
         RowBox[{"RadiusCurvature", "\[Rule]", 
          FractionBox["1", "\[Kappa]"]}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", "None"}]}], "]"}], ",", 
       RowBox[{"ImageResolution", "\[Rule]", "300"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "640"}]}], "]"}], ";", 
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{"\"\<section_\>\"", "<>", 
        RowBox[{"ToString", "[", "iter", "]"}], "<>", "\"\<k\>\"", "<>", 
        RowBox[{"ToString", "[", "\[Kappa]", "]"}], "<>", 
        "\"\<_sec2.gif\>\""}], ",", 
       RowBox[{"DrawSectionDec", "[", 
        RowBox[{"Bx", ",", "By", ",", "Bz", ",", 
         RowBox[{"PointOfSections", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Phi]max", "+", 
             RowBox[{"1", 
              FractionBox["\[Pi]", "4"]}]}], ",", "0", ",", "0"}], "}"}]}], 
         ",", 
         RowBox[{"OnlySection", "\[Rule]", "True"}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
         RowBox[{"RadiusCurvature", "\[Rule]", 
          FractionBox["1", "\[Kappa]"]}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", "None"}]}], "]"}], ",", 
       RowBox[{"ImageResolution", "\[Rule]", "300"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "640"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"phi", "=", 
      RowBox[{"Outer", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ArcTan", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", 
        RowBox[{"coor", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"coor", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Bphi", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Bx", " ", 
         RowBox[{"Sin", "[", "phi", "]"}]}], "-", 
        RowBox[{"By", " ", 
         RowBox[{"Cos", "[", "phi", "]"}]}]}], ")"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"val", "=", 
      RowBox[{"WithoutFict", "[", 
       RowBox[{
        RowBox[{"Sign", "[", "Bphi", "]"}], 
        SqrtBox[
         RowBox[{
          SuperscriptBox["By", "2"], "+", 
          SuperscriptBox["Bx", "2"], "+", 
          SuperscriptBox["Bz", "2"]}]]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"mx", " ", "=", " ", 
      RowBox[{"Max", "[", 
       RowBox[{"Abs", "@", "val"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"min", ",", "max"}], "}"}], "=", 
      RowBox[{"mx", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"gh", "=", " ", 
      RowBox[{"ListContourPlot3D", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"val", ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "2", ",", "1"}], "}"}]}], "]"}], ",", " ", 
        RowBox[{"Contours", " ", "\[Rule]", 
         RowBox[{
          FractionBox[
           RowBox[{"min", "+", "max"}], "2"], "+", 
          RowBox[{
           FractionBox[
            RowBox[{"max", "-", "min"}], "2"], 
           RowBox[{"1", "/", "2.5"}], 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["1", "2"]}], ",", 
             FractionBox["1", "2"]}], "}"}]}]}]}], " ", ",", 
        RowBox[{"ContourStyle", " ", "->", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Directive", "[", 
            RowBox[{"Yellow", ",", " ", 
             RowBox[{"Opacity", "[", "0.6", "]"}]}], "]"}], ",", " ", 
           RowBox[{"Directive", "[", 
            RowBox[{
             RowBox[{"Lighter", "[", "Blue", "]"}], ",", " ", 
             RowBox[{"Opacity", "[", "0.6", "]"}]}], "]"}]}], "}"}]}], ",", 
        " ", 
        RowBox[{"BoxRatios", " ", "->", " ", "Automatic"}], ",", " ", 
        RowBox[{"Mesh", " ", "->", " ", "False"}], ",", " ", 
        RowBox[{"AxesLabel", " ", "->", " ", 
         RowBox[{"{", 
          RowBox[{"x", ",", " ", "y", ",", " ", "z"}], "}"}]}], ",", " ", 
        RowBox[{"DataRange", " ", "->", " ", "bounds"}], ",", 
        RowBox[{"ViewPoint", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"-", "3"}], ",", "3"}], "}"}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{"\"\<surf\>\"", "<>", 
        RowBox[{"ToString", "[", "iter", "]"}], "<>", "\"\<k\>\"", "<>", 
        RowBox[{"ToString", "[", "\[Kappa]", "]"}], "<>", "\"\<.gif\>\""}], 
       ",", 
       RowBox[{"Show", "[", 
        RowBox[{"gh", ",", 
         RowBox[{"gt", "[", 
          RowBox[{"1", "/", "\[Kappa]"}], "]"}], ",", 
         RowBox[{"sec", "[", "\[Phi]max", "]"}], ",", 
         RowBox[{"sec", "[", 
          RowBox[{"\[Phi]max", "+", 
           FractionBox["\[Pi]", "2"]}], "]"}]}], "]"}], ",", 
       RowBox[{"ImageResolution", "\[Rule]", "300"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "640"}]}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.487491411018655*^9, 3.4874915083314743`*^9}, {
   3.4874915954730916`*^9, 3.4874916089046946`*^9}, {3.491114042875*^9, 
   3.491114050390625*^9}, {3.49111408615625*^9, 3.49111409378125*^9}, {
   3.491114304359375*^9, 3.49111432615625*^9}, 3.491117079546875*^9, {
   3.491118304375*^9, 3.49111832659375*^9}, 3.49111856434375*^9, {
   3.4924827491115*^9, 3.492482750814625*^9}, {3.492482876658375*^9, 
   3.49248287920525*^9}, {3.49248293489275*^9, 3.492482959283375*^9}, {
   3.492483082939625*^9, 3.492483083689625*^9}, {3.49248314483025*^9, 
   3.492483144877125*^9}, {3.4924834472365*^9, 3.492483464924*^9}, {
   3.497258643832625*^9, 3.49725865547325*^9}, {3.4975253901354494`*^9, 
   3.4975253901979337`*^9}, {3.4975259847369995`*^9, 
   3.4975259987491264`*^9}, {3.4975264422165337`*^9, 3.497526456541083*^9}, {
   3.49758584050425*^9, 3.497585891473*^9}}],

Cell[BoxData[
 RowBox[{"ReadSectionDraw2File", "[", 
  RowBox[{"10199", ",", "0.45"}], "]"}]], "Input",
 CellChangeTimes->{{3.487491290415031*^9, 3.4874913526278434`*^9}, {
   3.487491520125077*^9, 3.4874915340558796`*^9}, {3.4874918613283443`*^9, 
   3.487491861874345*^9}, {3.487492228209217*^9, 3.4874922283028173`*^9}, {
   3.4874922972548313`*^9, 3.487492301232832*^9}, 3.4874925971960907`*^9, 
   3.487492705647312*^9, {3.4874927799501266`*^9, 3.4874927810889273`*^9}, {
   3.4874929288365564`*^9, 3.4874929299441566`*^9}, {3.487492974903366*^9, 
   3.487492975402566*^9}, {3.487493608279092*^9, 3.4874936087782917`*^9}, {
   3.491114123390625*^9, 3.491114124046875*^9}, {3.491114329953125*^9, 
   3.49111433003125*^9}, {3.492488342174*^9, 3.49248835095525*^9}, {
   3.497526424189785*^9, 3.497526426689161*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nums", "=", 
  RowBox[{"Union", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ToExpression", "[", 
      RowBox[{"First", "[", 
       RowBox[{"StringCases", "[", 
        RowBox[{"#", ",", 
         RowBox[{
          RowBox[{
          "RegularExpression", "[", 
           "\"\<([^_]+?)_([^_]+?)_([^\\\\.]+?)\\\\.(.*?)\>\"", "]"}], 
          "\[Rule]", "\"\<$3\>\""}]}], "]"}], "]"}], "]"}], "&"}], "/@", 
    RowBox[{"FileNames", "[", "\"\<*.snp\>\"", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.3960318271870003`*^9, 3.396032011225*^9}, {
  3.4095162687869997`*^9, 3.40951627287*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "10199", ",", "10564", ",", "10866", ",", "11178", ",", "11468", ",", 
   "14878", ",", "15263", ",", "20395", ",", "21119", ",", "21670", ",", 
   "22249", ",", "26629", ",", "29628", ",", "30600", ",", "31679", ",", 
   "32529", ",", "33314", ",", "38006", ",", "40691", ",", "40792", ",", 
   "42214", ",", "43410", ",", "44425", ",", "45582"}], "}"}]], "Output",
 CellChangeTimes->{{3.461495642609375*^9, 3.461495670703125*^9}, 
   3.461496350125*^9, 3.487317382841125*^9, 3.487317717934875*^9, 
   3.491113353640625*^9, 3.49111708396875*^9, 3.49111789384375*^9, 
   3.492482792689625*^9, 3.49248305514275*^9, 3.49248339664275*^9, 
   3.49248779658025*^9, 3.49725781172325*^9, 3.497525397430503*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nums", "=", 
  RowBox[{"ToExpression", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "\[LeftDoubleBracket]", 
      RowBox[{"3", ",", 
       RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], "&"}], "/@", "cs"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.49248797558025*^9, 3.492487981252125*^9}, {
  3.492488443533375*^9, 3.492488446439625*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "27958", ",", "27555", ",", "27134", ",", "26790", ",", "26438", ",", 
   "26134", ",", "25634", ",", "25277", ",", "24861", ",", "24441", ",", 
   "24084", ",", "23529", ",", "23144", ",", "22712", ",", "22240", ",", 
   "21732", ",", "17717"}], "}"}]], "Output",
 CellChangeTimes->{3.492488109970875*^9, 3.492488446689625*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ToExpression", "[", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
     "&"}], "/@", "cs"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.492488360127125*^9, 3.492488389424*^9}, {
  3.492488449939625*^9, 3.49248845464275*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.8`", ",", "0.78`", ",", "0.76`", ",", "0.74`", ",", "0.72`", ",", "0.7`",
    ",", "0.68`", ",", "0.66`", ",", "0.64`", ",", "0.62`", ",", "0.6`", ",", 
   "0.58`", ",", "0.56`", ",", "0.54`", ",", "0.52`", ",", "0.5`", ",", 
   "0.48`"}], "}"}]], "Output",
 CellChangeTimes->{{3.492488360970875*^9, 3.492488403220875*^9}, 
   3.492488454924*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ReadSection", "[", 
   RowBox[{
    RowBox[{"nums", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "]"}], "//", 
  "Dimensions"}]], "Input",
 CellChangeTimes->{{3.487317391184875*^9, 3.487317396763*^9}, {
  3.492488319533375*^9, 3.49248832033025*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "38", ",", "38", ",", "38"}], "}"}]], "Output",
 CellChangeTimes->{3.49725795916075*^9, 3.49725814659825*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"infos", "=", "ScanSnaps"}], ";"}]], "Input",
 CellChangeTimes->{3.453621419109375*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\:0421\:0435\:0442\:043a\:0430 \:043e\:0434\:0438\:043d\:0430\
\:043a\:043e\:0432\:0430\:044f: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"128", ",", "128", ",", "64"}], "}"}]}],
  SequenceForm[
  "\:0421\:0435\:0442\:043a\:0430 \:043e\:0434\:0438\:043d\:0430\:043a\:043e\
\:0432\:0430\:044f: ", {128, 128, 64}],
  Editable->False]], "Print",
 CellChangeTimes->{3.492488332877125*^9, 3.497257900567*^9, 
  3.497525878169855*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\:0414\:0435\:043b\:0435\:043d\:0438\:0435 \:043d\:0430 \:043f\
\:0440\:043e\:0446\:0435\:0441\:0441\:044b \:043e\:0434\:0438\:043d\:0430\
\:043a\:043e\:0432\:043e\:0435: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"8", ",", "16", ",", "4"}], "}"}]}],
  SequenceForm[
  "\:0414\:0435\:043b\:0435\:043d\:0438\:0435 \:043d\:0430 \:043f\:0440\:043e\
\:0446\:0435\:0441\:0441\:044b \:043e\:0434\:0438\:043d\:0430\:043a\:043e\
\:0432\:043e\:0435: ", {8, 16, 4}],
  Editable->False]], "Print",
 CellChangeTimes->{3.492488332877125*^9, 3.497257900567*^9, 
  3.497525878169855*^9}],

Cell[BoxData["\<\"\:0421\:0442\:0440\:0443\:043a\:0442\:0443\:0440\:0430 \
\:0443 \:0432\:0441\:0435\:0445 \:043e\:0434\:0438\:043d\:0430\:043a\:043e\
\:0432\:0430\:044f\"\>"], "Print",
 CellChangeTimes->{3.492488332877125*^9, 3.497257900567*^9, 
  3.497525878169855*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"infos", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.4536214823125*^9, 3.45362148434375*^9}, {
  3.45916215559375*^9, 3.4591621639375*^9}}],

Cell[BoxData[
 RowBox[{"PrintRange", "[", 
  RowBox[{"Sort", "@", 
   RowBox[{"infos", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "3"}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4536214215*^9, 3.45362149459375*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"lf1", "=", 
   RowBox[{"lf2", "=", 
    RowBox[{"lf3", "=", 
     RowBox[{"lf4", "=", 
      RowBox[{"lf5", "=", 
       RowBox[{"{", "}"}]}]}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Monitor", "[", 
   RowBox[{
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "Bx", ",", "By", ",", "Bz", ",", "g1", ",", "g2", ",", "fname"}], 
         "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Bx", ",", "By", ",", "Bz"}], "}"}], "=", 
          RowBox[{"ReadSection", "[", 
           RowBox[{
           "nums", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"\"\<have read ponom_\>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{
              "nums", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
              "]"}], "<>", "\"\<.snp\>\""}], "]"}], ";"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"lf1", ",", 
           RowBox[{"Fourier", "@", 
            RowBox[{"WithoutFict", "@", 
             RowBox[{"Bx", "\[LeftDoubleBracket]", 
              RowBox[{"15", ",", "All", ",", "15"}], 
              "\[RightDoubleBracket]"}]}]}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"lf2", ",", 
           RowBox[{"Fourier", "@", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Total", "[", 
                RowBox[{"Flatten", "[", 
                 SuperscriptBox["#", "2"], "]"}], "]"}], "&"}], "/@", 
              RowBox[{"Transpose", "[", 
               RowBox[{
                RowBox[{"WithoutFict", "@", "Bx"}], ",", 
                RowBox[{"{", 
                 RowBox[{"2", ",", "1", ",", "3"}], "}"}]}], "]"}]}], 
             ")"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"lf3", ",", 
           RowBox[{"Fourier", "@", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Total", "[", 
                RowBox[{"Flatten", "[", 
                 SuperscriptBox["#", "2"], "]"}], "]"}], "&"}], "/@", 
              RowBox[{"Transpose", "[", 
               RowBox[{
                RowBox[{"WithoutFict", "@", "By"}], ",", 
                RowBox[{"{", 
                 RowBox[{"2", ",", "1", ",", "3"}], "}"}]}], "]"}]}], 
             ")"}]}]}], "]"}], ";", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"lf4", ",", 
           RowBox[{"Fourier", "@", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Total", "[", 
                RowBox[{"Flatten", "[", 
                 SuperscriptBox["#", "2"], "]"}], "]"}], "&"}], "/@", 
              RowBox[{"Transpose", "[", 
               RowBox[{
                RowBox[{"WithoutFict", "@", "Bz"}], ",", 
                RowBox[{"{", 
                 RowBox[{"2", ",", "1", ",", "3"}], "}"}]}], "]"}]}], 
             ")"}]}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "nums", "]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"nums", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
   "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.396032024591*^9, 3.396032164275*^9}, {
   3.3960322161429996`*^9, 3.3960322768190002`*^9}, {3.396032432408*^9, 
   3.396032462848*^9}, {3.396032611528*^9, 3.396032650554*^9}, {
   3.396032681407*^9, 3.396032709755*^9}, {3.39603287658*^9, 
   3.396032879454*^9}, {3.396032925429*^9, 3.396032970593*^9}, {
   3.3960366123389997`*^9, 3.3960366143514*^9}, {3.3960407469418*^9, 
   3.3960407573782*^9}, {3.4095162825*^9, 3.409516371366*^9}, {
   3.409516435663*^9, 3.4095164367790003`*^9}, {3.409516871859*^9, 
   3.4095168854630003`*^9}, {3.409518749895*^9, 3.409518779932*^9}, {
   3.409518897043*^9, 3.4095189206940002`*^9}, {3.4095574024440002`*^9, 
   3.409557443428*^9}, {3.409557504564*^9, 3.409557505132*^9}, {
   3.4111958154890003`*^9, 3.4111958830889997`*^9}, 3.4112032257539997`*^9, {
   3.4185414982595634`*^9, 3.418541510526563*^9}, {3.4185415556695633`*^9, 
   3.418541606366563*^9}, {3.418541734930563*^9, 3.418541744356563*^9}, {
   3.4185418897055635`*^9, 3.4185419023995633`*^9}, {3.418541942824563*^9, 
   3.418541944692563*^9}, {3.418541978357563*^9, 3.4185419787785635`*^9}}],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ListLogPlot", "[", 
    RowBox[{
     RowBox[{"Take", "[", 
      RowBox[{
       RowBox[{"Abs", "@", 
        RowBox[{
        "lf1", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], ",", 
       "15"}], "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["10", 
         RowBox[{"-", "20"}]], ",", 
        SuperscriptBox["10", "5"]}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"infos", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", 
     RowBox[{"Length", "[", "nums", "]"}], ",", "1"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.453621240609375*^9, 3.453621279859375*^9}, {
   3.453621311046875*^9, 3.453621358984375*^9}, {3.453621891859375*^9, 
   3.45362190565625*^9}, {3.453622039390625*^9, 3.453622073078125*^9}, {
   3.45362211253125*^9, 3.453622120140625*^9}, {3.4536221554375*^9, 
   3.453622166734375*^9}, 3.45362223225*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Kappa]s", "=", 
  RowBox[{"PrependTo", "[", 
   RowBox[{
    RowBox[{"ToExpression", "[", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        "&"}], "/@", "cs"}], "]"}], "]"}], ",", "0.45"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.492482832799*^9, 3.492482834877125*^9}, {
  3.4924900046115*^9, 3.49249000626775*^9}, {3.4975254329372635`*^9, 
  3.4975254373111715`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.45`", ",", "0.475`", ",", "0.5`", ",", "0.525`", ",", "0.55`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.4924900069865*^9, {3.497525430078602*^9, 3.4975254382953005`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"cs", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "1"}], "]"}], "]"}], "=", 
  RowBox[{"{", "0.45", "}"}]}]], "Input",
 CellChangeTimes->{{3.4975254403416643`*^9, 3.497525440732192*^9}, {
  3.4975255118863025`*^9, 3.497525525351691*^9}}],

Cell[BoxData[
 RowBox[{"{", "0.45`", "}"}]], "Output",
 CellChangeTimes->{
  3.4975254410289927`*^9, {3.4975255146981*^9, 3.4975255263826833`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Monitor", "[", 
   RowBox[{
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ReadSectionDraw2File", "[", 
          RowBox[{
           RowBox[{"cs", "\[LeftDoubleBracket]", 
            RowBox[{"j", ",", 
             RowBox[{"-", "1"}], ",", "i"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{"cs", "\[LeftDoubleBracket]", 
            RowBox[{"j", ",", "1", ",", "1"}], "\[RightDoubleBracket]"}]}], 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<have read \[Kappa]=\>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"cs", "\[LeftDoubleBracket]", 
             RowBox[{"j", ",", "1", ",", "1"}], "\[RightDoubleBracket]"}], 
            "]"}], "<>", "\"\<, iter=\>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"cs", "\[LeftDoubleBracket]", 
             RowBox[{"j", ",", 
              RowBox[{"-", "1"}], ",", "i"}], "\[RightDoubleBracket]"}], 
            "]"}], "<>", "\"\<.snp\>\""}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"g1", "=", 
          RowBox[{"DrawSection", "[", 
           RowBox[{"Bx", ",", "By", ",", "Bz"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"fname", "=", 
          RowBox[{"\"\<screw\>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{
            "nums", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
            "]"}], "<>", "\"\<_B.gif\>\""}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Export", "[", 
          RowBox[{"fname", ",", "g1", ",", 
           RowBox[{"ImageResolution", "\[Rule]", "300"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "640"}]}], "]"}], ";"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"g2", "=", 
          RowBox[{"DrawSection", "[", 
           RowBox[{"jx", ",", "jy", ",", "jz"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"fname", "=", 
          RowBox[{"\"\<ponom\>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{
            "nums", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
            "]"}], "<>", "\"\<_j.gif\>\""}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Export", "[", 
          RowBox[{"fname", ",", "g2", ",", 
           RowBox[{"ImageResolution", "\[Rule]", "300"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "640"}]}], "]"}], ";"}], "*)"}], 
       "\[IndentingNewLine]", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", 
        RowBox[{"Length", "[", "cs", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", 
         RowBox[{"cs", "\[LeftDoubleBracket]", 
          RowBox[{"j", ",", 
           RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], "]"}]}], "}"}]}], 
     "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "j"}], "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.396032024591*^9, 3.396032164275*^9}, {
   3.3960322161429996`*^9, 3.3960322768190002`*^9}, {3.396032432408*^9, 
   3.396032462848*^9}, {3.396032611528*^9, 3.396032650554*^9}, {
   3.396032681407*^9, 3.396032709755*^9}, {3.39603287658*^9, 
   3.396032879454*^9}, {3.396032925429*^9, 3.396032970593*^9}, {
   3.3960366123389997`*^9, 3.3960366143514*^9}, {3.3960407469418*^9, 
   3.3960407573782*^9}, {3.4095162825*^9, 3.409516371366*^9}, {
   3.409516435663*^9, 3.4095164367790003`*^9}, {3.409516871859*^9, 
   3.4095168854630003`*^9}, {3.409518749895*^9, 3.409518779932*^9}, {
   3.409518897043*^9, 3.4095189206940002`*^9}, {3.4095574024440002`*^9, 
   3.409557443428*^9}, {3.409557504564*^9, 3.409557505132*^9}, {
   3.4111958154890003`*^9, 3.4111958830889997`*^9}, 3.4112032257539997`*^9, {
   3.486966069379772*^9, 3.4869660879125757`*^9}, {3.491114244640625*^9, 
   3.49111425403125*^9}, 3.49111710571875*^9, {3.49111784859375*^9, 
   3.49111790396875*^9}, {3.492482812470875*^9, 3.4924828386115*^9}, {
   3.4924899697365*^9, 3.49248997314275*^9}, {3.4924900129865*^9, 
   3.492490014533375*^9}, {3.4972579200045*^9, 3.497257922926375*^9}, {
   3.4975254245799747`*^9, 3.497525505216093*^9}, {3.4975255372549686`*^9, 
   3.497525574276976*^9}, {3.497525647243134*^9, 3.4975256629892025`*^9}, {
   3.4975260635454493`*^9, 3.497526065982341*^9}, {3.4975263909793262`*^9, 
   3.4975263964623322`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Failed in \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"\<\"3452\"\>", ",", "0.45`"}], "}"}]}],
  SequenceForm["Failed in ", {"3452", 0.45}],
  Editable->False]], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.497526673033908*^9}],

Cell[BoxData["\<\"have read \[Kappa]=0.45, iter=3452.snp\"\>"], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.497526673033908*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Failed in \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"\<\"6825\"\>", ",", "0.45`"}], "}"}]}],
  SequenceForm["Failed in ", {"6825", 0.45}],
  Editable->False]], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.497526673033908*^9}],

Cell[BoxData["\<\"have read \[Kappa]=0.45, iter=6825.snp\"\>"], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.497526673049529*^9}],

Cell[BoxData["\<\"have read \[Kappa]=0.45, iter=10199.snp\"\>"], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.497526885824532*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Failed in \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"\<\"13589\"\>", ",", "0.45`"}], "}"}]}],
  SequenceForm["Failed in ", {"13589", 0.45}],
  Editable->False]], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.4975268858401527`*^9}],

Cell[BoxData["\<\"have read \[Kappa]=0.45, iter=13589.snp\"\>"], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.4975268858401527`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Failed in \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"\<\"16992\"\>", ",", "0.45`"}], "}"}]}],
  SequenceForm["Failed in ", {"16992", 0.45}],
  Editable->False]], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.4975268858401527`*^9}],

Cell[BoxData["\<\"have read \[Kappa]=0.45, iter=16992.snp\"\>"], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.4975268858401527`*^9}],

Cell[BoxData["\<\"have read \[Kappa]=0.45, iter=20395.snp\"\>"], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.4975271008645945`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Failed in \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"\<\"23807\"\>", ",", "0.45`"}], "}"}]}],
  SequenceForm["Failed in ", {"23807", 0.45}],
  Editable->False]], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.4975271008645945`*^9}],

Cell[BoxData["\<\"have read \[Kappa]=0.45, iter=23807.snp\"\>"], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.4975271008645945`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Failed in \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"\<\"27207\"\>", ",", "0.45`"}], "}"}]}],
  SequenceForm["Failed in ", {"27207", 0.45}],
  Editable->False]], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.4975271008645945`*^9}],

Cell[BoxData["\<\"have read \[Kappa]=0.45, iter=27207.snp\"\>"], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.4975271008802156`*^9}],

Cell[BoxData["\<\"have read \[Kappa]=0.45, iter=30600.snp\"\>"], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.497527316607607*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Failed in \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"\<\"33999\"\>", ",", "0.45`"}], "}"}]}],
  SequenceForm["Failed in ", {"33999", 0.45}],
  Editable->False]], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.497527316638849*^9}],

Cell[BoxData["\<\"have read \[Kappa]=0.45, iter=33999.snp\"\>"], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.4975273166700907`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Failed in \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"\<\"37391\"\>", ",", "0.45`"}], "}"}]}],
  SequenceForm["Failed in ", {"37391", 0.45}],
  Editable->False]], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.497527316685712*^9}],

Cell[BoxData["\<\"have read \[Kappa]=0.45, iter=37391.snp\"\>"], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.497527316716954*^9}],

Cell[BoxData["\<\"have read \[Kappa]=0.45, iter=40792.snp\"\>"], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.4975275341939087`*^9}],

Cell[BoxData["\<\"have read \[Kappa]=0.4750, iter=3564.snp\"\>"], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.49752753420953*^9}],

Cell[BoxData["\<\"have read \[Kappa]=0.4750, iter=7068.snp\"\>"], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.497527534240772*^9}],

Cell[BoxData["\<\"have read \[Kappa]=0.4750, iter=10564.snp\"\>"], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.4975275342563925`*^9}],

Cell[BoxData["\<\"have read \[Kappa]=0.4750, iter=14070.snp\"\>"], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.497527534287635*^9}],

Cell[BoxData["\<\"have read \[Kappa]=0.4750, iter=17584.snp\"\>"], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.497527534318877*^9}],

Cell[BoxData["\<\"have read \[Kappa]=0.4750, iter=21119.snp\"\>"], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.4975275343344984`*^9}],

Cell[BoxData["\<\"have read \[Kappa]=0.4750, iter=24631.snp\"\>"], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.497527534365741*^9}],

Cell[BoxData["\<\"have read \[Kappa]=0.4750, iter=28155.snp\"\>"], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.497527534396983*^9}],

Cell[BoxData["\<\"have read \[Kappa]=0.4750, iter=31679.snp\"\>"], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.4975275344126043`*^9}],

Cell[BoxData["\<\"have read \[Kappa]=0.4750, iter=35192.snp\"\>"], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.4975275344438457`*^9}],

Cell[BoxData["\<\"have read \[Kappa]=0.4750, iter=38704.snp\"\>"], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.497527534475088*^9}],

Cell[BoxData["\<\"have read \[Kappa]=0.4750, iter=42214.snp\"\>"], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.4975275344907093`*^9}],

Cell[BoxData["\<\"have read \[Kappa]=0.5000, iter=3680.snp\"\>"], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.4975275345219517`*^9}],

Cell[BoxData["\<\"have read \[Kappa]=0.5000, iter=7274.snp\"\>"], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.497527534553194*^9}],

Cell[BoxData["\<\"have read \[Kappa]=0.5000, iter=10866.snp\"\>"], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.4975275345688148`*^9}],

Cell[BoxData["\<\"have read \[Kappa]=0.5000, iter=14466.snp\"\>"], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.497527534600057*^9}],

Cell[BoxData["\<\"have read \[Kappa]=0.5000, iter=18071.snp\"\>"], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.497527534631299*^9}],

Cell[BoxData["\<\"have read \[Kappa]=0.5000, iter=21670.snp\"\>"], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.4975275346625414`*^9}],

Cell[BoxData["\<\"have read \[Kappa]=0.5000, iter=25272.snp\"\>"], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.4975275346781626`*^9}],

Cell[BoxData["\<\"have read \[Kappa]=0.5000, iter=28893.snp\"\>"], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.497527534709405*^9}],

Cell[BoxData["\<\"have read \[Kappa]=0.5000, iter=32529.snp\"\>"], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.4975275347406473`*^9}],

Cell[BoxData["\<\"have read \[Kappa]=0.5000, iter=36157.snp\"\>"], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.497527534756268*^9}],

Cell[BoxData["\<\"have read \[Kappa]=0.5000, iter=39777.snp\"\>"], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.4975275347875104`*^9}],

Cell[BoxData["\<\"have read \[Kappa]=0.5000, iter=43410.snp\"\>"], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.4975275348187523`*^9}],

Cell[BoxData["\<\"have read \[Kappa]=0.5250, iter=3783.snp\"\>"], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.4975275348343735`*^9}],

Cell[BoxData["\<\"have read \[Kappa]=0.5250, iter=7479.snp\"\>"], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.497527534865616*^9}],

Cell[BoxData["\<\"have read \[Kappa]=0.5250, iter=11178.snp\"\>"], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.497527534896858*^9}],

Cell[BoxData["\<\"have read \[Kappa]=0.5250, iter=14878.snp\"\>"], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.4975275349124794`*^9}],

Cell[BoxData["\<\"have read \[Kappa]=0.5250, iter=18567.snp\"\>"], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.4975275349437213`*^9}],

Cell[BoxData["\<\"have read \[Kappa]=0.5250, iter=22249.snp\"\>"], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.4975275349749637`*^9}],

Cell[BoxData["\<\"have read \[Kappa]=0.5250, iter=25943.snp\"\>"], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.4975275350062056`*^9}],

Cell[BoxData["\<\"have read \[Kappa]=0.5250, iter=29628.snp\"\>"], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.4975275350218267`*^9}],

Cell[BoxData["\<\"have read \[Kappa]=0.5250, iter=33314.snp\"\>"], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.497527535053069*^9}],

Cell[BoxData["\<\"have read \[Kappa]=0.5250, iter=37001.snp\"\>"], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.4975275350843115`*^9}],

Cell[BoxData["\<\"have read \[Kappa]=0.5250, iter=40691.snp\"\>"], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.4975275350999327`*^9}],

Cell[BoxData["\<\"have read \[Kappa]=0.5250, iter=44425.snp\"\>"], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.497527535131174*^9}],

Cell[BoxData["\<\"have read \[Kappa]=0.5500, iter=3872.snp\"\>"], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.4975275351624165`*^9}],

Cell[BoxData["\<\"have read \[Kappa]=0.5500, iter=7668.snp\"\>"], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.497527535193659*^9}],

Cell[BoxData["\<\"have read \[Kappa]=0.5500, iter=11468.snp\"\>"], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.49752753520928*^9}],

Cell[BoxData["\<\"have read \[Kappa]=0.5500, iter=15263.snp\"\>"], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.4975275352405224`*^9}],

Cell[BoxData["\<\"have read \[Kappa]=0.5500, iter=19053.snp\"\>"], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.4975275352717648`*^9}],

Cell[BoxData["\<\"have read \[Kappa]=0.5500, iter=22843.snp\"\>"], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.497527535287386*^9}],

Cell[BoxData["\<\"have read \[Kappa]=0.5500, iter=26629.snp\"\>"], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.4975275353186274`*^9}],

Cell[BoxData["\<\"have read \[Kappa]=0.5500, iter=30420.snp\"\>"], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.4975275353498697`*^9}],

Cell[BoxData["\<\"have read \[Kappa]=0.5500, iter=34208.snp\"\>"], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.497527535365491*^9}],

Cell[BoxData["\<\"have read \[Kappa]=0.5500, iter=38006.snp\"\>"], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.4975275353967333`*^9}],

Cell[BoxData["\<\"have read \[Kappa]=0.5500, iter=41789.snp\"\>"], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.4975275354279757`*^9}],

Cell[BoxData["\<\"have read \[Kappa]=0.5500, iter=45582.snp\"\>"], "Print",
 CellChangeTimes->{3.4975258808254423`*^9, 3.4975260076843953`*^9, 
  3.4975260675132084`*^9, 3.4975275354592175`*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"res", "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{"Monitor", "[", 
   RowBox[{
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{"AppendTo", "[", 
       RowBox[{"res", ",", 
        RowBox[{"ReadSection", "[", 
         RowBox[{
          RowBox[{
          "nums", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], ",",
           "nproc"}], "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "[", "nums", "]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"nums", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.428221763703125*^9, 3.428221767546875*^9}, {
   3.428221849*^9, 3.4282219504375*^9}, {3.43200628800287*^9, 
   3.43200632558327*^9}, {3.4320063812908697`*^9, 3.43200642035327*^9}, {
   3.43200668839327*^9, 3.4320066920436697`*^9}, 3.4320068530356703`*^9, {
   3.4322761868780003`*^9, 3.4322761873459997`*^9}, {3.4325278069363747`*^9, 
   3.4325278116707497`*^9}, {3.4331415057945004`*^9, 
   3.4331415071851254`*^9}, {3.434096889484375*^9, 3.434096908203125*^9}, 
   3.434097010875*^9, {3.434097069171875*^9, 3.434097069234375*^9}, 
   3.434097673359375*^9, 3.434109339859375*^9, 3.4341094461875*^9, 
   3.434109503421875*^9, {3.43411058984375*^9, 3.43411059396875*^9}, {
   3.4470665444508*^9, 3.4470665451628*^9}, {3.447404493967*^9, 
   3.4474044966730003`*^9}, {3.460434550046875*^9, 3.460434550265625*^9}, {
   3.460457058125*^9, 3.46045706525*^9}, {3.46149619040625*^9, 
   3.461496195109375*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "res", "]"}]], "Input",
 CellChangeTimes->{{3.46043541046875*^9, 3.4604354125*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"400", ",", "3", ",", "38", ",", "38", ",", "38"}], "}"}]], "Output",
 CellChangeTimes->{3.460435412875*^9, 3.460437644125*^9, 3.46045797940625*^9, 
  3.46069605190625*^9, 3.460715886640625*^9, 3.461143231453125*^9, 
  3.4613206059375*^9, 3.461391328890625*^9, 3.46140921353125*^9, 
  3.46141130421875*^9, 3.46147531215625*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "g", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"temp", "=", 
        RowBox[{"First", "[", 
         RowBox[{"Import", "[", 
          RowBox[{
           RowBox[{"\"\<dynamo_2_\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{
             "nums", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
             "]"}], "<>", "\"\<.snp.ZIP\>\""}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<*.snp\>\"", ",", "\"\<Binary\>\""}], "}"}]}], "]"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{
         RowBox[{"\"\<dynamo_2_\>\"", "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{
           "nums", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
           "]"}], "<>", "\"\<.snp\>\""}], ",", "temp", ",", "\"\<Binary\>\"", 
         ",", 
         RowBox[{"\"\<DataFormat\>\"", "\[Rule]", " ", "\"\<Byte\>\""}]}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Bx", ",", "By", ",", "Bz"}], "}"}], "=", 
        RowBox[{"ReadSection", "[", 
         RowBox[{
         "nums", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<have read dynamo_2_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{
          "nums", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
          "]"}], "<>", "\"\<.snp\>\""}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Close", "[", 
        RowBox[{"\"\<dynamo_2_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{
          "nums", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
          "]"}], "<>", "\"\<.snp\>\""}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"DeleteFile", "[", 
        RowBox[{"\"\<dynamo_2_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{
          "nums", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
          "]"}], "<>", "\"\<.snp\>\""}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "Bxi", ",", "Byi", ",", "Bzi", ",", "jxi", ",", "jyi", ",", 
            "jzi"}], "}"}], "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"ListInterpolation", "[", 
              RowBox[{"#1", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Min", "[", 
                    RowBox[{
                    "coor", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "]"}], ",", 
                   RowBox[{"Max", "[", 
                    RowBox[{
                    "coor", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Min", "[", 
                    RowBox[{
                    "coor", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "]"}], ",", 
                   RowBox[{"Max", "[", 
                    RowBox[{
                    "coor", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Min", "[", 
                    RowBox[{
                    "coor", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], "]"}], ",", 
                   RowBox[{"Max", "[", 
                    RowBox[{
                    "coor", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], "]"}]}], "}"}]}], "}"}], ",", 
               RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}], "&"}],
             ")"}], "/@", 
           RowBox[{"{", 
            RowBox[{
            "Bx", ",", "By", ",", "Bz", ",", "jx", ",", "jy", ",", "jz"}], 
            "}"}]}]}], ";", 
         RowBox[{"g", "=", 
          RowBox[{"DisplayTogetherArray", "[", 
           RowBox[{
            RowBox[{"SectionRZ", "[", 
             RowBox[{"Bxi", ",", "Byi", ",", "Bzi", ",", 
              RowBox[{"0.2`", " ", "\[Pi]"}]}], "]"}], ",", 
            RowBox[{"SectionR\[CapitalPhi]", "[", 
             RowBox[{"Bxi", ",", "Byi", ",", "Bzi", ",", 
              RowBox[{"Mean", "[", 
               RowBox[{
               "bounds", "\[LeftDoubleBracket]", "3", 
                "\[RightDoubleBracket]"}], "]"}]}], "]"}], ",", 
            RowBox[{"Section\[CapitalPhi]Z", "[", 
             RowBox[{"Bxi", ",", "Byi", ",", "Bzi", ",", 
              RowBox[{"Mean", "[", 
               RowBox[{
               "bounds", "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}], "]"}]}], "]"}], ",", 
            RowBox[{"Spacings", "\[Rule]", 
             RowBox[{"Scaled", "[", "0.`", "]"}]}], ",", 
            RowBox[{"DisplayFunction", "\[Rule]", "Identity"}], ",", 
            RowBox[{"PlotLabel", "\[Rule]", 
             RowBox[{"\"\<t=\>\"", "<>", 
              RowBox[{"ToString", "[", "t", "]"}]}]}]}], "]"}]}], ";"}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"g", "=", 
        RowBox[{"DrawSection", "[", 
         RowBox[{"Bx", ",", "By", ",", "Bz"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"fname", "=", 
        RowBox[{"\"\<dynamo\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{
          "nums", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
          "]"}], "<>", "\"\<.gif\>\""}]}], ";", 
       RowBox[{"Export", "[", 
        RowBox[{"fname", ",", "g", ",", 
         RowBox[{"ImageResolution", "\[Rule]", "300"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "640"}]}], "]"}], ";"}]}], "]"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "nums", "]"}]}], "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.396032024591*^9, 3.396032164275*^9}, {
  3.3960322161429996`*^9, 3.3960322768190002`*^9}, {3.396032432408*^9, 
  3.396032462848*^9}, {3.396032611528*^9, 3.396032650554*^9}, {
  3.396032681407*^9, 3.396032709755*^9}, {3.39603287658*^9, 
  3.396032879454*^9}, {3.396032925429*^9, 3.396032970593*^9}, {
  3.3960366123389997`*^9, 3.3960366143514*^9}, {3.3960407469418*^9, 
  3.3960407573782*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"gr", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Bx", ",", "By", ",", "Bz", ",", "jx", ",", "jy", ",", "jz"}],
         "}"}], "=", 
       RowBox[{"ReadSection", "[", "i", "]"}]}], ";", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "Bxi", ",", "Byi", ",", "Bzi", ",", "jxi", ",", "jyi", ",", "jzi"}], 
        "}"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"ListInterpolation", "[", 
           RowBox[{"#1", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Min", "[", 
                 RowBox[{
                 "coor", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}], "]"}], ",", 
                RowBox[{"Max", "[", 
                 RowBox[{
                 "coor", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}], "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Min", "[", 
                 RowBox[{
                 "coor", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}], "]"}], ",", 
                RowBox[{"Max", "[", 
                 RowBox[{
                 "coor", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}], "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Min", "[", 
                 RowBox[{
                 "coor", "\[LeftDoubleBracket]", "3", 
                  "\[RightDoubleBracket]"}], "]"}], ",", 
                RowBox[{"Max", "[", 
                 RowBox[{
                 "coor", "\[LeftDoubleBracket]", "3", 
                  "\[RightDoubleBracket]"}], "]"}]}], "}"}]}], "}"}], ",", 
            RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}], "&"}], 
         ")"}], "/@", 
        RowBox[{"{", 
         RowBox[{
         "Bx", ",", "By", ",", "Bz", ",", "jx", ",", "jy", ",", "jz"}], 
         "}"}]}]}], ";", 
      RowBox[{"DisplayTogetherArray", "[", 
       RowBox[{
        RowBox[{"SectionRZ", "[", 
         RowBox[{"Bxi", ",", "Byi", ",", "Bzi", ",", 
          RowBox[{"0.2`", " ", "\[Pi]"}]}], "]"}], ",", 
        RowBox[{"SectionR\[CapitalPhi]", "[", 
         RowBox[{"Bxi", ",", "Byi", ",", "Bzi", ",", 
          RowBox[{"Mean", "[", 
           RowBox[{
           "bounds", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
           "]"}]}], "]"}], ",", 
        RowBox[{"Section\[CapitalPhi]Z", "[", 
         RowBox[{"Bxi", ",", "Byi", ",", "Bzi", ",", 
          RowBox[{"Mean", "[", 
           RowBox[{
           "bounds", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
           "]"}]}], "]"}], ",", 
        RowBox[{"Spacings", "\[Rule]", 
         RowBox[{"Scaled", "[", "0.`", "]"}]}], ",", 
        RowBox[{"DisplayFunction", "\[Rule]", "Identity"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "10", ",", "2820", ",", "10"}], "}"}]}], "]"}]}], 
  ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"grtot", "=", 
  RowBox[{"First", "/@", "gr"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<current.gif\>\"", ",", 
    RowBox[{
     RowBox[{
      RowBox[{"Show", "[", 
       RowBox[{"#", ",", 
        RowBox[{"DisplayFunction", "\[Rule]", "Identity"}]}], "]"}], "&"}], "/@",
      "gr"}], ",", 
    RowBox[{"ConversionOptions", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<AnimationDisplayTime\>\"", "\[Rule]", "0.2"}], "}"}]}], 
    ",", 
    RowBox[{"ImageResolution", "\[Rule]", "300"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "640"}]}], "]"}], ";"}]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:0421\:043b\:043e\:0436\:043d\:043e\:0435 \:0440\:0438\:0441\:043e\
\:0432\:0430\:043d\:0438\:0435 \:043f\:043e\:0432\:0435\:0440\:0445\:043d\
\:043e\:0441\:0442\:0435\:0439", "Subsubsection",
 CellChangeTimes->{{3.4535760861914*^9, 3.4535761032265997`*^9}, 
   3.4535761997906*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"cont1", ",", " ", "cont2"}], "}"}], " ", "=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"0.1", "*", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Max", "[", "#1", "]"}], ",", " ", 
        RowBox[{"Min", "[", "#1", "]"}]}], "}"}]}], " ", "&"}], " ", ")"}], 
   "[", "By", "]"}]}]], "Input",
 CellChangeTimes->{3.4535761032265997`*^9, 3.4535761997906*^9}],

Cell[BoxData["bounds"], "Input",
 CellChangeTimes->{3.4535761032265997`*^9, 3.4535761997906*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"cubic", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"r", "=", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["x", "2"], "+", 
            SuperscriptBox["y", "2"]}]]}], ",", 
         RowBox[{"f", "=", 
          RowBox[{
           RowBox[{"ArcTan", "[", 
            RowBox[{"y", ",", 
             RowBox[{"x", "+", 
              SuperscriptBox["10", 
               RowBox[{"-", "10"}]]}]}], "]"}], "+", "\[Pi]"}]}]}], "}"}], 
       ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"z", "\[LessEqual]", 
           RowBox[{"bounds", "\[LeftDoubleBracket]", 
            RowBox[{"3", ",", "2"}], "\[RightDoubleBracket]"}]}], "\[And]", 
          RowBox[{"z", "\[GreaterEqual]", 
           RowBox[{"bounds", "\[LeftDoubleBracket]", 
            RowBox[{"3", ",", "1"}], "\[RightDoubleBracket]"}]}], "\[And]", 
          RowBox[{"r", "\[LessEqual]", 
           RowBox[{"bounds", "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}], "\[And]", 
          RowBox[{"r", "\[GreaterEqual]", 
           RowBox[{"bounds", "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}]}], ",", 
         RowBox[{"Byi", "[", 
          RowBox[{"r", ",", "f", ",", "z"}], "]"}], ",", "0"}], "]"}]}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", 
       RowBox[{"-", "1.5"}], ",", "1.5", ",", "0.2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "6"}], ",", "6", ",", "0.2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "6"}], ",", "6", ",", "0.2"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{3.4535761032265997`*^9, 3.4535761997906*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"g1", " ", "=", " ", 
   RowBox[{"ColorLighting", "[", 
    RowBox[{
     RowBox[{"ListContourPlot3D", "[", 
      RowBox[{"cubic", ",", " ", 
       RowBox[{"Contours", " ", "->", " ", 
        RowBox[{"{", "cont1", "}"}]}], ",", " ", 
       RowBox[{"DisplayFunction", " ", "->", " ", "Identity"}]}], "]"}], ",", 
     " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"g2", " ", "=", " ", 
   RowBox[{"ColorLighting", "[", 
    RowBox[{
     RowBox[{"ListContourPlot3D", "[", 
      RowBox[{"cubic", ",", " ", 
       RowBox[{"Contours", " ", "->", " ", 
        RowBox[{"{", "cont2", "}"}]}], ",", " ", 
       RowBox[{"DisplayFunction", " ", "->", " ", "Identity"}]}], "]"}], ",", 
     " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{3.4535761032265997`*^9, 3.4535761997906*^9}],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"g1", ",", " ", 
   RowBox[{"Lighting", " ", "->", " ", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{3.4535761032265997`*^9, 3.4535761997906*^9}],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Graphics3D", "[", 
    RowBox[{"EdgeForm", "[", "]"}], "]"}], ",", " ", "g1", ",", " ", "g2", 
   ",", " ", 
   RowBox[{"Lighting", " ", "->", " ", "None"}]}], "]"}]], "Input",
 CellChangeTimes->{3.4535761032265997`*^9, 3.4535761997906*^9}],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Graphics3D", "[", 
    RowBox[{"EdgeForm", "[", "]"}], "]"}], ",", " ", 
   RowBox[{"ColorLighting", "[", 
    RowBox[{
     RowBox[{"ListContourPlot3D", "[", 
      RowBox[{"cubic", ",", " ", 
       RowBox[{"Contours", " ", "->", " ", 
        RowBox[{"{", "cont1", "}"}]}], ",", " ", 
       RowBox[{"DisplayFunction", " ", "->", " ", "Identity"}]}], "]"}], ",", 
     " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "}"}]}], "]"}], ",", " ", 
   RowBox[{"ColorLighting", "[", 
    RowBox[{
     RowBox[{"ListContourPlot3D", "[", 
      RowBox[{"cubic", ",", " ", 
       RowBox[{"Contours", " ", "->", " ", 
        RowBox[{"{", "cont2", "}"}]}], ",", " ", 
       RowBox[{"DisplayFunction", " ", "->", " ", "Identity"}]}], "]"}], ",", 
     " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "}"}]}], "]"}], ",", " ", 
   RowBox[{"Lighting", " ", "->", " ", "None"}]}], "]"}]], "Input",
 CellChangeTimes->{3.4535761032265997`*^9, 3.4535761997906*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["\:041f\:0440\:043e\:0441\:0442\:043e\:0435 \:0440\:0438\:0441\:043e\
\:0432\:0430\:043d\:0438\:0435 \:043f\:043e\:0432\:0435\:0440\:0445\:043d\
\:043e\:0441\:0442\:0435\:0439", "Subsubsection",
 CellChangeTimes->{{3.409341419406*^9, 3.40934143437*^9}, {3.4535760684698*^9,
    3.453576072479*^9}, 3.4535761997906*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"min", ",", "max"}], "}"}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Max", "[", "#", "]"}], ",", 
      RowBox[{"Min", "[", "#", "]"}]}], "}"}], "&"}], "@", 
   "helicity"}]}]], "Input",
 CellChangeTimes->{{3.45914933578125*^9, 3.459149374046875*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.8378870567198575`", ",", 
   RowBox[{"-", "0.059760290217658704`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.459149346453125*^9, 3.45914937475*^9}, 3.4591609785*^9, 
   3.45916106053125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"val", "=", 
   RowBox[{"WithoutFict", "[", 
    SqrtBox[
     RowBox[{
      SuperscriptBox["By", "2"], "+", 
      SuperscriptBox["Bx", "2"], "+", 
      SuperscriptBox["Bz", "2"]}]], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"mx", " ", "=", " ", 
  RowBox[{"Max", "[", 
   RowBox[{"Abs", "@", "val"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"min", ",", "max"}], "}"}], "=", 
   RowBox[{"mx", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.4052705427557325`*^9, 3.4052705577973614`*^9}, 
   3.4052705961725426`*^9, {3.409341092967*^9, 3.409341108074*^9}, {
   3.40934130252*^9, 3.4093413088640003`*^9}, {3.409341346699*^9, 
   3.4093413737139997`*^9}, 3.40934143437*^9, 3.4535759180078*^9, {
   3.4535759826074*^9, 3.4535760170053997`*^9}, 3.4535761997906*^9, {
   3.45914938090625*^9, 3.4591493904375*^9}, {3.4876681766935816`*^9, 
   3.487668179610782*^9}, {3.487952322555647*^9, 3.4879523328672485`*^9}, {
   3.488011420074564*^9, 3.4880114265953655`*^9}, {3.4897697167103176`*^9, 
   3.4897697198040676`*^9}, 3.48981658546875*^9}],

Cell[BoxData["0.000010780461508090443`"], "Output",
 CellChangeTimes->{
  3.45362257909375*^9, 3.45362290253125*^9, 3.459149392234375*^9, 
   3.459162325203125*^9, 3.4876777847666907`*^9, 3.4879241395744457`*^9, {
   3.487952329684848*^9, 3.487952333288449*^9}, 3.4879537179603243`*^9, 
   3.4879539515703707`*^9, 3.4879964111243815`*^9, 3.488011428654566*^9, 
   3.4880167920292315`*^9, 3.488019026784276*^9, 3.488088689378119*^9, 
   3.4897685297415676`*^9, 3.4897687277415676`*^9, 3.4897689277884426`*^9, 
   3.4897696360228176`*^9, 3.4897697203821926`*^9, 3.4897701731321926`*^9, 
   3.4897707116790676`*^9, 3.4897710883509426`*^9, 3.4897714629759426`*^9, 
   3.4897715664446926`*^9, 3.4897717476790676`*^9, 3.4897741129915676`*^9, 
   3.4897742078509426`*^9, 3.4897743158821926`*^9, 3.4897754982728176`*^9, 
   3.4897756900228176`*^9, 3.4897982085540676`*^9, 3.4897983802415676`*^9, 
   3.4897985920228176`*^9, 3.489810723390625*^9, 3.48981129328125*^9, 
   3.48981213690625*^9, 3.4898162559375*^9, 3.489816586015625*^9, 
   3.48981673634375*^9, 3.489989121125*^9, 3.4899927469375*^9, 
   3.489995199171875*^9, 3.489995347359375*^9, 3.48999788221875*^9, 
   3.48999874053125*^9, 3.49094952290625*^9, 3.4910460126875*^9, 
   3.49111108909375*^9, 3.491112025359375*^9, 3.491112652359375*^9, 
   3.491112758*^9, 3.491114546140625*^9, 3.49111676034375*^9, 
   3.491123601078125*^9, 3.491123945484375*^9, 3.49112994925*^9, 
   3.491199331564625*^9, 3.49120234358025*^9, 3.491202890158375*^9, 
   3.491203550408375*^9, 3.491203949924*^9, 3.49120446845525*^9, 
   3.491205025720875*^9, 3.491205341252125*^9, 3.49120555645525*^9, 
   3.491206062049*^9, 3.49120706783025*^9, 3.49120828033025*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"val", "=", 
   RowBox[{"out", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"mx", " ", "=", " ", 
  RowBox[{"Max", "[", 
   RowBox[{"Abs", "@", "val"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"min", ",", "max"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "mx"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.4052705427557325`*^9, 3.4052705577973614`*^9}, 
   3.4052705961725426`*^9, {3.409341092967*^9, 3.409341108074*^9}, {
   3.40934130252*^9, 3.4093413088640003`*^9}, {3.409341346699*^9, 
   3.4093413737139997`*^9}, 3.40934143437*^9, 3.4535759180078*^9, {
   3.4535759826074*^9, 3.4535760170053997`*^9}, 3.4535761997906*^9, {
   3.45914938090625*^9, 3.4591493904375*^9}, {3.4876681766935816`*^9, 
   3.487668197316786*^9}, {3.487669795209503*^9, 3.487669800076704*^9}, {
   3.4876738432543077`*^9, 3.487673890054317*^9}, {3.48794967080472*^9, 
   3.4879496810851216`*^9}, {3.4879497752779408`*^9, 3.487949778288741*^9}, 
   3.4879498415779533`*^9}],

Cell[BoxData["1.4967594146728516`"], "Output",
 CellChangeTimes->{
  3.4876681991731863`*^9, 3.487669511507847*^9, 3.4876698007787046`*^9, 
   3.4876737501846895`*^9, 3.487673810790701*^9, {3.487673843706708*^9, 
   3.487673890241517*^9}, 3.487674085366356*^9, 3.487676048361546*^9, {
   3.4879496580907173`*^9, 3.487949682738722*^9}, 3.4879497789595413`*^9, 
   3.4879498419523535`*^9, 3.487953669288314*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"val", "=", 
   RowBox[{"WithoutFict", "[", "Bz", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"mx", " ", "=", " ", 
  RowBox[{"Max", "[", 
   RowBox[{"Abs", "@", "val"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"min", ",", "max"}], "}"}], "=", 
   RowBox[{"mx", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.4052705427557325`*^9, 3.4052705577973614`*^9}, 
   3.4052705961725426`*^9, {3.409341092967*^9, 3.409341108074*^9}, {
   3.40934130252*^9, 3.4093413088640003`*^9}, {3.409341346699*^9, 
   3.4093413737139997`*^9}, 3.40934143437*^9, 3.4535759180078*^9, {
   3.4535759826074*^9, 3.4535760170053997`*^9}, 3.4535761997906*^9, {
   3.45914938090625*^9, 3.4591493904375*^9}, {3.4876681766935816`*^9, 
   3.487668179610782*^9}, {3.487952322555647*^9, 3.4879523328672485`*^9}, {
   3.488011420074564*^9, 3.4880114265953655`*^9}, {3.4897697167103176`*^9, 
   3.4897697198040676`*^9}, {3.48981492528125*^9, 3.4898149275*^9}}],

Cell[BoxData["0.0003703236425479212`"], "Output",
 CellChangeTimes->{3.489814928640625*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"phi", "=", 
   RowBox[{"Outer", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ArcTan", "[", 
       RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", 
     RowBox[{"coor", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"coor", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Bphi", "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Bx", " ", 
      RowBox[{"Sin", "[", "phi", "]"}]}], "-", 
     RowBox[{"By", " ", 
      RowBox[{"Cos", "[", "phi", "]"}]}]}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"val", "=", 
   RowBox[{"WithoutFict", "[", 
    RowBox[{
     RowBox[{"Sign", "[", "Bphi", "]"}], 
     SqrtBox[
      RowBox[{
       SuperscriptBox["By", "2"], "+", 
       SuperscriptBox["Bx", "2"], "+", 
       SuperscriptBox["Bz", "2"]}]]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"mx", " ", "=", " ", 
  RowBox[{"Max", "[", 
   RowBox[{"Abs", "@", "val"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"min", ",", "max"}], "}"}], "=", 
   RowBox[{"mx", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.489811593109375*^9, 3.489811635171875*^9}, {
  3.491208405658375*^9, 3.4912084246115*^9}}],

Cell[BoxData["1.6091866556531399`*^10"], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGBQB+KMiX3SJ5lfOWYIdpiD6YktwRC+61sIX0HgFJivHA6h
U16B6YmTBU6D+Xe9n4Lpb0sg9I3LYHpi+28IX0XxGZjWdoHQwukQemszhN64
GEIzHwTTE/t4n4P5qnpgeqKnF4T/IwPC/9ICoR8thIhn74fQZQ8g9Ka/EHq1
1Auwuk4DNxYQPa3LE0zrz4DQ019ngelyiVKI/Kt6EC1oVL8DzO/6BaGvzd8J
pvtV9oBpl+UgGgBF85Cz
  "]]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Bpol", "=", 
   SqrtBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"By", " ", 
         RowBox[{"Sin", "[", "phi", "]"}]}], "+", 
        RowBox[{"Bx", " ", 
         RowBox[{"Cos", "[", "phi", "]"}]}]}], ")"}], "2"], "+", 
     SuperscriptBox["Bz", "2"]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Bphi", "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Bx", " ", 
      RowBox[{"Sin", "[", "phi", "]"}]}], "-", 
     RowBox[{"By", " ", 
      RowBox[{"Cos", "[", "phi", "]"}]}]}], ")"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.48981419278125*^9, 3.489814212890625*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"val1", "=", 
   RowBox[{"WithoutFict", "[", "Bphi", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"mx1", "=", " ", 
  RowBox[{"Max", "[", 
   RowBox[{"Abs", "@", "val1"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"min1", ",", "max1"}], "}"}], "=", 
   RowBox[{"mx1", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.4052705427557325`*^9, 3.4052705577973614`*^9}, 
   3.4052705961725426`*^9, {3.409341092967*^9, 3.409341108074*^9}, {
   3.40934130252*^9, 3.4093413088640003`*^9}, {3.409341346699*^9, 
   3.4093413737139997`*^9}, 3.40934143437*^9, 3.4535759180078*^9, {
   3.4535759826074*^9, 3.4535760170053997`*^9}, 3.4535761997906*^9, {
   3.45914938090625*^9, 3.4591493904375*^9}, {3.4876681766935816`*^9, 
   3.487668179610782*^9}, {3.487952322555647*^9, 3.4879523328672485`*^9}, {
   3.488011420074564*^9, 3.4880114265953655`*^9}, {3.4897697167103176`*^9, 
   3.4897697198040676`*^9}, {3.489811778421875*^9, 3.489811803671875*^9}, {
   3.489813786953125*^9, 3.4898138413125*^9}, {3.489814189671875*^9, 
   3.489814199390625*^9}, {3.489995551984375*^9, 3.489995552046875*^9}}],

Cell[BoxData["0.0017181475688492044`"], "Output",
 CellChangeTimes->{
  3.48981206453125*^9, 3.489812225328125*^9, 3.489812952109375*^9, 
   3.489813579265625*^9, 3.4898137854375*^9, {3.48981381615625*^9, 
   3.489813841984375*^9}, 3.489995552421875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"val1", "=", 
   RowBox[{"WithoutFict", "[", 
    RowBox[{
     RowBox[{"By", " ", 
      RowBox[{"Sin", "[", "phi", "]"}]}], "+", 
     RowBox[{"Bx", " ", 
      RowBox[{"Cos", "[", "phi", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"mx1", "=", " ", 
  RowBox[{"Max", "[", 
   RowBox[{"Abs", "@", "val1"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"min1", ",", "max1"}], "}"}], "=", 
   RowBox[{"mx1", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.4052705427557325`*^9, 3.4052705577973614`*^9}, 
   3.4052705961725426`*^9, {3.409341092967*^9, 3.409341108074*^9}, {
   3.40934130252*^9, 3.4093413088640003`*^9}, {3.409341346699*^9, 
   3.4093413737139997`*^9}, 3.40934143437*^9, 3.4535759180078*^9, {
   3.4535759826074*^9, 3.4535760170053997`*^9}, 3.4535761997906*^9, {
   3.45914938090625*^9, 3.4591493904375*^9}, {3.4876681766935816`*^9, 
   3.487668179610782*^9}, {3.487952322555647*^9, 3.4879523328672485`*^9}, {
   3.488011420074564*^9, 3.4880114265953655`*^9}, {3.4897697167103176`*^9, 
   3.4897697198040676`*^9}, {3.489811778421875*^9, 3.489811803671875*^9}, {
   3.489813786953125*^9, 3.4898138413125*^9}, {3.489814189671875*^9, 
   3.489814199390625*^9}, 3.489816968109375*^9}],

Cell[BoxData["0.7827112174405175`"], "Output",
 CellChangeTimes->{3.489816968984375*^9, 3.4899890650625*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"gh", "=", " ", 
   RowBox[{"ListContourPlot3D", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"val", ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "2", ",", "1"}], "}"}]}], "]"}], ",", " ", 
     RowBox[{"Contours", " ", "\[Rule]", 
      RowBox[{
       FractionBox[
        RowBox[{"min", "+", "max"}], "2"], "+", 
       RowBox[{
        FractionBox[
         RowBox[{"max", "-", "min"}], "2"], 
        RowBox[{"1", "/", "2.5"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], ",", 
          FractionBox["1", "2"]}], "}"}]}]}]}], " ", ",", 
     RowBox[{"ContourStyle", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Directive", "[", 
         RowBox[{"Yellow", ",", " ", 
          RowBox[{"Opacity", "[", "0.6", "]"}]}], "]"}], ",", " ", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"Lighter", "[", "Blue", "]"}], ",", " ", 
          RowBox[{"Opacity", "[", "0.6", "]"}]}], "]"}]}], "}"}]}], ",", " ", 
     RowBox[{"BoxRatios", " ", "->", " ", "Automatic"}], ",", " ", 
     RowBox[{"Mesh", " ", "->", " ", "False"}], ",", " ", 
     RowBox[{"AxesLabel", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", " ", "y", ",", " ", "z"}], "}"}]}], ",", " ", 
     RowBox[{"DataRange", " ", "->", " ", "bounds"}], ",", 
     RowBox[{"ViewPoint", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"-", "3"}], ",", "3"}], "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.4898149145*^9, 3.489814916609375*^9}, {
   3.489814966203125*^9, 3.4898149805625*^9}, {3.489815040359375*^9, 
   3.489815043515625*^9}, {3.48981626334375*^9, 3.48981629365625*^9}, 
   3.489816995375*^9, {3.489992764859375*^9, 3.489992765046875*^9}, {
   3.489995206*^9, 3.48999522028125*^9}, 3.489995367609375*^9, {
   3.489997890515625*^9, 3.4899978985*^9}, {3.489998763765625*^9, 
   3.489998774484375*^9}, {3.490949530671875*^9, 3.4909495395*^9}, {
   3.491116775515625*^9, 3.491116852875*^9}, {3.491123652234375*^9, 
   3.491123659265625*^9}, {3.491123992921875*^9, 3.491124024265625*^9}, 
   3.491129799125*^9, {3.491202625908375*^9, 3.491202626158375*^9}, {
   3.4912029424865*^9, 3.491202962658375*^9}, {3.491204710814625*^9, 
   3.4912047172365*^9}, {3.491207138533375*^9, 3.4912071644865*^9}, 
   3.491208258595875*^9, {3.49120853351775*^9, 3.491208583158375*^9}, 
   3.491559321877125*^9, 3.491901851674*^9, 3.4919019001115*^9, {
   3.491908550877125*^9, 3.491908560564625*^9}, {3.491908699877125*^9, 
   3.491908704564625*^9}, 3.491908836252125*^9, {3.491909605845875*^9, 
   3.491909617283375*^9}, 3.49191005983025*^9, 3.49191014008025*^9, 
   3.491910178939625*^9, {3.4919102536115*^9, 3.491910256220875*^9}, {
   3.491911173252125*^9, 3.49191120164275*^9}, {3.49191124226775*^9, 
   3.491911330814625*^9}, 3.492135780845875*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"gt", "[", "r_", "]"}], ":=", 
  RowBox[{"ParametricPlot3D", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"r", "+", 
         RowBox[{"Cos", "[", "v", "]"}]}], ")"}], " ", 
       RowBox[{"Cos", "[", "u", "]"}]}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"r", "+", 
         RowBox[{"Cos", "[", "v", "]"}]}], ")"}], " ", 
       RowBox[{"Sin", "[", "u", "]"}]}], ",", 
      RowBox[{"Sin", "[", "v", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"u", ",", "0", ",", 
      RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"v", ",", "0", ",", 
      RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
    RowBox[{"Mesh", "\[Rule]", "False"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Opacity", "[", "0.9", "]"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.491908548252125*^9, 3.491909631127125*^9, {3.492489957564625*^9, 
   3.492489958095875*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sec", "[", "\[Phi]_", "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"size", "=", "1.5"}], "}"}], ",", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"{", 
      RowBox[{"Green", ",", 
       RowBox[{"Opacity", "[", "0.5", "]"}], ",", 
       RowBox[{"Polygon", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "\[Kappa]"], "-", "size"}], ")"}], 
             RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "\[Kappa]"], "-", "size"}], ")"}], 
             RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", 
            RowBox[{"-", "size"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "\[Kappa]"], "+", "size"}], ")"}], 
             RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "\[Kappa]"], "+", "size"}], ")"}], 
             RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", 
            RowBox[{"-", "size"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "\[Kappa]"], "+", "size"}], ")"}], 
             RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "\[Kappa]"], "+", "size"}], ")"}], 
             RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", "size"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "\[Kappa]"], "-", "size"}], ")"}], 
             RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "\[Kappa]"], "-", "size"}], ")"}], 
             RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", "size"}], "}"}]}], 
         "}"}], "]"}]}], "}"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.49197732195525*^9, 3.4919773319865*^9}, {
  3.491988264595875*^9, 3.491988294158375*^9}, {3.491988526314625*^9, 
  3.49198867895525*^9}, {3.49198878333025*^9, 3.4919887843615*^9}, {
  3.491988814408375*^9, 3.491988833814625*^9}, {3.491988955283375*^9, 
  3.491989039908375*^9}}],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"gh", ",", 
   RowBox[{"gt", "[", 
    RowBox[{"1", "/", "\[Kappa]"}], "]"}], ",", 
   RowBox[{"sec", "[", "\[Phi]max", "]"}], ",", 
   RowBox[{"sec", "[", 
    RowBox[{"\[Phi]max", "+", 
     FractionBox["\[Pi]", "2"]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.491908849908375*^9, 3.491908854314625*^9}, {
   3.491908913689625*^9, 3.491908914299*^9}, 3.49191111626775*^9, {
   3.491988683220875*^9, 3.491988686345875*^9}, {3.49199484083025*^9, 
   3.49199485876775*^9}, {3.49199776239275*^9, 3.491997766127125*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"\"\<final\>\"", "<>", 
    RowBox[{"ToString", "[", "\[Kappa]", "]"}], "<>", "\"\<surf.gif\>\""}], 
   ",", "gh", ",", 
   RowBox[{"ImageResolution", "\[Rule]", "300"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "640"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4912051978615*^9, 3.491205240345875*^9}, {
  3.49120538501775*^9, 3.491205388564625*^9}}],

Cell[BoxData["\<\"final0.75909surf.gif\"\>"], "Output",
 CellChangeTimes->CompressedData["
1:eJwly0koxGEYx/ExlJKl15KEJJlsycEe4kKyNBRquFj+IaEkOVHKjIvyJ4my
FTO2iCQ0FzMYM6RclDjIMmMrWUqShvn9Dm+fvs/zvJF17eWSm0KhqP5/TWIr
9F35lNckcqJoTDqUM9fYedMfaElPuzZovhmK+Uu25zM7827K3WWs97RLOb6G
Dmtp9iodstH1xBncp5VSaU0P159prr8BxqlpbfkC/qk7adYIFBObtPOL8/CC
RehYoUXaJew7JunBLpRVtyY4HmbG3HFBp5L3YUoDfVuk1hMoWxIO0L6VUG7U
UWmZ1p/TO9Uh7lIroFw2wF4ysFtPqdPfAs+qaFA3nR+jGiO9+qYP6UfQR6Yq
C/WLsEJ7BhSPFTT3lXYH2KBJA+XRF7YIOEa/ltzDEANVntOBXyh6ouzotnxa
2Ex/+qEI1VOniZ74OXiXRFuLqVcLVeto8Byd2INi8IZeOzk3hz2gP3u3PVxd
+UMDZ3fgb7QR9i24/AP1c1SG
  "]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"gh1", "=", " ", 
  RowBox[{"ListContourPlot3D", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"val1", ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "2", ",", "1"}], "}"}]}], "]"}], ",", " ", 
    RowBox[{"Contours", " ", "\[Rule]", 
     RowBox[{
      FractionBox[
       RowBox[{"min1", "+", "max1"}], "2"], "+", 
      RowBox[{
       FractionBox[
        RowBox[{"max1", "-", "min1"}], "2"], 
       RowBox[{"1", "/", "2"}], 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], ",", 
         FractionBox["1", "2"]}], "}"}]}]}]}], " ", ",", " ", 
    RowBox[{"ContourStyle", " ", "->", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Directive", "[", 
        RowBox[{"Yellow", ",", " ", 
         RowBox[{"Opacity", "[", "0.8", "]"}]}], "]"}], ",", " ", 
       RowBox[{"Directive", "[", 
        RowBox[{"Pink", ",", " ", 
         RowBox[{"Opacity", "[", "0.8", "]"}]}], "]"}]}], "}"}]}], ",", " ", 
    RowBox[{"BoxRatios", " ", "->", " ", "Automatic"}], ",", " ", 
    RowBox[{"Mesh", " ", "->", " ", "False"}], ",", " ", 
    RowBox[{"AxesLabel", " ", "->", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "y", ",", " ", "z"}], "}"}]}], ",", " ", 
    RowBox[{"DataRange", " ", "->", " ", "bounds"}], ",", 
    RowBox[{"ViewPoint", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\[Infinity]"}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.4898137829375*^9, 3.48981381459375*^9}, 
   3.4898138610625*^9, {3.489813955890625*^9, 3.48981400321875*^9}, 
   3.489814084171875*^9, {3.4898164428125*^9, 3.48981648909375*^9}, {
   3.489816554078125*^9, 3.489816561046875*^9}, {3.489977916609375*^9, 
   3.489977947296875*^9}, {3.4899890803125*^9, 3.489989107328125*^9}, {
   3.489995561734375*^9, 3.48999557203125*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"val2", "=", 
   RowBox[{"WithoutFict", "[", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Bx", " ", 
       RowBox[{"Sin", "[", "phi", "]"}]}], "-", 
      RowBox[{"By", " ", 
       RowBox[{"Cos", "[", "phi", "]"}]}]}], ")"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"mx2", " ", "=", " ", 
  RowBox[{"Max", "[", 
   RowBox[{"Abs", "@", "val2"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"min2", ",", "max2"}], "}"}], "=", 
   RowBox[{"mx2", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.4052705427557325`*^9, 3.4052705577973614`*^9}, 
   3.4052705961725426`*^9, {3.409341092967*^9, 3.409341108074*^9}, {
   3.40934130252*^9, 3.4093413088640003`*^9}, {3.409341346699*^9, 
   3.4093413737139997`*^9}, 3.40934143437*^9, 3.4535759180078*^9, {
   3.4535759826074*^9, 3.4535760170053997`*^9}, 3.4535761997906*^9, {
   3.45914938090625*^9, 3.4591493904375*^9}, {3.4876681766935816`*^9, 
   3.487668179610782*^9}, {3.487952322555647*^9, 3.4879523328672485`*^9}, {
   3.488011420074564*^9, 3.4880114265953655`*^9}, {3.4897697167103176`*^9, 
   3.4897697198040676`*^9}, {3.489811778421875*^9, 3.489811803671875*^9}, {
   3.489812096484375*^9, 3.489812109203125*^9}, 3.489813183921875*^9, 
   3.48981322953125*^9, {3.48981334809375*^9, 3.48981334828125*^9}, {
   3.489813870953125*^9, 3.489813877640625*^9}}],

Cell[BoxData["0.0001939449155569073`"], "Output",
 CellChangeTimes->{3.48981210971875*^9, 3.489813076453125*^9, 
  3.489813184671875*^9, 3.489813233765625*^9, 3.489813349125*^9, 
  3.489813609265625*^9, 3.48981387834375*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Bxi", ",", "Byi", ",", "Bzi"}], "}"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"ListInterpolation", "[", 
      RowBox[{"#", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Min", "[", 
            RowBox[{
            "coor", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            "]"}], ",", 
           RowBox[{"Max", "[", 
            RowBox[{
            "coor", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Min", "[", 
            RowBox[{
            "coor", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
            "]"}], ",", 
           RowBox[{"Max", "[", 
            RowBox[{
            "coor", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
            "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Min", "[", 
            RowBox[{
            "coor", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
            "]"}], ",", 
           RowBox[{"Max", "[", 
            RowBox[{
            "coor", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
            "]"}]}], "}"}]}], "}"}], ",", 
       RowBox[{
        StyleBox["InterpolationOrder", "MR"], 
        StyleBox["\[Rule]", "MR"], "3"}]}], "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{"Bx", ",", "By", ",", "Bz"}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.489815354375*^9, 3.48981536996875*^9}, 
   3.489815681921875*^9}],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Bzi", "[", 
    RowBox[{
     RowBox[{"Cos", "[", "\[Phi]", "]"}], ",", 
     RowBox[{"Sin", "[", "\[Phi]", "]"}], ",", "1"}], "]"}], " ", ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.489992101234375*^9, 3.48999210778125*^9}}],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Byi", "[", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Phi]", "]"}], ",", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}], ",", "1"}], "]"}], " ", 
     RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "+", 
    RowBox[{
     RowBox[{"Bxi", "[", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Phi]", "]"}], ",", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}], ",", "1"}], "]"}], " ", 
     RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], " ", ",", 
   RowBox[{"{", 
    RowBox[{"\[Phi]", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.489978147953125*^9, 3.489978326546875*^9}, {
  3.48997850034375*^9, 3.48997850334375*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Bx", ",", "By", ",", "Bz"}], "}"}], "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Bx", ",", "By", ",", "Bz"}], "}"}], "/", 
    RowBox[{"Max", "[", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["Bx", "2"], "+", 
       SuperscriptBox["By", "2"], "+", 
       SuperscriptBox["Bz", "2"]}]], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.48981542728125*^9, 3.489815468875*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nds", "=", 
   RowBox[{"First", "@", 
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
         RowBox[{"Bxi", "[", 
          RowBox[{
           RowBox[{"x", "[", "t", "]"}], ",", 
           RowBox[{"y", "[", "t", "]"}], ",", 
           RowBox[{"z", "[", "t", "]"}]}], "]"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"y", "'"}], "[", "t", "]"}], "==", 
         RowBox[{"Byi", "[", 
          RowBox[{
           RowBox[{"x", "[", "t", "]"}], ",", 
           RowBox[{"y", "[", "t", "]"}], ",", 
           RowBox[{"z", "[", "t", "]"}]}], "]"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"z", "'"}], "[", "t", "]"}], "==", 
         RowBox[{"Bzi", "[", 
          RowBox[{
           RowBox[{"x", "[", "t", "]"}], ",", 
           RowBox[{"y", "[", "t", "]"}], ",", 
           RowBox[{"z", "[", "t", "]"}]}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"x", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{
         RowBox[{"y", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{
         RowBox[{"z", "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "200"}], "}"}]}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.489815274515625*^9, 3.489815304234375*^9}, {
  3.489815374421875*^9, 3.489815422140625*^9}, {3.4898154750625*^9, 
  3.489815524484375*^9}, {3.489815564421875*^9, 3.4898155918125*^9}, {
  3.489815854796875*^9, 3.489815855859375*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nds2", "=", 
   RowBox[{"First", "@", 
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"x", "'"}], "[", "t", "]"}], "\[Equal]", 
         RowBox[{"-", 
          RowBox[{"Bxi", "[", 
           RowBox[{
            RowBox[{"x", "[", "t", "]"}], ",", 
            RowBox[{"y", "[", "t", "]"}], ",", 
            RowBox[{"z", "[", "t", "]"}]}], "]"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"y", "'"}], "[", "t", "]"}], "\[Equal]", 
         RowBox[{"-", 
          RowBox[{"Byi", "[", 
           RowBox[{
            RowBox[{"x", "[", "t", "]"}], ",", 
            RowBox[{"y", "[", "t", "]"}], ",", 
            RowBox[{"z", "[", "t", "]"}]}], "]"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"z", "'"}], "[", "t", "]"}], "\[Equal]", 
         RowBox[{"-", 
          RowBox[{"Bzi", "[", 
           RowBox[{
            RowBox[{"x", "[", "t", "]"}], ",", 
            RowBox[{"y", "[", "t", "]"}], ",", 
            RowBox[{"z", "[", "t", "]"}]}], "]"}]}]}], ",", 
        RowBox[{
         RowBox[{"x", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{
         RowBox[{"y", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{
         RowBox[{"z", "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "200"}], "}"}]}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.489815729125*^9, 3.4898157333125*^9}, {
  3.48981585809375*^9, 3.489815858796875*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "[", "t", "]"}], ",", 
    RowBox[{"y", "[", "t", "]"}], ",", 
    RowBox[{"z", "[", "t", "]"}]}], "}"}], "/.", 
  RowBox[{"{", 
   RowBox[{"nds", ",", "nds2"}], "}"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      TagBox[
       RowBox[{"InterpolatingFunction", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"0.`", ",", "200.`"}], "}"}], "}"}], ",", "\<\"<>\"\>"}], 
        "]"}],
       False,
       Editable->False], "[", "t", "]"}], ",", 
     RowBox[{
      TagBox[
       RowBox[{"InterpolatingFunction", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"0.`", ",", "200.`"}], "}"}], "}"}], ",", "\<\"<>\"\>"}], 
        "]"}],
       False,
       Editable->False], "[", "t", "]"}], ",", 
     RowBox[{
      TagBox[
       RowBox[{"InterpolatingFunction", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"0.`", ",", "200.`"}], "}"}], "}"}], ",", "\<\"<>\"\>"}], 
        "]"}],
       False,
       Editable->False], "[", "t", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      TagBox[
       RowBox[{"InterpolatingFunction", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"0.`", ",", "200.`"}], "}"}], "}"}], ",", "\<\"<>\"\>"}], 
        "]"}],
       False,
       Editable->False], "[", "t", "]"}], ",", 
     RowBox[{
      TagBox[
       RowBox[{"InterpolatingFunction", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"0.`", ",", "200.`"}], "}"}], "}"}], ",", "\<\"<>\"\>"}], 
        "]"}],
       False,
       Editable->False], "[", "t", "]"}], ",", 
     RowBox[{
      TagBox[
       RowBox[{"InterpolatingFunction", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"0.`", ",", "200.`"}], "}"}], "}"}], ",", "\<\"<>\"\>"}], 
        "]"}],
       False,
       Editable->False], "[", "t", "]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.489815850828125*^9, 3.489815860515625*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot3D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", "t", "]"}], ",", 
      RowBox[{"y", "[", "t", "]"}], ",", 
      RowBox[{"z", "[", "t", "]"}]}], "}"}], "/.", 
    RowBox[{"{", 
     RowBox[{"nds", ",", "nds2"}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "200"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Blue"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4898154975625*^9, 3.489815527890625*^9}, {
  3.489815566484375*^9, 3.48981561378125*^9}, {3.4898157438125*^9, 
  3.489815746078125*^9}, {3.489815833140625*^9, 3.489815837640625*^9}, {
  3.489815871640625*^9, 3.489816000421875*^9}}],

Cell[BoxData[
 Graphics3DBox[{{}, {}, 
   {RGBColor[0, 0, 1], Line3DBox[CompressedData["
1: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
     "]], Line3DBox[CompressedData["
1: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
T3aKClKn0v4HiFHgfw==
     "]]}},
  Axes->True,
  AxesLabel->{
    FormBox["x", TraditionalForm], 
    FormBox["y", TraditionalForm], 
    FormBox["z", TraditionalForm]},
  ImageSize->{577.8964389652385, 551.},
  PlotRange->{{-2.6612040623499147`, 2.674749986911652}, {-2.94270303033492, 
   2.9497440324635975`}, {-1.3515014501937432`, 2.8952493991981827`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  ViewPoint->{1.9263472860648638`, 0.7142192389922213, 2.68869429502945},
  ViewVertical->{-0.3597096785795883, 0.2008747385848382, 
   1.2818932985296725`}]], "Output",
 CellChangeTimes->{{3.489815512609375*^9, 3.48981552821875*^9}, {
   3.489815566875*^9, 3.4898156141875*^9}, 3.489815690875*^9, 
   3.489815746484375*^9, {3.489815838078125*^9, 3.489816001234375*^9}}]
}, Closed]],

Cell[BoxData[
 RowBox[{"gh2", "=", " ", 
  RowBox[{"ListContourPlot3D", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"val2", ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "2", ",", "1"}], "}"}]}], "]"}], ",", " ", 
    RowBox[{"Contours", " ", "\[Rule]", 
     RowBox[{
      FractionBox[
       RowBox[{"min2", "+", "max2"}], "2"], "+", 
      RowBox[{
       FractionBox[
        RowBox[{"max2", "-", "min2"}], "2"], 
       RowBox[{"1", "/", "1.2"}], 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], ",", 
         FractionBox["1", "2"]}], "}"}]}]}]}], " ", ",", " ", 
    RowBox[{"ContourStyle", " ", "->", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Directive", "[", 
        RowBox[{"Yellow", ",", " ", 
         RowBox[{"Opacity", "[", "0.8", "]"}]}], "]"}], ",", " ", 
       RowBox[{"Directive", "[", 
        RowBox[{"Pink", ",", " ", 
         RowBox[{"Opacity", "[", "0.8", "]"}]}], "]"}]}], "}"}]}], ",", " ", 
    RowBox[{"BoxRatios", " ", "->", " ", "Automatic"}], ",", " ", 
    RowBox[{"Mesh", " ", "->", " ", "False"}], ",", " ", 
    RowBox[{"AxesLabel", " ", "->", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "y", ",", " ", "z"}], "}"}]}], ",", " ", 
    RowBox[{"DataRange", " ", "->", " ", "bounds"}], ",", 
    RowBox[{"ViewPoint", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\[Infinity]"}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.4052706022312546`*^9, 3.405270634587781*^9}, {
   3.405270745847765*^9, 3.4052707556819057`*^9}, {3.405271140785658*^9, 
   3.405271143649776*^9}, {3.409341128416*^9, 3.409341144784*^9}, {
   3.40934123341*^9, 3.409341237156*^9}, {3.409341276205*^9, 
   3.409341280727*^9}, {3.409341316645*^9, 3.409341376817*^9}, 
   3.409341434667*^9, {3.4535759226098003`*^9, 3.4535759521874*^9}, {
   3.4535759877242002`*^9, 3.4535760239006*^9}, 3.4535761997906*^9, {
   3.45362258596875*^9, 3.453622587453125*^9}, {3.453622907765625*^9, 
   3.453622909296875*^9}, {3.45916101159375*^9, 3.459161020328125*^9}, {
   3.459161057703125*^9, 3.4591610670625*^9}, {3.459161102703125*^9, 
   3.45916111703125*^9}, {3.459161157328125*^9, 3.459161157734375*^9}, {
   3.45916233959375*^9, 3.459162339859375*^9}, {3.487668205475587*^9, 
   3.4876682074723873`*^9}, 3.487669743074293*^9, {3.487669874863119*^9, 
   3.4876698973583236`*^9}, {3.4876738513039093`*^9, 
   3.4876738635343113`*^9}, {3.4876777882142916`*^9, 
   3.4876777926602926`*^9}, {3.487924151102848*^9, 3.48792416174205*^9}, 
   3.4879496854687223`*^9, {3.487949846289154*^9, 3.487949846788355*^9}, {
   3.487953653844311*^9, 3.487953654125111*^9}, {3.487953684295517*^9, 
   3.4879536897243185`*^9}, {3.487953724543525*^9, 3.487953738006328*^9}, {
   3.487996416537583*^9, 3.4879964206871834`*^9}, {3.4880114466101694`*^9, 
   3.4880114631617727`*^9}, {3.488011897575059*^9, 3.4880119552794704`*^9}, 
   3.4880190403718786`*^9, {3.4880190811190863`*^9, 3.4880191331294966`*^9}, {
   3.488019165062703*^9, 3.4880191720671043`*^9}, {3.488019733292816*^9, 
   3.488019758174821*^9}, {3.4897689898196926`*^9, 3.4897690002103176`*^9}, {
   3.4897690650696926`*^9, 3.4897690854134426`*^9}, {3.4897696866165676`*^9, 
   3.4897696977571926`*^9}, {3.4897697368978176`*^9, 
   3.4897697640384426`*^9}, {3.4897701902103176`*^9, 3.4897701903196926`*^9}, 
   3.4897702214134426`*^9, {3.4897711081321926`*^9, 3.4897711190384426`*^9}, 
   3.4897714776478176`*^9, 3.4897717775540676`*^9, 3.4897742996790676`*^9, {
   3.489810739734375*^9, 3.489810788109375*^9}, 3.489811147859375*^9, 
   3.489812265625*^9, {3.489812896234375*^9, 3.489812904640625*^9}, {
   3.489812968765625*^9, 3.489812996828125*^9}, 3.489813079984375*^9, {
   3.489813141546875*^9, 3.489813210828125*^9}, {3.489813613375*^9, 
   3.489813613953125*^9}, 3.48981364534375*^9, {3.489813709078125*^9, 
   3.48981375565625*^9}, {3.48981388021875*^9, 3.48981388475*^9}, {
   3.489813989734375*^9, 3.48981402471875*^9}, 3.489816339015625*^9, {
   3.48981640496875*^9, 3.489816415109375*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"gh1", ",", "gh2"}], "}"}]], "Input",
 CellChangeTimes->{{3.489814036890625*^9, 3.48981404040625*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<final1.00.gif\>\"", ",", ",", 
   RowBox[{"ImageResolution", "\[Rule]", "300"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "640"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4897686458509426`*^9, 3.4897686578509426`*^9}, {
   3.4897687786165676`*^9, 3.4897687786946926`*^9}, 3.4897689194446926`*^9, {
   3.4897697745228176`*^9, 3.4897698210540676`*^9}, {3.4897702351478176`*^9, 
   3.4897702407571926`*^9}, {3.4897707336634426`*^9, 
   3.4897707577728176`*^9}, {3.4897711368040676`*^9, 
   3.4897711403509426`*^9}, {3.4897714986321926`*^9, 
   3.4897715014603176`*^9}, {3.4897715356165676`*^9, 
   3.4897715363978176`*^9}, {3.4897716033821926`*^9, 
   3.4897716072884426`*^9}, {3.4897718887259426`*^9, 
   3.4897719026478176`*^9}, {3.4897741391009426`*^9, 
   3.4897741405696926`*^9}, {3.4897742410071926`*^9, 
   3.4897742432415676`*^9}, {3.4897743373821926`*^9, 
   3.4897743405071926`*^9}, {3.4897755286009426`*^9, 
   3.4897755298509426`*^9}, {3.4897757045853176`*^9, 
   3.4897757058821926`*^9}, {3.4897982306165676`*^9, 
   3.4897982323665676`*^9}, {3.4897984324446926`*^9, 
   3.4897984354603176`*^9}, {3.4897989402259426`*^9, 
   3.4897989419603176`*^9}, {3.48981081253125*^9, 3.489810817609375*^9}, 
   3.4898261895625*^9}],

Cell[BoxData["\<\"final1.00.gif\"\>"], "Output",
 CellChangeTimes->{
  3.4897686641321926`*^9, 3.4897687838040676`*^9, 3.4897689286478176`*^9, 
   3.4897690256165676`*^9, 3.4897690795540676`*^9, {3.4897697814446926`*^9, 
   3.4897698082728176`*^9}, 3.4897702449915676`*^9, {3.4897707397571926`*^9, 
   3.4897707676790676`*^9}, 3.4897711460384426`*^9, 3.4897715075228176`*^9, 
   3.4897716122571926`*^9, 3.4897719092103176`*^9, 3.4897741574134426`*^9, 
   3.4897742485228176`*^9, 3.4897743446634426`*^9, 3.4897755349603176`*^9, 
   3.4897757114603176`*^9, 3.4897982391478176`*^9, 3.4897984405540676`*^9, 
   3.4897989476009426`*^9, 3.489810827859375*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
\:041f\:0440\:043e\:0441\:043c\:043e\:0442\:0440 \:043c\:0430\:0441\:0441\
\:0438\:0432\:0430 \:0442\:0438\:043f\:0430 \:044f\:0447\:0435\:0435\:043a \
\:0438 \:043e\:0442\:0440\:0430\:0436\:0435\:043d\:0438\:0439\
\>", "Subsubsection",
 CellChangeTimes->{{3.4155230236470003`*^9, 3.415523029025*^9}, 
   3.4535761997906*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"node", ",", "ref"}], "}"}], " ", "=", " ", 
   RowBox[{"ReadAuxFiles3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<node\>\"", ",", "\"\<ref\>\""}], "}"}], ",", 
     RowBox[{"NumberOfRefs", "\[Rule]", "3"}], ",", 
     RowBox[{"ProcDistrib", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"4", ",", "4", ",", "1"}], "}"}]}]}], "]"}]}], ";", 
  RowBox[{"Dimensions", "[", "node", "]"}]}]], "Input",
 CellChangeTimes->{
  3.415523029025*^9, 3.4535761997906*^9, {3.4876720602051535`*^9, 
   3.487672097005561*^9}, {3.4876727547016916`*^9, 3.4876727558716917`*^9}, {
   3.4876727942476993`*^9, 3.4876727947936993`*^9}, {3.4876760615747485`*^9, 
   3.487676092369155*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"70", ",", "70", ",", "38"}], "}"}]], "Output",
 CellChangeTimes->{
  3.487672097738761*^9, 3.487672712160483*^9, 3.4876727564800916`*^9, 
   3.4876727952460995`*^9, 3.487673029604946*^9, 3.4876732215785837`*^9, 
   3.4876733956746187`*^9, 3.487673545902649*^9, {3.4876760851151533`*^9, 
   3.487676093897955*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"nm", "=", 
   RowBox[{"ReadList", "[", "\"\<node\>\"", "]"}]}], ";", 
  RowBox[{"Dimensions", "[", "nm", "]"}]}]], "Input",
 CellChangeTimes->{{3.4876705478940525`*^9, 3.4876705552416544`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"8", ",", "38", ",", "22", ",", "38"}], "}"}]], "Output",
 CellChangeTimes->{3.4876705558656545`*^9, 3.4876727454976892`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Union", "[", 
  RowBox[{"Flatten", "[", "node", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.43565589181675*^9, 3.4356558966605*^9}, 
   3.4535760597026*^9, 3.4535761997906*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"36", ",", "40", ",", "68", ",", "72"}], "}"}]], "Output",
 CellChangeTimes->{3.487668269576*^9, 3.4876704809232397`*^9, 
  3.4876720905315595`*^9, 3.4876727147968836`*^9, 3.4876727990681*^9, 
  3.4876730322101464`*^9, 3.4876732234193845`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"BitAnd", "[", 
        RowBox[{
         RowBox[{"Round", "[", "#1", "]"}], ",", " ", "31"}], "]"}], " ", 
       "&"}], ",", " ", "node", ",", " ", 
      RowBox[{"{", "2", "}"}]}], "]"}], "]"}], ",", " ", 
   RowBox[{"FrameTicks", " ", "->", " ", "True"}], ",", " ", 
   RowBox[{"Mesh", " ", "->", " ", "True"}], ",", " ", 
   RowBox[{"Frame", " ", "->", " ", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.408520658314*^9, 3.4085206609630003`*^9}, {
   3.408520695631*^9, 3.408520709075*^9}, {3.4085207429309998`*^9, 
   3.4085207429960003`*^9}, {3.415522982582*^9, 3.415522996329*^9}, 
   3.415523029025*^9, {3.435655814488625*^9, 3.435655853457375*^9}, 
   3.4535761997906*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"flag", " ", "=", " ", 
   RowBox[{"8", " ", "+", " ", "64"}]}], ";"}], "\n", 
 RowBox[{"ListDensityPlot", "[", 
  RowBox[{"Transpose", "[", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"BitAnd", "[", 
       RowBox[{
        RowBox[{"Round", "[", "#1", "]"}], ",", " ", "flag"}], "]"}], " ", 
      "&"}], ",", " ", 
     RowBox[{"nm", "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
     RowBox[{"{", "2", "}"}]}], "]"}], "]"}], "]"}], "\n", 
 RowBox[{"ListDensityPlot", "[", 
  RowBox[{"Transpose", "[", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"BitAnd", "[", 
       RowBox[{
        RowBox[{"Round", "[", "#1", "]"}], ",", " ", "flag"}], "]"}], " ", 
      "&"}], ",", " ", 
     RowBox[{"nm", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
     RowBox[{"{", "2", "}"}]}], "]"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{3.3960371798358*^9, 3.415523029025*^9, 3.4535761997906*^9}],

Cell[BoxData[
 RowBox[{"gc", "=", 
  RowBox[{"Graphics", "[", 
   RowBox[{"Circle", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        FractionBox["n1", "2"], "+", "ghost"}], ",", 
       RowBox[{
        FractionBox["n1", "2"], "+", "ghost"}]}], "}"}], ",", 
     FractionBox["n1", "2"]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{3.415523029025*^9, 3.4535761997906*^9}],

Cell[BoxData[
 RowBox[{"ListContourPlot3D", "[", 
  RowBox[{
   RowBox[{"BitAnd", "[", 
    RowBox[{
     RowBox[{"Round", "[", "node", "]"}], ",", "32"}], "]"}], ",", 
   RowBox[{"Contours", "\[Rule]", "10"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"ListContourPlot3D", "[", 
  RowBox[{
   RowBox[{"ref", "[", 
    RowBox[{"[", "3", "]"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4876706392632713`*^9, 3.4876707820812993`*^9}, {
  3.487672388756819*^9, 3.4876723891156187`*^9}, {3.487672560091653*^9, 
  3.4876725686872544`*^9}, {3.487672601384861*^9, 3.487672617140864*^9}, {
  3.4876735962438583`*^9, 3.48767360302986*^9}, {3.4876761127427588`*^9, 
  3.48767611955996*^9}, {3.4876762193375797`*^9, 3.4876762417703843`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"DisplayTogether", "[", 
   RowBox[{
    RowBox[{"ListContourPlot", "[", "node", "]"}], ",", " ", "gc"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{3.415523029025*^9, 3.4535761997906*^9}]
}, Closed]]
},
AutoGeneratedPackage->None,
WindowSize->{1075, 795},
WindowMargins->{{Automatic, 35}, {0, Automatic}},
ShowSelection->True,
FrontEndVersion->"7.0 for Microsoft Windows (32-bit) (November 10, 2008)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[545, 20, 248, 5, 52, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[818, 29, 3851, 56, 31, "Input"],
Cell[4672, 87, 3546, 53, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8255, 145, 118, 2, 31, "Input"],
Cell[8376, 149, 160, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8573, 156, 188, 3, 31, "Input"],
Cell[8764, 161, 156, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8957, 168, 2205, 32, 31, "Input"],
Cell[11165, 202, 761, 12, 30, "Output"]
}, Open  ]],
Cell[11941, 217, 144, 3, 31, "Input"],
Cell[CellGroupData[{
Cell[12110, 224, 266, 6, 31, "Input"],
Cell[12379, 232, 75, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12491, 238, 366, 10, 31, "Input"],
Cell[12860, 250, 375, 11, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13272, 266, 211, 3, 27, "Subsubsection"],
Cell[13486, 271, 500, 10, 31, "Input"],
Cell[13989, 283, 816, 16, 72, "Input"],
Cell[14808, 301, 509, 10, 31, "Input"],
Cell[15320, 313, 514, 12, 31, "Input"],
Cell[CellGroupData[{
Cell[15859, 329, 337, 8, 31, "Input"],
Cell[16199, 339, 236, 4, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16472, 348, 377, 9, 31, "Input"],
Cell[16852, 359, 561, 9, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17450, 373, 2258, 56, 112, "Input"],
Cell[19711, 431, 3313, 82, 105, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23061, 518, 351, 6, 31, "Input"],
Cell[23415, 526, 1809, 30, 69, "Output"]
}, Open  ]],
Cell[25239, 559, 860, 15, 31, "Input"],
Cell[CellGroupData[{
Cell[26124, 578, 705, 15, 52, "Input"],
Cell[26832, 595, 1041, 23, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27910, 623, 1159, 24, 38, "Input"],
Cell[29072, 649, 557, 7, 30, "Output"]
}, Open  ]],
Cell[29644, 659, 1807, 29, 52, "Input"],
Cell[CellGroupData[{
Cell[31476, 692, 541, 15, 38, "Input"],
Cell[32020, 709, 509, 9, 30, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[32578, 724, 191, 2, 27, "Subsubsection"],
Cell[32772, 728, 877, 25, 92, "Input"],
Cell[33652, 755, 418, 13, 31, "Input"],
Cell[34073, 770, 878, 19, 92, "Input"],
Cell[34954, 791, 665, 18, 52, "Input"],
Cell[CellGroupData[{
Cell[35644, 813, 146, 2, 31, "Input"],
Cell[35793, 817, 353, 7, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36183, 829, 11859, 220, 172, "Input"],
Cell[48045, 1051, 74220, 1219, 265, "Output"]
}, Open  ]],
Cell[122280, 2273, 540, 16, 31, "Input"],
Cell[CellGroupData[{
Cell[122845, 2293, 9078, 164, 132, "Input"],
Cell[131926, 2459, 218, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[132181, 2467, 326, 6, 31, "Input"],
Cell[132510, 2475, 572, 11, 30, "Output"]
}, Open  ]],
Cell[133097, 2489, 616, 17, 52, "Input"],
Cell[133716, 2508, 1156, 33, 101, "Input"],
Cell[134875, 2543, 1169, 33, 74, "Input"],
Cell[136047, 2578, 1764, 46, 101, "Input"],
Cell[CellGroupData[{
Cell[137836, 2628, 734, 22, 47, "Input"],
Cell[138573, 2652, 79262, 1308, 225, "Output"]
}, Open  ]],
Cell[217850, 3963, 2333, 51, 47, "Input"],
Cell[CellGroupData[{
Cell[220208, 4018, 694, 20, 31, "Input"],
Cell[220905, 4040, 731, 13, 21, "Message"],
Cell[221639, 4055, 135, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[221811, 4062, 942, 21, 47, "Input"],
Cell[222756, 4085, 2315, 57, 69, "Output"]
}, Open  ]],
Cell[225086, 4145, 1132, 32, 52, "Input"],
Cell[226221, 4179, 1021, 20, 31, "Input"],
Cell[CellGroupData[{
Cell[227267, 4203, 1240, 35, 52, "Input"],
Cell[228510, 4240, 249161, 4100, 143, "Output"]
}, Open  ]],
Cell[477686, 8343, 140, 3, 31, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[477863, 8351, 177, 2, 27, "Subsubsection"],
Cell[478043, 8355, 127, 2, 31, "Input"],
Cell[478173, 8359, 450, 12, 31, "Input"],
Cell[CellGroupData[{
Cell[478648, 8375, 387, 8, 31, "Input"],
Cell[CellGroupData[{
Cell[479060, 8387, 143, 3, 23, "Print"],
Cell[479206, 8392, 186, 4, 23, "Print"],
Cell[479395, 8398, 435, 9, 23, "Print"],
Cell[479833, 8409, 210, 5, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[480092, 8420, 311, 7, 31, "Input"],
Cell[CellGroupData[{
Cell[480428, 8431, 338, 6, 23, "Print"],
Cell[480769, 8439, 380, 7, 23, "Print"],
Cell[481152, 8448, 632, 12, 23, "Print"],
Cell[481787, 8462, 407, 8, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[482221, 8474, 650, 17, 31, "Input"],
Cell[482874, 8493, 574, 15, 31, "Input"],
Cell[483451, 8510, 772, 21, 121, "Input"],
Cell[CellGroupData[{
Cell[484248, 8535, 13713, 244, 172, "Input"],
Cell[CellGroupData[{
Cell[497986, 8783, 172, 4, 23, "Print"],
Cell[498161, 8789, 231, 6, 23, "Print"],
Cell[498395, 8797, 468, 10, 23, "Print"],
Cell[498866, 8809, 235, 6, 23, "Print"]
}, Open  ]],
Cell[499116, 8818, 709, 17, 30, "Output"]
}, Open  ]],
Cell[499840, 8838, 434, 13, 31, "Input"],
Cell[500277, 8853, 8057, 132, 72, "Input"],
Cell[508337, 8987, 340, 7, 31, "Input"],
Cell[CellGroupData[{
Cell[508702, 8998, 294, 4, 29, "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[508999, 9004, 1540, 36, 70, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[510542, 9042, 1294, 36, 70, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True]
}, Closed]],
Cell[511851, 9081, 341, 10, 25, "Input"],
Cell[512195, 9093, 1060, 27, 52, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[513292, 9125, 200, 2, 21, "Subsubsection"],
Cell[513495, 9129, 673, 20, 70, "Input"],
Cell[514171, 9151, 270, 7, 70, "Input"],
Cell[514444, 9160, 269, 7, 70, "Input"],
Cell[CellGroupData[{
Cell[514738, 9171, 444, 12, 70, "Input"],
Cell[515185, 9185, 262, 6, 70, "Output"]
}, Open  ]],
Cell[515462, 9194, 132, 3, 70, "Input"],
Cell[515597, 9199, 442, 12, 70, "Input"],
Cell[CellGroupData[{
Cell[516064, 9215, 578, 16, 70, "Input"],
Cell[516645, 9233, 205, 5, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[516887, 9243, 463, 12, 70, "Input"],
Cell[517353, 9257, 31, 0, 70, "Output"]
}, Open  ]],
Cell[517399, 9260, 3181, 96, 70, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[520617, 9361, 138, 1, 21, "Subsubsection"],
Cell[520758, 9364, 2849, 79, 70, "Input"],
Cell[CellGroupData[{
Cell[523632, 9447, 280, 8, 70, "Input"],
Cell[523915, 9457, 244, 6, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[524196, 9468, 392, 11, 70, "Input"],
Cell[524591, 9481, 88, 1, 70, "Output"]
}, Open  ]],
Cell[524694, 9485, 273, 7, 70, "Input"],
Cell[CellGroupData[{
Cell[524992, 9496, 240, 5, 70, "Input"],
Cell[525235, 9503, 420, 8, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[525692, 9516, 252, 7, 70, "Input"],
Cell[525947, 9525, 219, 5, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[526203, 9535, 208, 5, 70, "Input"],
Cell[526414, 9542, 309, 6, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[526760, 9553, 447, 13, 70, "Input"],
Cell[527210, 9568, 313, 7, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[527572, 9581, 178, 2, 21, "Subsubsection"],
Cell[527753, 9585, 1203, 24, 70, "Input"],
Cell[528959, 9611, 563, 14, 70, "Input"],
Cell[529525, 9627, 719, 17, 70, "Input"],
Cell[530247, 9646, 471, 12, 70, "Input"],
Cell[530721, 9660, 429, 10, 70, "Input"],
Cell[531153, 9672, 392, 7, 70, "Input"],
Cell[531548, 9681, 643, 16, 70, "Input"],
Cell[532194, 9699, 2631, 72, 70, "Input"],
Cell[534828, 9773, 303, 9, 70, "Input"],
Cell[535134, 9784, 938, 25, 70, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[536109, 9814, 235, 3, 21, "Subsubsection"],
Cell[536347, 9819, 1806, 50, 70, "Input"],
Cell[538156, 9871, 1263, 31, 70, "Input"],
Cell[539422, 9904, 1119, 27, 70, "Input"],
Cell[540544, 9933, 1118, 27, 70, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[541699, 9965, 176, 2, 21, "Subsubsection"],
Cell[541878, 9969, 424, 12, 70, "Input"],
Cell[CellGroupData[{
Cell[542327, 9985, 596, 16, 70, "Input"],
Cell[542926, 10003, 11054, 238, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[554017, 10246, 69, 1, 70, "Input"],
Cell[554089, 10249, 12230, 253, 70, "Output"]
}, Open  ]],
Cell[566334, 10505, 654, 18, 70, "Input"],
Cell[CellGroupData[{
Cell[567013, 10527, 236, 5, 70, "Input"],
Cell[567252, 10534, 1381, 27, 70, "Output"]
}, Open  ]],
Cell[568648, 10564, 1851, 54, 70, "Input"],
Cell[570502, 10620, 527, 9, 70, "Input"],
Cell[CellGroupData[{
Cell[571054, 10633, 1040, 24, 70, "Input"],
Cell[572097, 10659, 653, 11, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[572787, 10675, 1198, 22, 70, "Input"],
Cell[573988, 10699, 1362, 27, 70, "Output"],
Cell[575353, 10728, 1362, 27, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[576764, 10761, 220, 3, 21, "Subsubsection"],
Cell[CellGroupData[{
Cell[577009, 10768, 139, 2, 29, "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[577151, 10772, 12970, 310, 772, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[590124, 11084, 7656, 182, 652, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True]
}, Closed]],
Cell[597795, 11269, 665, 16, 25, "Input"],
Cell[CellGroupData[{
Cell[598485, 11289, 2170, 61, 107, "Input"],
Cell[600658, 11352, 362, 6, 30, "Output"]
}, Open  ]],
Cell[601035, 11361, 931, 25, 52, "Input"],
Cell[601969, 11388, 2789, 49, 80, "Input"],
Cell[CellGroupData[{
Cell[604783, 11441, 717, 13, 31, "Input"],
Cell[605503, 11456, 489, 7, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[606029, 11468, 2098, 47, 148, "Input"],
Cell[608130, 11517, 449, 7, 30, "Output"]
}, Open  ]],
Cell[608594, 11527, 758, 15, 38, "Input"],
Cell[609355, 11544, 402, 8, 31, "Input"],
Cell[609760, 11554, 499, 10, 31, "Input"],
Cell[610262, 11566, 730, 15, 31, "Input"],
Cell[610995, 11583, 318, 6, 31, "Input"],
Cell[611316, 11591, 255, 5, 31, "Input"],
Cell[611574, 11598, 457, 13, 31, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[612068, 11616, 197, 2, 27, "Subsubsection"],
Cell[612268, 11620, 8228, 198, 392, "Input"],
Cell[CellGroupData[{
Cell[620521, 11822, 94, 1, 31, "Input"],
Cell[620618, 11825, 414, 14, 30, "Output"]
}, Open  ]],
Cell[621047, 11842, 90, 3, 31, "Input"],
Cell[621140, 11847, 86, 2, 31, "Input"],
Cell[CellGroupData[{
Cell[621251, 11853, 221, 3, 29, "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[621475, 11858, 9939, 266, 379, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, Closed]],
Cell[631429, 12127, 9622, 236, 641, "Input"],
Cell[641054, 12365, 818, 12, 31, "Input"],
Cell[CellGroupData[{
Cell[641897, 12381, 619, 16, 66, "Input"],
Cell[642519, 12399, 745, 12, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[643301, 12416, 375, 10, 31, "Input"],
Cell[643679, 12428, 370, 7, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[644086, 12440, 332, 8, 31, "Input"],
Cell[644421, 12450, 391, 8, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[644849, 12463, 294, 8, 31, "Input"],
Cell[645146, 12473, 158, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[645341, 12481, 121, 3, 31, "Input"],
Cell[CellGroupData[{
Cell[645487, 12488, 492, 11, 23, "Print"],
Cell[645982, 12501, 636, 13, 23, "Print"],
Cell[646621, 12516, 271, 4, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[646919, 12524, 190, 4, 31, "Input"],
Cell[647112, 12530, 235, 6, 31, "Input"],
Cell[647350, 12538, 4693, 109, 203, "Input"],
Cell[652046, 12649, 1068, 28, 33, "Input"],
Cell[CellGroupData[{
Cell[653139, 12681, 494, 12, 45, "Input"],
Cell[653636, 12695, 218, 5, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[653891, 12705, 272, 7, 45, "Input"],
Cell[654166, 12714, 147, 3, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[654350, 12722, 4575, 96, 212, "Input"],
Cell[CellGroupData[{
Cell[658950, 12822, 350, 8, 23, "Print"],
Cell[659303, 12832, 189, 2, 23, "Print"],
Cell[659495, 12836, 350, 8, 23, "Print"],
Cell[659848, 12846, 189, 2, 23, "Print"],
Cell[660040, 12850, 190, 2, 23, "Print"],
Cell[660233, 12854, 354, 8, 23, "Print"],
Cell[660590, 12864, 192, 2, 23, "Print"],
Cell[660785, 12868, 354, 8, 23, "Print"],
Cell[661142, 12878, 192, 2, 23, "Print"],
Cell[661337, 12882, 192, 2, 23, "Print"],
Cell[661532, 12886, 354, 8, 23, "Print"],
Cell[661889, 12896, 192, 2, 23, "Print"],
Cell[662084, 12900, 354, 8, 23, "Print"],
Cell[662441, 12910, 192, 2, 23, "Print"],
Cell[662636, 12914, 190, 2, 23, "Print"],
Cell[662829, 12918, 352, 8, 23, "Print"],
Cell[663184, 12928, 192, 2, 23, "Print"],
Cell[663379, 12932, 352, 8, 23, "Print"],
Cell[663734, 12942, 190, 2, 23, "Print"],
Cell[663927, 12946, 192, 2, 23, "Print"],
Cell[664122, 12950, 190, 2, 23, "Print"],
Cell[664315, 12954, 191, 2, 23, "Print"],
Cell[664509, 12958, 194, 2, 23, "Print"],
Cell[664706, 12962, 192, 2, 23, "Print"],
Cell[664901, 12966, 192, 2, 23, "Print"],
Cell[665096, 12970, 194, 2, 23, "Print"],
Cell[665293, 12974, 192, 2, 23, "Print"],
Cell[665488, 12978, 192, 2, 23, "Print"],
Cell[665683, 12982, 194, 2, 23, "Print"],
Cell[665880, 12986, 194, 2, 23, "Print"],
Cell[666077, 12990, 192, 2, 23, "Print"],
Cell[666272, 12994, 194, 2, 23, "Print"],
Cell[666469, 12998, 193, 2, 23, "Print"],
Cell[666665, 13002, 191, 2, 23, "Print"],
Cell[666859, 13006, 194, 2, 23, "Print"],
Cell[667056, 13010, 192, 2, 23, "Print"],
Cell[667251, 13014, 192, 2, 23, "Print"],
Cell[667446, 13018, 194, 2, 23, "Print"],
Cell[667643, 13022, 194, 2, 23, "Print"],
Cell[667840, 13026, 192, 2, 23, "Print"],
Cell[668035, 13030, 194, 2, 23, "Print"],
Cell[668232, 13034, 192, 2, 23, "Print"],
Cell[668427, 13038, 194, 2, 23, "Print"],
Cell[668624, 13042, 194, 2, 23, "Print"],
Cell[668821, 13046, 193, 2, 23, "Print"],
Cell[669017, 13050, 191, 2, 23, "Print"],
Cell[669211, 13054, 192, 2, 23, "Print"],
Cell[669406, 13058, 194, 2, 23, "Print"],
Cell[669603, 13062, 194, 2, 23, "Print"],
Cell[669800, 13066, 194, 2, 23, "Print"],
Cell[669997, 13070, 194, 2, 23, "Print"],
Cell[670194, 13074, 194, 2, 23, "Print"],
Cell[670391, 13078, 192, 2, 23, "Print"],
Cell[670586, 13082, 194, 2, 23, "Print"],
Cell[670783, 13086, 194, 2, 23, "Print"],
Cell[670980, 13090, 192, 2, 23, "Print"],
Cell[671175, 13094, 193, 2, 23, "Print"],
Cell[671371, 13098, 191, 2, 23, "Print"],
Cell[671565, 13102, 191, 2, 23, "Print"],
Cell[671759, 13106, 194, 2, 23, "Print"],
Cell[671956, 13110, 194, 2, 23, "Print"],
Cell[672153, 13114, 192, 2, 23, "Print"],
Cell[672348, 13118, 194, 2, 23, "Print"],
Cell[672545, 13122, 194, 2, 23, "Print"],
Cell[672742, 13126, 192, 2, 23, "Print"],
Cell[672937, 13130, 194, 2, 23, "Print"],
Cell[673134, 13134, 194, 2, 23, "Print"],
Cell[673331, 13138, 194, 2, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[673552, 13144, 1554, 33, 31, "Input"],
Cell[CellGroupData[{
Cell[675131, 13181, 125, 2, 31, "Input"],
Cell[675259, 13185, 366, 6, 30, "Output"]
}, Open  ]],
Cell[675640, 13194, 6616, 154, 292, "Input"],
Cell[682259, 13350, 3127, 81, 132, "Input"],
Cell[685389, 13433, 82, 2, 31, "Input"],
Cell[685474, 13437, 550, 15, 52, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[686061, 13457, 289, 4, 27, "Subsubsection"],
Cell[686353, 13463, 432, 13, 70, "Input"],
Cell[686788, 13478, 96, 1, 70, "Input"],
Cell[686887, 13481, 1887, 50, 70, "Input"],
Cell[688777, 13533, 986, 27, 70, "Input"],
Cell[689766, 13562, 200, 4, 70, "Input"],
Cell[689969, 13568, 300, 7, 70, "Input"],
Cell[690272, 13577, 1068, 26, 70, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[691377, 13608, 323, 4, 21, "Subsubsection"],
Cell[CellGroupData[{
Cell[691725, 13616, 337, 11, 31, "Input"],
Cell[692065, 13629, 234, 5, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[692336, 13639, 1197, 28, 86, "Input"],
Cell[693536, 13669, 1692, 24, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[695265, 13698, 1084, 23, 72, "Input"],
Cell[696352, 13723, 409, 6, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[696798, 13734, 1080, 23, 72, "Input"],
Cell[697881, 13759, 91, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[698009, 13765, 1352, 43, 126, "Input"],
Cell[699364, 13810, 358, 7, 30, "Output"]
}, Open  ]],
Cell[699737, 13820, 669, 21, 61, "Input"],
Cell[CellGroupData[{
Cell[700431, 13845, 1233, 25, 72, "Input"],
Cell[701667, 13872, 254, 4, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[701958, 13881, 1360, 31, 72, "Input"],
Cell[703321, 13914, 108, 1, 30, "Output"]
}, Open  ]],
Cell[703444, 13918, 2923, 61, 94, "Input"],
Cell[706370, 13981, 1031, 30, 52, "Input"],
Cell[707404, 14013, 2629, 69, 157, "Input"],
Cell[710036, 14084, 571, 12, 45, "Input"],
Cell[CellGroupData[{
Cell[710632, 14100, 412, 9, 31, "Input"],
Cell[711047, 14111, 611, 11, 30, "Output"]
}, Open  ]],
Cell[711673, 14125, 1854, 45, 94, "Input"],
Cell[CellGroupData[{
Cell[713552, 14174, 1466, 33, 72, "Input"],
Cell[715021, 14209, 224, 3, 30, "Output"]
}, Open  ]],
Cell[715260, 14215, 1634, 47, 72, "Input"],
Cell[716897, 14264, 419, 11, 31, "Input"],
Cell[717319, 14277, 784, 21, 31, "Input"],
Cell[718106, 14300, 453, 14, 45, "Input"],
Cell[718562, 14316, 1707, 46, 72, "Input"],
Cell[720272, 14364, 1670, 47, 72, "Input"],
Cell[CellGroupData[{
Cell[721967, 14415, 249, 8, 31, "Input"],
Cell[722219, 14425, 1955, 67, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[724211, 14497, 858, 22, 31, "Input"],
Cell[725072, 14521, 56566, 935, 70, "Output"]
}, Closed]],
Cell[781653, 15459, 4066, 76, 88, "Input"],
Cell[785722, 15537, 141, 3, 31, "Input"],
Cell[CellGroupData[{
Cell[785888, 15544, 1284, 23, 31, "Input"],
Cell[787175, 15569, 653, 9, 30, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[787877, 15584, 335, 6, 27, "Subsubsection"],
Cell[CellGroupData[{
Cell[788237, 15594, 747, 18, 70, "Input"],
Cell[788987, 15614, 353, 7, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[789377, 15626, 228, 5, 70, "Input"],
Cell[789608, 15633, 164, 3, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[789809, 15641, 202, 4, 70, "Input"],
Cell[790014, 15647, 282, 5, 70, "Output"]
}, Open  ]],
Cell[790311, 15655, 839, 19, 70, "Input"],
Cell[791153, 15676, 984, 28, 70, "Input"],
Cell[792140, 15706, 401, 12, 70, "Input"],
Cell[792544, 15720, 279, 7, 70, "Input"],
Cell[792826, 15729, 557, 10, 70, "Input"],
Cell[793386, 15741, 225, 6, 70, "Input"]
}, Closed]]
}
]
*)

(* End of internal cache information *)
